
Функция НайтиЗадание(Ключ) Экспорт
Результат = Новый Структура("Выполняется, Успех, Ошибка", Ложь, Ложь, Неопределено);

ФЗ = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Ключ",Ключ));
	Для к = 0 По ФЗ.ВГраница() Цикл
	Задание = ФЗ[к];
	КонецЦикла; 
    	Если Задание = Неопределено Тогда
        Возврат Результат;
    	КонецЕсли;
    
    Если Задание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
        Результат.Выполняется = Истина;
    Иначе
        Результат.Выполняется = Ложь;
        Если Задание.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
            Результат.Успех = Истина;
        Иначе
            Результат.Успех = Ложь;
            Результат.Ошибка = "("+Задание.ИнформацияОбОшибке.НомерСтроки+") "+Задание.ИнформацияОбОшибке.Описание;
        КонецЕсли;
    КонецЕсли;
    
    Возврат Результат;
КонецФункции 

Процедура ОтменитьФоновоеЗадание(Ключ) Экспорт
ФЗ = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Ключ",Ключ));
	Для к = 0 По ФЗ.ВГраница() Цикл
	ФЗ[к].Отменить();
	КонецЦикла; 
КонецПроцедуры

Функция ЗапуститьФоновоеВыполнение(ТекстПроцедуры,СтруктураПараметров=Неопределено) Экспорт
УникальныйИдентификатор = Новый УникальныйИдентификатор;
ПараметрыВыполнения = Новый Массив;
ПараметрыВыполнения.Добавить(ТекстПроцедуры);
ПараметрыВыполнения.Добавить(СтруктураПараметров);

ФЗ = ФоновыеЗадания.Выполнить("ФоновоеВыполнение.ФоноваяПроцедура",ПараметрыВыполнения,УникальныйИдентификатор);
Возврат ФЗ.Ключ;
КонецФункции

Процедура ФоноваяПроцедура(ТекстМодуля,ПараметрыВыполнения) Экспорт
ПолныйТекстМодуля = "";
    Для Каждого ТекПараметр Из ПараметрыВыполнения Цикл
    ПолныйТекстМодуля = ПолныйТекстМодуля+ТекПараметр.Ключ+"=ПараметрыВыполнения."+ТекПараметр.Ключ+";"+Символы.ПС;
    КонецЦикла;
ПолныйТекстМодуля = ПолныйТекстМодуля + ТекстМодуля;
Выполнить(ПолныйТекстМодуля);
КонецПроцедуры

#Область Обработки

Процедура ПолучитьСледующееЗаданиеНаСервере(РабочееМесто,Исполнитель,ПроизводственноеЗадание,Адрес) Экспорт
Запрос = Новый Запрос;
СписокИзделийЛО = Новый СписокЗначений;   
ЭтапыАРМСледующее = Новый СписокЗначений;
ЭтапыСледующее = Новый ТаблицаЗначений;
ЭтапыСледующее.Колонки.Добавить("ЭтапСпецификации");
ЭтапыСледующее.Колонки.Добавить("Количество");
ЭтапыСледующее.Колонки.Добавить("ГруппаНоменклатуры");

Результат = ОбщийМодульАРМ.ПолучитьНезавершенноеЗадание(ЭтапыСледующее,ЭтапыАРМСледующее,РабочееМесто,Исполнитель,ПроизводственноеЗадание);
	Если Результат <> Неопределено Тогда 
	ПараметрыФЗ = Новый Структура("ЭтапыСледующее,ЭтапыАРМСледующее,ПроизводственноеЗаданиеСледующее",ЭтапыСледующее,ЭтапыАРМСледующее,Результат.ПЗ);
	ПоместитьВоВременноеХранилище(ПараметрыФЗ,Адрес);
	Возврат;
	КонецЕсли;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ КАК ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала КАК ДатаНачала,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто КАК РабочееМесто
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних(, РабочееМесто = &РабочееМесто) КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.Ремонт = ЛОЖЬ
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.Статус <> 2";
	Если РабочееМесто.ОбработкаЗаданийПоВремениПоступления Тогда
	Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ЭтапыПроизводственныхЗаданийСрезПоследних.Период
									|ИТОГИ ПО ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование";
	Иначе                           
	Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.НомерОчереди,
									|ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.ДатаОтгрузки,
									|ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.Номер
									|ИТОГИ ПО ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование";
	КонецЕсли;
Запрос.УстановитьПараметр("РабочееМесто",РабочееМесто);
Результат = Запрос.Выполнить();
ВыборкаМТК = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМТК.Следующий() Цикл
	ВыборкаДетальныеЗаписи = ВыборкаМТК.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.ПЗ = ПроизводственноеЗадание Тогда	
			Продолжить;
			КонецЕсли;
				Если СписокИзделийЛО.НайтиПоЗначению(ВыборкаДетальныеЗаписи.ПЗ.Изделие) <> Неопределено Тогда
				Прервать; //Переходим к следующей МТК
				КонецЕсли; 
					Если Не ОбщийМодульВызовСервера.СоздатьТаблицуЭтаповПроизводства(ВыборкаДетальныеЗаписи.ПЗ,ЭтапыСледующее,ЭтапыАРМСледующее,РабочееМесто,Исполнитель) Тогда	
					Прервать; //Переходим к следующей МТК			
					КонецЕсли;
						Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ПЗ.ДатаЗапуска) Тогда
						Результат = ОбщийМодульВызовСервера.ЗапуститьВПроизводство(ВыборкаДетальныеЗаписи.ПЗ,РабочееМесто,ЭтапыСледующее,,Ложь);
							Если Результат = 0 Тогда
							СписокИзделийЛО.Добавить(ВыборкаДетальныеЗаписи.ПЗ.Изделие);
							Прервать; //Переходим к следующей МТК
							ИначеЕсли Результат = -1 Тогда
							ПараметрыФЗ = Новый Структура("ЭтапыСледующее,ЭтапыАРМСледующее,ПроизводственноеЗаданиеСледующее",ЭтапыСледующее,ЭтапыАРМСледующее,Документы.ПроизводственноеЗадание.ПустаяСсылка());
							ПоместитьВоВременноеХранилище(ПараметрыФЗ,Адрес);
							Возврат;
							КонецЕсли; 
						КонецЕсли;
		ПараметрыФЗ = Новый Структура("ЭтапыСледующее,ЭтапыАРМСледующее,ПроизводственноеЗаданиеСледующее",ЭтапыСледующее,ЭтапыАРМСледующее,ВыборкаДетальныеЗаписи.ПЗ);
		ПоместитьВоВременноеХранилище(ПараметрыФЗ,Адрес);
		Возврат;
		КонецЦикла;
	КонецЦикла;
ПараметрыФЗ = Новый Структура("ЭтапыСледующее,ЭтапыАРМСледующее,ПроизводственноеЗаданиеСледующее",ЭтапыСледующее,ЭтапыАРМСледующее,Документы.ПроизводственноеЗадание.ПустаяСсылка());
ПоместитьВоВременноеХранилище(ПараметрыФЗ,Адрес);
КонецПроцедуры
 
Процедура СформироватьВизуализацию(Макет,Линейка,СписокНоменклатуры,ДатаОтгрузки,Адрес) Экспорт
Запрос = Новый Запрос;
СписокИзделийЛО = Новый СписокЗначений;

ТабДок = Новый ТабличныйДокумент;
ТаблицаРМ = Новый ТаблицаЗначений;

ТаблицаРМ.Колонки.Добавить("РМ");
ТаблицаРМ.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3))); 
ТаблицаРМ.Колонки.Добавить("КоличествоВсего", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3)));

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РабочиеМестаЛинеек.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.РабочиеМестаЛинеек КАК РабочиеМестаЛинеек
	|ГДЕ
	|	РабочиеМестаЛинеек.Линейка = &Линейка
	|	И РабочиеМестаЛинеек.ПометкаУдаления = ЛОЖЬ
	|	И РабочиеМестаЛинеек.ЭтоГруппа = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код";
Запрос.УстановитьПараметр("Линейка", Линейка);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаРМ.Добавить();
	ТЧ.РМ = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;

ОблШапкаОбщие = Макет.ПолучитьОбласть("Шапка|Общие");
ОблШапкаВыпуски = Макет.ПолучитьОбласть("Шапка|Выпуски");
ОблШапкаОстановки = Макет.ПолучитьОбласть("Шапка|Остановки");
ОблШапкаЛО = Макет.ПолучитьОбласть("Шапка|ЛО");
ОблШапкаРемонт = Макет.ПолучитьОбласть("Шапка|Ремонт");	
ОблШапкаРабочееМесто = Макет.ПолучитьОбласть("Шапка|РабочееМесто");
ОблШапкаПрочее = Макет.ПолучитьОбласть("Шапка|Прочее");

ОблМТКОбщие = Макет.ПолучитьОбласть("МТК|Общие");
ОблМТКВыпуски = Макет.ПолучитьОбласть("МТК|Выпуски");
ОблМТКОстановки = Макет.ПолучитьОбласть("МТК|Остановки");
ОблМТКЛО = Макет.ПолучитьОбласть("МТК|ЛО");
ОблМТКРемонт = Макет.ПолучитьОбласть("МТК|Ремонт");	
ОблМТКРабочееМесто = Макет.ПолучитьОбласть("МТК|РабочееМесто");
ОблМТКПрочее = Макет.ПолучитьОбласть("МТК|Прочее");

ОблПЗОбщие = Макет.ПолучитьОбласть("ПЗ|Общие");	
ОблПЗВыпуски = Макет.ПолучитьОбласть("ПЗ|Выпуски");
ОблПЗОстановки = Макет.ПолучитьОбласть("ПЗ|Остановки");
ОблПЗЛО = Макет.ПолучитьОбласть("ПЗ|ЛО");
ОблПЗРемонт = Макет.ПолучитьОбласть("ПЗ|Ремонт");
ОблПЗРабочееМесто = Макет.ПолучитьОбласть("ПЗ|РабочееМесто");
ОблПЗРабочееМестоТекущее = Макет.ПолучитьОбласть("ПЗ|РабочееМестоТекущее");
ОблПЗРабочееМестоВРаботе = Макет.ПолучитьОбласть("ПЗ|РабочееМестоВРаботе");
ОблПЗПрочее = Макет.ПолучитьОбласть("ПЗ|Прочее");
                                                       
ОблПустоОстановки = Макет.ПолучитьОбласть("Пусто|Остановки"); 
ОблПустоЛО = Макет.ПолучитьОбласть("Пусто|ЛО");
ОблПустоРемонт = Макет.ПолучитьОбласть("Пусто|Ремонт");
ОблПустоРабочееМесто = Макет.ПолучитьОбласть("Пусто|РабочееМесто");
ОблПустоПрочее = Макет.ПолучитьОбласть("Пусто|Прочее");

ОблВсегоОбщие = Макет.ПолучитьОбласть("Всего|Общие");
ОблВсегоВыпуски = Макет.ПолучитьОбласть("Всего|Выпуски");
ОблВсегоОстановки = Макет.ПолучитьОбласть("Всего|Остановки");
ОблВсегоЛО = Макет.ПолучитьОбласть("Всего|ЛО");
ОблВсегоРемонт = Макет.ПолучитьОбласть("Всего|Ремонт");	
ОблВсегоРабочееМесто = Макет.ПолучитьОбласть("Всего|РабочееМесто");
ОблВсегоПрочее = Макет.ПолучитьОбласть("Всего|Прочее");

ОблШапкаОбщие.Параметры.Линейка = ""+Линейка+" ("+Линейка.Комментарий+")";
ОблШапкаОбщие.Параметры.ТекДата = ТекущаяДата();
Результат = ОбщийМодульВызовСервера.ЛинейкаОстановленаПричины(Линейка);
	Если Результат <> Неопределено Тогда
	ОблШапкаОстановки.Параметры.ОстановкаЛинейки = "Остановлена по причине: "+Результат.Примечание+" ("+Результат.Причина+")";
	КонецЕсли; 
ТабДок.Вывести(ОблШапкаОбщие);
ТабДок.Присоединить(ОблШапкаВыпуски);
ТабДок.Присоединить(ОблШапкаОстановки);
ТабДок.Присоединить(ОблШапкаЛО); 
ТабДок.Присоединить(ОблШапкаРемонт);
	Для каждого ТЧ Из ТаблицаРМ Цикл
	ОблШапкаРабочееМесто.Параметры.РабочееМесто = ТЧ.РМ;
	ТабДок.Присоединить(ОблШапкаРабочееМесто);
	КонецЦикла;
ТабДок.Присоединить(ОблШапкаПрочее);

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛьготнаяОчередь.Изделие КАК Изделие
	|ИЗ
	|	РегистрСведений.ЛьготнаяОчередь КАК ЛьготнаяОчередь
	|ГДЕ
	|	ЛьготнаяОчередь.Линейка = &Линейка
	|	И ЛьготнаяОчередь.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	Если СписокНоменклатуры.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ЛьготнаяОчередь.Изделие В(&СписокНоменклатуры)";
	Запрос.УстановитьПараметр("СписокНоменклатуры",СписокНоменклатуры);
	КонецЕсли;
Запрос.УстановитьПараметр("Линейка",Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаЛО = РезультатЗапроса.Выбрать();

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта КАК МаршрутнаяКарта,
	|	ПланыВыпускаОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
	|	ПланыВыпускаОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток
	|ИЗ
	|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			,
	|			Подразделение = &Подразделение
	|				И Линейка = &Линейка) КАК ПланыВыпускаОстаткиИОбороты";
	Если СписокНоменклатуры.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " ГДЕ ПланыВыпускаОстаткиИОбороты.Номенклатура В(&СписокНоменклатуры)";
	Запрос.УстановитьПараметр("СписокНоменклатуры",СписокНоменклатуры);
	КонецЕсли; 
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ТекущаяДата()));
Запрос.УстановитьПараметр("ДатаКон", ТекущаяДата());
Запрос.УстановитьПараметр("Подразделение",Линейка.Подразделение);
Запрос.УстановитьПараметр("Линейка",Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаВыпуск = РезультатЗапроса.Выбрать();

Запрос.Текст = 
	"ВЫБРАТЬ                                                
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование КАК МТК,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ КАК ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто КАК РабочееМесто,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Ремонт КАК Ремонт,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала КАК ДатаНачала
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних(, Линейка = &Линейка) КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	Если СписокНоменклатуры.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ЭтапыПроизводственныхЗаданийСрезПоследних.Изделие В(&СписокНоменклатуры)";
	Запрос.УстановитьПараметр("СписокНоменклатуры",СписокНоменклатуры);
	КонецЕсли;
		Если ЗначениеЗаполнено(ДатаОтгрузки) Тогда
		Запрос.Текст = Запрос.Текст + " И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.ДатаОтгрузки = &ДатаОтгрузки";
		Запрос.УстановитьПараметр("ДатаОтгрузки",ДатаОтгрузки);
		КонецЕсли; 
Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО
								|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.НомерОчереди,
								|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.ДатаОтгрузки,
								|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.Номер
								|ИТОГИ ПО
								|	МТК";	
Запрос.УстановитьПараметр("Линейка",Линейка);
КолНеВыпущенныхВсего = 0; 
КолВыпСегодняВсего = 0;
КолВыпВсего = 0;
КолЛОВсего = 0;
КолИЛОВсего = 0;
КолОстановкаВсего = 0;
КолРемонтВсего = 0;
КолНезапущенныхВсего = 0;
Результат = Запрос.Выполнить();
ВыборкаМТК = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМТК.Следующий() Цикл 
	КолМТК = ВыборкаМТК.МТК.Количество;
	ЛО = "";
	КолЛО = 0;
	КолОстановка = 0;
	КолРемонт = 0;
	КолНезапущенных = 0;
		Для каждого ТЧ Из ТаблицаРМ Цикл
		ТЧ.Количество = 0;		
		КонецЦикла;
	ВыборкаДетальныеЗаписи = ВыборкаМТК.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл                           
		Кол = ВыборкаДетальныеЗаписи.ПЗ.Количество;
        	Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ПЗ.ДатаЗапуска) Тогда
				Если ВыборкаДетальныеЗаписи.Ремонт Тогда
				КолРемонт = КолРемонт + Кол;
				КолРемонтВсего = КолРемонтВсего + Кол;
				КонецЕсли;
			Выборка = ТаблицаРМ.НайтиСтроки(Новый Структура("РМ",ВыборкаДетальныеЗаписи.РабочееМесто));
				Если Выборка.Количество() > 0 Тогда
				Выборка[0].Количество = Выборка[0].Количество + Кол;
				Выборка[0].КоличествоВсего = Выборка[0].КоличествоВсего + Кол;
				КонецЕсли; 
			Иначе
			КолНезапущенных = КолНезапущенных + Кол;
			КолНезапущенныхВсего = КолНезапущенныхВсего + Кол;
			КонецЕсли;
		КонецЦикла;
	ВыборкаВыпуск.Сбросить();
		Если ВыборкаВыпуск.НайтиСледующий(Новый Структура("МаршрутнаяКарта",ВыборкаМТК.МТК)) Тогда
		КолВыпСегодня = ВыборкаВыпуск.КоличествоРасход;
		КолВып = КолМТК - ВыборкаВыпуск.КоличествоКонечныйОстаток;
		КолВыпСегодняВсего = КолВыпСегодняВсего + КолВыпСегодня;
		КолВыпВсего = КолВыпВсего + КолВып;	
		КолНеВыпущенных = ВыборкаВыпуск.КоличествоКонечныйОстаток;
		КолНеВыпущенныхВсего = КолНеВыпущенныхВсего + КолНеВыпущенных;
		Иначе
		КолВыпСегодня = 0;
		КолВып = КолМТК;
		КолНеВыпущенных = 0;
		КонецЕсли; 
			Если КолНезапущенных > 0 Тогда
			ВыборкаИздЛО = СписокИзделийЛО.НайтиПоЗначению(ВыборкаМТК.МТК.Номенклатура);
				Если ВыборкаИздЛО = Неопределено Тогда
				ВыборкаЛО.Сбросить();
					Если ВыборкаЛО.НайтиСледующий(Новый Структура("Изделие",ВыборкаМТК.МТК.Номенклатура)) Тогда 
					ИЛО = ОбщийМодульВызовСервера.ИстиннаяЛьготнаяОчередьИзделие(ВыборкаМТК.МТК.Линейка,ВыборкаМТК.МТК.Номенклатура,1);
						Если ИЛО Тогда
						ЛО = "ИЛО";					
						КолЛО = КолНезапущенных;
						КолИЛОВсего = КолИЛОВсего + КолНезапущенных;
						Иначе
						ЛО = "ЛО";
						КолЛО = КолНезапущенных;
						КолЛОВсего = КолЛОВсего + КолНезапущенных;
						КонецЕсли;
					СписокИзделийЛО.Добавить(ВыборкаМТК.МТК.Номенклатура,,ИЛО);
					КонецЕсли;
				Иначе	
					Если ВыборкаИздЛО.Пометка Тогда
					ЛО = "ИЛО";					
					КолЛО = КолНезапущенных;
					КолИЛОВсего = КолИЛОВсего + КолНезапущенных;
					Иначе
					ЛО = "ЛО";
					КолЛО = КолНезапущенных;
					КолЛОВсего = КолЛОВсего + КолНезапущенных;
					КонецЕсли;			
				КонецЕсли;
			КонецЕсли;
	ОблМТКОбщие.Параметры.МТК = ВыборкаМТК.МТК;
	ОблМТКОбщие.Параметры.НомерМТК = ВыборкаМТК.МТК.Номер;
	ОблМТКОбщие.Параметры.ДатаМТК = Формат(ВыборкаМТК.МТК.Дата,"ДФ=dd.MM.yyyy");
		Если ВыборкаМТК.МТК.НомерОчереди = 0 Тогда
		ОблМТКОбщие.Параметры.НО = "Р";
		ИначеЕсли ВыборкаМТК.МТК.НомерОчереди = 1 Тогда
		ОблМТКОбщие.Параметры.НО = "СЦ";			
		ИначеЕсли ВыборкаМТК.МТК.НомерОчереди < 0 Тогда
		ОблМТКОбщие.Параметры.НО = "П";
		Иначе
		ОблМТКОбщие.Параметры.НО = "";	
		КонецЕсли;
	ОблМТКОбщие.Параметры.Наименование = СокрЛП(ВыборкаМТК.МТК.Номенклатура.Наименование);
	ОблМТКОбщие.Параметры.Спецификация = ВыборкаМТК.МТК.Номенклатура;
	ОблМТКОбщие.Параметры.Статус = ПолучитьСтатус(ВыборкаМТК.МТК.Номенклатура);
	ТабДок.Вывести(ОблМТКОбщие);
	ТабДок.НачатьГруппуКолонок("Выпуски",Истина);
	ОблМТКВыпуски.Параметры.КолНеВыпущенных = КолНеВыпущенных;
	ОблМТКВыпуски.Параметры.КолНезапущенных = КолНезапущенных; 
	ОблМТКВыпуски.Параметры.КолВыпСегодня = КолВыпСегодня;
	ОблМТКВыпуски.Параметры.КолВып = КолВып;
	ТабДок.Присоединить(ОблМТКВыпуски);
	ТабДок.ЗакончитьГруппуКолонок();     
		Если ВыборкаМТК.МТК.Статус = 2 Тогда
		КолОстановкаВсего = КолОстановкаВсего + КолНеВыпущенных;
		ОблМТКОстановки.Параметры.КолОстановка = КолНеВыпущенных;
			Если ВыборкаМТК.МТК.Остановки.Количество() > 0 Тогда
			Остановка = ВыборкаМТК.МТК.Остановки[ВыборкаМТК.МТК.Остановки.Количество()-1];
			ОблМТКОстановки.Параметры.ПричинаОстановки = СокрЛП(Остановка.Инициатор.Наименование)+" (c "+Остановка.ДатаНачала+")"+Символы.ПС+СокрЛП(Остановка.Причина);
				Если ЗначениеЗаполнено(Остановка.МПЗ) Тогда
				ОблМТКОстановки.Параметры.ПричинаОстановки = ОблМТКОстановки.Параметры.ПричинаОстановки+Символы.ПС+СокрЛП(Остановка.МПЗ.Наименование); 
				КонецЕсли;
			Иначе
			ОблМТКОстановки.Параметры.ПричинаОстановки = "не определена";
			КонецЕсли;
		Иначе
		ОблМТКОстановки.Параметры.КолОстановка = "";
		ОблМТКОстановки.Параметры.ПричинаОстановки = "";
		КонецЕсли;
	ТабДок.Присоединить(ОблМТКОстановки);
		Если ЛО = "ЛО" Тогда	
		ОблМТКЛО.Параметры.КолЛО = "ЛО ("+КолЛО+")";
		ОблМТКЛО.Параметры.Изделие = ВыборкаМТК.МТК.Номенклатура;
		ИначеЕсли ЛО = "ИЛО" Тогда	
		ОблМТКЛО.Параметры.КолЛО = "ИЛО ("+КолЛО+")";
		ОблМТКЛО.Параметры.Изделие = ВыборкаМТК.МТК.Номенклатура;
		Иначе
		ОблМТКЛО.Параметры.КолЛО = "";
		ОблМТКЛО.Параметры.Изделие = "";	
		КонецЕсли;
	ТабДок.Присоединить(ОблМТКЛО);
	ОблМТКРемонт.Параметры.КолРемонт = КолРемонт;
	ТабДок.Присоединить(ОблМТКРемонт);         
		Для каждого ТЧ Из ТаблицаРМ Цикл
		ОблМТКРабочееМесто.Параметры.КолРМ = ТЧ.Количество; 
		ТабДок.Присоединить(ОблМТКРабочееМесто);
		КонецЦикла;
	ОблМТКПрочее.Параметры.СтандартныйКомментарий = ВыборкаМТК.МТК.СтандартныйКомментарий;
	ОблМТКПрочее.Параметры.ДатаОтгрузки = Формат(ВыборкаМТК.МТК.ДатаОтгрузки,"ДФ=dd.MM.yyyy");
	ОблМТКПрочее.Параметры.Счёт = СокрЛП(ВыборкаМТК.МТК.Счёт);
	ТабДок.Присоединить(ОблМТКПрочее);
	ТабДок.НачатьГруппуСтрок("По МТК", Истина);
    ВыборкаДетальныеЗаписи.Сбросить();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
        ОблПЗОбщие.Параметры.ПЗ = ПЗ;
		ОблПЗОбщие.Параметры.НомерПЗ = ПЗ.Номер;
			Если Не ЗначениеЗаполнено(ПЗ.ВозвратнаяТара) Тогда
			ОблПЗОбщие.Параметры.БарКод = ПЗ.БарКод;
			Иначе
			ОблПЗОбщие.Параметры.БарКод = СокрЛП(ПЗ.ВозвратнаяТара)+" / "+ПЗ.БарКод;
			КонецЕсли; 
	    ОблПЗОбщие.Параметры.КодDanfoss = ОбщийМодульВызовСервера.ПолучитьКодDanfoss(ПЗ.БарКод);
		ТабДок.Вывести(ОблПЗОбщие);
		ТабДок.Присоединить(ОблПЗВыпуски);
			Если ВыборкаМТК.МТК.Статус = 2 Тогда
 			ОблПЗОстановки.Параметры.ПричинаОстановки = ОблМТКОстановки.Параметры.ПричинаОстановки;
			ТабДок.Присоединить(ОблПЗОстановки);			
			Иначе	
			ТабДок.Присоединить(ОблПустоОстановки);	
			КонецЕсли;				
				Если ЗначениеЗаполнено(ПЗ.ДатаЗапуска) Тогда
				ТабДок.Присоединить(ОблПустоЛО);
					Если ВыборкаДетальныеЗаписи.Ремонт Тогда					
					ОблПЗРемонт.Параметры.ПЗ = ПЗ;
					ТабДок.Присоединить(ОблПЗРемонт);			
					Иначе	
					ТабДок.Присоединить(ОблПустоРемонт);					
					КонецЕсли;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	ЭтапыПроизводственныхЗаданий.РабочееМесто КАК РабочееМесто,
					|	ЭтапыПроизводственныхЗаданий.ДатаНачала КАК ДатаНачала,
					|	ЭтапыПроизводственныхЗаданий.ДатаОкончания КАК ДатаОкончания
					|ИЗ
					|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
					|ГДЕ
					|	ЭтапыПроизводственныхЗаданий.ПЗ = &ПЗ";
				Запрос.УстановитьПараметр("ПЗ", ПЗ);
				РезультатЗапроса = Запрос.Выполнить();
				ВыборкаЭП = РезультатЗапроса.Выбрать();
					Для каждого ТЧ Из ТаблицаРМ Цикл
	                ВыборкаЭП.Сбросить();
						Если ВыборкаЭП.НайтиСледующий(Новый Структура("РабочееМесто",ТЧ.РМ)) Тогда
							Если ЗначениеЗаполнено(ВыборкаЭП.ДатаОкончания) Тогда
							ОблПЗРабочееМесто.Параметры.Время = ВыборкаЭП.ДатаОкончания;
							ТекОбл = ТабДок.Присоединить(ОблПЗРабочееМесто);
							Иначе
								Если ЗначениеЗаполнено(ВыборкаЭП.ДатаНачала) Тогда
								ТекОбл = ТабДок.Присоединить(ОблПЗРабочееМестоВРаботе);
								Иначе	
								ТекОбл = ТабДок.Присоединить(ОблПЗРабочееМестоТекущее);										
								КонецЕсли;
							КонецЕсли;
	                    Иначе
	                    ТабДок.Присоединить(ОблПустоРабочееМесто);
						КонецЕсли;
					КонецЦикла;
	           	Иначе
					Если ЗначениеЗаполнено(ЛО) Тогда
					ОблПЗЛО.Параметры.Изделие = ПЗ.Изделие;
					ТабДок.Присоединить(ОблПЗЛО);			
					Иначе	
					ТабДок.Присоединить(ОблПустоЛО);	
					КонецЕсли;
				ТабДок.Присоединить(ОблПустоРемонт);
					Для каждого ТЧ Из ТаблицаРМ Цикл
	                ТабДок.Присоединить(ОблПустоРабочееМесто);
					КонецЦикла;
				КонецЕсли;
		ОблПЗПрочее.Параметры.МестоХраненияПотребитель = ПЗ.ДокументОснование.МестоХраненияПотребитель;
		ТабДок.Присоединить(ОблПЗПрочее);
		КонецЦикла; 	
	ТабДок.ЗакончитьГруппуСтрок();
	КонецЦикла;
ТабДок.Вывести(ОблВсегоОбщие);
ОблВсегоВыпуски.Параметры.КолНеВыпущенных = КолНеВыпущенныхВсего;
ОблВсегоВыпуски.Параметры.КолНезапущенных = КолНезапущенныхВсего;
ОблВсегоВыпуски.Параметры.КолВыпСегодняВсего = КолВыпСегодняВсего;
ОблВсегоВыпуски.Параметры.КолВыпВсего = КолВыпВсего;
ТабДок.Присоединить(ОблВсегоВыпуски);
ОблВсегоОстановки.Параметры.КолОстановка = КолОстановкаВсего;
ТабДок.Присоединить(ОблВсегоОстановки);
ОблВсегоЛО.Параметры.КолЛО = КолЛОВсего;
ОблВсегоЛО.Параметры.КолИЛО = КолИЛОВсего;
ТабДок.Присоединить(ОблВсегоЛО);
ОблВсегоРемонт.Параметры.КолРемонт = КолРемонтВсего;
ТабДок.Присоединить(ОблВсегоРемонт);
	Для каждого ТЧ Из ТаблицаРМ Цикл
	ОблВсегоРабочееМесто.Параметры.КолРМ = ТЧ.КоличествоВсего;
	ТабДок.Присоединить(ОблВсегоРабочееМесто);
	КонецЦикла; 
ТабДок.Присоединить(ОблВсегоПрочее); 
ТабДок.ФиксацияСверху = 2;
ТабДок.ФиксацияСлева = 4;
ПоместитьВоВременноеХранилище(ТабДок,Адрес);
КонецПроцедуры 

Функция ПолучитьСписокЛинеек(МТК)
СписокЛинеек = Новый СписокЗначений;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Линейки.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Линейки КАК Линейки
	|ГДЕ
	|	Линейки.МестоХраненияКанбанов = &МестоХраненияКанбанов
	|	И Линейки.ПометкаУдаления = ЛОЖЬ";
Запрос.УстановитьПараметр("МестоХраненияКанбанов", МТК.МестоХраненияПотребитель);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокЛинеек.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
Возврат(СписокЛинеек);
КонецФункции

Процедура СформироватьВизуализациюКанбан(Макет,Линейка,СписокМестХраненияПотребителей,Изделие,ВидКонтроля,Адрес) Экспорт
Запрос = Новый Запрос;
СписокИзделийЛО = Новый СписокЗначений;

ТабДок = Новый ТабличныйДокумент;
ТаблицаРМ = Новый ТаблицаЗначений;

ТаблицаРМ.Колонки.Добавить("РМ");
ТаблицаРМ.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3))); 
ТаблицаРМ.Колонки.Добавить("КоличествоВсего", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3)));
ТаблицаРМ.Колонки.Добавить("Статус", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1,0)));
ТаблицаРМ.Колонки.Добавить("ДатаВремя");

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РабочиеМестаЛинеек.Ссылка,
	|	РабочиеМестаЛинеек.ПометкаУдаления,
	|	РабочиеМестаЛинеек.Код КАК Код,
	|	РабочиеМестаЛинеек.Линейка,
	|	РабочиеМестаЛинеек.Наименование
	|ИЗ
	|	Справочник.РабочиеМестаЛинеек КАК РабочиеМестаЛинеек
	|ГДЕ
	|	РабочиеМестаЛинеек.Линейка = &Линейка
	|	И РабочиеМестаЛинеек.ПометкаУдаления = ЛОЖЬ
	|	И РабочиеМестаЛинеек.ЭтоГруппа = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код";
Запрос.УстановитьПараметр("Линейка", Линейка);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаРМ.Добавить();
	ТЧ.РМ = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;

ОблШапкаОбщие = Макет.ПолучитьОбласть("Шапка|Общие");
ОблШапкаВыпуски = Макет.ПолучитьОбласть("Шапка|Выпуски");
ОблШапкаОстановки = Макет.ПолучитьОбласть("Шапка|Остановки");
ОблШапкаЛО = Макет.ПолучитьОбласть("Шапка|ЛО");	
ОблШапкаРемонт = Макет.ПолучитьОбласть("Шапка|Ремонт");
ОблШапкаРабочееМесто = Макет.ПолучитьОбласть("Шапка|РабочееМестоПередано");
ОблШапкаПрочее = Макет.ПолучитьОбласть("Шапка|Прочее");

ОблПериодОбщие = Макет.ПолучитьОбласть("Период|Общие");
ОблПериодВыпуски = Макет.ПолучитьОбласть("Период|Выпуски");
ОблПериодОстановки = Макет.ПолучитьОбласть("Период|Остановки");
ОблПериодЛО = Макет.ПолучитьОбласть("Период|ЛО");
ОблПериодРемонт = Макет.ПолучитьОбласть("Период|Ремонт");	
ОблПериодРабочееМесто = Макет.ПолучитьОбласть("Период|РабочееМестоПередано");
ОблПериодПрочее = Макет.ПолучитьОбласть("Период|Прочее"); 

ОблПЗОбщие = Макет.ПолучитьОбласть("ПЗ|Общие");	
ОблПЗВыпуски = Макет.ПолучитьОбласть("ПЗ|Выпуски");
ОблПЗОстановки = Макет.ПолучитьОбласть("ПЗ|Остановки");
ОблПЗЛО = Макет.ПолучитьОбласть("ПЗ|ЛО");
ОблПЗРемонт = Макет.ПолучитьОбласть("ПЗ|Ремонт");
ОблПЗРабочееМестоПередано = Макет.ПолучитьОбласть("ПЗ|РабочееМестоПередано");
ОблПЗРабочееМестоВРаботе = Макет.ПолучитьОбласть("ПЗ|РабочееМестоВРаботе");
ОблПЗРабочееМестоЗавершено = Макет.ПолучитьОбласть("ПЗ|РабочееМестоЗавершено");
ОблПЗПрочее = Макет.ПолучитьОбласть("ПЗ|Прочее");
                                                    
ОблПустоОстановки = Макет.ПолучитьОбласть("Пусто|Остановки");
ОблПустоЛО = Макет.ПолучитьОбласть("Пусто|ЛО");
ОблПустоРабочееМесто = Макет.ПолучитьОбласть("Пусто|РабочееМестоПередано");
ОблПустоРемонт = Макет.ПолучитьОбласть("Пусто|Ремонт");

ОблВсегоОбщие = Макет.ПолучитьОбласть("Всего|Общие");
ОблВсегоВыпуски = Макет.ПолучитьОбласть("Всего|Выпуски");
ОблВсегоОстановки = Макет.ПолучитьОбласть("Всего|Остановки");
ОблВсегоЛО = Макет.ПолучитьОбласть("Всего|ЛО");	
ОблВсегоРемонт = Макет.ПолучитьОбласть("Всего|Ремонт");
ОблВсегоРабочееМесто = Макет.ПолучитьОбласть("Всего|РабочееМестоПередано");
ОблВсегоПрочее = Макет.ПолучитьОбласть("Всего|Прочее");

ОблШапкаОбщие.Параметры.Линейка = ""+Линейка+" ("+Линейка.Комментарий+")";
ОблШапкаОбщие.Параметры.ТекДата = ТекущаяДата();
Результат = ОбщийМодульВызовСервера.ЛинейкаОстановленаПричины(Линейка);
	Если Результат <> Неопределено Тогда
	ОблШапкаОстановки.Параметры.ОстановкаЛинейки = "Остановлена по причине: "+Результат.Примечание+" ("+Результат.Причина+")";
	КонецЕсли; 
ТабДок.Вывести(ОблШапкаОбщие);
ТабДок.Присоединить(ОблШапкаВыпуски);
ТабДок.Присоединить(ОблШапкаОстановки);
ТабДок.Присоединить(ОблШапкаЛО);
ТабДок.Присоединить(ОблШапкаРемонт);
	Для каждого ТЧ Из ТаблицаРМ Цикл
	ОблШапкаРабочееМесто.Параметры.РабочееМесто = ТЧ.РМ;
	ТабДок.Присоединить(ОблШапкаРабочееМесто);
	КонецЦикла;
ТабДок.Присоединить(ОблШапкаПрочее);

Запрос.Текст = 
	"ВЫБРАТЬ                             
	|	РемонтнаяКарта.ДокументОснование КАК ПЗ,
	|	РемонтнаяКарта.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
	|ГДЕ
	|	РемонтнаяКарта.Проведен = ЛОЖЬ
	|	И РемонтнаяКарта.Линейка = &Линейка";			
Запрос.УстановитьПараметр("Линейка", Линейка);		
РезультатЗапроса = Запрос.Выполнить();			
ВыборкаРемонт = РезультатЗапроса.Выбрать();

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛьготнаяОчередь.ПЗ КАК ПЗ,
	|	ЛьготнаяОчередь.Изделие КАК Изделие
	|ИЗ
	|	РегистрСведений.ЛьготнаяОчередь КАК ЛьготнаяОчередь
	|ГДЕ
	|	ЛьготнаяОчередь.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ЛьготнаяОчередь.Линейка = &Линейка";
	Если Не Изделие.Пустая() Тогда
	Запрос.Текст = Запрос.Текст + " И ЛьготнаяОчередь.Изделие = &Изделие";
	Запрос.УстановитьПараметр("Изделие",Изделие);
	КонецЕсли;
Запрос.УстановитьПараметр("Линейка",Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаЛО = РезультатЗапроса.Выбрать();

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта КАК МаршрутнаяКарта,
	|	ПланыВыпускаОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
	|	ПланыВыпускаОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток";
	Если Изделие.Пустая() Тогда
	Запрос.Текст = Запрос.Текст + " ИЗ РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(
												|			&ДатаНач,
												|			&ДатаКон,
												|			,
												|			,
												|			Подразделение = &Подразделение
												|				И Линейка = &Линейка) КАК ПланыВыпускаОстаткиИОбороты";
	Иначе
	Запрос.Текст = Запрос.Текст + " ИЗ РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(
												|			&ДатаНач,
												|			&ДатаКон,
												|			,
												|			,
												|			Подразделение = &Подразделение
												|				И Линейка = &Линейка
												|               	И Номенклатура = &Номенклатура) КАК ПланыВыпускаОстаткиИОбороты";
	Запрос.УстановитьПараметр("Номенклатура",Изделие);
	КонецЕсли; 
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ТекущаяДата()));
Запрос.УстановитьПараметр("ДатаКон", ТекущаяДата());
Запрос.УстановитьПараметр("Подразделение",Линейка.Подразделение);
Запрос.УстановитьПараметр("Линейка",Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаВыпуск = РезультатЗапроса.Выбрать();

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ КАК ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.Дата КАК Период,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто КАК РабочееМесто,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Ремонт КАК Ремонт
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних(, Линейка = &Линейка) КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	Если ВидКонтроля <> -1 Тогда
	Запрос.Текст = Запрос.Текст + " И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.Изделие.ВидКонтроля = &ВидКонтроля";
	Запрос.УстановитьПараметр("ВидКонтроля",ВидКонтроля);
	КонецЕсли; 
		Если Не Изделие.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И ЭтапыПроизводственныхЗаданийСрезПоследних.Изделие = &Изделие";
		Запрос.УстановитьПараметр("Изделие",Изделие);
		КонецЕсли;
			Если СписокМестХраненияПотребителей.Количество() > 0 Тогда
			Запрос.Текст = Запрос.Текст + " И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.МестоХраненияПотребитель В(&СписокМестХраненияПотребитель)";
			Запрос.УстановитьПараметр("СписокМестХраненияПотребитель",СписокМестХраненияПотребителей);
			КонецЕсли;
Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО
								|ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.Номер,
								|ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.Номер
								|ИТОГИ ПО
								|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.Дата ПЕРИОДАМИ(ДЕНЬ, , )";	
Запрос.УстановитьПараметр("Линейка",Линейка);
КолНеВыпущенныхВсего = 0;
КолВсего = 0;
КолБракВсего = 0; 
КолВыпВсего = 0;
КолЛОИзготВсего = 0;
КолИЛОИзготВсего = 0;
КолЛОПотрВсего = 0;
КолОстановкаВсего = 0;
КолРемонтВсего = 0;
КолНезапущенныхВсего = 0;
Результат = Запрос.Выполнить();
ТекущийПериод = "01.01.2001";
ВыборкаПериоды = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПериоды.Следующий() Цикл
		Если ТекущийПериод <> Формат(ВыборкаПериоды.Период,"ДФ=dd.MM.yyyy") Тогда
		ОблПериодОбщие.Параметры.Период = Формат(ВыборкаПериоды.Период,"ДФ=dd.MM.yyyy"); 
		ТабДок.Вывести(ОблПериодОбщие);
		ТабДок.Присоединить(ОблПериодВыпуски);
		ТабДок.Присоединить(ОблПериодОстановки);
		ТабДок.Присоединить(ОблПериодЛО);
		ТабДок.Присоединить(ОблПериодРемонт);
			Для каждого ТЧ Из ТаблицаРМ Цикл
			ТабДок.Присоединить(ОблПериодРабочееМесто);
			КонецЦикла;
		ТабДок.Присоединить(ОблПериодПрочее);			
		ТекущийПериод = Формат(ВыборкаПериоды.Период,"ДФ=dd.MM.yyyy")
		КонецЕсли;
	ВыборкаДетальныеЗаписи = ВыборкаПериоды.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
			Для каждого ТЧ Из ТаблицаРМ Цикл
			ТЧ.Количество = 0;
			ТЧ.Статус = 0;		
			КонецЦикла;
		ЛОИзгот = "";
		КолНеВыпущенных = 0; 	
		КолЛОИзгот = 0;
		КолИЛОИзгот = 0;
		КолЛОПотр = 0;
		КолОстановка = 0;
		КолРемонт = 0;
		КолНезапущенных = 0;
		КолБрак = ОбщийМодульВызовСервера.ПолучитьКоличествоВБраке(ПЗ.ДокументОснование);
		КолБракВсего = КолБракВсего + КолБрак;
		КолВсего = КолВсего + ПЗ.Количество; 
		ВыборкаВыпуск.Сбросить();
			Если ВыборкаВыпуск.НайтиСледующий(Новый Структура("МаршрутнаяКарта",ПЗ.ДокументОснование)) Тогда
			КолВып = ПЗ.ДокументОснование.Количество - ВыборкаВыпуск.КоличествоКонечныйОстаток;
			КолВыпВсего = КолВыпВсего + КолВып;	
			Иначе
			КолВып = ПЗ.ДокументОснование.Количество;
			КонецЕсли;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЛьготнаяОчередь.ПЗ КАК ПЗ,
			|	ЛьготнаяОчередь.Изделие КАК Изделие
			|ИЗ
			|	РегистрСведений.ЛьготнаяОчередь КАК ЛьготнаяОчередь
			|ГДЕ
			|	ЛьготнаяОчередь.Линейка В(&СписокЛинеек)
			|	И ЛьготнаяОчередь.НормаРасходов.Элемент = &МПЗ
			|	И ЛьготнаяОчередь.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
		Запрос.УстановитьПараметр("МПЗ",ПЗ.Изделие);
		Запрос.УстановитьПараметр("СписокЛинеек",ПолучитьСписокЛинеек(ПЗ.ДокументОснование));
		РезультатЗапросаЛО = Запрос.Выполнить();
			Если Не РезультатЗапросаЛО.Пустой() Тогда
			КолЛОПотрВсего = КолЛОПотрВсего + ПЗ.ДокументОснование.Количество;				
			КонецЕсли;
		Кол = ОбщийМодульВызовСервера.ПолучитьКоличествоИзделияНаРабочемМесте(ПЗ,ВыборкаДетальныеЗаписи.РабочееМесто);
		КолНеВыпущенных = КолНеВыпущенных + Кол;
		КолНеВыпущенныхВсего = КолНеВыпущенныхВсего + Кол; 
		СтатусРемонта = Перечисления.СтатусыРемонта.ПустаяСсылка();
			Если ЗначениеЗаполнено(ПЗ.ДатаЗапуска) Тогда
				Если ВыборкаДетальныеЗаписи.Ремонт Тогда	
				ВыборкаРемонт.Сбросить();			
					Пока ВыборкаРемонт.НайтиСледующий(Новый Структура("ПЗ",ПЗ)) Цикл
					СтатусРемонта = Перечисления.СтатусыРемонта.Ремонт;
					КолРемонт = КолРемонт + Кол;
					КолРемонтВсего = КолРемонтВсего + Кол;
					КонецЦикла;
				КонецЕсли;
					Для каждого ТЧ Из ТаблицаРМ Цикл
					ЗапросЭП = Новый Запрос;

					ЗапросЭП.Текст = 
						"ВЫБРАТЬ
						|	ЭтапыПроизводственныхЗаданий.Исполнитель КАК Исполнитель,
						|	ЭтапыПроизводственныхЗаданий.ДатаОкончания КАК ДатаОкончания,
						|	ЭтапыПроизводственныхЗаданий.ДатаНачала КАК ДатаНачала
						|ИЗ
						|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
						|ГДЕ
						|	ЭтапыПроизводственныхЗаданий.ПЗ = &ПЗ
						|	И ЭтапыПроизводственныхЗаданий.РабочееМесто = &РабочееМесто";
					ЗапросЭП.УстановитьПараметр("ПЗ", ПЗ);
					ЗапросЭП.УстановитьПараметр("РабочееМесто", ТЧ.РМ);
					РезультатЗапросаЭП = ЗапросЭП.Выполнить();
					ВыборкаЭП = РезультатЗапросаЭП.Выбрать();
						Если ВыборкаЭП.Количество() > 0 Тогда
							Пока ВыборкаЭП.Следующий() Цикл
								Если Не ЗначениеЗаполнено(ВыборкаЭП.ДатаОкончания) Тогда
								    Если ЗначениеЗаполнено(ПЗ.ДатаЗапуска) Тогда
										Если ВыборкаЭП.Исполнитель.Пустая() Тогда
										ТЧ.Статус = 1; //Передано										
										Иначе
										ТЧ.Статус = 2; //В работе											
										КонецЕсли;
									Кол = ОбщийМодульВызовСервера.ПолучитьКоличествоИзделияНаРабочемМесте(ПЗ,ТЧ.РМ);
									ТЧ.Количество = ТЧ.Количество + Кол;
									ТЧ.КоличествоВсего = ТЧ.КоличествоВсего + Кол;
									Иначе
										Если ЗначениеЗаполнено(ВыборкаЭП.ДатаНачала) Тогда
										ТЧ.Статус = 1; //Передано
										Иначе	
										ТЧ.Статус = 0; //Пусто										
										КонецЕсли; 
									КонецЕсли;
								Иначе
								ДатаОкончания = ВыборкаЭП.ДатаОкончания; 
								ТЧ.ДатаВремя = ВыборкаЭП.ДатаОкончания;
								ТЧ.Статус = 3; //Завершено
								КонецЕсли; 
							КонецЦикла;
						Иначе
					    ТЧ.Статус = 0; //Пусто
						КонецЕсли;
					КонецЦикла;
			Иначе
			ТЧ = ТаблицаРМ[0];
			ЗапросЭП = Новый Запрос;

			ЗапросЭП.Текст = 
				"ВЫБРАТЬ
				|	ЭтапыПроизводственныхЗаданий.ДатаНачала КАК ДатаНачала
				|ИЗ
				|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
				|ГДЕ
				|	ЭтапыПроизводственныхЗаданий.ПЗ = &ПЗ
				|	И ЭтапыПроизводственныхЗаданий.РабочееМесто.Код = 1";
			ЗапросЭП.УстановитьПараметр("ПЗ", ПЗ);
			РезультатЗапросаЭП = ЗапросЭП.Выполнить();
			ВыборкаЭП = РезультатЗапросаЭП.Выбрать();
				Если ВыборкаЭП.Количество() > 0 Тогда
					Пока ВыборкаЭП.Следующий() Цикл
						Если ЗначениеЗаполнено(ВыборкаЭП.ДатаНачала) Тогда
						ТЧ.Статус = 1; //Передано
						Иначе	
						ТЧ.Статус = 0; //Пусто										
						КонецЕсли;
					КонецЦикла;
				Иначе
			    ТЧ.Статус = 0; //Пусто
				КонецЕсли;
			ВыборкаИздЛО = СписокИзделийЛО.НайтиПоЗначению(ПЗ.Изделие);
				Если ВыборкаИздЛО = Неопределено Тогда
				ВыборкаЛО.Сбросить();
					Если ВыборкаЛО.НайтиСледующий(Новый Структура("Изделие",ПЗ.Изделие)) Тогда
					ИЛО = ОбщийМодульВызовСервера.ИстиннаяЛьготнаяОчередь(ПЗ);
					КолНезав = ОбщийМодульВызовСервера.ПолучитьНезапущенноеКоличество(ПЗ.ДокументОснование);
						Если ИЛО Тогда
						ЛОИзгот = "ИЛО";					
						КолИЛОИзгот = КолИЛОИзгот + КолНезав;
						КолИЛОИзготВсего = КолИЛОИзготВсего + КолНезав;
						Иначе	
						ЛОИзгот = "ЛО";
						КолЛОИзгот = КолЛОИзгот + КолНезав;
						КолЛОИзготВсего = КолЛОИзготВсего + КолНезав;
						КонецЕсли;
					СписокИзделийЛО.Добавить(ВыборкаДетальныеЗаписи.ПЗ.Изделие,,ИЛО);				
					КонецЕсли; 
				Иначе	                           
				КолНезав = ОбщийМодульВызовСервера.ПолучитьНезапущенноеКоличество(ПЗ.ДокументОснование);
					Если ВыборкаИздЛО.Пометка Тогда
					ЛОИзгот = "ИЛО";					
					КолИЛОИзгот = КолИЛОИзгот + КолНезав;
					КолИЛОИзготВсего = КолИЛОИзготВсего + КолНезав;
					Иначе	
					ЛОИзгот = "ЛО";
					КолЛОИзгот = КолЛОИзгот + КолНезав;
					КолЛОИзготВсего = КолЛОИзготВсего + КолНезав;
					КонецЕсли;
				КонецЕсли;
			КолНезапущенных = КолНезапущенных + Кол;
			КолНезапущенныхВсего = КолНезапущенныхВсего + Кол;
			КонецЕсли;
	    ОблПЗОбщие.Параметры.ПЗ = ПЗ;
		ОблПЗОбщие.Параметры.НомерПЗ = ПЗ.Номер;
	    ОблПЗОбщие.Параметры.НО = ПЗ.НомерОчереди;
		ОблПЗОбщие.Параметры.Наименование = СокрЛП(ПЗ.Изделие.Наименование);
		ОблПЗОбщие.Параметры.Изделие = ПЗ.Изделие;
		ОблПЗОбщие.Параметры.Статус = ПолучитьСтатус(ПЗ.Изделие);
		ОблПЗОбщие.Параметры.Количество = ПЗ.Количество;
		ВК = ПЗ.Изделие.ВидКонтроля;
			Если ВК = 0 Тогда
			ОблПЗОбщие.Параметры.ВидКонтроля = "ВК";
			ИначеЕсли ВК = 1 Тогда
			ОблПЗОбщие.Параметры.ВидКонтроля = "ГСС";				
			ИначеЕсли ВК = 2 Тогда
			ОблПЗОбщие.Параметры.ВидКонтроля = "ФК";
			ИначеЕсли ВК = 3 Тогда
			ОблПЗОбщие.Параметры.ВидКонтроля = "ЭК";			
			КонецЕсли;
		Остановка = Ложь;
		ПричинаОстановки = "";
			Если (ПЗ.Остановлено)или(ПЗ.ДокументОснование.Статус = 2) Тогда
			Остановка = Истина;
				Если ПЗ.ДокументОснование.Статус = 2 Тогда
					Если ПЗ.ДокументОснование.Остановки.Количество() > 0 Тогда
					ТЧ_Ост = ПЗ.ДокументОснование.Остановки[ПЗ.ДокументОснование.Остановки.Количество()-1];
					ПричинаОстановки = ""+ТЧ_Ост.Инициатор+" ("+ТЧ_Ост.ДатаНачала+") "+ТЧ_Ост.Причина; 
					Иначе
					ПричинаОстановки = "не определена";	
					КонецЕсли;					
				КонецЕсли; 
			КонецЕсли;
		ТабДок.Вывести(ОблПЗОбщие);
		ТабДок.НачатьГруппуКолонок("Выпуски",Истина);
		ОблПЗВыпуски.Параметры.КолНеВыпущенных = КолНеВыпущенных;
		ОблПЗВыпуски.Параметры.КолНезапущенных = КолНезапущенных;
		ОблПЗВыпуски.Параметры.КолВып = КолВып;
		ТабДок.Присоединить(ОблПЗВыпуски);
		ТабДок.ЗакончитьГруппуКолонок();
				Если Остановка Тогда
				ОблПЗОстановки.Параметры.ПричинаОстановки = ПричинаОстановки;
				ТабДок.Присоединить(ОблПЗОстановки);
					Если КолОстановка = 0 Тогда
					КолОстановка = ПЗ.Количество;
					КолОстановкаВсего = КолОстановкаВсего + КолОстановка;
					КонецЕсли;
				Иначе	
				ТабДок.Присоединить(ОблПустоОстановки);				
				КонецЕсли;
                	Если ЗначениеЗаполнено(ЛОИзгот) или Не РезультатЗапросаЛО.Пустой() Тогда
					ОблПЗЛО.Параметры.Изделие = ПЗ.Изделие;
					ОблПЗЛО.Параметры.ЛОИзгот = ЛОИзгот;
					ОблПЗЛО.Параметры.ЛОПотр = ?(РезультатЗапросаЛО.Пустой(),"","ЛО");
					ТабДок.Присоединить(ОблПЗЛО);	
					Иначе	
					ТабДок.Присоединить(ОблПустоЛО);					
					КонецЕсли;
						Если Не СтатусРемонта.Пустая() Тогда 
						ОблПЗРемонт.Параметры.ПЗ = ПЗ;
						ТабДок.Присоединить(ОблПЗРемонт);
						Иначе
						ТабДок.Присоединить(ОблПустоРемонт);			
						КонецЕсли;
							Для каждого ТЧ Из ТаблицаРМ Цикл
								Если ТЧ.Статус = 0 Тогда
								ТабДок.Присоединить(ОблПустоРабочееМесто);
								ИначеЕсли ТЧ.Статус = 1 Тогда	
								ТабДок.Присоединить(ОблПЗРабочееМестоПередано);
								ИначеЕсли ТЧ.Статус = 2 Тогда	
								ТабДок.Присоединить(ОблПЗРабочееМестоВРаботе);
								ИначеЕсли ТЧ.Статус = 3 Тогда
								ОблПЗРабочееМестоЗавершено.Параметры.Время = ДатаОкончания;	
								ТабДок.Присоединить(ОблПЗРабочееМестоЗавершено);
								КонецЕсли; 	
							КонецЦикла; 
		ОблПЗПрочее.Параметры.ВидКанбана = СокрЛП(ПЗ.Изделие.Канбан.Наименование);
		ОблПЗПрочее.Параметры.МестоХраненияПотребитель = ПЗ.ДокументОснование.МестоХраненияПотребитель;
		ТабДок.Присоединить(ОблПЗПрочее); 			
		КонецЦикла;
	КонецЦикла;
ОблВсегоОбщие.Параметры.КолВсего = КолВсего;
ТабДок.Вывести(ОблВсегоОбщие);
ОблВсегоВыпуски.Параметры.КолНеВыпущенных = КолНеВыпущенныхВсего;
ОблВсегоВыпуски.Параметры.КолБрак = КолБракВсего;
ОблВсегоВыпуски.Параметры.КолНезапущенных = КолНезапущенныхВсего;
ОблВсегоВыпуски.Параметры.КолВып = КолВыпВсего;
ТабДок.Присоединить(ОблВсегоВыпуски);
ОблВсегоОстановки.Параметры.КолОстановка = КолОстановкаВсего;
ТабДок.Присоединить(ОблВсегоОстановки);
ОблВсегоЛО.Параметры.КолЛОИзгот = КолЛОИзготВсего;
ОблВсегоЛО.Параметры.КолИЛОИзгот = КолИЛОИзготВсего;
ОблВсегоЛО.Параметры.КолЛОПотр = КолЛОПотрВсего;
ТабДок.Присоединить(ОблВсегоЛО);
ОблВсегоРемонт.Параметры.КолРемонт = КолРемонтВсего;
ТабДок.Присоединить(ОблВсегоРемонт);
	Для каждого ТЧ Из ТаблицаРМ Цикл
	ОблВсегоРабочееМесто.Параметры.КолРМ = ТЧ.КоличествоВсего;
	ТабДок.Присоединить(ОблВсегоРабочееМесто);
	КонецЦикла;
ТабДок.Присоединить(ОблВсегоПрочее); 
ТабДок.ФиксацияСверху = 2;
ТабДок.ФиксацияСлева = 6;
ПоместитьВоВременноеХранилище(ТабДок,Адрес);
КонецПроцедуры
            
Процедура СформироватьВизуализациюСводную(Макет,СписокЛинеек,СписокНоменклатуры,Адрес) Экспорт
Запрос = Новый Запрос;
СписокИзделийЛО = Новый СписокЗначений;
СписокГруппРабочихМест = Новый СписокЗначений;
ТабДок = Новый ТабличныйДокумент;
ТаблицаРМ = Новый ТаблицаЗначений;
          
ТаблицаРМ.Колонки.Добавить("Линейка");
ТаблицаРМ.Колонки.Добавить("РМ");
ТаблицаРМ.Колонки.Добавить("ГруппаРМ");
ТаблицаРМ.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3))); 
ТаблицаРМ.Колонки.Добавить("КоличествоВсего", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3)));

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РабочиеМестаЛинеек.Ссылка,
	|	РабочиеМестаЛинеек.Код КАК Код,
	|	РабочиеМестаЛинеек.Линейка,
	|	РабочиеМестаЛинеек.ГруппаРабочихМест
	|ИЗ
	|	Справочник.РабочиеМестаЛинеек КАК РабочиеМестаЛинеек
	|ГДЕ
	|	РабочиеМестаЛинеек.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	И РабочиеМестаЛинеек.ПометкаУдаления = ЛОЖЬ
	|	И РабочиеМестаЛинеек.ЭтоГруппа = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код";
Запрос.УстановитьПараметр("СписокЛинеек", СписокЛинеек);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаРМ.Добавить();
	ТЧ.Линейка = ВыборкаДетальныеЗаписи.Линейка;
	ТЧ.РМ = ВыборкаДетальныеЗаписи.Ссылка;
	ТЧ.ГруппаРМ = ВыборкаДетальныеЗаписи.ГруппаРабочихМест;
		Если СписокГруппРабочихМест.НайтиПоЗначению(ВыборкаДетальныеЗаписи.ГруппаРабочихМест) = Неопределено Тогда
		СписокГруппРабочихМест.Добавить(ВыборкаДетальныеЗаписи.ГруппаРабочихМест,Формат(ВыборкаДетальныеЗаписи.ГруппаРабочихМест.Код,"ЧЦ=2; ЧВН="));
		КонецЕсли; 
	КонецЦикла; 
СписокГруппРабочихМест.СортироватьПоПредставлению();

ОблШапкаОбщие = Макет.ПолучитьОбласть("Шапка|Общие");
ОблШапкаВыпуски = Макет.ПолучитьОбласть("Шапка|Выпуски");
ОблШапкаОстановки = Макет.ПолучитьОбласть("Шапка|Остановки");
ОблШапкаЛО = Макет.ПолучитьОбласть("Шапка|ЛО");
ОблШапкаРемонт = Макет.ПолучитьОбласть("Шапка|Ремонт");	
ОблШапкаРабочееМесто = Макет.ПолучитьОбласть("Шапка|РабочееМесто");
ОблШапкаПрочее = Макет.ПолучитьОбласть("Шапка|Прочее");

ОблМТКОбщие = Макет.ПолучитьОбласть("МТК|Общие");
ОблМТКВыпуски = Макет.ПолучитьОбласть("МТК|Выпуски");
ОблМТКОстановки = Макет.ПолучитьОбласть("МТК|Остановки");
ОблМТКЛО = Макет.ПолучитьОбласть("МТК|ЛО");		                         
ОблМТКРемонт = Макет.ПолучитьОбласть("МТК|Ремонт");
ОблМТКРабочееМесто = Макет.ПолучитьОбласть("МТК|РабочееМесто");
ОблМТКРабочееМестоТекущее = Макет.ПолучитьОбласть("МТК|РабочееМестоТекущее");
ОблМТКРабочееМестоПустое = Макет.ПолучитьОбласть("МТК|РабочееМестоПустое"); 
ОблМТКПрочее = Макет.ПолучитьОбласть("МТК|Прочее");

ОблПЗОбщие = Макет.ПолучитьОбласть("ПЗ|Общие");	
ОблПЗВыпуски = Макет.ПолучитьОбласть("ПЗ|Выпуски");
ОблПЗОстановки = Макет.ПолучитьОбласть("ПЗ|Остановки");
ОблПЗЛО = Макет.ПолучитьОбласть("ПЗ|ЛО");
ОблПЗРемонт = Макет.ПолучитьОбласть("ПЗ|Ремонт");
ОблПЗРабочееМесто = Макет.ПолучитьОбласть("ПЗ|РабочееМесто");
ОблПЗРабочееМестоТекущее = Макет.ПолучитьОбласть("ПЗ|РабочееМестоТекущее");
ОблПЗПрочее = Макет.ПолучитьОбласть("ПЗ|Прочее");
                                                       
ОблПустоОстановки = Макет.ПолучитьОбласть("Пусто|Остановки"); 
ОблПустоЛО = Макет.ПолучитьОбласть("Пусто|ЛО");
ОблПустоРемонт = Макет.ПолучитьОбласть("Пусто|Ремонт");
ОблПустоРабочееМесто = Макет.ПолучитьОбласть("Пусто|РабочееМесто");
ОблПустоРабочееМестоТекущее = Макет.ПолучитьОбласть("Пусто|РабочееМестоТекущее");
ОблПустоПрочее = Макет.ПолучитьОбласть("Пусто|Прочее");

ОблВсегоОбщие = Макет.ПолучитьОбласть("Всего|Общие");
ОблВсегоВыпуски = Макет.ПолучитьОбласть("Всего|Выпуски");
ОблВсегоОстановки = Макет.ПолучитьОбласть("Всего|Остановки");
ОблВсегоЛО = Макет.ПолучитьОбласть("Всего|ЛО");
ОблВсегоРемонт = Макет.ПолучитьОбласть("Всего|Ремонт");	
ОблВсегоРабочееМесто = Макет.ПолучитьОбласть("Всего|РабочееМесто");
ОблВсегоПрочее = Макет.ПолучитьОбласть("Всего|Прочее");

ОблШапкаОбщие.Параметры.СписокЛинеек = СписокЛинеек;
ОблШапкаОбщие.Параметры.ТекДата = ТекущаяДата();
СписокОстановленныхЛинеек = Новый СписокЗначений;

	Для каждого Стр Из СписокЛинеек Цикл
	Результат = ОбщийМодульВызовСервера.ЛинейкаОстановленаПричины(Стр.Значение);
		Если Результат <> Неопределено Тогда
		СписокОстановленныхЛинеек.Добавить(""+Стр.Значение+" - остановлена по причине: "+Результат.Примечание+" ("+Результат.Причина+")");
		КонецЕсли;	
	КонецЦикла;
		Если СписокОстановленныхЛинеек.Количество() > 0 Тогда
		ОблШапкаОстановки.Параметры.ОстановкаЛинейки = "Остановлены некоторые из выбранных линеек (см. расшифровку)!"; 
		ОблШапкаОстановки.Параметры.СписокОстановленныхЛинеек = СписокОстановленныхЛинеек;		
		КонецЕсли;  
ТабДок.Вывести(ОблШапкаОбщие);
ТабДок.Присоединить(ОблШапкаВыпуски);
ТабДок.Присоединить(ОблШапкаОстановки);
ТабДок.Присоединить(ОблШапкаЛО);
ТабДок.Присоединить(ОблШапкаРемонт);
	Для каждого Стр Из СписокГруппРабочихМест Цикл
	ОблШапкаРабочееМесто.Параметры.ГруппаРабочихМест = Стр.Значение;
	ТабДок.Присоединить(ОблШапкаРабочееМесто);
	КонецЦикла;
ТабДок.Присоединить(ОблШапкаПрочее); 

Запрос.Текст = 
	"ВЫБРАТЬ                             
	|	РемонтнаяКарта.ДокументОснование КАК ПЗ,
	|	РемонтнаяКарта.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
	|ГДЕ
	|	РемонтнаяКарта.Проведен = ЛОЖЬ
	|	И РемонтнаяКарта.Линейка В ИЕРАРХИИ (&СписокЛинеек)";			
Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);		
РезультатЗапроса = Запрос.Выполнить();			
ВыборкаРемонт = РезультатЗапроса.Выбрать();			

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛьготнаяОчередь.ПЗ КАК ПЗ,
	|	ЛьготнаяОчередь.Изделие КАК Изделие
	|ИЗ
	|	РегистрСведений.ЛьготнаяОчередь КАК ЛьготнаяОчередь
	|ГДЕ
	|	ЛьготнаяОчередь.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	И ЛьготнаяОчередь.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	Если СписокНоменклатуры.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ЛьготнаяОчередь.Изделие В(&СписокНоменклатуры)";
	Запрос.УстановитьПараметр("СписокНоменклатуры",СписокНоменклатуры);
	КонецЕсли;
Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаЛО = РезультатЗапроса.Выбрать();

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта КАК МаршрутнаяКарта,
	|	ПланыВыпускаОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
	|	ПланыВыпускаОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток
	|ИЗ
	|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Линейка В ИЕРАРХИИ (&СписокЛинеек)) КАК ПланыВыпускаОстаткиИОбороты";
	Если СписокНоменклатуры.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " ГДЕ ПланыВыпускаОстаткиИОбороты.Номенклатура В(&СписокНоменклатуры)";
	Запрос.УстановитьПараметр("СписокНоменклатуры",СписокНоменклатуры);
	КонецЕсли; 
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ТекущаяДата()));
Запрос.УстановитьПараметр("ДатаКон", ТекущаяДата());
Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаВыпуск = РезультатЗапроса.Выбрать();

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ КАК ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование КАК МТК,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто КАК РабочееМесто,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Ремонт КАК Ремонт,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала КАК ДатаНачала
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних(, Линейка В ИЕРАРХИИ(&СписокЛинеек)) КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	Если СписокНоменклатуры.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ЭтапыПроизводственныхЗаданийСрезПоследних.Изделие В(&СписокНоменклатуры)";
	Запрос.УстановитьПараметр("СписокНоменклатуры",СписокНоменклатуры);
	КонецЕсли; 
Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО
								|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.НомерОчереди,
								|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.ДатаОтгрузки,
								|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.Номер
								|ИТОГИ ПО
								|	МТК";	
Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
КолНеВыпущенныхВсего = 0; 
КолВыпСегодняВсего = 0;
КолВыпВсего = 0;
КолЛОВсего = 0;
КолИЛОВсего = 0;
КолОстановкаВсего = 0;
КолРемонтВсего = 0;
КолНезапущенныхВсего = 0;
Результат = Запрос.Выполнить();
ВыборкаМТК = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМТК.Следующий() Цикл
		Для каждого ТЧ Из ТаблицаРМ Цикл
		ТЧ.Количество = 0;		
		КонецЦикла;
	ЛО = "";	
	КолЛО = 0;
	КолИЛО = 0;
	КолОстановка = 0;
	КолРемонт = 0;
	ВыборкаВыпуск.Сбросить();
		Если ВыборкаВыпуск.НайтиСледующий(Новый Структура("МаршрутнаяКарта",ВыборкаМТК.МТК)) Тогда
		КолВыпСегодня = ВыборкаВыпуск.КоличествоРасход;
		КолВып = ВыборкаМТК.МТК.Количество - ВыборкаВыпуск.КоличествоКонечныйОстаток;
		КолВыпСегодняВсего = КолВыпСегодняВсего + КолВыпСегодня;
		КолВыпВсего = КолВыпВсего + КолВып;
		КолНеВыпущенных	= ВыборкаВыпуск.КоличествоКонечныйОстаток;
		КолНеВыпущенныхВсего = КолНеВыпущенныхВсего + КолНеВыпущенных;
		Иначе
		КолВыпСегодня = 0;
		КолВып = ВыборкаМТК.МТК.Количество;
		КолНеВыпущенных = 0;
		КонецЕсли;
	КолНезапущенных = ОбщийМодульВызовСервера.ПолучитьНезапущенноеКоличество(ВыборкаМТК.МТК);
	КолНезапущенныхВсего = КолНезапущенныхВсего + КолНезапущенных;
		Если КолНезапущенных > 0 Тогда
		ВыборкаИздЛО = СписокИзделийЛО.НайтиПоЗначению(ВыборкаМТК.МТК.Номенклатура);
			Если ВыборкаИздЛО = Неопределено Тогда
			ВыборкаЛО.Сбросить();
				Если ВыборкаЛО.НайтиСледующий(Новый Структура("Изделие",ВыборкаМТК.МТК.Номенклатура)) Тогда 
				ИЛО = ОбщийМодульВызовСервера.ИстиннаяЛьготнаяОчередь(ВыборкаЛО.ПЗ);
					Если ИЛО Тогда
					ЛО = "ИЛО";					
					КолИЛО = КолИЛО + КолНезапущенных;
					КолИЛОВсего = КолИЛОВсего + КолНезапущенных;
					Иначе
					ЛО = "ЛО";
					КолЛО = КолЛО + КолНезапущенных;
					КолЛОВсего = КолЛОВсего + КолНезапущенных;
					КонецЕсли;
				СписокИзделийЛО.Добавить(ВыборкаЛО.ПЗ.Изделие,,ИЛО); 
				КонецЕсли;
			Иначе
	  			Если ВыборкаИздЛО.Пометка Тогда
				ЛО = "ИЛО";						
				КолИЛО = КолИЛО + КолНезапущенных;
				КолИЛОВсего = КолИЛОВсего + КолНезапущенных;
				Иначе
				ЛО = "ЛО";
				КолЛО = КолЛО + КолНезапущенных;
				КолЛОВсего = КолЛОВсего + КолНезапущенных;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ВыборкаДетальныеЗаписи = ВыборкаМТК.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Кол = ВыборкаДетальныеЗаписи.ПЗ.Количество;
		СтатусРемонта = Перечисления.СтатусыРемонта.ПустаяСсылка();
		ВыбРМ = ВыборкаДетальныеЗаписи.РабочееМесто;
		ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
			Если ЗначениеЗаполнено(ПЗ.ДатаЗапуска) Тогда
				Если ВыборкаДетальныеЗаписи.Ремонт Тогда	
				ВыборкаРемонт.Сбросить();
					Если ВыборкаРемонт.НайтиСледующий(Новый Структура("ПЗ",ПЗ)) Тогда
					СтатусРемонта = Перечисления.СтатусыРемонта.Ремонт;
					КолРемонт = КолРемонт + Кол;
					КолРемонтВсего = КолРемонтВсего + Кол;
					КонецЕсли;
				КонецЕсли;
			Выборка = ТаблицаРМ.НайтиСтроки(Новый Структура("РМ",ВыбРМ));
			Выборка[0].Количество = Выборка[0].Количество + Кол;
			Выборка[0].КоличествоВсего = Выборка[0].КоличествоВсего + Кол;
			КонецЕсли;			
		КонецЦикла;
			ОблМТКОбщие.Параметры.МТК = ВыборкаМТК.МТК;
			ОблМТКОбщие.Параметры.НомерМТК = ВыборкаМТК.МТК.Номер;
			ОблМТКОбщие.Параметры.ДатаМТК = Формат(ВыборкаМТК.МТК.Дата,"ДФ=dd.MM.yyyy");
				Если ВыборкаМТК.МТК.НомерОчереди = 0 Тогда
				ОблМТКОбщие.Параметры.НО = "Р";
				ИначеЕсли ВыборкаМТК.МТК.НомерОчереди = 1 Тогда
				ОблМТКОбщие.Параметры.НО = "СЦ";			
				ИначеЕсли ВыборкаМТК.МТК.НомерОчереди < 0 Тогда
				ОблМТКОбщие.Параметры.НО = "П";
				Иначе
				ОблМТКОбщие.Параметры.НО = "";	
				КонецЕсли;
			ОблМТКОбщие.Параметры.Наименование = СокрЛП(ВыборкаМТК.МТК.Номенклатура.Наименование);
			ОблМТКОбщие.Параметры.Спецификация = ВыборкаМТК.МТК.Номенклатура;
			ОблМТКОбщие.Параметры.Статус = ПолучитьСтатус(ВыборкаМТК.МТК.Номенклатура); 
			ТабДок.Вывести(ОблМТКОбщие);
			ТабДок.НачатьГруппуКолонок("Выпуски",Истина);
			ОблМТКВыпуски.Параметры.КолНеВыпущенных = КолНеВыпущенных;
			ОблМТКВыпуски.Параметры.КолНезапущенных = КолНезапущенных; 
			ОблМТКВыпуски.Параметры.КолВыпСегодня = КолВыпСегодня;
			ОблМТКВыпуски.Параметры.КолВып = КолВып;
			ТабДок.Присоединить(ОблМТКВыпуски);
			ТабДок.ЗакончитьГруппуКолонок(); 
				Если ВыборкаМТК.МТК.Статус = 2 Тогда
				КолОстановка = ОбщийМодульВызовСервера.ПолучитьНезавершённоеКоличество(ТекущаяДата(),ВыборкаМТК.МТК);
				КолОстановкаВсего = КолОстановкаВсего + КолОстановка;
				ОблМТКОстановки.Параметры.КолОстановка = КолОстановка;
					Если ВыборкаМТК.МТК.Остановки.Количество() > 0 Тогда
					Остановка = ВыборкаМТК.МТК.Остановки[ВыборкаМТК.МТК.Остановки.Количество()-1];
					ОблМТКОстановки.Параметры.ПричинаОстановки = СокрЛП(Остановка.Инициатор.Наименование)+" (c "+Остановка.ДатаНачала+")"+Символы.ПС+СокрЛП(Остановка.Причина);
						Если ЗначениеЗаполнено(Остановка.МПЗ) Тогда
						ОблМТКОстановки.Параметры.ПричинаОстановки = ОблМТКОстановки.Параметры.ПричинаОстановки+Символы.ПС+СокрЛП(Остановка.МПЗ.Наименование); 
						КонецЕсли;
					Иначе	
					ОблМТКОстановки.Параметры.ПричинаОстановки = "не определена";
					КонецЕсли;
				Иначе
				ОблМТКОстановки.Параметры.КолОстановка = "";
				ОблМТКОстановки.Параметры.ПричинаОстановки = "";
				КонецЕсли;
			ТабДок.Присоединить(ОблМТКОстановки); 
				Если КолЛО > 0 Тогда	
				ОблМТКЛО.Параметры.КолЛО = "ЛО ("+КолЛО+")";
				ОблМТКЛО.Параметры.Изделие = ВыборкаМТК.МТК.Номенклатура;
				ИначеЕсли КолИЛО > 0 Тогда	
				ОблМТКЛО.Параметры.КолЛО = "ИЛО ("+КолИЛО+")";
				ОблМТКЛО.Параметры.Изделие = ВыборкаМТК.МТК.Номенклатура;
				Иначе
				ОблМТКЛО.Параметры.КолЛО = "";
				ОблМТКЛО.Параметры.Изделие = "";	
				КонецЕсли; 
			ТабДок.Присоединить(ОблМТКЛО);
            ОблМТКРемонт.Параметры.КолРемонт = КолРемонт;
            ТабДок.Присоединить(ОблМТКРемонт);
				Для каждого Стр Из СписокГруппРабочихМест Цикл
				ВыборкаРМ = ТаблицаРМ.НайтиСтроки(Новый Структура("Линейка,ГруппаРМ",ВыборкаМТК.МТК.Линейка,Стр.Значение));
					Если ВыборкаРМ.Количество() > 0 Тогда
					КолРМ = 0;
						Для к = 0 По ВыборкаРМ.ВГраница() Цикл
						КолРМ = КолРМ + ВыборкаРМ[к].Количество;
						КонецЦикла;
							Если КолРМ > 0 Тогда
							//ОблМТКРабочееМестоТекущее.Параметры.Линейка = ВыборкаМТК.МТК.Линейка;
							ОблМТКРабочееМестоТекущее.Параметры.КолРМ = КолРМ;					
							ТекОбл = ТабДок.Присоединить(ОблМТКРабочееМестоТекущее);							
							Иначе	
							ОблМТКРабочееМесто.Параметры.Линейка = ВыборкаМТК.МТК.Линейка;					
							ТекОбл = ТабДок.Присоединить(ОблМТКРабочееМесто);							
							КонецЕсли; 
					ТабДок.Область(ТекОбл.Верх, ТекОбл.Лево, ТекОбл.Низ, ТекОбл.Лево).ЦветФона = ЗначениеИзСтрокиВнутр(ВыборкаМТК.МТК.Линейка.Цвет);
					Иначе
					ТабДок.Присоединить(ОблМТКРабочееМестоПустое);
					КонецЕсли; 
				КонецЦикла;
			ОблМТКПрочее.Параметры.СтандартныйКомментарий = ВыборкаМТК.МТК.СтандартныйКомментарий; 
			ОблМТКПрочее.Параметры.ДатаОтгрузки = Формат(ВыборкаМТК.МТК.ДатаОтгрузки,"ДФ=dd.MM.yyyy");
			ОблМТКПрочее.Параметры.Счёт = СокрЛП(ВыборкаМТК.МТК.Счёт);
			ТабДок.Присоединить(ОблМТКПрочее);
			ТабДок.НачатьГруппуСтрок("По МТК", Истина);
			ВыборкаДетальныеЗаписи.Сбросить();
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				//Кол = ВыборкаДетальныеЗаписи.ПЗ.ДокументОснование.Количество;
				СтатусРемонта = Перечисления.СтатусыРемонта.ПустаяСсылка();
				ВыбРМ = ВыборкаДетальныеЗаписи.РабочееМесто;
				ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
					Если ЗначениеЗаполнено(ПЗ.ДатаЗапуска) Тогда
						Если ВыборкаДетальныеЗаписи.Ремонт Тогда	
						ВыборкаРемонт.Сбросить();
							Если ВыборкаРемонт.НайтиСледующий(Новый Структура("ПЗ",ПЗ)) Тогда
							СтатусРемонта = Перечисления.СтатусыРемонта.Ремонт;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли; 
		        ОблПЗОбщие.Параметры.ПЗ = ПЗ;
				ОблПЗОбщие.Параметры.НомерПЗ = ПЗ.Номер;
					Если Не ЗначениеЗаполнено(ПЗ.ВозвратнаяТара) Тогда
					ОблПЗОбщие.Параметры.БарКод = ПЗ.БарКод;
					Иначе
					ОблПЗОбщие.Параметры.БарКод = СокрЛП(ПЗ.ВозвратнаяТара)+" / "+ПЗ.БарКод;
					КонецЕсли; 
			    ОблПЗОбщие.Параметры.КодDanfoss = ОбщийМодульВызовСервера.ПолучитьКодDanfoss(ПЗ.БарКод);
				ТабДок.Вывести(ОблПЗОбщие);
				ТабДок.Присоединить(ОблПЗВыпуски);
					Если ВыборкаМТК.МТК.Статус = 2 Тогда
		 			ОблПЗОстановки.Параметры.ПричинаОстановки = ОблМТКОстановки.Параметры.ПричинаОстановки;
					ТабДок.Присоединить(ОблПЗОстановки);			
					Иначе	
					ТабДок.Присоединить(ОблПустоОстановки);	
					КонецЕсли;
						Если Не ЗначениеЗаполнено(ПЗ.ДатаЗапуска) и ЗначениеЗаполнено(ЛО) Тогда
						ОблПЗЛО.Параметры.Изделие = ВыборкаМТК.МТК.Номенклатура;
						ТабДок.Присоединить(ОблПЗЛО);					
						Иначе	
						ТабДок.Присоединить(ОблПустоЛО);
						КонецЕсли;
							Если Не СтатусРемонта.Пустая() Тогда 
							ОблПЗРемонт.Параметры.ПЗ = ПЗ;
							ТабДок.Присоединить(ОблПЗРемонт);
							Иначе
							ТабДок.Присоединить(ОблПустоРемонт);			
							КонецЕсли;
							Для каждого Стр Из СписокГруппРабочихМест Цикл
							ВыборкаРМ = ТаблицаРМ.НайтиСтроки(Новый Структура("Линейка,ГруппаРМ",ПЗ.Линейка,Стр.Значение));
								Если ВыборкаРМ.Количество() > 0 Тогда
								флТекущееРМ = Ложь;
								флНеПередаваласьНаРМ = Истина;
									Для к = 0 По ВыборкаРМ.ВГраница() Цикл
									ЗапросЭП = Новый Запрос;

									ЗапросЭП.Текст = 
										"ВЫБРАТЬ
										|	ЭтапыПроизводственныхЗаданий.ДатаОкончания
										|ИЗ
										|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
										|ГДЕ
										|	ЭтапыПроизводственныхЗаданий.ПЗ = &ПЗ
										|	И ЭтапыПроизводственныхЗаданий.РабочееМесто = &РабочееМесто";
									ЗапросЭП.УстановитьПараметр("ПЗ", ПЗ);
									ЗапросЭП.УстановитьПараметр("РабочееМесто", ВыборкаРМ[к].РМ);
									РезультатЗапросаЭП = ЗапросЭП.Выполнить();
									ВыборкаЭП = РезультатЗапросаЭП.Выбрать();
										Если ВыборкаЭП.Количество() > 0 Тогда
										флНеПередаваласьНаРМ = Ложь;
											Пока ВыборкаЭП.Следующий() Цикл
												Если ВыборкаРМ[к].РМ = ВыбРМ Тогда
												флТекущееРМ = Истина;
												КонецЕсли; 
											КонецЦикла;
										КонецЕсли; 
									КонецЦикла;
										Если флТекущееРМ Тогда
										    Если ЗначениеЗаполнено(ПЗ.ДатаЗапуска) Тогда
											//ОблПЗРабочееМестоТекущее.Параметры.Линейка = ПЗ.Линейка;
											ТекОбл = ТабДок.Присоединить(ОблПЗРабочееМестоТекущее);
											ТабДок.Область(ТекОбл.Верх, ТекОбл.Лево, ТекОбл.Низ, ТекОбл.Лево).ЦветФона = ЗначениеИзСтрокиВнутр(ПЗ.Линейка.Цвет);
											Иначе
											//ОблПустоРабочееМестоТекущее.Параметры.Линейка = ПЗ.Линейка;
											ТекОбл = ТабДок.Присоединить(ОблПустоРабочееМестоТекущее);
											ТабДок.Область(ТекОбл.Верх, ТекОбл.Лево, ТекОбл.Низ, ТекОбл.Лево).ЦветФона = ЗначениеИзСтрокиВнутр(ПЗ.Линейка.Цвет);
											КонецЕсли;
										Иначе
											Если флНеПередаваласьНаРМ Тогда
											//ОблПустоРабочееМестоТекущее.Параметры.Линейка = ПЗ.Линейка;
										    ТекОбл = ТабДок.Присоединить(ОблПустоРабочееМестоТекущее);
											ТабДок.Область(ТекОбл.Верх, ТекОбл.Лево, ТекОбл.Низ, ТекОбл.Лево).ЦветФона = ЗначениеИзСтрокиВнутр(ПЗ.Линейка.Цвет);									
											Иначе	
											ОблПЗРабочееМесто.Параметры.Время = ВыборкаЭП.ДатаОкончания;
											ТекОбл = ТабДок.Присоединить(ОблПЗРабочееМесто);
											ТабДок.Область(ТекОбл.Верх, ТекОбл.Лево, ТекОбл.Низ, ТекОбл.Лево).ЦветФона = ЗначениеИзСтрокиВнутр(ПЗ.Линейка.Цвет);									
											КонецЕсли;
										КонецЕсли;
								Иначе
								ТабДок.Присоединить(ОблПустоРабочееМесто);
								КонецЕсли;
							КонецЦикла; 
				ТабДок.Присоединить(ОблПЗПрочее);			
				КонецЦикла;
    ТабДок.ЗакончитьГруппуСтрок();
	КонецЦикла;
ТабДок.Вывести(ОблВсегоОбщие);
ТабДок.НачатьГруппуКолонок("Выпуски",Истина);
ОблВсегоВыпуски.Параметры.КолНеВыпущенных = КолНеВыпущенныхВсего;
ОблВсегоВыпуски.Параметры.КолНезапущенных = КолНезапущенныхВсего;
ОблВсегоВыпуски.Параметры.КолВыпСегодняВсего = КолВыпСегодняВсего;
ОблВсегоВыпуски.Параметры.КолВыпВсего = КолВыпВсего;
ТабДок.Присоединить(ОблВсегоВыпуски);
ТабДок.ЗакончитьГруппуКолонок();
ОблВсегоОстановки.Параметры.КолОстановка = КолОстановкаВсего;
ТабДок.Присоединить(ОблВсегоОстановки);
ОблВсегоЛО.Параметры.КолЛО = КолЛОВсего;
ОблВсегоЛО.Параметры.КолИЛО = КолИЛОВсего;
ТабДок.Присоединить(ОблВсегоЛО);
ОблВсегоРемонт.Параметры.КолРемонт = КолРемонтВсего; 
ТабДок.Присоединить(ОблВсегоРемонт);
	Для каждого Стр Из СписокГруппРабочихМест Цикл
	ВыборкаРМ = ТаблицаРМ.НайтиСтроки(Новый Структура("ГруппаРМ",Стр.Значение));
		Если ВыборкаРМ.Количество() > 0 Тогда
		КолРМ = 0;
			Для к = 0 По ВыборкаРМ.ВГраница() Цикл
			КолРМ = КолРМ + ВыборкаРМ[к].КоличествоВсего;
			КонецЦикла;
		ОблВсегоРабочееМесто.Параметры.КолРМ = КолРМ;					
		Иначе
		ОблВсегоРабочееМесто.Параметры.КолРМ = 0;
		КонецЕсли; 
	ТабДок.Присоединить(ОблВсегоРабочееМесто);
	КонецЦикла; 
ТабДок.Присоединить(ОблВсегоПрочее); 
ТабДок.ФиксацияСверху = 3;
ТабДок.ФиксацияСлева = 4;
ПоместитьВоВременноеХранилище(ТабДок,Адрес);
КонецПроцедуры

#КонецОбласти