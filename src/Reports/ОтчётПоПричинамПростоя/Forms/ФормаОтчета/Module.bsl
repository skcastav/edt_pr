&НаСервере
Функция ПолучитьВремяРаботыЛинейки(Линейка)
РабочееВремяОбщее = 0;
ВыбДата = Отчет.Период.ДатаНачала;
	Пока ВыбДата <= Отчет.Период.ДатаОкончания Цикл
	Отбор = Новый Структура("ПроизводственныйКалендарь,Дата,Год",Константы.ОсновнойПроизводственныйКалендарь.Получить(),ВыбДата,Год(ВыбДата));
	Выборка = РегистрыСведений.ДанныеПроизводственногоКалендаря.Получить(Отбор);
		Если Выборка.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий Тогда
		Отбор = Новый Структура("Линейка",Линейка);
		ПаспортЛинейки = РегистрыСведений.ПаспортЛинейки.ПолучитьПоследнее(ВыбДата,Отбор);
		РабочееВремяОбщее = РабочееВремяОбщее + ПаспортЛинейки.Смена;		
		КонецЕсли;
	ВыбДата = ВыбДата + 86400;	
	КонецЦикла; 
Возврат(РабочееВремяОбщее);
КонецФункции 

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();
Макет = Отчеты.ОтчётПоПричинамПростоя.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблЛинейка = Макет.ПолучитьОбласть("Линейка");
ОблЛинейкаИтого = Макет.ПолучитьОбласть("ЛинейкаИтого");
ОблПричинаПростоя = Макет.ПолучитьОбласть("ПричинаПростоя");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.ДатаНач = Отчет.Период.ДатаНачала;
ОблШапка.Параметры.ДатаКон = Отчет.Период.ДатаОкончания;
	Если Параметр = 1 Тогда
	ОблШапка.Параметры.Параметр = "Часов";
	ИначеЕсли Параметр = 2 Тогда
	ОблШапка.Параметры.Параметр = "Минут";
	Иначе
	ОблШапка.Параметры.Параметр = "% от продолжительности смены";
	КонецЕсли;
ТабДок.Вывести(ОблШапка);

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПростойЛинейки.Линейка КАК Линейка,
	|	ПростойЛинейки.Причина КАК Причина,
	|	ПростойЛинейки.Период,
	|	ПростойЛинейки.Окончание
	|ИЗ
	|	РегистрСведений.ПростойЛинейки КАК ПростойЛинейки
	|ГДЕ
	|	ПростойЛинейки.Период МЕЖДУ &ДатаНач И &ДатаКон";
	Если СписокЛинеек.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ПростойЛинейки.Линейка В ИЕРАРХИИ(&СписокЛинеек)";
	Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
	КонецЕсли;
		Если СписокПричинПростоя.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И ПростойЛинейки.Причина В(&СписокПричинПростоя)";
		Запрос.УстановитьПараметр("СписокПричинПростоя",СписокПричинПростоя);		
		КонецЕсли; 
Запрос.УстановитьПараметр("ДатаНач",Отчет.Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон",Отчет.Период.ДатаОкончания);
Результат = Запрос.Выполнить();
ТаблицаПростоев = Результат.Выгрузить(ОбходРезультатаЗапроса.Прямой);
ТаблицаПростоев.Колонки.Добавить("ВремяПростоя",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(6,0)));
	Для каждого ТЧ Из ТаблицаПростоев Цикл
	//ТЧ.ВремяПростоя = ?(ЗначениеЗаполнено(ТЧ.Окончание),(ТЧ.Окончание - ТЧ.Период)/60,0);
	ТЧ.ВремяПростоя = ?(ЗначениеЗаполнено(ТЧ.Окончание),ОбщийМодульВызовСервера.ПолучитьВремяМеждуДатами(ТЧ.Период,ТЧ.Окончание,2,ВычестьНерабочееВремя,КолНерабочихЧасов,БезВыходных),0);
	КонецЦикла;
ТекЛинейка = Справочники.Линейки.ПустаяСсылка();
РабочееВремяОбщее = 0;
	Если ГруппироватьПоЛинейкам Тогда
	ТаблицаПростоев.Свернуть("Линейка,Причина","ВремяПростоя");		
		Если СортироватьПо = 1 Тогда
		ТаблицаПростоев.Сортировать("Линейка,Причина");
		ИначеЕсли СортироватьПо = 2 Тогда
		ТаблицаПростоев.Сортировать("Линейка,ВремяПростоя");
		Иначе
		ТаблицаПростоев.Сортировать("Линейка,ВремяПростоя Убыв");
		КонецЕсли; 
	Иначе
	ТаблицаПростоев.Свернуть("Причина","ВремяПростоя");
		Если СортироватьПо = 1 Тогда
		ТаблицаПростоев.Сортировать("Причина");
		ИначеЕсли СортироватьПо = 2 Тогда
		ТаблицаПростоев.Сортировать("ВремяПростоя");
		Иначе
		ТаблицаПростоев.Сортировать("ВремяПростоя Убыв");
		КонецЕсли;
			Для каждого Стр Из СписокЛинеек Цикл
			РабочееВремяОбщее = РабочееВремяОбщее + ПолучитьВремяРаботыЛинейки(Стр.Значение);
			КонецЦикла;
	КонецЕсли;
КолПарам = 0; 
ВремяПростояИтого = 0;
ВремяПростояВсего = 0;
РабочееВремяЛинейки = 0;
	Для каждого ТЧ Из ТаблицаПростоев Цикл
		Если ГруппироватьПоЛинейкам Тогда
			Если ТекЛинейка <> ТЧ.Линейка Тогда
				Если Не ТекЛинейка.Пустая() Тогда
					Если Параметр = 1 Тогда
					ОблЛинейкаИтого.Параметры.КолПарамИтого = Окр(ВремяПростояИтого/60,2,1);
					ИначеЕсли Параметр = 2 Тогда
					ОблЛинейкаИтого.Параметры.КолПарамИтого = ВремяПростояИтого;
					Иначе
					ОблЛинейкаИтого.Параметры.КолПарамИтого = Окр(ВремяПростояИтого*100/РабочееВремяЛинейки,2,1);
					КонецЕсли;
				ТабДок.Вывести(ОблЛинейкаИтого);				
				КонецЕсли;
			РабочееВремяЛинейки = ПолучитьВремяРаботыЛинейки(ТЧ.Линейка);
			РабочееВремяОбщее = РабочееВремяОбщее + РабочееВремяЛинейки;
			ОблЛинейка.Параметры.Линейка = ""+ТЧ.Линейка + " ("+ТЧ.Линейка.Комментарий+")";
			ТабДок.Вывести(ОблЛинейка);		
			ТекЛинейка = ТЧ.Линейка;
			ВремяПростояИтого = 0;
			КонецЕсли;
				Если Параметр = 1 Тогда
				КолПарам = Окр(ТЧ.ВремяПростоя/60,2,1);
				ИначеЕсли Параметр = 2 Тогда
				КолПарам = ТЧ.ВремяПростоя;
				Иначе
				КолПарам = Окр(ТЧ.ВремяПростоя*100/РабочееВремяЛинейки,2,1);
				КонецЕсли; 
		Иначе
			Если Параметр = 1 Тогда
			КолПарам = Окр(ТЧ.ВремяПростоя/60,2,1);
			ИначеЕсли Параметр = 2 Тогда
			КолПарам = ТЧ.ВремяПростоя;
			Иначе
			КолПарам = Окр(ТЧ.ВремяПростоя*100/РабочееВремяОбщее,2,1);
			КонецЕсли; 
		КонецЕсли;
	ОблПричинаПростоя.Параметры.ПричинаПростоя = ТЧ.Причина;
	ОблПричинаПростоя.Параметры.КолПарам = КолПарам;
	ТабДок.Вывести(ОблПричинаПростоя);
	ВремяПростояИтого = ВремяПростояИтого + ТЧ.ВремяПростоя;
	ВремяПростояВсего = ВремяПростояВсего + ТЧ.ВремяПростоя;
	КонецЦикла;
		Если ГруппироватьПоЛинейкам Тогда
			Если Параметр = 1 Тогда
			ОблЛинейкаИтого.Параметры.КолПарамИтого = Окр(ВремяПростояИтого/60,2,1);
			ИначеЕсли Параметр = 2 Тогда
			ОблЛинейкаИтого.Параметры.КолПарамИтого = ВремяПростояИтого;
			Иначе
			ОблЛинейкаИтого.Параметры.КолПарамИтого = Окр(ВремяПростояИтого*100/РабочееВремяЛинейки,2,1);
			КонецЕсли;
		ТабДок.Вывести(ОблЛинейкаИтого);										
		КонецЕсли; 
			Если Параметр = 1 Тогда
			ОблКонец.Параметры.КолПарамВсего = Окр(ВремяПростояВсего/60,2,1);
			ИначеЕсли Параметр = 2 Тогда
			ОблКонец.Параметры.КолПарамВсего = ВремяПростояВсего;
			Иначе
			ОблКонец.Параметры.КолПарамВсего = ?(РабочееВремяОбщее > 0,Окр(ВремяПростояВсего*100/РабочееВремяОбщее,2,1),0);
			КонецЕсли; 
ТабДок.Вывести(ОблКонец);	
ТабДок.ФиксацияСверху = 2;	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
СформироватьНаСервере();
КонецПроцедуры
