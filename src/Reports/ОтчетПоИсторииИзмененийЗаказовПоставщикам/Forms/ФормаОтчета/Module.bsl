
&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();

Запрос = Новый Запрос;
Отбор = Новый Структура;

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблКонтрагент = Макет.ПолучитьОбласть("Контрагент");
ОблЗаказПоставщику = Макет.ПолучитьОбласть("ЗаказПоставщику");
ОблМПЗ = Макет.ПолучитьОбласть("МПЗ");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.ДатаНач = Формат(Период.ДатаНачала,"ДФ=dd.MM.yyyy");
ОблШапка.Параметры.ДатаКон = Формат(Период.ДатаОкончания,"ДФ=dd.MM.yyyy");
ТабДок.Вывести(ОблШапка);

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПоставщику.Ссылка КАК Ссылка,
	|	ЗаказПоставщику.Контрагент КАК Контрагент
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|ГДЕ
	|	ЗаказПоставщику.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ЗаказПоставщику.Проведен = ИСТИНА";
	Если СписокКонтрагентов.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ЗаказПоставщику.Контрагент В ИЕРАРХИИ(&СписокКонтрагентов)";
	Запрос.УстановитьПараметр("СписокКонтрагентов", СписокКонтрагентов);
	КонецЕсли; 
Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ЗаказПоставщику.Контрагент.Наименование,Ссылка";
Запрос.Текст = Запрос.Текст + " ИТОГИ ПО Контрагент,Ссылка";
Запрос.УстановитьПараметр("ДатаНач", Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон", Период.ДатаОкончания);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаКонтрагенты = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаКонтрагенты.Следующий() Цикл
	ВыведенКонтрагент = Ложь;
	ВыборкаЗаказы = ВыборкаКонтрагенты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаЗаказы.Следующий() Цикл
		ВыведенЗаказ = Ложь;
		ВыборкаДетальныеЗаписи = ВыборкаЗаказы.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ТаблицаДокументов.Очистить();
			Отбор.Очистить();
			Отбор.Вставить("Данные", ВыборкаДетальныеЗаписи.Ссылка);
			CписокПолей = Новый Массив;
			CписокПолей.Добавить("ТабличнаяЧасть.ДатаПоставки");
			Отбор.Вставить("ИзменениеЗначенийПолей", CписокПолей);	        
			Версии = ИсторияДанных.ВыбратьВерсии(Отбор,,"НомерВерсии");
				Если Версии.Количество() > 0 Тогда  
					Для каждого ТЧ Из Версии Цикл
					Данные = ИсторияДанных.ПолучитьДанныеВерсии(ТЧ.Данные,ТЧ.НомерВерсии);
						Для Каждого Элемент из Данные Цикл 
							Если Элемент.Ключ = "ТабличнаяЧасть" Тогда
								Для Каждого Колонка из Элемент.Значение Цикл
								МПЗ = Колонка.МПЗ.Ссылка;
									Если МПЗОгр <> Неопределено Тогда
										Если МПЗОгр.ЭтоГруппа Тогда
											Если Не МПЗ.ПринадлежитЭлементу(МПЗОгр) Тогда
											Продолжить;
											КонецЕсли;									
										Иначе	
											Если МПЗ <> МПЗОгр Тогда
											Продолжить;
											КонецЕсли;									
										КонецЕсли; 
									КонецЕсли; 
								Выборка = ТаблицаДокументов.НайтиСтроки(Новый Структура("МПЗ",МПЗ));
									Если Выборка.Количество() = 0 Тогда
									ТЧ_Т = ТаблицаДокументов.Добавить();
									ТЧ_Т.МПЗ = МПЗ;
									ТЧ_Т.Количество = Колонка.Количество;
									ТЧ_Т.ЕдиницаИзмерения = Колонка.ЕдиницаИзмерения.Ссылка;
										Если ТЧ.НомерВерсии = 1 Тогда
										ТЧ_Т.ДатаПоставкиСтарая = Колонка.ДатаПоставки;
										Иначе
										ТЧ_Т.ДатаПоставкиТекущая = Колонка.ДатаПоставки;
										КонецЕсли;
									Иначе
										Если ТЧ.НомерВерсии = 1 Тогда
										Выборка[0].ДатаПоставкиСтарая = Колонка.ДатаПоставки;
										Иначе
										Выборка[0].ДатаПоставкиТекущая = Колонка.ДатаПоставки;
										КонецЕсли;
									КонецЕсли;					
							    КонецЦикла;
							КонецЕсли; 
						КонецЦикла;
					КонецЦикла;
				Иначе
					Для каждого ТЧ Из ВыборкаЗаказы.Ссылка.ТабличнаяЧасть Цикл
						Если МПЗОгр <> Неопределено Тогда
							Если МПЗОгр.ЭтоГруппа Тогда
								Если Не ТЧ.МПЗ.ПринадлежитЭлементу(МПЗОгр) Тогда
								Продолжить;
								КонецЕсли;									
							Иначе	
								Если ТЧ.МПЗ <> МПЗОгр Тогда
								Продолжить;
								КонецЕсли;									
							КонецЕсли; 
						КонецЕсли;
					ТЧ_Т = ТаблицаДокументов.Добавить();
					ТЧ_Т.МПЗ = ТЧ.МПЗ;
					ТЧ_Т.Количество = ТЧ.Количество;
					ТЧ_Т.ЕдиницаИзмерения = ТЧ.ЕдиницаИзмерения;
					ТЧ_Т.ДатаПоставкиСтарая = ТЧ.ДатаПоставки;
					КонецЦикла; 
				КонецЕсли;
					Если ТаблицаДокументов.Количество() > 0 Тогда
						Если Не ВыведенКонтрагент Тогда
						ОблКонтрагент.Параметры.Контрагент = ВыборкаКонтрагенты.Контрагент;
						ВыведенКонтрагент = Ложь;
						ТабДок.Вывести(ОблКонтрагент);
						ТабДок.НачатьГруппуСтрок("Контрагенты");
						ВыведенКонтрагент = Истина;
						КонецЕсли; 
							Если Не ВыведенЗаказ Тогда
							ОблЗаказПоставщику.Параметры.ЗаказПоставщику = ВыборкаЗаказы.Ссылка;
							ТабДок.Вывести(ОблЗаказПоставщику);
							ТабДок.НачатьГруппуСтрок("Заказы");
							ВыведенЗаказ = Истина;
							КонецЕсли;
								Для каждого ТЧ Из ТаблицаДокументов Цикл
								ОблМПЗ.Параметры.МПЗ = ТЧ.МПЗ;
								ОблМПЗ.Параметры.Количество = ТЧ.Количество;
								ОблМПЗ.Параметры.ЕдиницаИзмерения = СокрЛП(ТЧ.ЕдиницаИзмерения.Наименование);
								ОблМПЗ.Параметры.ДатаПоставки = ТЧ.ДатаПоставкиСтарая;
									Если ТЧ.ДатаПоставкиТекущая <> ТЧ.ДатаПоставкиСтарая Тогда
									ОблМПЗ.Параметры.ДатаПоставкиТекущая = ТЧ.ДатаПоставкиТекущая;
									Иначе
									ОблМПЗ.Параметры.ДатаПоставкиТекущая = "";
									КонецЕсли;
								Запрос.Текст = 
									"ВЫБРАТЬ
									|	ЗаказыПоставщикамОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
									|	ЗаказыПоставщикамОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
									|	ЗаказыПоставщикамОстаткиИОбороты.МПЗ КАК МПЗ,
									|	ЗаказыПоставщикамОстаткиИОбороты.Регистратор КАК Регистратор
									|ИЗ
									|	РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(, , Регистратор, , ЗаказПоставщику = &ЗаказПоставщику) КАК ЗаказыПоставщикамОстаткиИОбороты
									|ГДЕ
									|	ЗаказыПоставщикамОстаткиИОбороты.МПЗ = &МПЗ
									|
									|УПОРЯДОЧИТЬ ПО
									|	ЗаказыПоставщикамОстаткиИОбороты.Регистратор.Дата
									|ИТОГИ ПО
									|	Регистратор";
								Запрос.УстановитьПараметр("ЗаказПоставщику", ВыборкаЗаказы.Ссылка);
								Запрос.УстановитьПараметр("МПЗ", ТЧ.МПЗ);
								РезультатЗапроса = Запрос.Выполнить();
								ДатаПоставкиПоследняя = "";
								КоличествоПолучено = 0;
								КоличествоКО = 0;
								ВыборкаПоступления = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									Пока ВыборкаПоступления.Следующий() Цикл
									ВыборкаДЗ = ВыборкаПоступления.Выбрать();
									ДатаПоставкиПоследняя = ВыборкаПоступления.Регистратор.Дата;
										Пока ВыборкаДЗ.Следующий() Цикл
										КоличествоПолучено = КоличествоПолучено + ВыборкаДЗ.КоличествоРасход;
										КоличествоКО = ВыборкаДЗ.КоличествоКонечныйОстаток;
										КонецЦикла;
									КонецЦикла;
								ОблМПЗ.Параметры.КоличествоПолучено = КоличествоПолучено;
								ОблМПЗ.Параметры.КоличествоКО = КоличествоКО;
								ОблМПЗ.Параметры.ДатаПоставкиПоследняя = ДатаПоставкиПоследняя;
								ОблМПЗ.Параметры.Основание = ВыборкаЗаказы.Ссылка.Дополнение;
								ТабДок.Вывести(ОблМПЗ);
								КонецЦикла; 
					КонецЕсли;  
			КонецЦикла;
				Если ВыведенЗаказ Тогда
				ТабДок.ЗакончитьГруппуСтрок();
				КонецЕсли;
		КонецЦикла;
			Если ВыведенКонтрагент Тогда
			ТабДок.ЗакончитьГруппуСтрок();
			КонецЕсли;
	КонецЦикла;
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 2;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
СформироватьНаСервере();
КонецПроцедуры
