
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Размерность = 1;
КонецПроцедуры

&НаСервере
Функция БылРемонт(ПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РемонтнаяКарта.Ссылка
	|ИЗ
	|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
	|ГДЕ
	|	РемонтнаяКарта.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", ПЗ);
РезультатЗапроса = Запрос.Выполнить();
Возврат(Не РезультатЗапроса.Пустой());
КонецФункции 

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();

ТаблицаМПЗ = Новый ТаблицаЗначений;

ТаблицаМПЗ.Колонки.Добавить("ПЗ",Новый ОписаниеТипов("ДокументСсылка.ПроизводственноеЗадание"));
ТаблицаМПЗ.Колонки.Добавить("Изделие",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
ТаблицаМПЗ.Колонки.Добавить("ДатаОт",Новый ОписаниеТипов("Дата"));
ТаблицаМПЗ.Колонки.Добавить("ДатаДо",Новый ОписаниеТипов("Дата"));
ТаблицаМПЗ.Колонки.Добавить("ВремяПростоя",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(9,2)));
ТаблицаМПЗ.Колонки.Добавить("ВремяИзготовления",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(9,2)));
ТаблицаМПЗ.Колонки.Добавить("ПричиныЗадержки",Новый ОписаниеТипов("Строка"));
ТаблицаМПЗ.Колонки.Добавить("МПЗВЛО",Новый ОписаниеТипов("Строка"));

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблЛинейка = Макет.ПолучитьОбласть("Линейка");
ОблИтогоЛинейка = Макет.ПолучитьОбласть("ИтогоЛинейка");
ОблНоменклатура = Макет.ПолучитьОбласть("Номенклатура");
ОблИтогоНоменклатура = Макет.ПолучитьОбласть("ИтогоНоменклатура");
ОблПЗ = Макет.ПолучитьОбласть("ПЗ");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.ДатаНач = Формат(Отчет.Период.ДатаНачала,"ДФ=dd.MM.yyyy");
ОблШапка.Параметры.ДатаКон = Формат(Отчет.Период.ДатаОкончания,"ДФ=dd.MM.yyyy");
ТабДок.Вывести(ОблШапка);

ЗапросПЗ = Новый Запрос;
Запрос = Новый Запрос;

ЗапросПЗ.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Изделие КАК Изделие,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ КАК ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Линейка КАК Линейка,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Изделие.Родитель.Наименование КАК Наименование
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних(, ) КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания МЕЖДУ &ДатаНач И &ДатаКон";	
	Если СписокНоменклатуры.Количество() > 0 Тогда
	ЗапросПЗ.Текст = ЗапросПЗ.Текст + " И ЭтапыПроизводственныхЗаданийСрезПоследних.Изделие В ИЕРАРХИИ(&СписокНоменклатуры)";
	ЗапросПЗ.УстановитьПараметр("СписокНоменклатуры",СписокНоменклатуры);
	КонецЕсли;
		Если ТолькоСлужебные Тогда
		ЗапросПЗ.Текст = ЗапросПЗ.Текст + " И ЭтапыПроизводственныхЗаданийСрезПоследних.Изделие.Канбан.Служебный = ИСТИНА";
		КонецЕсли; 
			Если ГруппироватьПо = 1 Тогда
			ЗапросПЗ.Текст = ЗапросПЗ.Текст + " УПОРЯДОЧИТЬ ПО Линейка 
												|ИТОГИ ПО Линейка";
			Иначе
			ЗапросПЗ.Текст = ЗапросПЗ.Текст + " УПОРЯДОЧИТЬ ПО Наименование 
												|ИТОГИ ПО Наименование";
			КонецЕсли; 
ЗапросПЗ.УстановитьПараметр("ДатаНач",НачалоДня(Отчет.Период.ДатаНачала));
ЗапросПЗ.УстановитьПараметр("ДатаКон",КонецДня(Отчет.Период.ДатаОкончания));
ЗапросПЗ.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
Результат = ЗапросПЗ.Выполнить();
ВыборкаГруппировки = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаГруппировки.Следующий() Цикл
	ТаблицаМПЗ.Очистить();
		Если ГруппироватьПо = 1 Тогда
		ОблЛинейка.Параметры.Линейка = ВыборкаГруппировки.Линейка;
		ОблЛинейка.Параметры.Комментарий = СокрЛП(ВыборкаГруппировки.Линейка.Комментарий);
		ТабДок.Вывести(ОблЛинейка);
		Иначе
		ОблНоменклатура.Параметры.Наименование = ВыборкаГруппировки.Наименование;
		ТабДок.Вывести(ОблНоменклатура);
		КонецЕсли; 
	ТабДок.НачатьГруппуСтрок("По линейкам", Истина);
	ВыборкаПЗ = ВыборкаГруппировки.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока ВыборкаПЗ.Следующий() Цикл
		ПричиныЗадержки = "";
		МПЗВЛО = "";
		ЭПЗ = РегистрыСведений.ЭтапыПроизводственныхЗаданий.ПолучитьПервое(,Новый Структура("ПЗ",ВыборкаПЗ.ПЗ));
			Если ЗначениеЗаполнено(ВыборкаПЗ.ПЗ.ДокументОснование.ДатаОкончанияОстановки) Тогда
			ПричиныЗадержки = ПричиныЗадержки + "О; ";
			КонецЕсли; 
		флЛО = Ложь;   
		ЛО = РегистрыСведений.ЛьготнаяОчередь.Выбрать(,,Новый Структура("ПЗ",ВыборкаПЗ.ПЗ));
			Пока ЛО.Следующий() Цикл
			флЛО = Истина;
				Если ((ЛО.ДатаОкончания - ЛО.Период)/86400) > 1 Тогда
				МПЗВЛО = МПЗВЛО + СокрЛП(ЛО.НормаРасходов.Элемент.Наименование) + "; ";				
				КонецЕсли;	
			КонецЦикла;
				Если флЛО Тогда
				ПричиныЗадержки = ПричиныЗадержки + "ЛО; ";	
				КонецЕсли;
					Если БылРемонт(ВыборкаПЗ.ПЗ) Тогда				
					ПричиныЗадержки = ПричиныЗадержки + "Р; ";	
					КонецЕсли;
						Если ВыборкаПЗ.ПЗ.ДокументОснование.Остановки.Количество() > 0 Тогда				
						ПричиныЗадержки = ПричиныЗадержки + "О; ";	
						КонецЕсли; 
		ТЧ = ТаблицаМПЗ.Добавить();
		ТЧ.ПЗ = ВыборкаПЗ.ПЗ;
		ТЧ.Изделие = ВыборкаПЗ.Изделие;
		ТЧ.ДатаОт = ЭПЗ.ДатаНачала;
		ТЧ.ДатаДо = ВыборкаПЗ.ДатаОкончания;
		ТЧ.ВремяПростоя = ОбщийМодульВызовСервера.ПолучитьВремяМеждуДатами(ВыборкаПЗ.ПЗ.Дата,ЭПЗ.ДатаНачала,Размерность,Отчет.ВычестьНерабочееВремя,Отчет.КолНерабочихЧасов,Отчет.БезВыходных);
		ТЧ.ВремяИзготовления = ОбщийМодульВызовСервера.ПолучитьВремяМеждуДатами(ЭПЗ.ДатаНачала,ВыборкаПЗ.ДатаОкончания,Размерность,Отчет.ВычестьНерабочееВремя,Отчет.КолНерабочихЧасов,Отчет.БезВыходных);
		ТЧ.ПричиныЗадержки = ПричиныЗадержки; 
		ТЧ.МПЗВЛО = МПЗВЛО;		
		КонецЦикла;
			Если СортироватьПо = 1 Тогда
			ТаблицаМПЗ.Сортировать("Изделие,ВремяИзготовления");
			ИначеЕсли СортироватьПо = 2 Тогда
			ТаблицаМПЗ.Сортировать("ВремяИзготовления Убыв");
			ИначеЕсли СортироватьПо = 3 Тогда
			ТаблицаМПЗ.Сортировать("ВремяИзготовления");
			КонецЕсли; 
				Для каждого ТЧ Из ТаблицаМПЗ Цикл
				ОблПЗ.Параметры.Наименование = СокрЛП(ТЧ.Изделие.Наименование);
				ОблПЗ.Параметры.Изделие = ТЧ.Изделие;
				ОблПЗ.Параметры.НаименованиеТовара = СокрЛП(ТЧ.Изделие.Товар.Наименование);
				ОблПЗ.Параметры.Товар = ТЧ.Изделие.Товар;
				ОблПЗ.Параметры.НомерПЗ = ТЧ.ПЗ.Номер;
				ОблПЗ.Параметры.ПЗ = ТЧ.ПЗ;
				ОблПЗ.Параметры.Количество = ТЧ.ПЗ.Количество;
				ОблПЗ.Параметры.ДатаОт = ТЧ.ДатаОт;
				ОблПЗ.Параметры.ДатаДо = ТЧ.ДатаДо;
				ОблПЗ.Параметры.ВремяИзготовления = Формат(ТЧ.ВремяИзготовления,"ЧЦ=9; ЧДЦ=2");
				ОблПЗ.Параметры.ВремяПростоя = Формат(ТЧ.ВремяПростоя,"ЧЦ=9; ЧДЦ=2");	
				ОблПЗ.Параметры.ПричиныЗадержки = ТЧ.ПричиныЗадержки; 
				ОблПЗ.Параметры.МПЗВЛО = ТЧ.МПЗВЛО;
				ОблПЗ.Параметры.ВремяИтого = Формат(ТЧ.ВремяИзготовления+ТЧ.ВремяПростоя,"ЧЦ=9; ЧДЦ=2");
				ТабДок.Вывести(ОблПЗ);
				КонецЦикла;
	ТабДок.ЗакончитьГруппуСтрок();
		Если ГруппироватьПо = 1 Тогда
		ОблИтогоЛинейка.Параметры.СреднееВремяИзготовления = ?(ТаблицаМПЗ.Количество() > 0,Формат(ТаблицаМПЗ.Итог("ВремяИзготовления")/ТаблицаМПЗ.Количество(),"ЧЦ=9; ЧДЦ=2"),0);
		ОблИтогоЛинейка.Параметры.СреднееВремяПростоя = ?(ТаблицаМПЗ.Количество() > 0,Формат(ТаблицаМПЗ.Итог("ВремяПростоя")/ТаблицаМПЗ.Количество(),"ЧЦ=9; ЧДЦ=2"),0);
		ТабДок.Вывести(ОблИтогоЛинейка);
		Иначе
		ОблИтогоНоменклатура.Параметры.СреднееВремяИзготовления = ?(ТаблицаМПЗ.Количество() > 0,Формат(ТаблицаМПЗ.Итог("ВремяИзготовления")/ТаблицаМПЗ.Количество(),"ЧЦ=9; ЧДЦ=2"),0);
		ОблИтогоНоменклатура.Параметры.СреднееВремяПростоя = ?(ТаблицаМПЗ.Количество() > 0,Формат(ТаблицаМПЗ.Итог("ВремяПростоя")/ТаблицаМПЗ.Количество(),"ЧЦ=9; ЧДЦ=2"),0);
		ТабДок.Вывести(ОблИтогоНоменклатура);		
		КонецЕсли;  
	КонецЦикла;
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 2;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
СформироватьНаСервере();
КонецПроцедуры


