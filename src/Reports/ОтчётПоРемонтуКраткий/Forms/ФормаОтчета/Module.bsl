
&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();
ТаблицаРемонта = Новый ТаблицаЗначений;

ТаблицаРемонта.Колонки.Добавить("Изделие",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
ТаблицаРемонта.Колонки.Добавить("Наименование",Новый ОписаниеТипов("Строка",Новый КвалификаторыСтроки(100)));
ТаблицаРемонта.Колонки.Добавить("РМ",Новый ОписаниеТипов("СправочникСсылка.РабочиеМестаЛинеек"));
ТаблицаРемонта.Колонки.Добавить("Отправлено",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(7,3)));
ТаблицаРемонта.Колонки.Добавить("Отремонтировано",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(7,3)));
ТаблицаРемонта.Колонки.Добавить("ВРемонтеНач",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(7,3)));

ЕдиницаИзмерения = Справочники.ЕдиницыИзмерений.НайтиПоНаименованию("шт",Истина);

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");	

ОблШапка.Параметры.Линейки = СписокЛинеек;
ОблШапка.Параметры.ДатаНач = Отчет.Период.ДатаНачала;
ОблШапка.Параметры.ДатаКон = Отчет.Период.ДатаОкончания;
ОблШапка.Параметры.ДатаВывода = ТекущаяДата();
ТабДок.Вывести(ОблШапка);

ОблИзделие = Макет.ПолучитьОбласть("Изделие");	
ОблЛинейка = Макет.ПолучитьОбласть("Линейка");
ОблИтогоРМ = Макет.ПолучитьОбласть("ИтогоРМ");

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РемонтнаяКарта.Ссылка,
	|	РемонтнаяКарта.ДатаНачала,
	|	РемонтнаяКарта.ДатаОкончания,
	|	РемонтнаяКарта.ДокументОснование,
	|	РемонтнаяКарта.РабочееМесто,
	|	РемонтнаяКарта.Изделие,
	|	РемонтнаяКарта.Количество
	|ИЗ
	|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
	|ГДЕ
	|	РемонтнаяКарта.ПометкаУдаления = ЛОЖЬ
	|	И РемонтнаяКарта.ДатаНачала <= &ДатаКон
	|	И РемонтнаяКарта.ВидРемонта <> &ВидРемонта";
	Если СписокЛинеек.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И РемонтнаяКарта.Линейка В(&СписокЛинеек)";	
	Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
	КонецЕсли;
		Если СписокПодразделений.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И РемонтнаяКарта.Линейка.Подразделение В(&СписокПодразделений)";	
		Запрос.УстановитьПараметр("СписокПодразделений",СписокПодразделений);
		КонецЕсли; 
Запрос.УстановитьПараметр("ВидРемонта",Перечисления.ВидыРемонта.Дилерский);
Запрос.УстановитьПараметр("ДатаКон",КонецДня(Отчет.Период.ДатаОкончания));
Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	Отправлено = 0;
	Отремонтировано = 0;
	ВРемонтеНач = 0; 
		Если Выборка.ДатаНачала >= НачалоДня(Отчет.Период.ДатаНачала) Тогда
		Отправлено = ?(Выборка.Изделие.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,Выборка.Количество);			
		Иначе
		ВРемонтеНач = ?(Выборка.Изделие.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,Выборка.Количество);
		КонецЕсли;
			Если ЗначениеЗаполнено(Выборка.ДатаОкончания) Тогда
				Если Выборка.ДатаОкончания < НачалоДня(Отчет.Период.ДатаНачала) Тогда				
				Продолжить;
				КонецЕсли; 
					Если (Выборка.ДатаОкончания >=НачалоДня(Отчет.Период.ДатаНачала))и(Выборка.ДатаОкончания <= КонецДня(Отчет.Период.ДатаОкончания)) Тогда
					Отремонтировано = ?(Выборка.Изделие.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,Выборка.Количество);
					КонецЕсли;			
			КонецЕсли; 
	ТЧ = ТаблицаРемонта.Добавить();
	ТЧ.Изделие = Выборка.Изделие;
	ТЧ.Наименование = глНаименованиеВСкобкахБезЭтапа(Выборка.Изделие.Наименование);
	ТЧ.РМ = Выборка.РабочееМесто;
	ТЧ.Отправлено = Отправлено;
	ТЧ.Отремонтировано = Отремонтировано;
	ТЧ.ВРемонтеНач = ВРемонтеНач; 
	КонецЦикла;
ТаблицаРемонта.Свернуть("РМ,Изделие,Наименование","Отправлено,Отремонтировано,ВРемонтеНач");
ТаблицаРемонта.Сортировать("РМ,Наименование");

СписокИзделий = Новый СписокЗначений;
СписокРМ = Новый СписокЗначений;
СписокРМ = ТаблицаРемонта.ВыгрузитьКолонку("РМ");

ЗапросПоступило = Новый Запрос;

ЗапросПоступило.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданий.Изделие,
	|	ЭтапыПроизводственныхЗаданий.РабочееМесто,
	|	ЭтапыПроизводственныхЗаданий.Количество
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданий.РабочееМесто В(&СписокРМ)
	|	И ЭтапыПроизводственныхЗаданий.ДатаНачала МЕЖДУ &ДатаНач И &ДатаКон";	
ЗапросПоступило.УстановитьПараметр("СписокРМ",СписокРМ);
ЗапросПоступило.УстановитьПараметр("ДатаНач",НачалоДня(Отчет.Период.ДатаНачала));
ЗапросПоступило.УстановитьПараметр("ДатаКон",КонецДня(Отчет.Период.ДатаОкончания));
РезультатПЗ = ЗапросПоступило.Выполнить();
ВыборкаПоступило = РезультатПЗ.Выбрать();

ЗапросПередано = Новый Запрос;

ЗапросПередано.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданий.Изделие,
	|	ЭтапыПроизводственныхЗаданий.РабочееМесто,
	|	ЭтапыПроизводственныхЗаданий.Количество
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданий.РабочееМесто В(&СписокРМ)
	|	И ЭтапыПроизводственныхЗаданий.ДатаОкончания МЕЖДУ &ДатаНач И &ДатаКон";	
ЗапросПередано.УстановитьПараметр("СписокРМ",СписокРМ);
ЗапросПередано.УстановитьПараметр("ДатаНач",НачалоДня(Отчет.Период.ДатаНачала));
ЗапросПередано.УстановитьПараметр("ДатаКон",КонецДня(Отчет.Период.ДатаОкончания));
РезультатПЗ = ЗапросПередано.Выполнить();
ВыборкаПередано = РезультатПЗ.Выбрать();

ЗапросВыпуск = Новый Запрос;

ЗапросВыпуск.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииПоступление.Номенклатура,
	|	ВыпускПродукцииПоступление.Количество
	|ИЗ
	|	Документ.ВыпускПродукции.Поступление КАК ВыпускПродукцииПоступление
	|ГДЕ
	|	ВыпускПродукцииПоступление.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииПоступление.Ссылка.ДокументОснование.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	И ВыпускПродукцииПоступление.Ссылка.НаСклад = ИСТИНА";	
ЗапросВыпуск.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
ЗапросВыпуск.УстановитьПараметр("ДатаНач",Отчет.Период.ДатаНачала);
ЗапросВыпуск.УстановитьПараметр("ДатаКон",Отчет.Период.ДатаОкончания);
РезультатВыпуск = ЗапросВыпуск.Выполнить();
ВыборкаВыпуск = РезультатВыпуск.Выбрать();
ВыпущеноВсего = 0;
	Пока ВыборкаВыпуск.Следующий() Цикл
	ВыпущеноВсего = ВыпущеноВсего + ?(ВыборкаВыпуск.Номенклатура.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаВыпуск.Количество); 			
	КонецЦикла;
ЗапросВыпуск.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииКанбан.Изделие,
	|	ВыпускПродукцииКанбан.Количество
	|ИЗ
	|	Документ.ВыпускПродукцииКанбан КАК ВыпускПродукцииКанбан
	|ГДЕ
	|	ВыпускПродукцииКанбан.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииКанбан.ДокументОснование.Линейка В ИЕРАРХИИ(&СписокЛинеек)";	
ЗапросВыпуск.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
ЗапросВыпуск.УстановитьПараметр("ДатаНач",Отчет.Период.ДатаНачала);
ЗапросВыпуск.УстановитьПараметр("ДатаКон",Отчет.Период.ДатаОкончания);
РезультатВыпуск = ЗапросВыпуск.Выполнить();
ВыборкаВыпуск = РезультатВыпуск.Выбрать();
	Пока ВыборкаВыпуск.Следующий() Цикл
	ВыпущеноВсего = ВыпущеноВсего + ?(ВыборкаВыпуск.Изделие.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаВыпуск.Количество); 			
	КонецЦикла;
ОтправленоИтого = 0;
ОтремонтированоИтого = 0; 
ОтправленоВсего = 0;
ОтремонтированоВсего = 0;
ВРемонтеНачИтого = 0;
ВРемонтеКонИтого = 0; 
ВРемонтеНачВсего = 0;
ВРемонтеКонВсего = 0;
КолПоступилоИтого  = 0; 
КолПоступилоВсего  = 0; 
ПереданоИтого  = 0; 
ТекРМ = Неопределено;
	Для каждого ТЧ Из ТаблицаРемонта Цикл
		Если ТЧ.РМ <> ТекРМ Тогда
			Если ТекРМ <> Неопределено Тогда
			ПоступилоИтогоВсех = 0;
			ВыборкаПоступило.Сбросить();
				Пока ВыборкаПоступило.НайтиСледующий(Новый Структура("РабочееМесто",ТекРМ)) Цикл
				ПоступилоИтогоВсех = ПоступилоИтогоВсех + ?(ВыборкаПоступило.Изделие.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаПоступило.Количество);
				КонецЦикла;
			ПоступилоБезРемонта	 = ПоступилоИтогоВсех-(КолПоступилоИтого-ОтремонтированоИтого); 
			ПроцентБракаОтПоступившихИтого = ?(ПоступилоИтогоВсех+ОтремонтированоИтого > 0,Окр(ОтправленоИтого*100/(ПоступилоИтогоВсех+ОтремонтированоИтого),2,1),0); 
			ПереданоИтогоВсех = 0;
			ВыборкаПередано.Сбросить();
				Пока ВыборкаПередано.НайтиСледующий(Новый Структура("РабочееМесто",ТекРМ)) Цикл
				ПереданоИтогоВсех = ПереданоИтогоВсех + ?(ВыборкаПередано.Изделие.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаПередано.Количество);
				КонецЦикла;
			ПереданоБезРемонта = ПереданоИтогоВсех - ПереданоИтого;
			ПереданоИтого = ПереданоИтого + ПереданоБезРемонта;
			ПроцентБракаОтПереданныхИтого = ?(ПереданоИтогоВсех > 0,Окр(ОтправленоИтого*100/ПереданоИтогоВсех,2,1),0);
			ОблИтогоРМ.Параметры.ПоступилоБезРемонта = ПоступилоБезРемонта;
			ОблИтогоРМ.Параметры.КолПоступилоИтого = ПоступилоИтогоВсех+ОтремонтированоИтого;
			ОблИтогоРМ.Параметры.ВРемонтеНачИтого = ВРемонтеНачИтого;
			ОблИтогоРМ.Параметры.ОтправленоИтого = ОтправленоИтого;
			ОблИтогоРМ.Параметры.ОтремонтированоИтого = ОтремонтированоИтого;
			ОблИтогоРМ.Параметры.ВРемонтеКонИтого = ВРемонтеКонИтого;
			ОблИтогоРМ.Параметры.ПроцентБракаОтПоступившихИтого = ПроцентБракаОтПоступившихИтого;
			ОблИтогоРМ.Параметры.ПереданоБезРемонта = ПереданоБезРемонта;
			ОблИтогоРМ.Параметры.ПереданоИтого = ПереданоИтогоВсех;
			ОблИтогоРМ.Параметры.ПроцентБракаОтПереданныхИтого = ПроцентБракаОтПереданныхИтого;
			ТабДок.Вывести(ОблИтогоРМ);					
			КонецЕсли;
		ТекРМ = ТЧ.РМ;
		ОтправленоИтого = 0;
		ОтремонтированоИтого = 0; 			
		ВРемонтеНачИтого = 0;
		ВРемонтеКонИтого = 0;
		КолПоступилоИтого = 0; 
		ПереданоИтого = 0;
		КонецЕсли; 
	ВРемонтеКон = ТЧ.ВРемонтеНач + ТЧ.Отправлено - ТЧ.Отремонтировано;
	КолПоступило = 0;
	ВыборкаПоступило.Сбросить();
		Пока ВыборкаПоступило.НайтиСледующий(Новый Структура("Изделие,РабочееМесто",ТЧ.Изделие,ТЧ.РМ)) Цикл
		КолПоступило = КолПоступило + ?(ВыборкаПоступило.Изделие.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаПоступило.Количество);
		КонецЦикла;
	КолПоступило = КолПоступило + ТЧ.Отремонтировано;
	ПроцентБракаОтПоступивших = ?(КолПоступило > 0,Окр(ТЧ.Отправлено*100/КолПоступило,2,1),0);
	Передано = 0;
	ВыборкаПередано.Сбросить();
		Пока ВыборкаПередано.НайтиСледующий(Новый Структура("Изделие,РабочееМесто",ТЧ.Изделие,ТЧ.РМ)) Цикл
		Передано = Передано + ?(ВыборкаПередано.Изделие.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаПередано.Количество);
		КонецЦикла;
	ПроцентБракаОтПереданных = ?(Передано > 0,Окр(ТЧ.Отправлено*100/Передано,2,1),0);
	ОблИзделие.Параметры.Наимен = ТЧ.Наименование;	
	ОблИзделие.Параметры.Изделие = ТЧ.Изделие;
	ОблИзделие.Параметры.РМ = ТЧ.РМ;
	ОблИзделие.Параметры.ВРемонтеНач = ТЧ.ВРемонтеНач;
	ОблИзделие.Параметры.Отправлено = ТЧ.Отправлено;
	ОблИзделие.Параметры.Отремонтировано = ТЧ.Отремонтировано;
	ОблИзделие.Параметры.ВРемонтеКон = ВРемонтеКон;		
	ОблИзделие.Параметры.КолПоступило = КолПоступило;
	ОблИзделие.Параметры.ПроцентБракаОтПоступивших = ПроцентБракаОтПоступивших;
	ОблИзделие.Параметры.Передано = Передано;
	ОблИзделие.Параметры.ПроцентБракаОтПереданных = ПроцентБракаОтПереданных;
	ТабДок.Вывести(ОблИзделие);	
	ОтправленоИтого = ОтправленоИтого + ТЧ.Отправлено;
	ОтправленоВсего = ОтправленоВсего + ТЧ.Отправлено;
	ОтремонтированоИтого = ОтремонтированоИтого + ТЧ.Отремонтировано; 
	ОтремонтированоВсего = ОтремонтированоВсего + ТЧ.Отремонтировано;	
	ВРемонтеНачИтого = ВРемонтеНачИтого + ТЧ.ВРемонтеНач;
	ВРемонтеКонИтого = ВРемонтеКонИтого + ВРемонтеКон; 
	ВРемонтеНачВсего = ВРемонтеНачВсего + ТЧ.ВРемонтеНач;
	ВРемонтеКонВсего = ВРемонтеКонВсего + ВРемонтеКон;
	КолПоступилоИтого  = КолПоступилоИтого + КолПоступило; 
	КолПоступилоВсего  = КолПоступилоВсего + КолПоступило; 
	ПереданоИтого  = ПереданоИтого + Передано;
	КонецЦикла; 
ПоступилоИтогоВсех = 0;
ВыборкаПоступило.Сбросить();
	Пока ВыборкаПоступило.НайтиСледующий(Новый Структура("РабочееМесто",ТекРМ)) Цикл
	ПоступилоИтогоВсех = ПоступилоИтогоВсех + ?(ВыборкаПоступило.Изделие.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаПоступило.Количество); 
	КонецЦикла;
ПоступилоБезРемонта	 = ПоступилоИтогоВсех-(КолПоступилоИтого-ОтремонтированоИтого);
ПроцентБракаОтПоступившихИтого = ?(ПоступилоИтогоВсех+ОтремонтированоИтого > 0,Окр(ОтправленоИтого*100/(ПоступилоИтогоВсех+ОтремонтированоИтого),2,1),0); 
ПереданоИтогоВсех = 0;
ВыборкаПередано.Сбросить();
	Пока ВыборкаПередано.НайтиСледующий(Новый Структура("РабочееМесто",ТекРМ)) Цикл
	ПереданоИтогоВсех = ПереданоИтогоВсех + ?(ВыборкаПередано.Изделие.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаПередано.Количество);
	КонецЦикла;
ПереданоБезРемонта = ПереданоИтогоВсех - ПереданоИтого;
ПроцентБракаОтПереданныхИтого = ?(ПереданоИтогоВсех > 0,Окр(ОтправленоИтого*100/ПереданоИтогоВсех,2,1),0);
ОблИтогоРМ.Параметры.ПоступилоБезРемонта = ПоступилоБезРемонта; 
ОблИтогоРМ.Параметры.КолПоступилоИтого = ПоступилоИтогоВсех+ОтремонтированоИтого;
ОблИтогоРМ.Параметры.ВРемонтеНачИтого = ВРемонтеНачИтого;
ОблИтогоРМ.Параметры.ОтправленоИтого = ОтправленоИтого;
ОблИтогоРМ.Параметры.ОтремонтированоИтого = ОтремонтированоИтого;
ОблИтогоРМ.Параметры.ВРемонтеКонИтого = ВРемонтеКонИтого;
ОблИтогоРМ.Параметры.ПроцентБракаОтПоступившихИтого = ПроцентБракаОтПоступившихИтого;
ОблИтогоРМ.Параметры.ПереданоБезРемонта = ПереданоБезРемонта;
ОблИтогоРМ.Параметры.ПереданоИтого = ПереданоИтогоВсех;
ОблИтогоРМ.Параметры.ПроцентБракаОтПереданныхИтого = ПроцентБракаОтПереданныхИтого;
ТабДок.Вывести(ОблИтогоРМ);
ПроцентБракаВсего = ?(ВыпущеноВсего > 0,Окр(ОтправленоВсего*100/ВыпущеноВсего,2,1),0);
ОблЛинейка.Параметры.ВыпущеноВсего = ВыпущеноВсего;
ОблЛинейка.Параметры.ОтправленоВсего = ОтправленоВсего;	
ОблЛинейка.Параметры.ПроцентБракаВсего = ПроцентБракаВсего;
ТабДок.Вывести(ОблЛинейка);
ТабДок.ФиксацияСверху = 3;
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет()
СформироватьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
СформироватьНаСервере();
КонецПроцедуры
