
&НаСервере
Процедура ИсключитьПериод(ВыходнойДень,ТаблицаИзделий)	
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииПоступление.Номенклатура КАК Изделие,
	|	ВыпускПродукцииПоступление.Количество КАК Количество,
	|	ВыпускПродукцииПоступление.Номенклатура.Наименование КАК НоменклатураНаименование,
	|	ВыпускПродукцииПоступление.Ссылка.Дата КАК Дата
	|ИЗ
	|	Документ.ВыпускПродукции.Поступление КАК ВыпускПродукцииПоступление
	|ГДЕ
	|	ВыпускПродукцииПоступление.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииПоступление.Ссылка.НаСклад = ИСТИНА
	|	И ВыпускПродукцииПоступление.Ссылка.ДокументОснование.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	УПОРЯДОЧИТЬ ПО НоменклатураНаименование 
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Изделие"; 
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ВыходнойДень));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(ВыходнойДень));
Запрос.УстановитьПараметр("СписокЛинеек", СписокЛинеек); 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаИзделия = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИзделия.Следующий() Цикл
	Выборка = ТаблицаИзделий.Найти(ВыборкаИзделия.Изделие,"Изделие");
	Выборка.Количество = Выборка.Количество - ВыборкаИзделия.Количество;
	КонецЦикла;
КонецПроцедуры 

&НаСервере
Процедура СформироватьНаСервере()
СписокТО = Новый СписокЗначений;
ТаблицаИзделий = Новый ТаблицаЗначений;
ТаблицаТО = Новый ТаблицаЗначений;

ТаблицаИзделий.Колонки.Добавить("Изделие",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
ТаблицаИзделий.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)));

ТаблицаТО.Колонки.Добавить("ТО",Новый ОписаниеТипов("СправочникСсылка.ТехОперации"));
ТаблицаТО.Колонки.Добавить("СуммаТО",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,2)));

	Если СписокЛинеек[0].Значение.ЭтоГруппа Тогда
	Выборка = Справочники.Линейки.Выбрать(СписокЛинеек[0].Значение);
		Если Выборка.Следующий() Тогда
		ГруппаТехОпераций = Справочники.ТехОперации.НайтиПоРеквизиту("Подразделение",Выборка.Подразделение);
		КонецЕсли;	
	Иначе	
	ГруппаТехОпераций = Справочники.ТехОперации.НайтиПоРеквизиту("Подразделение",СписокЛинеек[0].Значение.Подразделение);	
	КонецЕсли; 
ВыборкаТО = Справочники.ТехОперации.ВыбратьИерархически(ГруппаТехОпераций);
	Пока ВыборкаТО.Следующий() Цикл
		Если ВыборкаТО.ЭтоГруппа Тогда
		Продолжить;	
		КонецЕсли;
	СписокТО.Добавить(ВыборкаТО.Ссылка,ВыборкаТО.Ссылка.Код);
	ТЧ = ТаблицаТО.Добавить();
	ТЧ.ТО = ВыборкаТО.Ссылка;
	КонецЦикла;
СписокТО.СортироватьПоПредставлению();
ТабДок.Очистить();

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
	Если ЗначениеЗаполнено(ЭтаФорма.Параметры.Документ) Тогда
	Макет = ОбъектЗн.ПолучитьМакет("МакетДляДокумента");
	Иначе
	Макет = ОбъектЗн.ПолучитьМакет("Макет");
	КонецЕсли;

ОблШапкаОбщая = Макет.ПолучитьОбласть("Шапка|Общая");
ОблШапкаТехОперация = Макет.ПолучитьОбласть("Шапка|ТехОперация");
ОблШапкаИтого = Макет.ПолучитьОбласть("Шапка|Итого");
ОблИзделиеОбщая = Макет.ПолучитьОбласть("Изделие|Общая");
ОблИзделиеТехОперация = Макет.ПолучитьОбласть("Изделие|ТехОперация");
ОблИзделиеИтого = Макет.ПолучитьОбласть("Изделие|Итого");
ОблКонецОбщая = Макет.ПолучитьОбласть("Конец|Общая");
ОблКонецТехОперация = Макет.ПолучитьОбласть("Конец|ТехОперация");
ОблКонецИтого = Макет.ПолучитьОбласть("Конец|Итого");

ОблШапкаОбщая.Параметры.ДатаНач = Формат(Отчет.Период.ДатаНачала,"ДФ=dd.MM.yyyy");
ОблШапкаОбщая.Параметры.ДатаКон = Формат(Отчет.Период.ДатаОкончания,"ДФ=dd.MM.yyyy");
ОблШапкаОбщая.Параметры.ВидОтчёта = ?(БезУчётаВыходныхДней,"Без учёта выходных дней: "+СписокВыходныхДней,"");
	Если ЗначениеЗаполнено(ЭтаФорма.Параметры.Документ) Тогда
	ОблШапкаОбщая.Параметры.ВидДокумента = ТипЗнч(ЭтаФорма.Параметры.Документ);
	ОблШапкаОбщая.Параметры.Подразделение = ЭтаФорма.Параметры.Документ.Подразделение;
	ОблШапкаОбщая.Параметры.Комментарий = ЭтаФорма.Параметры.Документ.Комментарий;
	КонецЕсли;
ТабДок.Вывести(ОблШапкаОбщая);
	Для каждого ТО Из СписокТО Цикл	
	ОблШапкаТехОперация.Параметры.ТО = ТО.Значение;
	ТабДок.Присоединить(ОблШапкаТехОперация);				
	КонецЦикла;
ТабДок.Присоединить(ОблШапкаИтого);

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииПоступление.Номенклатура КАК Изделие,
	|	ВыпускПродукцииПоступление.Количество КАК Количество,
	|	ВыпускПродукцииПоступление.Номенклатура.Наименование КАК НоменклатураНаименование
	|ИЗ
	|	Документ.ВыпускПродукции.Поступление КАК ВыпускПродукцииПоступление
	|ГДЕ
	|	ВыпускПродукцииПоступление.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииПоступление.Ссылка.НаСклад = ИСТИНА
	|	И ВыпускПродукцииПоступление.Ссылка.ДокументОснование.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НоменклатураНаименование
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Номенклатура"; 
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Отчет.Период.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Отчет.Период.ДатаОкончания));
Запрос.УстановитьПараметр("СписокЛинеек", СписокЛинеек);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаИзделия = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИзделия.Следующий() Цикл
	ТЧ = ТаблицаИзделий.Добавить();
	ТЧ.Изделие = ВыборкаИзделия.Изделие;
	ТЧ.Количество = ВыборкаИзделия.Количество;
	КонецЦикла;
		Если БезУчётаВыходныхДней Тогда
			Для каждого Стр Из СписокВыходныхДней Цикл
			ИсключитьПериод(Стр.Значение,ТаблицаИзделий);
			КонецЦикла;
		КонецЕсли; 
КоличествоВсего = 0;
СуммаИтогоВсего = 0;
	Для каждого ТЧ Из ТаблицаИзделий Цикл
	НВИтого = 0;
	РасценкаИтого = 0;
	СуммаИтого = 0;
	ОблИзделиеОбщая.Параметры.Наименование = СокрЛП(ТЧ.Изделие.Наименование);
	ОблИзделиеОбщая.Параметры.Изделие = ТЧ.Изделие;
	ОблИзделиеОбщая.Параметры.Количество = ТЧ.Количество;
	ТабДок.Вывести(ОблИзделиеОбщая);
	КоличествоВсего = КоличествоВсего + ТЧ.Количество;
		Для каждого ТО Из СписокТО Цикл
		НормыВремени = РегистрыСведений.НормыВремени.ПолучитьПоследнее(Отчет.Период.ДатаНачала,Новый Структура("МПЗ,ТехОперация",ТЧ.Изделие,ТО.Значение));
		НормыТО = РегистрыСведений.НормыТО.ПолучитьПоследнее(Отчет.Период.ДатаНачала,Новый Структура("ТехОперация",ТО.Значение));
		Расценка = НормыВремени.НормаВремени/60*НормыТО.Стоимость;
		ОблИзделиеТехОперация.Параметры.НВ = НормыВремени.НормаВремени;
		ОблИзделиеТехОперация.Параметры.Расценка = Расценка;
		Сумма = Расценка*ТЧ.Количество;
		ОблИзделиеТехОперация.Параметры.Сумма = Сумма;
		ТабДок.Присоединить(ОблИзделиеТехОперация);
		НВИтого = НВИтого + НормыВремени.НормаВремени;
		РасценкаИтого = РасценкаИтого + Расценка;
		СуммаИтого = СуммаИтого + Сумма;
		Выборка = ТаблицаТО.НайтиСтроки(Новый Структура("ТО",ТО.Значение));
		Выборка[0].СуммаТО = Выборка[0].СуммаТО + Сумма;				
		КонецЦикла;
	ОблИзделиеИтого.Параметры.НВИтого = НВИтого;
	ОблИзделиеИтого.Параметры.РасценкаИтого = РасценкаИтого;
	ОблИзделиеИтого.Параметры.СуммаИтого = СуммаИтого;
	ТабДок.Присоединить(ОблИзделиеИтого);
	СуммаИтогоВсего = СуммаИтогоВсего + СуммаИтого;
	КонецЦикла;
ОблКонецОбщая.Параметры.КоличествоВсего = КоличествоВсего;
	Если ЗначениеЗаполнено(ЭтаФорма.Параметры.Документ) Тогда
	ОблКонецОбщая.Параметры.Мастер = ЭтаФорма.Параметры.Документ.Автор;
	ОблКонецОбщая.Параметры.ЗаместительНачальникаПоУправлениюРесурсами = ОбщийМодульВызовСервера.ПолучитьСотрудникаПоДолжности("Заместитель начальника по управлению ресурсами");
	ОблКонецОбщая.Параметры.НачальникПЭО = ОбщийМодульВызовСервера.ПолучитьСотрудникаПоДолжности("Начальник ПЭО");
	КонецЕсли;
ТабДок.Вывести(ОблКонецОбщая);
	Для каждого ТО Из СписокТО Цикл
	Выборка = ТаблицаТО.Найти(ТО.Значение,"ТО");
	ОблКонецТехОперация.Параметры.СуммаВсего = Выборка.СуммаТО;
	ТабДок.Присоединить(ОблКонецТехОперация);				
	КонецЦикла;
ОблКонецИтого.Параметры.СуммаИтогоВсего = СуммаИтогоВсего;
ТабДок.Присоединить(ОблКонецИтого);
ТабДок.ФиксацияСверху = 4;
ТабДок.ФиксацияСлева = 2;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		Если ОбщийМодульВызовСервера.РазрешенныйСписокЛинеек(СписокЛинеек) Тогда
		СформироватьНаСервере();		
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыДокумента(Документ)
Парам = Новый Структура("Линейка,ЭтоГруппа,Дата,ВедомостьВыходногоДня,БезУчётаВыходныхДней,Проектные",Документ.Линейка,Документ.Линейка.ЭтоГруппа,Документ.Дата,Документ.ВедомостьВыходногоДня,Документ.БезУчётаВыходныхДней,Документ.Проектные);
Возврат(Парам);
КонецФункции

&НаСервере
Функция ПолучитьСписокВыходныхДней(Документ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИндивидуальнаяСделка.Дата
	|ИЗ
	|	Документ.ИндивидуальнаяСделка КАК ИндивидуальнаяСделка
	|ГДЕ
	|	ИндивидуальнаяСделка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ИндивидуальнаяСделка.Подразделение = &Подразделение
	|	И ИндивидуальнаяСделка.ВедомостьВыходногоДня = ИСТИНА
	|	И ИндивидуальнаяСделка.ПометкаУдаления = ЛОЖЬ
	|	И ИндивидуальнаяСделка.Комментарий ПОДОБНО &Комментарий";
Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Документ.Дата));
Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Документ.Дата));
Запрос.УстановитьПараметр("Подразделение", Документ.Подразделение);
Запрос.УстановитьПараметр("Комментарий", Документ.Комментарий);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокВыходныхДней.Добавить(ВыборкаДетальныеЗаписи.Дата);
	КонецЦикла;
КонецФункции

&НаСервере
Функция ПолучитьСписокЛинеек(ГруппаЛинеек,Проектные)
Линейки = Справочники.Линейки.Выбрать(ГруппаЛинеек);
	Пока Линейки.Следующий() Цикл
		Если Линейки.Проектная = Проектные Тогда
		СписокЛинеек.Добавить(Линейки.Ссылка);
		КонецЕсли;			
	КонецЦикла;
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(ЭтаФорма.Параметры.Документ) Тогда
	ПараметрыДокумента = ПолучитьПараметрыДокумента(ЭтаФорма.Параметры.Документ);	
	СписокЛинеек.Очистить();
    ПолучитьСписокЛинеек(ПараметрыДокумента.Линейка,ПараметрыДокумента.Проектные);	
		Если ПараметрыДокумента.ВедомостьВыходногоДня Тогда        
		Отчет.Период.ДатаНачала = ПараметрыДокумента.Дата;			
		Отчет.Период.ДатаОкончания = ПараметрыДокумента.Дата;
		Иначе
		Отчет.Период.ДатаНачала = НачалоМесяца(ПараметрыДокумента.Дата);			
		Отчет.Период.ДатаОкончания = КонецМесяца(ПараметрыДокумента.Дата);		
		КонецЕсли;
	БезУчётаВыходныхДней = ПараметрыДокумента.БезУчётаВыходныхДней;
		Если БезУчётаВыходныхДней Тогда
		СписокВыходныхДней.Очистить();
		ПолучитьСписокВыходныхДней(ЭтаФорма.Параметры.Документ);		
		КонецЕсли;
	Сформировать(Неопределено);   	
	КонецЕсли; 
КонецПроцедуры
