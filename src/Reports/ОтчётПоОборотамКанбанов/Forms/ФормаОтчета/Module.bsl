
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Размерность = 1;
КонецПроцедуры
 
&НаСервере
Функция ПолучитьПередачуНаЛинейку(Выборка)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПередачаНаЛинейку.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПередачаНаЛинейку КАК ПередачаНаЛинейку
	|ГДЕ
	|	ПередачаНаЛинейку.Дата <= &НаДату
	|	И ПередачаНаЛинейку.Проведен = ИСТИНА
	|	И ПередачаНаЛинейку.МестоХраненияКанбанов = &МестоХраненияКанбанов
	|	И ПередачаНаЛинейку.МестоХранения = &МестоХранения
	|	И ПередачаНаЛинейку.МПЗ = &МПЗ
	|	И ПередачаНаЛинейку.НомерЯчейки = &НомерЯчейки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПередачаНаЛинейку.Дата УБЫВ";
Запрос.УстановитьПараметр("МестоХранения", Выборка.МестоХраненияОтправитель);
Запрос.УстановитьПараметр("МестоХраненияКанбанов", Выборка.МестоХранения);
Запрос.УстановитьПараметр("МПЗ", Выборка.МПЗ);
Запрос.УстановитьПараметр("НаДату", Выборка.ДатаПередачи);
Запрос.УстановитьПараметр("НомерЯчейки", Выборка.НомерЯчейки);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
Возврат(Неопределено);
КонецФункции 

&НаСервере
Функция ПолучитьПоступлениеНаЛинейку(Выборка)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПоступлениеНаЛинейку.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПоступлениеНаЛинейку КАК ПоступлениеНаЛинейку
	|ГДЕ
	|	ПоступлениеНаЛинейку.Дата <= &НаДату
	|	И ПоступлениеНаЛинейку.Проведен = ИСТИНА
	|	И ПоступлениеНаЛинейку.МестоХранения = &МестоХранения
	|	И ПоступлениеНаЛинейку.МПЗ = &МПЗ
	|	И ПоступлениеНаЛинейку.НомерЯчейки = &НомерЯчейки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоступлениеНаЛинейку.Дата УБЫВ";
Запрос.УстановитьПараметр("МестоХранения", Выборка.МестоХранения);
Запрос.УстановитьПараметр("МПЗ", Выборка.МПЗ);
Запрос.УстановитьПараметр("НаДату", Выборка.ДатаОкончания);
Запрос.УстановитьПараметр("НомерЯчейки", Выборка.НомерЯчейки);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
Возврат(Неопределено);
КонецФункции

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет"); 

ОблШапка = Макет.ПолучитьОбласть("Шапка");	
ОблОборот = Макет.ПолучитьОбласть("Оборот");	
ОблКонец = Макет.ПолучитьОбласть("Конец");	

ОблШапка.Параметры.ДатаНач = Отчет.Период.ДатаНачала;
ОблШапка.Параметры.ДатаКон = Отчет.Период.ДатаОкончания;
ТабДок.Вывести(ОблШапка);

Запрос = Новый Запрос;
ЗапросПростой = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОборотКанбанов.МестоХранения КАК МестоХранения,
	|	ОборотКанбанов.МестоХраненияОтправитель КАК МестоХраненияОтправитель,
	|	ОборотКанбанов.МПЗ КАК МПЗ,
	|	ОборотКанбанов.Период КАК Период,
	|	ОборотКанбанов.ДатаПринятия КАК ДатаПринятия,
	|	ОборотКанбанов.ДатаПередачи КАК ДатаПередачи,
	|	ОборотКанбанов.ДатаОкончания КАК ДатаОкончания,
	|	ОборотКанбанов.МПЗ.Наименование КАК Наименование,
	|	ОборотКанбанов.Аналог КАК Аналог,
	|	ОборотКанбанов.НомерЯчейки КАК НомерЯчейки,
	|	ОборотКанбанов.Оформил КАК Оформил,
	|	ОборотКанбанов.Принял КАК Принял,
	|	ОборотКанбанов.Передал КАК Передал,
	|	ОборотКанбанов.Завершил КАК Завершил
	|ИЗ
	|	РегистрСведений.ОборотКанбанов КАК ОборотКанбанов
	|ГДЕ
	|	ОборотКанбанов.Период МЕЖДУ &ДатаНач И &ДатаКон";
	Если СписокМПЗ.Количество() > 0 Тогда	
	Запрос.Текст = Запрос.Текст + " И ОборотКанбанов.МПЗ В ИЕРАРХИИ(&СписокМПЗ)";
	Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);		
	КонецЕсли;
		Если СписокМестХранения.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И ОборотКанбанов.МестоХранения В ИЕРАРХИИ(&СписокМестХранения)";
		Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения);
		КонецЕсли;
			Если СписокМестХраненияОтправителей.Количество() > 0 Тогда
			Запрос.Текст = Запрос.Текст + " И ОборотКанбанов.МестоХраненияОтправитель В ИЕРАРХИИ(&СписокМестХраненияОтправителей)";
			Запрос.УстановитьПараметр("СписокМестХраненияОтправителей", СписокМестХраненияОтправителей);
			КонецЕсли;	
Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО Период";		
Запрос.УстановитьПараметр("ДатаНач", Отчет.Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон", Отчет.Период.ДатаОкончания);
ВремяПростояИтого = 0;  
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
	ОблОборот.Параметры.МестоХраненияОтправитель = ВыборкаДетальныеЗаписи.МестоХраненияОтправитель;
	ОблОборот.Параметры.МестоХранения = ВыборкаДетальныеЗаписи.МестоХранения;
	ОблОборот.Параметры.МПЗ = ВыборкаДетальныеЗаписи.МПЗ;
	ОблОборот.Параметры.НомерЯчейки = ВыборкаДетальныеЗаписи.НомерЯчейки;
	ОблОборот.Параметры.Аналог = ?(ВыборкаДетальныеЗаписи.Аналог,"+","");
	ОблОборот.Параметры.Оформил = ВыборкаДетальныеЗаписи.Оформил;
	ОблОборот.Параметры.Принял = ВыборкаДетальныеЗаписи.Принял;
	ОблОборот.Параметры.Передал = ВыборкаДетальныеЗаписи.Передал;
	ОблОборот.Параметры.ДатаСоздания = ВыборкаДетальныеЗаписи.Период;
	ОблОборот.Параметры.ДатаПринятия = ВыборкаДетальныеЗаписи.ДатаПринятия;
	ОблОборот.Параметры.ДатаПередачи = ВыборкаДетальныеЗаписи.ДатаПередачи;
	ОблОборот.Параметры.ДатаПоступления = ВыборкаДетальныеЗаписи.ДатаОкончания;
	ОблОборот.Параметры.КоличествоОстаток = ОбщийМодульВызовСервера.ПолучитьОстатокПоМестуХранения(ВыборкаДетальныеЗаписи.МестоХранения,ВыборкаДетальныеЗаписи.МПЗ,ВыборкаДетальныеЗаписи.Период);
	ОблОборот.Параметры.КоличествоОстатокОтправителя = ОбщийМодульВызовСервера.ПолучитьОстатокПоМестуХранения(ВыборкаДетальныеЗаписи.МестоХраненияОтправитель,ВыборкаДетальныеЗаписи.МПЗ,ВыборкаДетальныеЗаписи.Период);
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПринятия) Тогда
		ОблОборот.Параметры.ВремяДоПринятия = ОбщийМодульВызовСервера.ПолучитьВремяМеждуДатами(ВыборкаДетальныеЗаписи.Период,ВыборкаДетальныеЗаписи.ДатаПринятия,Размерность,Отчет.ВычестьНерабочееВремя,Отчет.КолНерабочихЧасов,Отчет.БезВыходных);
		Иначе                              
		ОблОборот.Параметры.ВремяДоПринятия = 0;
		КонецЕсли;	
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаОкончания) и ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПринятия) Тогда
			ОблОборот.Параметры.ВремяИзготовления = ОбщийМодульВызовСервера.ПолучитьВремяМеждуДатами(ВыборкаДетальныеЗаписи.ДатаПринятия,ВыборкаДетальныеЗаписи.ДатаОкончания,Размерность,Отчет.ВычестьНерабочееВремя,Отчет.КолНерабочихЧасов,Отчет.БезВыходных);
			Иначе	
			ОблОборот.Параметры.ВремяИзготовления = 0;
			КонецЕсли;
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаОкончания) Тогда
				ОблОборот.Параметры.ВремяОборота = ОбщийМодульВызовСервера.ПолучитьВремяМеждуДатами(ВыборкаДетальныеЗаписи.Период,ВыборкаДетальныеЗаписи.ДатаОкончания,Размерность,Отчет.ВычестьНерабочееВремя,Отчет.КолНерабочихЧасов,Отчет.БезВыходных);
				Иначе	
				ОблОборот.Параметры.ВремяОборота = 0;
				КонецЕсли; 
	ЗапросПростой.Текст = 
		"ВЫБРАТЬ
		|	ЛьготнаяОчередь.Период,
		|	ЛьготнаяОчередь.ДатаОкончания
		|ИЗ
		|	РегистрСведений.ЛьготнаяОчередь КАК ЛьготнаяОчередь
		|ГДЕ
		|	ЛьготнаяОчередь.Период МЕЖДУ &ДатаНач И &ДатаКон
		|	И ЛьготнаяОчередь.Линейка.МестоХраненияКанбанов = &МестоХранения
		|	И ЛьготнаяОчередь.НормаРасходов.Элемент = &МПЗ";	
	ЗапросПростой.УстановитьПараметр("ДатаНач", ВыборкаДетальныеЗаписи.Период);
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаОкончания) Тогда
		ЗапросПростой.УстановитьПараметр("ДатаКон", ВыборкаДетальныеЗаписи.ДатаОкончания);
		Иначе	
		ЗапросПростой.УстановитьПараметр("ДатаКон", ТекущаяДата());
		КонецЕсли;
	ЗапросПростой.УстановитьПараметр("МестоХранения", ВыборкаДетальныеЗаписи.МестоХранения);
	ЗапросПростой.УстановитьПараметр("МПЗ", ВыборкаДетальныеЗаписи.МПЗ);
	РезультатЗапросаПростой = ЗапросПростой.Выполнить();
	ВыборкаПростой = РезультатЗапросаПростой.Выбрать();
		Если ВыборкаПростой.Количество() > 0 Тогда
		ДатаНачЛО = ТекущаяДата();
		ДатаКонЛО = Дата(1,1,1);
			Пока ВыборкаПростой.Следующий() Цикл
			ДатаНачЛО = Мин(ДатаНачЛО,ВыборкаПростой.Период);
				Если ЗначениеЗаполнено(ВыборкаПростой.ДатаОкончания) Тогда
				ДатаКонЛО = Макс(ДатаКонЛО,ВыборкаПростой.ДатаОкончания);
				Иначе
				ДатаКонЛО = Макс(ДатаКонЛО,ТекущаяДата());
				КонецЕсли;	
			КонецЦикла;					
		ВремяПростоя = ОбщийМодульВызовСервера.ПолучитьВремяМеждуДатами(ДатаНачЛО,ДатаКонЛО,Размерность,Отчет.ВычестьНерабочееВремя,Отчет.КолНерабочихЧасов,Отчет.БезВыходных);					
		ВремяПростояИтого = ВремяПростояИтого + ВремяПростоя;
		Иначе	
		ВремяПростоя = 0;
		КонецЕсли;
	ОблОборот.Параметры.ВремяПростоя = ВремяПростоя;
	ЯчейкиКомплектации = ОбщийМодульРаботаСРегистрами.ПолучитьЯчейкуКомплектацииПоМестуХранения(ВыборкаДетальныеЗаписи.МестоХранения,ВыборкаДетальныеЗаписи.МПЗ);
	ОблОборот.Параметры.КоличествоВЯчейке = ЯчейкиКомплектации.КоличествоВЯчейке;
	ТабДок.Вывести(ОблОборот);	
	КонецЦикла;
ТабДок.Вывести(ОблКонец); 
ТабДок.ФиксацияСверху = 2;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)	
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	СформироватьНаСервере();			
	КонецЕсли;  
КонецПроцедуры
