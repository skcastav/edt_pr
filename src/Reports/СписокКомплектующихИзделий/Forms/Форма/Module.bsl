
&НаСервере
Перем оптМВТ, оптЗапросНорм, оптСоотРезультатов;
         
&НаКлиенте
Процедура СписокНоменклатурыПриИзменении(Элемент)
ТаблицаНоменклатуры.Очистить();
Элементы.Сформировать.Доступность = Ложь;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИзФайлаНаСервере(МестоХранения, Номенклатура, Количество)
МХ = Справочники.МестаХранения.НайтиПоНаименованию(МестоХранения,Истина);
	Если МХ.Пустая() Тогда
	Сообщить(МестоХранения+" - место хранения не найдено!");
	Возврат;
	КонецЕсли; 
Номен = Справочники.Номенклатура.НайтиПоНаименованию(Номенклатура,Истина);
	Если Номен.Пустая() Тогда
	Сообщить(Номенклатура+" - номенклатура не найдена!");
	Возврат;
	КонецЕсли;
ТЧ = ТаблицаНоменклатуры.Добавить();
ТЧ.СписокМестХранения.Добавить(МХ);
ТЧ.Номенклатура = Номен;
ТЧ.Количество = Количество;
КонецПроцедуры 
    
&НаСервере  
Процедура ОчиститьМестоХраненияКанбанов()
МестоХраненияКанбанов = Справочники.МестаХранения.ПустаяСсылка();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
ТаблицаНоменклатуры.Очистить();
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл c номенклатурой");
	Если Результат <> Неопределено Тогда
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок;
	    Для к = 2 по КолСтрок Цикл
		ЗагрузитьИзФайлаНаСервере(СокрЛП(ExcelЛист.Cells(к,1).Value),СокрЛП(ExcelЛист.Cells(к,2).Value),Число(ExcelЛист.Cells(к,3).Value));
		КонецЦикла;
	Результат.Excel.Quit();
	ОчиститьМестоХраненияКанбанов();
	Элементы.Сформировать.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьМестаХраненияКанбана(МПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛинейкиВидыКанбанов.Ссылка КАК Линейка
	|ИЗ
	|	Справочник.Линейки.ВидыКанбанов КАК ЛинейкиВидыКанбанов
	|ГДЕ
	|	ЛинейкиВидыКанбанов.ВидКанбана = &ВидКанбана
	|	И ЛинейкиВидыКанбанов.Ссылка.ПометкаУдаления = ЛОЖЬ";
Запрос.УстановитьПараметр("ВидКанбана", МПЗ.Канбан);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
Возврат(ВыборкаДетальныеЗаписи);
КонецФункции

&НаСервере
Процедура ПолучитьСписокНоменклатурыНаСервере()
ТаблицаНоменклатуры.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.СтатусыМПЗ.СрезПоследних КАК СтатусыМПЗСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО СтатусыМПЗСрезПоследних.МПЗ = Номенклатура.Ссылка
	|ГДЕ
	|	Номенклатура.Ссылка В ИЕРАРХИИ(&СписокНоменклатуры)
	|	И Номенклатура.ЭтоГруппа = ЛОЖЬ
	|	И Номенклатура.ПометкаУдаления = ЛОЖЬ
	|	И СтатусыМПЗСрезПоследних.Статус <> &Статус";
Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатуры);
Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыСпецификаций.Запрещённая);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаНоменклатуры.Добавить();
	ТЧ.Номенклатура = ВыборкаДетальныеЗаписи.Ссылка;
		Если Не ВыборкаДетальныеЗаписи.Ссылка.Линейка.Пустая() Тогда
		ТЧ.СписокМестХранения.Добавить(ВыборкаДетальныеЗаписи.Ссылка.Линейка.МестоХраненияКанбанов);
		Иначе	
			Если Не ВыборкаДетальныеЗаписи.Ссылка.Канбан.Пустая() Тогда
			Выборка = ПолучитьМестаХраненияКанбана(ВыборкаДетальныеЗаписи.Ссылка);
				Пока Выборка.Следующий() Цикл
				ТЧ.СписокМестХранения.Добавить(Выборка.Линейка);
				КонецЦикла;				
			КонецЕсли;		
		КонецЕсли; 
	ТЧ.Количество = 1;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСписокНоменклатуры(Команда)
ПолучитьСписокНоменклатурыНаСервере();
Элементы.Сформировать.Доступность = Истина;
КонецПроцедуры

&НаСервере
Процедура ДобавитьМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,НормРасх,Количество,КолУзла,Знач МПЗ = Неопределено)
	Если МПЗ = Неопределено Тогда 
	МПЗ = ОбщегоНазначенияПовтИсп.ПолучитьЗначениеРеквизита(НормРасх,"Элемент");
	КонецЕсли;
ТЧ = ТаблицаМПЗ.Добавить();
ТЧ.Номенклатура = Номенклатура;
ТЧ.ВидМПЗ = ?(ТипЗнч(МПЗ) = Тип("СправочникСсылка.Материалы"),Перечисления.ВидыМПЗ.Материалы,Перечисления.ВидыМПЗ.Полуфабрикаты);
ТЧ.МПЗ = МПЗ;
ТЧ.Количество = Количество;

ТаблицаАналогов = ОбщегоНазначенияПовтИсп.ПолучитьАналогиНормРасходов(НормРасх);
	Для каждого ТЧ_ТА Из ТаблицаАналогов Цикл
	Аналог = ТЧ_ТА.Ссылка.Элемент;
	ТЧ = ТаблицаАналоговМПЗ.Добавить();
	ТЧ.Номенклатура = Номенклатура;
	ТЧ.ВидМПЗ = ?(ТипЗнч(Аналог) = Тип("СправочникСсылка.Материалы"),Перечисления.ВидыМПЗ.Материалы,Перечисления.ВидыМПЗ.Полуфабрикаты);
	ТЧ.МПЗ = МПЗ;
	ТЧ.АналогМПЗ = Аналог;
	ТЧ.Количество = ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(ТЧ_ТА.Норма,Аналог.ОсновнаяЕдиницаИзмерения)*КолУзла;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура РаскрытьНаМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,ЭтапСпецификации,КолУзла)
	Если оптМВТ = Неопределено Тогда
	оптМВТ = Новый МенеджерВременныхТаблиц;
	оптЗапрос = Новый Запрос;
	оптЗапрос.УстановитьПараметр("НаДату", ТекущаяДата());
	оптЗапрос.МенеджерВременныхТаблиц = оптМВТ;
	оптЗапрос.Текст = 			
	"ВЫБРАТЬ
	|	Т.НормаРасходов КАК НормаРасходов,
	|	Т.Норма КАК Норма
	|ПОМЕСТИТЬ втНРСрезПоследних
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(&НаДату, ) КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НормаРасходов";	 
	оптЗапрос.Выполнить();
	КонецЕсли;
		Если оптЗапросНорм = Неопределено Тогда
		оптЗапросНорм = Новый Запрос;
		оптЗапросНорм.МенеджерВременныхТаблиц = оптМВТ;
		оптЗапросНорм.Текст = 
			"ВЫБРАТЬ
			|	НормыРасходов.Ссылка КАК Ссылка,
			|	НормыРасходов.Элемент КАК Элемент,
			|	НормыРасходов.ВидЭлемента КАК ВидЭлемента,
			|	НормыРасходов.Элемент.ОсновнаяЕдиницаИзмерения КАК ЭлементОЕИ,
			|	НормыРасходовСрезПоследних.Норма КАК Норма
			|ИЗ
			|	втНРСрезПоследних КАК НормыРасходовСрезПоследних
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НормыРасходов КАК НормыРасходов
			|		ПО НормыРасходовСрезПоследних.НормаРасходов = НормыРасходов.Ссылка
			|ГДЕ
			|	НормыРасходов.Владелец = &Владелец
			|	И (ТИПЗНАЧЕНИЯ(НормыРасходов.Элемент) = ТИП(Справочник.Номенклатура)
			|			ИЛИ ТИПЗНАЧЕНИЯ(НормыРасходов.Элемент) = ТИП(Справочник.Материалы))
			|	И НормаРасходов.ПометкаУдаления = ЛОЖЬ
  			|	И НормыРасходовСрезПоследних.Норма > 0";	
		КонецЕсли;
			Если оптСоотРезультатов = Неопределено Тогда
			оптСоотРезультатов = Новый Соответствие;
			КонецЕсли;
				Если оптСоотРезультатов.Получить(ЭтапСпецификации) = Неопределено Тогда 
				Запрос = оптЗапросНорм;
				Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
				РезультатЗапроса = Запрос.Выполнить();
				оптСоотРезультатов.Вставить(ЭтапСпецификации, РезультатЗапроса);
				Иначе
				РезультатЗапроса = оптСоотРезультатов[ЭтапСпецификации];
				КонецЕсли;
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл 
	БазовоеКоличество = ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(ВыборкаНР.Норма,ВыборкаНР.ЭлементОЕИ);
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
		ДобавитьМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,ВыборкаНР.Ссылка,БазовоеКоличество*КолУзла,КолУзла,ВыборкаНР.Элемент);  					
		Иначе
			Если ВыборкаНР.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Набор Тогда
			РаскрытьНаМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,ВыборкаНР.Элемент,БазовоеКоличество*КолУзла);
			Иначе	
				Если ВыборкаНР.Элемент.Канбан.Пустая() Тогда
					Если Не ТолькоНаВыбранномЭтапеСпецификации Тогда
					РаскрытьНаМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,ВыборкаНР.Элемент,БазовоеКоличество*КолУзла);
					КонецЕсли; 			
				Иначе
				ДобавитьМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,ВыборкаНР.Ссылка,БазовоеКоличество*КолУзла,КолУзла,ВыборкаНР.Элемент);
				КонецЕсли;			
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры
 
&НаСервере
Функция ПолучитьЯК(МПЗ,СписокМестХранения)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЯчейкиКомплектацииСрезПоследних.МПЗ КАК МПЗ,
	|	ЯчейкиКомплектацииСрезПоследних.МестоХранения КАК МестоХранения,
	|	ЯчейкиКомплектацииСрезПоследних.КоличествоЯчеек КАК КоличествоЯчеек,
	|	ЯчейкиКомплектацииСрезПоследних.КоличествоВЯчейке КАК КоличествоВЯчейке
	|ИЗ
	|	РегистрСведений.ЯчейкиКомплектации.СрезПоследних КАК ЯчейкиКомплектацииСрезПоследних
	|ГДЕ
	|	ЯчейкиКомплектацииСрезПоследних.МПЗ = &МПЗ
	|	И ЯчейкиКомплектацииСрезПоследних.МестоХранения В(&СписокМестХранения)
	|	И ЯчейкиКомплектацииСрезПоследних.КоличествоЯчеек > 0";
Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения);
Запрос.УстановитьПараметр("МПЗ", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
Возврат(РезультатЗапроса.Выбрать());
КонецФункции

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();
                                   
СписокМестХранения = Новый СписокЗначений;
ТаблицаМПЗ = Новый ТаблицаЗначений;
        
ТаблицаМПЗ.Колонки.Добавить("Номенклатура");
ТаблицаМПЗ.Индексы.Добавить("Номенклатура");
ТаблицаМПЗ.Колонки.Добавить("МПЗ");
ТаблицаМПЗ.Индексы.Добавить("МПЗ");
ТаблицаМПЗ.Колонки.Добавить("ВидМПЗ");
ТаблицаМПЗ.Колонки.Добавить("Количество");

ТаблицаАналоговМПЗ = Новый ТаблицаЗначений;
                                          
ТаблицаАналоговМПЗ.Колонки.Добавить("Номенклатура");
ТаблицаАналоговМПЗ.Индексы.Добавить("Номенклатура");
ТаблицаАналоговМПЗ.Колонки.Добавить("МПЗ");
ТаблицаАналоговМПЗ.Индексы.Добавить("МПЗ");
ТаблицаАналоговМПЗ.Колонки.Добавить("АналогМПЗ");
ТаблицаАналоговМПЗ.Колонки.Добавить("ВидМПЗ");
ТаблицаАналоговМПЗ.Колонки.Добавить("Количество");

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("Макет");
      
ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблМестоХранения = Макет.ПолучитьОбласть("МестоХранения");
ОблНоменклатура = Макет.ПолучитьОбласть("Номенклатура"); 
ОблМатериал = Макет.ПолучитьОбласть("Материал");
ОблАналог = Макет.ПолучитьОбласть("Аналог");
ОблЯчейка = Макет.ПолучитьОбласть("Ячейка");
ОблКонец = Макет.ПолучитьОбласть("Конец");

	Если Не МестоХраненияКанбанов.Пустая() Тогда
	СписокМестХранения.Добавить(МестоХраненияКанбанов);		
	КонецЕсли;
		Для каждого ТЧ Из ТаблицаНоменклатуры Цикл
			Если МестоХраненияКанбанов.Пустая() Тогда
				Для каждого МестоХранения Из ТЧ.СписокМестХранения Цикл
					Если СписокМестХранения.НайтиПоЗначению(МестоХранения.Значение) = Неопределено Тогда
					СписокМестХранения.Добавить(МестоХранения.Значение);		
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		РаскрытьНаМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,ТЧ.Номенклатура,ТЧ.Номенклатура,ТЧ.Количество);
		КонецЦикла;
            
ТабДок.Вывести(ОблШапка); 
	Если ВидОтчёта = 0 Тогда
	ТаблицаМПЗ.Свернуть("ВидМПЗ,МПЗ","Количество");
	ТаблицаМПЗ.Сортировать("ВидМПЗ,МПЗ");
	ТаблицаАналоговМПЗ.Свернуть("МПЗ,ВидМПЗ,АналогМПЗ","Количество");
	ТаблицаАналоговМПЗ.Сортировать("МПЗ,ВидМПЗ,АналогМПЗ");
		Для каждого ТЧ Из ТаблицаМПЗ Цикл  
		ВыборкаЯК = ПолучитьЯК(ТЧ.МПЗ,СписокМестХранения);
			Если ТолькоБезЯчеекКомплектации Тогда
				Если ВыборкаЯК.Количество() = 0 Тогда	
				флВыводить = Истина;
				ВыборкаАналоги = ТаблицаАналоговМПЗ.НайтиСтроки(Новый Структура("МПЗ",ТЧ.МПЗ));
					Для м = 0 по ВыборкаАналоги.ВГраница() Цикл	
					ВыборкаЯК = ПолучитьЯК(ВыборкаАналоги[м].АналогМПЗ,СписокМестХранения);
						Если ВыборкаЯК.Количество() > 0 Тогда
						флВыводить = Ложь;
                       	Прервать;
                        КонецЕсли;
					КонецЦикла; 
						Если Не флВыводить Тогда
						Продолжить;
						КонецЕсли;
				Иначе
				Продолжить;
				КонецЕсли;
			КонецЕсли;
		ОблМатериал.Параметры.ВидМПЗ = ТЧ.ВидМПЗ;
		ОблМатериал.Параметры.НаименованиеМПЗ = СокрЛП(ТЧ.МПЗ.Наименование);		
		ОблМатериал.Параметры.МПЗ = ТЧ.МПЗ;
		ОблМатериал.Параметры.Статус = ПолучитьСтатус(ТЧ.МПЗ);
		ОблМатериал.Параметры.ЕдиницаИзмерения = ТЧ.МПЗ.ЕдиницаИзмерения;
		ОблМатериал.Параметры.Количество = ТЧ.Количество;
			Если ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты Тогда
			ОблМатериал.Параметры.Канбан = ТЧ.МПЗ.Канбан;
			Иначе	
			ОблМатериал.Параметры.Канбан = "";
			КонецЕсли;
				Если ВыборкаЯК.Количество() = 1 Тогда
				ВыборкаЯК.Следующий();
				ОблМатериал.Параметры.КоличествоЯчеек = ВыборкаЯК.КоличествоЯчеек;	
				ОблМатериал.Параметры.КоличествоВЯчейке = ВыборкаЯК.КоличествоВЯчейке;					
				ОблМатериал.Параметры.МестоХранения = ВыборкаЯК.МестоХранения;
				Иначе
				ОблМатериал.Параметры.КоличествоЯчеек = 0;	
				ОблМатериал.Параметры.КоличествоВЯчейке = 0;					
				ОблМатериал.Параметры.МестоХранения = 0;
				КонецЕсли;
		ТабДок.Вывести(ОблМатериал); 
			Если ВыборкаЯК.Количество() > 1 Тогда
			ТабДок.НачатьГруппуСтрок("Ячейки комплектации",Ложь); 
				Пока ВыборкаЯК.Следующий() Цикл
			    ОблЯчейка.Параметры.КоличествоЯчеек = ВыборкаЯК.КоличествоЯчеек;	
			    ОблЯчейка.Параметры.КоличествоВЯчейке = ВыборкаЯК.КоличествоВЯчейке;					
			    ОблЯчейка.Параметры.МестоХранения = ВыборкаЯК.МестоХранения;				
				ТабДок.Вывести(ОблЯчейка);
				КонецЦикла;	
			ТабДок.ЗакончитьГруппуСтрок();
			КонецЕсли;
		ВыборкаАналоги = ТаблицаАналоговМПЗ.НайтиСтроки(Новый Структура("МПЗ",ТЧ.МПЗ));
			Если ВыборкаАналоги.Количество() > 0 Тогда
			ТабДок.НачатьГруппуСтрок("АналогиМПЗ",Истина);
				Для м = 0 по ВыборкаАналоги.ВГраница() Цикл	
				Аналог = ВыборкаАналоги[м].АналогМПЗ; 
				ОблАналог.Параметры.ВидМПЗ = ВыборкаАналоги[м].ВидМПЗ;
				ОблАналог.Параметры.НаименованиеМПЗ = СокрЛП(Аналог.Наименование);		
				ОблАналог.Параметры.МПЗ = Аналог;
				ОблАналог.Параметры.Статус = ПолучитьСтатус(Аналог);
				ОблАналог.Параметры.ЕдиницаИзмерения = Аналог.ЕдиницаИзмерения;
				ОблАналог.Параметры.Количество = ВыборкаАналоги[м].Количество;
					Если ВыборкаАналоги[м].ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты Тогда
					ОблАналог.Параметры.Канбан = Аналог.Канбан;
					Иначе	
					ОблАналог.Параметры.Канбан = "";
					КонецЕсли;
				ВыборкаЯК = ПолучитьЯК(Аналог,СписокМестХранения);
					Если ВыборкаЯК.Количество() = 1 Тогда
					ВыборкаЯК.Следующий();
					ОблАналог.Параметры.КоличествоЯчеек = ВыборкаЯК.КоличествоЯчеек;	
					ОблАналог.Параметры.КоличествоВЯчейке = ВыборкаЯК.КоличествоВЯчейке;					
					ОблАналог.Параметры.МестоХранения = ВыборкаЯК.МестоХранения;
					Иначе
					ОблАналог.Параметры.КоличествоЯчеек = 0;	
					ОблАналог.Параметры.КоличествоВЯчейке = 0;					
					ОблАналог.Параметры.МестоХранения = 0;
					КонецЕсли;
				ТабДок.Вывести(ОблАналог);
					Если ВыборкаЯК.Количество() > 1 Тогда
					ТабДок.НачатьГруппуСтрок("Ячейки комплектации аналогов",Ложь); 
						Пока ВыборкаЯК.Следующий() Цикл
					    ОблЯчейка.Параметры.КоличествоЯчеек = ВыборкаЯК.КоличествоЯчеек;	
					    ОблЯчейка.Параметры.КоличествоВЯчейке = ВыборкаЯК.КоличествоВЯчейке;					
					    ОблЯчейка.Параметры.МестоХранения = ВыборкаЯК.МестоХранения;				
						ТабДок.Вывести(ОблЯчейка);
						КонецЦикла;	
					ТабДок.ЗакончитьГруппуСтрок();
					КонецЕсли;
                КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
			КонецЕсли;
		КонецЦикла;
	Иначе
	ТаблицаМПЗ.Свернуть("Номенклатура,ВидМПЗ,МПЗ","Количество");
	ТаблицаМПЗ.Сортировать("Номенклатура,ВидМПЗ,МПЗ");
	ТаблицаАналоговМПЗ.Свернуть("Номенклатура,МПЗ,ВидМПЗ,АналогМПЗ","Количество");
	ТаблицаАналоговМПЗ.Сортировать("Номенклатура,МПЗ,ВидМПЗ,АналогМПЗ");
	ТекНомен = Неопределено;
		Для каждого ТЧ Из ТаблицаМПЗ Цикл
			Если ТекНомен <> ТЧ.Номенклатура Тогда
				Если ТекНомен <> Неопределено Тогда
				ТабДок.ЗакончитьГруппуСтрок();				
				КонецЕсли; 
			ОблНоменклатура.Параметры.Номенклатура = ТЧ.Номенклатура;
			ТабДок.Вывести(ОблНоменклатура);				
			ТекНомен = ТЧ.Номенклатура;
			ТабДок.НачатьГруппуСтрок("Номенклатура",Истина);
			КонецЕсли;
				Если ТолькоБезЯчеекКомплектации Тогда
					Если ВыборкаЯК.Количество() = 0 Тогда	
					флВыводить = Истина;
					ВыборкаАналоги = ТаблицаАналоговМПЗ.НайтиСтроки(Новый Структура("МПЗ",ТЧ.МПЗ));
						Для м = 0 по ВыборкаАналоги.ВГраница() Цикл	
						ВыборкаЯК = ПолучитьЯК(ВыборкаАналоги[м].АналогМПЗ,СписокМестХранения);
							Если ВыборкаЯК.Количество() > 0 Тогда
							флВыводить = Ложь;
	                       	Прервать;
	                        КонецЕсли;
						КонецЦикла; 
							Если Не флВыводить Тогда
							Продолжить;
							КонецЕсли;
					Иначе
					Продолжить;
					КонецЕсли;
				КонецЕсли;
		ОблМатериал.Параметры.ВидМПЗ = ТЧ.ВидМПЗ;
		ОблМатериал.Параметры.НаименованиеМПЗ = СокрЛП(ТЧ.МПЗ.Наименование);		
		ОблМатериал.Параметры.МПЗ = ТЧ.МПЗ;
		ОблМатериал.Параметры.Статус = ПолучитьСтатус(ТЧ.МПЗ);
		ОблМатериал.Параметры.ЕдиницаИзмерения = ТЧ.МПЗ.ЕдиницаИзмерения;
		ОблМатериал.Параметры.Количество = ТЧ.Количество;
			Если ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты Тогда
			ОблМатериал.Параметры.Канбан = ТЧ.МПЗ.Канбан;
			Иначе	
			ОблМатериал.Параметры.Канбан = "";
			КонецЕсли;
		ВыборкаЯК = ПолучитьЯК(ТЧ.МПЗ,СписокМестХранения);
			Если ВыборкаЯК.Количество() = 1 Тогда
			ВыборкаЯК.Следующий();
			ОблМатериал.Параметры.КоличествоЯчеек = ВыборкаЯК.КоличествоЯчеек;	
			ОблМатериал.Параметры.КоличествоВЯчейке = ВыборкаЯК.КоличествоВЯчейке;					
			ОблМатериал.Параметры.МестоХранения = ВыборкаЯК.МестоХранения;
			Иначе
			ОблМатериал.Параметры.КоличествоЯчеек = 0;	
			ОблМатериал.Параметры.КоличествоВЯчейке = 0;					
			ОблМатериал.Параметры.МестоХранения = 0;
			КонецЕсли;
		ТабДок.Вывести(ОблМатериал); 
			Если ВыборкаЯК.Количество() > 1 Тогда
			ТабДок.НачатьГруппуСтрок("Ячейки комплектации",Ложь); 
				Пока ВыборкаЯК.Следующий() Цикл
			    ОблЯчейка.Параметры.КоличествоЯчеек = ВыборкаЯК.КоличествоЯчеек;	
			    ОблЯчейка.Параметры.КоличествоВЯчейке = ВыборкаЯК.КоличествоВЯчейке;					
			    ОблЯчейка.Параметры.МестоХранения = ВыборкаЯК.МестоХранения;				
				ТабДок.Вывести(ОблЯчейка);
				КонецЦикла;	
			ТабДок.ЗакончитьГруппуСтрок();
			КонецЕсли;
		ВыборкаАналоги = ТаблицаАналоговМПЗ.НайтиСтроки(Новый Структура("Номенклатура,МПЗ",ТЧ.Номенклатура,ТЧ.МПЗ));
			Если ВыборкаАналоги.Количество() > 0 Тогда
			ТабДок.НачатьГруппуСтрок("АналогиМПЗ",Истина);
				Для м = 0 по ВыборкаАналоги.ВГраница() Цикл	
				Аналог = ВыборкаАналоги[м].АналогМПЗ; 
				ОблАналог.Параметры.ВидМПЗ = ВыборкаАналоги[м].ВидМПЗ;
				ОблАналог.Параметры.НаименованиеМПЗ = СокрЛП(Аналог.Наименование);		
				ОблАналог.Параметры.МПЗ = Аналог;
				ОблАналог.Параметры.Статус = ПолучитьСтатус(Аналог);
				ОблАналог.Параметры.ЕдиницаИзмерения = Аналог.ЕдиницаИзмерения;
				ОблАналог.Параметры.Количество = ВыборкаАналоги[м].Количество;
					Если ВыборкаАналоги[м].ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты Тогда
					ОблАналог.Параметры.Канбан = Аналог.Канбан;
					Иначе	
					ОблАналог.Параметры.Канбан = "";
					КонецЕсли;
				ВыборкаЯК = ПолучитьЯК(Аналог,СписокМестХранения);
					Если ВыборкаЯК.Количество() = 1 Тогда
					ВыборкаЯК.Следующий();
					ОблАналог.Параметры.КоличествоЯчеек = ВыборкаЯК.КоличествоЯчеек;	
					ОблАналог.Параметры.КоличествоВЯчейке = ВыборкаЯК.КоличествоВЯчейке;					
					ОблАналог.Параметры.МестоХранения = ВыборкаЯК.МестоХранения;
					Иначе
					ОблАналог.Параметры.КоличествоЯчеек = 0;	
					ОблАналог.Параметры.КоличествоВЯчейке = 0;					
					ОблАналог.Параметры.МестоХранения = 0;
					КонецЕсли;
				ТабДок.Вывести(ОблАналог);
					Если ВыборкаЯК.Количество() > 1 Тогда
					ТабДок.НачатьГруппуСтрок("Ячейки комплектации аналогов",Ложь); 
						Пока ВыборкаЯК.Следующий() Цикл
					    ОблЯчейка.Параметры.КоличествоЯчеек = ВыборкаЯК.КоличествоЯчеек;	
					    ОблЯчейка.Параметры.КоличествоВЯчейке = ВыборкаЯК.КоличествоВЯчейке;					
					    ОблЯчейка.Параметры.МестоХранения = ВыборкаЯК.МестоХранения;				
						ТабДок.Вывести(ОблЯчейка);
						КонецЦикла;
					ТабДок.ЗакончитьГруппуСтрок(); 
					КонецЕсли;
                КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
			КонецЕсли;
		КонецЦикла;
			Если ТекНомен <> Неопределено Тогда
			ТабДок.ЗакончитьГруппуСтрок();				
			КонецЕсли;
	КонецЕсли;
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 1;
КонецПроцедуры             

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	СформироватьНаСервере();
	Элементы.Группа5.Скрыть();	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТаблицуНоменклатуры(Команда)
ТаблицаНоменклатуры.Очистить();
КонецПроцедуры
