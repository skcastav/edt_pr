
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Отчет.ВсяСпецификация = Истина;
	Если Параметры.Свойство("Спецификация") Тогда
	Отчет.Спецификация = Параметры.Спецификация;
	ЭтаФорма.Заголовок = "Спецификация "+СокрЛП(Отчет.Спецификация.Наименование);
	СформироватьНаСервере();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
КлючУникальности = Новый УникальныйИдентификатор();
КонецПроцедуры

&НаСервере
Процедура ВывестиАналоги(НормаРасхода)
ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблАналог = Макет.ПолучитьОбласть("Аналог");
	
ТабДок.НачатьГруппуСтрок("Аналоги",Истина);
АналогиНормРасх = Справочники.АналогиНормРасходов.Выбрать(,НормаРасхода);
	Пока АналогиНормРасх.Следующий() Цикл
	НормыАНР = РегистрыСведений.АналогиНормРасходов.Выбрать(Отчет.Период.ДатаНачала,Отчет.Период.ДатаОкончания,Новый Структура("АнаолгНормыРасходов",АналогиНормРасх.Ссылка));
		Пока НормыАНР.Следующий() Цикл
		ОблАналог.Параметры.Статус = ПолучитьСтатус(АналогиНормРасх.Элемент);
		ОблАналог.Параметры.Наименование = СокрЛП(АналогиНормРасх.Элемент.Наименование);
		ОблАналог.Параметры.МПЗ = АналогиНормРасх.Элемент;
		ОблАналог.Параметры.ДатаС = Формат(НормыАНР.Период,"ДФ=dd.MM.yyyy");
		ОблАналог.Параметры.Количество = НормыАНР.Норма;
		ОблАналог.Параметры.ЕдиницаИзмерения = СокрЛП(АналогиНормРасх.Элемент.ОсновнаяЕдиницаИзмерения.Наименование);
		ТекОбл = ТабДок.Вывести(ОблАналог);
			Если НормыАНР.Норма = 0 Тогда
			ТабДок.Область(ТекОбл.Верх, 1, ТекОбл.Низ, 6).ЦветТекста = WebЦвета.Красный;
			ТабДок.Область(ТекОбл.Верх, 1, ТекОбл.Низ, 6).Шрифт = Новый Шрифт(,,,,,Истина);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
ТабДок.ЗакончитьГруппуСтрок();
КонецПроцедуры

&НаСервере
Процедура РаскрытьНаМПЗ(ЭтапСпецификации,Позиция)
ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблЭтап = Макет.ПолучитьОбласть("Этап");
ОблМПЗ = Макет.ПолучитьОбласть("МПЗ");

флВыведен = Ложь;

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходов.Элемент КАК Элемент,
	|	НормыРасходов.Ссылка КАК Ссылка,
	|	НормыРасходов.Позиция КАК Позиция
	|ИЗ
	|	Справочник.НормыРасходов КАК НормыРасходов
	|ГДЕ
	|	НормыРасходов.Владелец = &Владелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	Позиция,
	|	НормыРасходов.Элемент.Наименование";
Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
РезультатЗапроса = Запрос.Выполнить();
НормРасх = РезультатЗапроса.Выбрать();
	Пока НормРасх.Следующий() Цикл
	Нормы = РегистрыСведений.НормыРасходов.Выбрать(Отчет.Период.ДатаНачала,Отчет.Период.ДатаОкончания,Новый Структура("НормаРасходов",НормРасх.Ссылка));
		Пока Нормы.Следующий() Цикл
			Если Не флВыведен Тогда
			ОблЭтап.Параметры.Наименование = СокрЛП(ЭтапСпецификации.Наименование);
			ОблЭтап.Параметры.Статус = ПолучитьСтатус(ЭтапСпецификации);
			ОблЭтап.Параметры.ЭтапСпецификации = ЭтапСпецификации;
			ОблЭтап.Параметры.Позиция = СокрЛП(Позиция);			
			ОблЭтап.Параметры.Количество = "";
			ОблЭтап.Параметры.ЕдиницаИзмерения = СокрЛП(ЭтапСпецификации.ОсновнаяЕдиницаИзмерения.Наименование);
			ТабДок.Вывести(ОблЭтап); 
			ТабДок.НачатьГруппуСтрок("Этап спецификации",Истина);
			флВыведен = Истина;
			КонецЕсли;
		ОблМПЗ.Параметры.Наименование = СокрЛП(НормРасх.Элемент.Наименование);
		ОблМПЗ.Параметры.МПЗ = НормРасх.Элемент;		
		ОблМПЗ.Параметры.Статус = ПолучитьСтатус(НормРасх.Элемент);
		ОблМПЗ.Параметры.Позиция = СокрЛП(НормРасх.Позиция);		
		ОблМПЗ.Параметры.ДатаС = Формат(Нормы.Период,"ДФ=dd.MM.yyyy");
		ОблМПЗ.Параметры.Количество = Нормы.Норма;
			Если (ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.Материалы"))или
				 (ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.Номенклатура")) Тогда
			ОблМПЗ.Параметры.ЕдиницаИзмерения = СокрЛП(НормРасх.Элемент.ОсновнаяЕдиницаИзмерения.Наименование);
			КонецЕсли;
		ТекОбл = ТабДок.Вывести(ОблМПЗ);
			Если ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
			ВывестиАналоги(НормРасх.Ссылка);
			ИначеЕсли ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.Номенклатура") Тогда
			ВывестиАналоги(НормРасх.Ссылка);			
			ИначеЕсли ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.Документация") Тогда
		    ТабДок.Область(ТекОбл.Верх, 1, ТекОбл.Низ, 6).ЦветТекста = WebЦвета.Синий;
			ИначеЕсли ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.ТехОперации") Тогда
		    ТабДок.Область(ТекОбл.Верх, 1, ТекОбл.Низ, 6).ЦветТекста = WebЦвета.Коричневый;
			ИначеЕсли ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.ТехОснастка") Тогда
		    ТабДок.Область(ТекОбл.Верх, 1, ТекОбл.Низ, 6).ЦветТекста = WebЦвета.Коричневый;
			КонецЕсли;
				Если Нормы.Норма = 0 Тогда
				ТабДок.Область(ТекОбл.Верх, 1, ТекОбл.Низ, 6).ЦветТекста = WebЦвета.Красный;
				ТабДок.Область(ТекОбл.Верх, 1, ТекОбл.Низ, 6).Шрифт = Новый Шрифт(,,,,,Истина);
				КонецЕсли; 		
		КонецЦикла;	
			Если ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.Номенклатура") Тогда
			Нормы = РегистрыСведений.НормыРасходов.ПолучитьПоследнее(Отчет.Период.ДатаОкончания,Новый Структура("НормаРасходов",НормРасх.Ссылка));
				Если Нормы.Норма > 0 Тогда
				РаскрытьНаМПЗ(НормРасх.Элемент,НормРасх.Позиция);
				КонецЕсли;
			КонецЕсли;
	КонецЦикла;
		Если флВыведен Тогда
		ТабДок.ЗакончитьГруппуСтрок();	
	    КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");	
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.Спецификация = Отчет.Спецификация;
ТабДок.Вывести(ОблШапка);
РаскрытьНаМПЗ(Отчет.Спецификация,"");
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 2;
КонецПроцедуры

&НаСервере
Функция ПроверитьИзменение(ЭтапСпецификации)
Результат = Ложь;	
НормРасх = Справочники.НормыРасходов.Выбрать(,ЭтапСпецификации);
	Пока НормРасх.Следующий() Цикл			
		Если НормРасх.ПометкаУдаления Тогда
		Продолжить;
		КонецЕсли;
	Нормы = РегистрыСведений.НормыРасходов.Выбрать(Отчет.Период.ДатаНачала,Отчет.Период.ДатаОкончания,Новый Структура("НормаРасходов",НормРасх.Ссылка));
	Результат = ?(Результат = Ложь,Нормы.Следующий(),Истина);
		Если ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.Номенклатура") Тогда
		НормыНомен = РегистрыСведений.НормыРасходов.ПолучитьПоследнее(Отчет.Период.ДатаОкончания,Новый Структура("НормаРасходов",НормРасх.Ссылка));
			Если НормыНомен.Норма > 0 Тогда
			Результат = ?(Результат = Ложь,ПроверитьИзменение(НормРасх.Элемент),Истина);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
Возврат(Результат);
КонецФункции

&НаСервере
Процедура НайтиИзмененияНаСервере()
СписокНоменклатуры.Очистить();

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.СтатусыМПЗ.СрезПоследних(&НаДату, ) КАК СтатусыМПЗСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО СтатусыМПЗСрезПоследних.МПЗ = Номенклатура.Ссылка
	|ГДЕ
	|	Номенклатура.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	И СтатусыМПЗСрезПоследних.Статус <> &Статус";
Запрос.УстановитьПараметр("СписокЛинеек", СписокЛинеек);
Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыСпецификаций.Запрещённая);
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ПроверитьИзменение(ВыборкаДетальныеЗаписи.Ссылка) Тогда
		СписокНоменклатуры.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЕсли;
	КонецЦикла;
СписокНоменклатуры.СортироватьПоЗначению();
КонецПроцедуры

&НаСервере
Процедура НайтиИзмененияВПроизводствеНаСервере()
СписокНоменклатуры.Очистить();

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Номенклатура КАК Номенклатура
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	И МаршрутнаяКарта.Статус <> 3";
Запрос.УстановитьПараметр("СписокЛинеек", СписокЛинеек);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ПроверитьИзменение(ВыборкаДетальныеЗаписи.Номенклатура) Тогда
			Если СписокНоменклатуры.НайтиПоЗначению(ВыборкаДетальныеЗаписи.Номенклатура) = Неопределено Тогда
			СписокНоменклатуры.Добавить(ВыборкаДетальныеЗаписи.Номенклатура);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
СписокНоменклатуры.СортироватьПоЗначению();
КонецПроцедуры

&НаКлиенте
Процедура НайтиИзменения(Команда)
Состояние("Обработка...",,"Поиск изменений...");
	Если ТолькоВПроизводстве Тогда
	НайтиИзмененияВПроизводствеНаСервере();	
	Иначе	
	НайтиИзмененияНаСервере();	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
Отчет.Спецификация = Элементы.СписокНоменклатуры.ТекущиеДанные.Значение;
СформироватьНаСервере();
КонецПроцедуры

