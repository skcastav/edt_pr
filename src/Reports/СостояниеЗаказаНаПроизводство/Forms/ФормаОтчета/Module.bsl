
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
ВидСравнения = 1;
	Если Параметры.Свойство("ЗаказНаПроизводство") Тогда
	Отчет.ЗаказНаПроизводство = Параметры.ЗаказНаПроизводство;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоНаИспытаниях(ЗНП,Продукция)
Запрос = Новый Запрос;
             
Количество = 0;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование.ДокументОснование = &ДокументОснование
	|	И ПроизводственноеЗадание.Изделие = &Изделие
	|	И (ПроизводственноеЗадание.Испытания <> 0
	|			ИЛИ ПроизводственноеЗадание.СторонняяПоверка = ИСТИНА)";
Запрос.УстановитьПараметр("ДокументОснование", ЗНП);
Запрос.УстановитьПараметр("Изделие", Продукция);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаПЗ = РезультатЗапроса.Выбрать();
	Пока ВыборкаПЗ.Следующий() Цикл
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВыпускПродукцииПоступление.Номенклатура КАК Номенклатура,
		|	СУММА(ВыпускПродукцииПоступление.Количество) КАК Количество
		|ИЗ
		|	Документ.ВыпускПродукции.Поступление КАК ВыпускПродукцииПоступление
		|ГДЕ
		|	ВыпускПродукцииПоступление.Ссылка.ДокументОснование = &ДокументОснование
		|	И ВыпускПродукцииПоступление.Ссылка.НаСклад = ИСТИНА
		|
		|СГРУППИРОВАТЬ ПО
		|	ВыпускПродукцииПоступление.Номенклатура";
	Запрос.УстановитьПараметр("ДокументОснование", ВыборкаПЗ.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Количество = Количество + ВыборкаДетальныеЗаписи.Количество;
		КонецЦикла;
	КонецЦикла;
Возврат(Количество); 
КонецФункции

&НаСервере
Функция ПолучитьКоличествоГотовоКОтгрузке(ЗНП,Продукция)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РезервированиеГПОстатки.Продукция КАК Продукция,
	|	СУММА(РезервированиеГПОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.РезервированиеГП.Остатки(
	|			,
	|			МестоХранения = &МестоХранения
	|				И Продукция = &Продукция
	|				И Документ = &Документ) КАК РезервированиеГПОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	РезервированиеГПОстатки.Продукция";
Запрос.УстановитьПараметр("Документ", ЗНП);
Запрос.УстановитьПараметр("Продукция", Продукция);
	Если ТипЗнч(Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
	Запрос.УстановитьПараметр("МестоХранения", Продукция.Линейка.МестоХраненияГП);		
	Иначе	
	Запрос.УстановитьПараметр("МестоХранения", Константы.МестоХраненияТНП.Получить());		
	КонецЕсли;
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.КоличествоОстаток);
	КонецЦикла; 
Возврат(0);
КонецФункции 

&НаСервере
Функция ПолучитьКоличествоННС(ЗНП,Продукция)
Запрос = Новый Запрос;
Соотв = Новый Соответствие;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатусыНакладныхНаСборкуСрезПоследних.Статус КАК Статус,
	|	СУММА(НакладнаяНаСборкуТабличнаяЧасть.Количество) КАК Количество
	|ИЗ
	|	РегистрСведений.СтатусыНакладныхНаСборку.СрезПоследних(, ) КАК СтатусыНакладныхНаСборкуСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.НакладнаяНаСборку.ТабличнаяЧасть КАК НакладнаяНаСборкуТабличнаяЧасть
	|		ПО СтатусыНакладныхНаСборкуСрезПоследних.НакладнаяНаСборку = НакладнаяНаСборкуТабличнаяЧасть.Ссылка
	|ГДЕ
	|	НакладнаяНаСборкуТабличнаяЧасть.ЗаказНаПроизводство = &ЗаказНаПроизводство
	|	И НакладнаяНаСборкуТабличнаяЧасть.Продукция = &Продукция
	|	И НакладнаяНаСборкуТабличнаяЧасть.Ссылка.Проведен = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатусыНакладныхНаСборкуСрезПоследних.Статус,
	|	НакладнаяНаСборкуТабличнаяЧасть.Продукция";
Запрос.УстановитьПараметр("ЗаказНаПроизводство", ЗНП);
Запрос.УстановитьПараметр("Продукция", Продукция);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Соотв.Вставить(ВыборкаДетальныеЗаписи.Статус,ВыборкаДетальныеЗаписи.Количество);
	КонецЦикла;
Возврат(Соотв); 
КонецФункции 

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();

ЧисловойТип = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3));
ТаблицаПродукции = Новый ТаблицаЗначений;

ТаблицаПродукции.Колонки.Добавить("Продукция");
ТаблицаПродукции.Колонки.Добавить("Товар");                
ТаблицаПродукции.Колонки.Добавить("ВЭД_ВидДокумента");
ТаблицаПродукции.Колонки.Добавить("ДатаОтгрузкиОбещанная");
ТаблицаПродукции.Колонки.Добавить("Количество",ЧисловойТип);
ТаблицаПродукции.Колонки.Добавить("КоличествоВПроизводстве",ЧисловойТип);
ТаблицаПродукции.Колонки.Добавить("КоличествоНаПСИ",ЧисловойТип);
ТаблицаПродукции.Колонки.Добавить("КоличествоГотовоКОтгрузке",ЧисловойТип);
ТаблицаПродукции.Колонки.Добавить("КоличествоСоздан",ЧисловойТип);
ТаблицаПродукции.Колонки.Добавить("КоличествоНаСборке",ЧисловойТип);
ТаблицаПродукции.Колонки.Добавить("КоличествоСобран",ЧисловойТип);
ТаблицаПродукции.Колонки.Добавить("КоличествоНаУпаковке",ЧисловойТип);
ТаблицаПродукции.Колонки.Добавить("КоличествоОтгружено",ЧисловойТип);

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");
ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблКлиент = Макет.ПолучитьОбласть("Клиент");
ОблКлиентИтого = Макет.ПолучитьОбласть("КлиентИтого");
ОблЗаказ = Макет.ПолучитьОбласть("Заказ");
ОблСтрока = Макет.ПолучитьОбласть("Строка");
ОблКонец = Макет.ПолучитьОбласть("Конец");
           
ОблШапка.Параметры.НаДату = ТекущаяДата();
ТабДок.Вывести(ОблШапка);

Запрос = Новый Запрос;
МВТ = Новый МенеджерВременныхТаблиц;

Запрос.МенеджерВременныхТаблиц = МВТ;
Запрос.Текст = 			
	"ВЫБРАТЬ
	|	ЗаказНаПроизводство.Ссылка КАК Ссылка,
	|	ЗаказНаПроизводство.Контрагент КАК Контрагент,
	|	ЗаказНаПроизводство.Дата КАК Дата
	|ПОМЕСТИТЬ ЗНП
	|ИЗ
	|	Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|ГДЕ
	|	ЗаказНаПроизводство.Закрыт = ЛОЖЬ"; 
	Если Не Отчет.ЗаказНаПроизводство.Пустая() Тогда
	Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Отчет.ЗаказНаПроизводство);
	Иначе
    	Если ВыводитьВЭД = 1 Тогда
	 	Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.ВЭД = &ВЭД";
		Запрос.УстановитьПараметр("ВЭД", Истина);
    	ИначеЕсли ВыводитьВЭД = 2 Тогда
	 	Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.ВЭД = &ВЭД";
		Запрос.УстановитьПараметр("ВЭД", Ложь);						
		КонецЕсли;
			Если СписокКонтрагентов.Количество() > 0 Тогда
			Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.Контрагент В ИЕРАРХИИ(&СписокКонтрагентов)";
			Запрос.УстановитьПараметр("СписокКонтрагентов", СписокКонтрагентов);
			КонецЕсли;
				Если ЛинейкаУпаковки > 0 Тогда
				Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.ЛинейкаУпаковки = &ЛинейкаУпаковки";
				Запрос.УстановитьПараметр("ЛинейкаУпаковки", ЛинейкаУпаковки);
				КонецЕсли;
	КонецЕсли;
Запрос.Текст = Запрос.Текст + " ИНДЕКСИРОВАТЬ ПО Ссылка";
Запрос.Выполнить();
           
Запрос.МенеджерВременныхТаблиц = МВТ;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоЗаказ.Продукция КАК Продукция,
	|	ЗаказНаПроизводствоЗаказ.Товар КАК Товар,
	|	ЗаказНаПроизводствоЗаказ.КоличествоВЗаказе КАК КоличествоВЗаказе,
	|	ЗаказНаПроизводствоЗаказ.СрокПоставки КАК СрокПоставки,
	|	ЗаказНаПроизводствоЗаказ.ДатаОтгрузкиОбещанная КАК ДатаОтгрузкиОбещанная,
	|	ЗаказНаПроизводствоЗаказ.ВЭД_ВидДокумента КАК ВЭД_ВидДокумента,
	|	ЗНП.Ссылка КАК Ссылка,
	|	ЗНП.Контрагент КАК Контрагент,
	|	ЗНП.Дата КАК Дата,                                                   
	|	ДолгиОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	СУММА(ПланыВыпускаОстатки.КоличествоОстаток) КАК КоличествоОстатокПВ,
	|	ISNULL(СУММА(КорректировкаЗаказаНаПроизводствоТабличнаяЧасть.Количество),0) КАК КоличествоКорректировки
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Заказ КАК ЗаказНаПроизводствоЗаказ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗНП КАК ЗНП
	|		ПО ЗаказНаПроизводствоЗаказ.Ссылка = ЗНП.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Долги.Остатки(&НаДату, ) КАК ДолгиОстатки
	|		ПО ЗаказНаПроизводствоЗаказ.Продукция = ДолгиОстатки.Продукция
	|			И ЗаказНаПроизводствоЗаказ.Ссылка = ДолгиОстатки.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПланыВыпуска.Остатки КАК ПланыВыпускаОстатки
	|		ПО ЗаказНаПроизводствоЗаказ.Ссылка = ПланыВыпускаОстатки.МаршрутнаяКарта.ДокументОснование
	|			И ЗаказНаПроизводствоЗаказ.Продукция = ПланыВыпускаОстатки.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаЗаказаНаПроизводство.ТабличнаяЧасть КАК КорректировкаЗаказаНаПроизводствоТабличнаяЧасть
	|		ПО ЗаказНаПроизводствоЗаказ.Ссылка = КорректировкаЗаказаНаПроизводствоТабличнаяЧасть.Ссылка.ДокументОснование
	|			И ЗаказНаПроизводствоЗаказ.Товар = КорректировкаЗаказаНаПроизводствоТабличнаяЧасть.Товар
	|ГДЕ
	|	(ДолгиОстатки.КоличествоОстаток > 0
	|			ИЛИ ЗаказНаПроизводствоЗаказ.Продукция = НЕОПРЕДЕЛЕНО)";
	Если СписокТоваров.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводствоЗаказ.Товар В ИЕРАРХИИ(&СписокТоваров)";
	Запрос.УстановитьПараметр("СписокТоваров", СписокТоваров);
	КонецЕсли; 
		Если ЗначениеЗаполнено(ДатаОтгрузкиОбещанная) Тогда
			Если ВидСравнения = 1 Тогда
			Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводствоЗаказ.ДатаОтгрузкиОбещанная <= &ДатаОтгрузкиОбещанная";
			ИначеЕсли ВидСравнения = 2 Тогда
			Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводствоЗаказ.ДатаОтгрузкиОбещанная < &ДатаОтгрузкиОбещанная";	
			ИначеЕсли ВидСравнения = 3 Тогда
			Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводствоЗаказ.ДатаОтгрузкиОбещанная >= &ДатаОтгрузкиОбещанная";
			ИначеЕсли ВидСравнения = 4 Тогда
			Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводствоЗаказ.ДатаОтгрузкиОбещанная > &ДатаОтгрузкиОбещанная";
			ИначеЕсли ВидСравнения = 5 Тогда
			Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводствоЗаказ.ДатаОтгрузкиОбещанная = &ДатаОтгрузкиОбещанная";
			ИначеЕсли ВидСравнения = 6 Тогда
			Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводствоЗаказ.ДатаОтгрузкиОбещанная <> &ДатаОтгрузкиОбещанная";		
			КонецЕсли;
		Запрос.УстановитьПараметр("ДатаОтгрузкиОбещанная", ДатаОтгрузкиОбещанная);
		КонецЕсли;
Запрос.Текст = Запрос.Текст + " СГРУППИРОВАТЬ ПО
								|	ЗаказНаПроизводствоЗаказ.Продукция,
								|	ЗаказНаПроизводствоЗаказ.Товар,
								|	ЗаказНаПроизводствоЗаказ.КоличествоВЗаказе,
								|	ЗаказНаПроизводствоЗаказ.СрокПоставки,
								|	ЗаказНаПроизводствоЗаказ.ДатаОтгрузкиОбещанная,
								|	ЗаказНаПроизводствоЗаказ.ВЭД_ВидДокумента,
								|	ДолгиОстатки.КоличествоОстаток,		
								|	ЗНП.Ссылка,
								|	ЗНП.Дата,
								|	ЗНП.Контрагент
								|УПОРЯДОЧИТЬ ПО
								|	ЗНП.Контрагент,
								|	ЗНП.Дата,
								|	ЗаказНаПроизводствоЗаказ.Товар.Наименование
								|ИТОГИ ПО
								|	ЗНП.Контрагент,
								|	ЗНП.Ссылка";
Запрос.УстановитьПараметр("НаДату",ТекущаяДата());
РезультатЗапроса = Запрос.Выполнить();
ВыборкаКонтрагент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
КоличествоВсего = 0;	
КоличествоВПроизводствеВсего = 0;
КоличествоНаПСИВсего = 0;	
КоличествоГотовоКОтгрузкеВсего = 0;
КоличествоСозданВсего = 0;	
КоличествоНаСборкеВсего = 0;	
КоличествоСобранВсего = 0;	
КоличествоНаУпаковкеВсего = 0;	
КоличествоОтгруженоВсего = 0;
	Пока ВыборкаКонтрагент.Следующий() Цикл
	КоличествоИтого = 0;	
	КоличествоВПроизводствеИтого = 0;
	КоличествоНаПСИИтого = 0;	
	КоличествоГотовоКОтгрузкеИтого = 0;
	КоличествоСозданИтого = 0;	
	КоличествоНаСборкеИтого = 0;	
	КоличествоСобранИтого = 0;	
	КоличествоНаУпаковкеИтого = 0;	
	КоличествоОтгруженоИтого = 0; 
	флВыведен = Ложь;
	ВыборкаЗНП = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаЗНП.Следующий() Цикл
		ТаблицаПродукции.Очистить();
		ЗНП = ВыборкаЗНП.Ссылка;
		ВыборкаТовары = ВыборкаЗНП.Выбрать();
			Пока ВыборкаТовары.Следующий() Цикл
			КоличествоВПроизводстве = 0;
			КоличествоНаПСИ = 0;
			КоличествоОтгружено = 0;
 			КоличествоГотовоКОтгрузке = 0;
			КоличествоСоздан = 0;
			КоличествоНаСборке = 0;
			КоличествоСобран = 0;
			КоличествоНаУпаковке = 0;
			Продукция = ВыборкаТовары.Продукция;
			Товар = ВыборкаТовары.Товар;
			Количество = ВыборкаТовары.КоличествоВЗаказе - ВыборкаТовары.КоличествоКорректировки;
				Если ЗначениеЗаполнено(Продукция) Тогда
                КоличествоОтгружено = Количество - ВыборкаТовары.КоличествоОстаток;
					Если Количество <= КоличествоОтгружено Тогда
					Продолжить;
					КонецЕсли; 
						Если ТипЗнч(Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
                        КоличествоВПроизводстве = ВыборкаТовары.КоличествоОстатокПВ;
						КоличествоНаПСИ = ПолучитьКоличествоНаИспытаниях(ЗНП,Продукция);			
						Иначе
					    КоличествоВПроизводстве = 0;
						КоличествоНаПСИ = 0;
						КонецЕсли;
							Если ПоказатьВПроизводстве Тогда
								Если КоличествоВПроизводстве = 0 Тогда
								Продолжить;
								КонецЕсли; 
							КонецЕсли;
				КоличествоГотовоКОтгрузке = ПолучитьКоличествоГотовоКОтгрузке(ЗНП,Продукция) - КоличествоНаПСИ;
				СтатусыННС = ПолучитьКоличествоННС(ЗНП,Продукция);
				КоличествоСоздан = СтатусыННС.Получить(Перечисления.СтатусыНакладнойНаСборку.Создан);
				КоличествоНаСборке =  СтатусыННС.Получить(Перечисления.СтатусыНакладнойНаСборку.НаСборке);
				КоличествоСобран =  СтатусыННС.Получить(Перечисления.СтатусыНакладнойНаСборку.Собран);
				КоличествоНаУпаковке =  СтатусыННС.Получить(Перечисления.СтатусыНакладнойНаСборку.НаУпаковке);
				Иначе
					Если ПоказатьВПроизводстве Тогда
					Продолжить;
					КонецЕсли;				
				КонецЕсли;
			ТЧ = ТаблицаПродукции.Добавить();
			ТЧ.Товар = Товар;            
			ТЧ.ВЭД_ВидДокумента = ВыборкаТовары.ВЭД_ВидДокумента;
			ТЧ.ДатаОтгрузкиОбещанная = ВыборкаТовары.ДатаОтгрузкиОбещанная;
			ТЧ.Количество = Количество;
				Если ЗначениеЗаполнено(Продукция) Тогда	
				ТЧ.Продукция = Продукция;
				ТЧ.КоличествоВПроизводстве = КоличествоВПроизводстве;
				ТЧ.КоличествоНаПСИ = КоличествоНаПСИ;
				ТЧ.КоличествоГотовоКОтгрузке = КоличествоГотовоКОтгрузке;
				ТЧ.КоличествоСоздан = КоличествоСоздан;
				ТЧ.КоличествоНаСборке = КоличествоНаСборке;
				ТЧ.КоличествоСобран = КоличествоСобран;
				ТЧ.КоличествоНаУпаковке = КоличествоНаУпаковке;
				ТЧ.КоличествоОтгружено = КоличествоОтгружено;
				КонецЕсли;
			КонецЦикла;
				Если ТаблицаПродукции.Количество() > 0 Тогда
					Если Не флВыведен Тогда
					ОблКлиент.Параметры.Клиент = ВыборкаКонтрагент.Контрагент;
					ТабДок.Вывести(ОблКлиент);
					ТабДок.НачатьГруппуСтрок("Клиенты",Истина);
					флВыведен = Истина;
					КонецЕсли;
				ОблЗаказ.Параметры.Номер = СокрЛП(ЗНП.Номер);
				ОблЗаказ.Параметры.Дата = ЗНП.Дата;
				ОблЗаказ.Параметры.ЗНП = ЗНП;
				ОблЗаказ.Параметры.ДатаРазрешенияОтгрузки = Формат(ЗНП.ДатаОтгрузки,"ДФ=dd.MM.yyyy");
				ОблЗаказ.Параметры.ДатаОтгрузки = Формат(ЗНП.ДатаОтгрузкиОбещанная,"ДФ=dd.MM.yyyy");
				ОблЗаказ.Параметры.ДатаРассылки = Формат(ЗНП.ДатаРассылки,"ДФ=dd.MM.yyyy");
				ОблЗаказ.Параметры.Количество = ТаблицаПродукции.Итог("Количество");
				ОблЗаказ.Параметры.КоличествоВПроизводстве = ТаблицаПродукции.Итог("КоличествоВПроизводстве");
				ОблЗаказ.Параметры.КоличествоНаПСИ = ТаблицаПродукции.Итог("КоличествоНаПСИ");
				ОблЗаказ.Параметры.КоличествоГотовоКОтгрузке = ТаблицаПродукции.Итог("КоличествоГотовоКОтгрузке");
				ОблЗаказ.Параметры.КоличествоСоздан = ТаблицаПродукции.Итог("КоличествоСоздан");
				ОблЗаказ.Параметры.КоличествоНаСборке = ТаблицаПродукции.Итог("КоличествоНаСборке");
				ОблЗаказ.Параметры.КоличествоСобран = ТаблицаПродукции.Итог("КоличествоСобран");
				ОблЗаказ.Параметры.КоличествоНаУпаковке = ТаблицаПродукции.Итог("КоличествоНаУпаковке");
				ОблЗаказ.Параметры.КоличествоОтгружено = ТаблицаПродукции.Итог("КоличествоОтгружено");
				ТабДок.Вывести(ОблЗаказ);
				ТабДок.НачатьГруппуСтрок("ЗНП",Истина);	
					Для каждого ТЧ Из ТаблицаПродукции Цикл
					ОблСтрока.Параметры.НаименованиеТовар = СокрЛП(ТЧ.Товар.Наименование);
					ОблСтрока.Параметры.Товар = ТЧ.Товар;
						Если ТЧ.Продукция <> Неопределено Тогда
						ОблСтрока.Параметры.НаименованиеПродукция = СокрЛП(ТЧ.Продукция.Наименование);
						ОблСтрока.Параметры.Продукция = ТЧ.Продукция;
							Если ТипЗнч(ТЧ.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
							ОблСтрока.Параметры.Линейка = ТЧ.Продукция.Линейка;
							ОблСтрока.Параметры.ЗапрещеноКОтгрузке = ?(ТЧ.Продукция.ЗапрещеноКОтгрузке,"+","");
							Иначе
							ОблСтрока.Параметры.Продукция = "";
							ОблСтрока.Параметры.Линейка = "";
							ОблСтрока.Параметры.ЗапрещеноКОтгрузке = "";			
							КонецЕсли;
						Иначе
						ОблСтрока.Параметры.НаименованиеПродукция = "";
						ОблСтрока.Параметры.Продукция = "";
						ОблСтрока.Параметры.Линейка = "";			
						КонецЕсли;
					ОблСтрока.Параметры.ГрупповаяУпаковка = ?(ТЧ.Товар.ТоварнаяГруппа.ГрупповаяУпаковка,"+","");
					ОблСтрока.Параметры.Количество = ТЧ.Количество;
					ОблСтрока.Параметры.КоличествоВПроизводстве = ТЧ.КоличествоВПроизводстве;
					ОблСтрока.Параметры.КоличествоНаПСИ = ТЧ.КоличествоНаПСИ;
					ОблСтрока.Параметры.КоличествоГотовоКОтгрузке = ТЧ.КоличествоГотовоКОтгрузке;
					ОблСтрока.Параметры.КоличествоСоздан = ТЧ.КоличествоСоздан;
					ОблСтрока.Параметры.КоличествоНаСборке = ТЧ.КоличествоНаСборке;
					ОблСтрока.Параметры.КоличествоСобран = ТЧ.КоличествоСобран;
					ОблСтрока.Параметры.КоличествоНаУпаковке = ТЧ.КоличествоНаУпаковке;
					ОблСтрока.Параметры.КоличествоОтгружено = ТЧ.КоличествоОтгружено;
					ОблСтрока.Параметры.ДатаОтгрузки = Формат(ТЧ.ДатаОтгрузкиОбещанная,"ДФ=dd.MM.yyyy");
					ОблСтрока.Параметры.ВЭД_ВидДокумента = ТЧ.ВЭД_ВидДокумента;
					ТабДок.Вывести(ОблСтрока);
					КоличествоИтого = КоличествоИтого + ТЧ.Количество;	
					КоличествоВПроизводствеИтого = КоличествоВПроизводствеИтого + ТЧ.КоличествоВПроизводстве;
					КоличествоНаПСИИтого = КоличествоНаПСИИтого + ТЧ.КоличествоНаПСИ;	
					КоличествоГотовоКОтгрузкеИтого = КоличествоГотовоКОтгрузкеИтого + ТЧ.КоличествоГотовоКОтгрузке;
					КоличествоСозданИтого = КоличествоСозданИтого + ТЧ.КоличествоСоздан;	
					КоличествоНаСборкеИтого = КоличествоНаСборкеИтого + ТЧ.КоличествоНаСборке;	
					КоличествоСобранИтого = КоличествоСобранИтого + ТЧ.КоличествоСобран;	
					КоличествоНаУпаковкеИтого = КоличествоНаУпаковкеИтого + ТЧ.КоличествоНаУпаковке;	
					КоличествоОтгруженоИтого =  КоличествоОтгруженоИтого + ТЧ.КоличествоОтгружено;
					КонецЦикла; 
				ТабДок.ЗакончитьГруппуСтрок();
				КонецЕсли;
		КонецЦикла; 
			Если Не флВыведен Тогда
			Продолжить;
			КонецЕсли;
	ТабДок.ЗакончитьГруппуСтрок();
	ОблКлиентИтого.Параметры.Количество = КоличествоИтого;	
	ОблКлиентИтого.Параметры.КоличествоВПроизводстве = КоличествоВПроизводствеИтого;
	ОблКлиентИтого.Параметры.КоличествоНаПСИ = КоличествоНаПСИИтого;	
	ОблКлиентИтого.Параметры.КоличествоГотовоКОтгрузке = КоличествоГотовоКОтгрузкеИтого;
	ОблКлиентИтого.Параметры.КоличествоСоздан = КоличествоСозданИтого;	
	ОблКлиентИтого.Параметры.КоличествоНаСборке = КоличествоНаСборкеИтого;	
	ОблКлиентИтого.Параметры.КоличествоСобран = КоличествоСобранИтого;	
	ОблКлиентИтого.Параметры.КоличествоНаУпаковке = КоличествоНаУпаковкеИтого;	
	ОблКлиентИтого.Параметры.КоличествоОтгружено = КоличествоОтгруженоИтого; 
	ТабДок.Вывести(ОблКлиентИтого);
	КоличествоВсего = КоличествоВсего + КоличествоИтого;	
	КоличествоВПроизводствеВсего = КоличествоВПроизводствеВсего + КоличествоВПроизводствеИтого;
	КоличествоНаПСИВсего = КоличествоНаПСИВсего + КоличествоНаПСИИтого;	
	КоличествоГотовоКОтгрузкеВсего = КоличествоГотовоКОтгрузкеВсего + КоличествоГотовоКОтгрузкеИтого;
	КоличествоСозданВсего = КоличествоСозданВсего + КоличествоСозданИтого;	
	КоличествоНаСборкеВсего = КоличествоНаСборкеВсего + КоличествоНаСборкеИтого;	
	КоличествоСобранВсего = КоличествоСобранВсего + КоличествоСобранИтого;	
	КоличествоНаУпаковкеВсего = КоличествоНаУпаковкеВсего + КоличествоНаУпаковкеИтого;	
	КоличествоОтгруженоВсего = КоличествоОтгруженоВсего + КоличествоОтгруженоИтого;
	КонецЦикла; 
ОблКонец.Параметры.Количество = КоличествоВсего;	
ОблКонец.Параметры.КоличествоВПроизводстве = КоличествоВПроизводствеВсего;
ОблКонец.Параметры.КоличествоНаПСИ = КоличествоНаПСИВсего;	
ОблКонец.Параметры.КоличествоГотовоКОтгрузке = КоличествоГотовоКОтгрузкеВсего;
ОблКонец.Параметры.КоличествоСоздан = КоличествоСозданВсего;	
ОблКонец.Параметры.КоличествоНаСборке = КоличествоНаСборкеВсего;	
ОблКонец.Параметры.КоличествоСобран = КоличествоСобранВсего;	
ОблКонец.Параметры.КоличествоНаУпаковке = КоличествоНаУпаковкеВсего;	
ОблКонец.Параметры.КоличествоОтгружено = КоличествоОтгруженоВсего;
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 2;
ТабДок.ФиксацияСлева = 1;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
Состояние("Обработка...",,"Формирование отчёта...");
СформироватьНаСервере();
КонецПроцедуры
