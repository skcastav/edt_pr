
&НаСервере
Функция ПолучитьДатуПоступленияНаЛинейку(ПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеНаЛинейку.Дата КАК Дата
	|ИЗ
	|	Документ.ПоступлениеНаЛинейку КАК ПоступлениеНаЛинейку
	|ГДЕ
	|	ПоступлениеНаЛинейку.ДокументОснование.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", ПЗ.ДокументОснование);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.Дата);
	КонецЦикла;
Возврат(Дата(1,1,1));
КонецФункции 

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();
СписокРМ.Очистить();

Запрос = Новый Запрос;
ЗапросПЗ = Новый Запрос;
ЗапросРемонт = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РабочиеМестаЛинеек.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.РабочиеМестаЛинеек КАК РабочиеМестаЛинеек
	|ГДЕ
	|	РабочиеМестаЛинеек.Линейка = &Линейка
	|	И РабочиеМестаЛинеек.ПометкаУдаления = ЛОЖЬ
	|	И РабочиеМестаЛинеек.ЭтоГруппа = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	РабочиеМестаЛинеек.Код";	
Запрос.УстановитьПараметр("Линейка",Отчет.Линейка);
Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	СписокРМ.Добавить(Выборка.Ссылка);
	КонецЦикла;
ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");
ОблШапкаОбщие = Макет.ПолучитьОбласть("Шапка|Общие");
ОблШапкаПараметр = Макет.ПолучитьОбласть("Шапка|Параметр");	
ОблШапкаПоступление = Макет.ПолучитьОбласть("Шапка|Поступление");
ОблПЗОбщие = Макет.ПолучитьОбласть("ПЗ|Общие");
ОблПЗПараметр = Макет.ПолучитьОбласть("ПЗ|Параметр");
ОблПЗПоступление = Макет.ПолучитьОбласть("ПЗ|Поступление");
ОблКонецОбщие = Макет.ПолучитьОбласть("Конец|Общие");
ОблКонецПараметр = Макет.ПолучитьОбласть("Конец|Параметр");
ОблКонецПоступление = Макет.ПолучитьОбласть("Конец|Поступление");

ОблШапкаОбщие.Параметры.ДатаНач = Формат(Отчет.Период.ДатаНачала,"ДФ=dd.MM.yyyy");
ОблШапкаОбщие.Параметры.ДатаКон = Формат(Отчет.Период.ДатаОкончания,"ДФ=dd.MM.yyyy");
ОблШапкаОбщие.Параметры.Линейка = ""+Отчет.Линейка+" ("+Отчет.Линейка.Комментарий+")";
ТабДок.Вывести(ОблШапкаОбщие);
	Для каждого РМ Из СписокРМ Цикл
	ОблШапкаПараметр.Параметры.РМ = РМ.Значение;
	ТабДок.Присоединить(ОблШапкаПараметр);	
	КонецЦикла;
ТабДок.Присоединить(ОблШапкаПоступление);

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭтапыПроизводственныхЗаданий.ПЗ КАК ПЗ,
		|	ЭтапыПроизводственныхЗаданий.РабочееМесто КАК РабочееМесто,
		|	ЭтапыПроизводственныхЗаданий.ДатаНачала КАК ДатаНачала,
		|	ЭтапыПроизводственныхЗаданий.ДатаОкончания КАК ДатаОкончания
		|ИЗ
		|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
		|ГДЕ
		|	ЭтапыПроизводственныхЗаданий.РабочееМесто В(&СписокРМ)
		|	И (ЭтапыПроизводственныхЗаданий.ДатаНачала МЕЖДУ &ДатаНач И &ДатаКон
		|			ИЛИ ЭтапыПроизводственныхЗаданий.ДатаОкончания МЕЖДУ &ДатаНач И &ДатаКон)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтапыПроизводственныхЗаданий.ПЗ.Дата
		|ИТОГИ ПО
		|	ПЗ";
	Запрос.УстановитьПараметр("СписокРМ",СписокРМ);
	Запрос.УстановитьПараметр("ДатаНач",Отчет.Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКон",Отчет.Период.ДатаОкончания);
	Результат = Запрос.Выполнить();
	ВыборкаПЗ = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПЗ.Следующий() Цикл
		Выборка = ВыборкаПЗ.Выбрать();
		ОблПЗОбщие.Параметры.НомерПЗ = ВыборкаПЗ.ПЗ.Номер;
		ОблПЗОбщие.Параметры.ПЗ = ВыборкаПЗ.ПЗ;
		ОблПЗОбщие.Параметры.Количество = ВыборкаПЗ.ПЗ.Количество;
		ОблПЗОбщие.Параметры.ДатаСоздания = ВыборкаПЗ.ПЗ.Дата;
		ОблПЗОбщие.Параметры.Наименование = СокрЛП(ВыборкаПЗ.ПЗ.Изделие.Наименование);
		ОблПЗОбщие.Параметры.Изделие = ВыборкаПЗ.ПЗ.Изделие;		
		ТабДок.Вывести(ОблПЗОбщие);
			Для каждого РМ Из СписокРМ Цикл	
			Выборка.Сбросить();
				Если Выборка.НайтиСледующий(Новый Структура("ПЗ,РабочееМесто",ВыборкаПЗ.ПЗ,РМ.Значение)) Тогда
				ВремяПараметра = 0;
					Если ЗначениеЗаполнено(Выборка.ДатаНачала)и ЗначениеЗаполнено(Выборка.ДатаОкончания) Тогда
					ВремяПараметра = ОбщийМодульВызовСервера.ПолучитьВремяМеждуДатами(Выборка.ДатаНачала,Выборка.ДатаОкончания,2,Отчет.ВычестьНерабочееВремя,Отчет.КолНерабочихЧасов,Отчет.БезВыходных);				
					КонецЕсли; 
				ОблПЗПараметр.Параметры.ДатаОт = Выборка.ДатаНачала;
				ОблПЗПараметр.Параметры.ДатаДо = Выборка.ДатаОкончания;
				ОблПЗПараметр.Параметры.Время = Формат(ВремяПараметра,"ЧЦ=9; ЧДЦ=3");
					Если Найти(РМ.Значение.Наименование,"Установка") > 0 Тогда
					ОблПЗПараметр.Параметры.НВ = РегистрыСведений.НормыSMD.ПолучитьПоследнее(ВыборкаПЗ.ПЗ.Дата,Новый Структура("МПЗ",ВыборкаПЗ.ПЗ.Изделие)).НормаВремени;
					ИначеЕсли Найти(РМ.Значение.Наименование,"Электроконтроль") > 0 Тогда
					ОблПЗПараметр.Параметры.НВ = РегистрыСведений.НормыЭлектроконтроля.ПолучитьПоследнее(ВыборкаПЗ.ПЗ.Дата,Новый Структура("МПЗ",ВыборкаПЗ.ПЗ.Изделие)).НормаВремени;
					Иначе
				    ОблПЗПараметр.Параметры.НВ = "";
					КонецЕсли; 
				ЗапросРемонт.Текст = 
					"ВЫБРАТЬ ПЕРВЫЕ 1
					|	РемонтнаяКарта.Ссылка КАК Ссылка
					|ИЗ
					|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
					|ГДЕ
					|	РемонтнаяКарта.ДокументОснование = &ДокументОснование
					|	И РемонтнаяКарта.РабочееМесто = &РабочееМесто";	
				ЗапросРемонт.УстановитьПараметр("ДокументОснование",ВыборкаПЗ.ПЗ);
				ЗапросРемонт.УстановитьПараметр("РабочееМесто",РМ.Значение);
				РезультатРемонт = ЗапросРемонт.Выполнить();
					Если Не РезультатРемонт.Пустой() Тогда
					ОблПЗПараметр.Параметры.Ремонт = "*";
					ОблПЗПараметр.Параметры.ПараметрыРемонтов = Новый Структура("РабочееМесто,ПЗ",РМ.Значение,ВыборкаПЗ.ПЗ);
					Иначе
					ОблПЗПараметр.Параметры.Ремонт = "";
					ОблПЗПараметр.Параметры.ПараметрыРемонтов = "";					
					КонецЕсли; 
				Иначе
				ОблПЗПараметр.Параметры.ДатаОт = "";
				ОблПЗПараметр.Параметры.ДатаДо = "";
				ОблПЗПараметр.Параметры.Время = "";
				ОблПЗПараметр.Параметры.НВ = "";
				ОблПЗПараметр.Параметры.Ремонт = "";
				ОблПЗПараметр.Параметры.ПараметрыРемонтов = "";			 							
				КонецЕсли;
			ТабДок.Присоединить(ОблПЗПараметр); 							
			КонецЦикла;
		ОблПЗПоступление.Параметры.ДатаПоступления = ПолучитьДатуПоступленияНаЛинейку(ВыборкаПЗ.ПЗ);	
		ТабДок.Присоединить(ОблПЗПоступление);	
		КонецЦикла;
ТабДок.Вывести(ОблКонецОбщие);
	Для каждого РМ Из СписокРМ Цикл
	ТабДок.Присоединить(ОблКонецПараметр);	
	КонецЦикла;
ТабДок.Присоединить(ОблКонецПоступление);
ТабДок.ФиксацияСверху = 4;
ТабДок.ФиксацияСлева = 3;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
СформироватьНаСервере();
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокРемонтов(Расшифровка)
ЗапросРемонт = Новый Запрос;
СписокРемонтов = Новый СписокЗначений;

ЗапросРемонт.Текст = 
	"ВЫБРАТЬ
	|	РемонтнаяКарта.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
	|ГДЕ
	|	РемонтнаяКарта.ДокументОснование = &ДокументОснование
	|	И РемонтнаяКарта.РабочееМесто = &РабочееМесто";	
ЗапросРемонт.УстановитьПараметр("ДокументОснование",Расшифровка.ПЗ);
ЗапросРемонт.УстановитьПараметр("РабочееМесто",Расшифровка.РабочееМесто);
РезультатРемонт = ЗапросРемонт.Выполнить();
ВыборкаРемонты = РезультатРемонт.Выбрать();		
	Пока ВыборкаРемонты.Следующий() Цикл
	СписокРемонтов.Добавить(ВыборкаРемонты.Ссылка);	
	КонецЦикла;
Возврат(СписокРемонтов);
КонецФункции 

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
ИмяКолонки = СокрЛП(Сред(Элемент.ТекущаяОбласть.Имя,Найти(Элемент.ТекущаяОбласть.Имя,"C")));
НомерКолонки = Число(Сред(ИмяКолонки,2));
	Если НомерКолонки > 4 Тогда
	СтандартнаяОбработка = Ложь;
	СписокРемонтов = ПолучитьСписокРемонтов(Расшифровка);
	Выборка = СписокРемонтов.ВыбратьЭлемент("Выберите ремонтную карту");
		Если Выборка <> Неопределено Тогда
		ОткрытьФорму("Документ.РемонтнаяКарта.ФормаОбъекта",Новый Структура("Ключ",Выборка.Значение));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

