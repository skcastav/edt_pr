
&НаСервере
Функция ПолучитьКоличествоКПроизводству(ЗНП,Товар)
Запрос = Новый Запрос;
Парам = Новый Структура("ЗНП,Продукция,Количество",Неопределено,0);

Парам.ЗНП = ЗНП;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоЗаказ.Продукция КАК Продукция,
	|	ЗаказНаПроизводствоЗаказ.Количество КАК Количество,
	|	ЗаказНаПроизводствоЗаказ.КоличествоВЗаказе КАК КоличествоВЗаказе
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Заказ КАК ЗаказНаПроизводствоЗаказ
	|ГДЕ
	|	ЗаказНаПроизводствоЗаказ.Ссылка = &Ссылка
	|	И ЗаказНаПроизводствоЗаказ.Товар = &Товар";
Запрос.УстановитьПараметр("Ссылка",ЗНП);
Запрос.УстановитьПараметр("Товар",Товар);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Продукция) Тогда
		Парам.Продукция = ВыборкаДетальныеЗаписи.Продукция;
		Парам.Количество = ВыборкаДетальныеЗаписи.Количество;		
		Иначе	
		Парам.Количество = ВыборкаДетальныеЗаписи.КоличествоВЗаказе;
		КонецЕсли; 
	КонецЦикла;
Возврат(Парам);
КонецФункции

&НаСервере
Функция ПолучитьКоличествоВПроизводстве(ЗНП,Продукция)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланыВыпускаОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ПланыВыпуска.Остатки КАК ПланыВыпускаОстатки
	|ГДЕ
	|	ПланыВыпускаОстатки.МаршрутнаяКарта.ДокументОснование = &ДокументОснование
	|	И ПланыВыпускаОстатки.Номенклатура = &Продукция";
Запрос.УстановитьПараметр("ДокументОснование", ЗНП);
Запрос.УстановитьПараметр("Продукция", Продукция);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
Количество = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Количество = Количество + ВыборкаДетальныеЗаписи.КоличествоОстаток;
	КонецЦикла;
Возврат(Количество);
КонецФункции

&НаСервере
Функция ПолучитьКоличествоЗарезервированоВсего(ЗНП,Продукция)
Запрос = Новый Запрос;
СписокМестХранения = Новый СписокЗначений;

СписокМестХранения.Добавить(Константы.МестоХраненияТНП.Получить());
СписокМестХранения.Добавить(Константы.МестоХраненияНеликвидов.Получить());
СписокМестХранения.Добавить(Константы.МестоХраненияПерепрогон.Получить());

КоличествоЗарезервировано = 0;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	РезервированиеГПОбороты.КоличествоПриход КАК КоличествоПриход
	|ИЗ
	|	РегистрНакопления.РезервированиеГП.Обороты КАК РезервированиеГПОбороты
	|ГДЕ
	|	РезервированиеГПОбороты.Документ = &Документ
	|	И РезервированиеГПОбороты.Продукция = &Продукция
	|	И РезервированиеГПОбороты.МестоХранения В (&СписокМестХранения)
	|	И РезервированиеГПОбороты.КоличествоПриход > 0";
Запрос.УстановитьПараметр("Документ", ЗНП);
Запрос.УстановитьПараметр("Продукция", Продукция);
Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	КоличествоЗарезервировано = КоличествоЗарезервировано + ВыборкаДетальныеЗаписи.КоличествоПриход;
	КонецЦикла;
Возврат(КоличествоЗарезервировано);
КонецФункции

&НаСервере
Функция ПолучитьПараметрыРК(РК)
Парам = Новый Структура("ВидБрака,МестоНахожденияБрака","","");
	Для каждого ТЧ Из РК.Неисправности Цикл
	Парам.ВидБрака = Парам.ВидБрака + СокрЛП(ТЧ.ВидБрака.Наименование) + ",";
		Если ТЧ.МестоНахожденияБрака <> Неопределено Тогда
		Парам.МестоНахожденияБрака = Парам.МестоНахожденияБрака + СокрЛП(ТЧ.МестоНахожденияБрака.Наименование) + ",";
		КонецЕсли;
	КонецЦикла; 
Возврат(Парам);
КонецФункции

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();
ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблПричины = Макет.ПолучитьОбласть("Причины");
ОблПричиныИтого = Макет.ПолучитьОбласть("ПричиныИтого");
ОблРК = Макет.ПолучитьОбласть("РК");
ОблМПЗ = Макет.ПолучитьОбласть("МПЗ");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.ДатаНач = Отчет.Период.ДатаНачала;
ОблШапка.Параметры.ДатаКон = Отчет.Период.ДатаОкончания;
ТабДок.Вывести(ОблШапка);

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписаниеМПЗПрочееТабличнаяЧасть.МПЗ КАК МПЗ,
	|	СписаниеМПЗПрочееТабличнаяЧасть.Количество КАК Количество,
	|	СписаниеМПЗПрочееТабличнаяЧасть.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ДокументОснование КАК РК,
	|	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ДокументОснование.ПричинаРемонта КАК ПричинаРемонта,
	|	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ДокументОснование.ПричинаРемонта.Наименование КАК ПричинаРемонтаНаименование
	|ИЗ
	|	Документ.СписаниеМПЗПрочее.ТабличнаяЧасть КАК СписаниеМПЗПрочееТабличнаяЧасть
	|ГДЕ
	|	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ТИПЗНАЧЕНИЯ(СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ДокументОснование) = ТИП(Документ.РемонтнаяКарта)
	|	И СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.Проведен = ИСТИНА";
	Если Не Причина.Пустая() Тогда
	Запрос.Текст = Запрос.Текст + " И СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ДокументОснование.ПричинаРемонта = &ПричинаРемонта";
	Запрос.УстановитьПараметр("ПричинаРемонта",Причина);
	КонецЕсли;
		Если Не Линейка.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ДокументОснование.Линейка = &Линейка";
		Запрос.УстановитьПараметр("Линейка",Линейка);		
		КонецЕсли;
			Если Не Подразделение.Пустая() Тогда
			Запрос.Текст = Запрос.Текст + " И СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ДокументОснование.Подразделение = &Подразделение";
			Запрос.УстановитьПараметр("Подразделение",Подразделение);
			КонецЕсли;
Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО
								|	ПричинаРемонтаНаименование,
								|	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ДокументОснование.Дата,
								|	СписаниеМПЗПрочееТабличнаяЧасть.МПЗ.Наименование
								|ИТОГИ ПО
								|	ПричинаРемонта,
								|	РК"; 
Запрос.УстановитьПараметр("ДатаНач",Отчет.Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон",Отчет.Период.ДатаОкончания);
Результат = Запрос.Выполнить();
ВыборкаПричины = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
ПричиныИтого = 0;
Всего = 0;
	Пока ВыборкаПричины.Следующий() Цикл
	ПричиныИтого = 0;
	ОблПричины.Параметры.Причина = ВыборкаПричины.ПричинаРемонта;
	ТабДок.Вывести(ОблПричины);
	ТабДок.НачатьГруппуСтрок("Причины ремонта",Истина);
	ВыборкаРК = ВыборкаПричины.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаРК.Следующий() Цикл
		ОблРК.Параметры.РК = ВыборкаРК.РК;
		Парам = ПолучитьПараметрыРК(ВыборкаРК.РК);
		ОблРК.Параметры.ВидБрака = Парам.ВидБрака;
		ОблРК.Параметры.МестоНахожденияБрака = Парам.МестоНахожденияБрака;		
		ТабДок.Вывести(ОблРК);
		ТабДок.НачатьГруппуСтрок("Ремонтные карты",Истина);
		ВыборкаДетальныхЗаписей = ВыборкаРК.Выбрать();
			Пока ВыборкаДетальныхЗаписей.Следующий() Цикл
			ОблМПЗ.Параметры.НаименованиеМПЗ = СокрЛП(ВыборкаДетальныхЗаписей.МПЗ.Наименование);	
			ОблМПЗ.Параметры.МПЗ = ВыборкаДетальныхЗаписей.МПЗ;
			ОблМПЗ.Параметры.ЕдиницаИзмерения = СокрЛП(ВыборкаДетальныхЗаписей.МПЗ.ЕдиницаИзмерения.Наименование);
			ОблМПЗ.Параметры.Количество = ПолучитьБазовоеКоличество(ВыборкаДетальныхЗаписей.Количество,ВыборкаДетальныхЗаписей.ЕдиницаИзмерения);
			ОблМПЗ.Параметры.Цена = ОбщийМодульВызовСервера.ПолучитьСтоимостьМПЗ(ВыборкаДетальныхЗаписей.МПЗ,1,ТекущаяДата());
			ОблМПЗ.Параметры.Итого = ОблМПЗ.Параметры.Цена*ОблМПЗ.Параметры.Количество;	
			ТабДок.Вывести(ОблМПЗ);
			ПричиныИтого = ПричиныИтого + ОблМПЗ.Параметры.Итого;
			Всего = Всего + ОблМПЗ.Параметры.Итого;
			КонецЦикла;
		ТабДок.ЗакончитьГруппуСтрок();
		КонецЦикла;
	ТабДок.ЗакончитьГруппуСтрок();
	ОблПричиныИтого.Параметры.Итого = ПричиныИтого;
	ТабДок.Вывести(ОблПричиныИтого);
	КонецЦикла;
ОблКонец.Параметры.Итого = Всего; 
ТабДок.Вывести(ОблКонец);	
ТабДок.ФиксацияСверху = 2;	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	СформироватьНаСервере();
	КонецЕсли; 
КонецПроцедуры
