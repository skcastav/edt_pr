
&НаСервере
Процедура СформироватьПоАРМНаСервере()
ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет1");
 
ОблШапкаОбщие = Макет.ПолучитьОбласть("Шапка|Общие");	
ОблШапкаРабочееМесто = Макет.ПолучитьОбласть("Шапка|РабочееМесто");
ОблШапкаСтенд = Макет.ПолучитьОбласть("Шапка|Стенд");
ОблШапкаРемонт = Макет.ПолучитьОбласть("Шапка|Ремонт");

ОблПЗОбщие = Макет.ПолучитьОбласть("ПЗ|Общие");	
ОблПЗРабочееМесто = Макет.ПолучитьОбласть("ПЗ|РабочееМесто");
ОблПЗСтенд = Макет.ПолучитьОбласть("ПЗ|Стенд");
ОблПЗРемонт = Макет.ПолучитьОбласть("ПЗ|Ремонт");
	
ОблКонецОбщие = Макет.ПолучитьОбласть("Конец|Общие");	
ОблКонецРабочееМесто = Макет.ПолучитьОбласть("Конец|РабочееМесто");
ОблКонецСтенд = Макет.ПолучитьОбласть("Конец|Стенд");
ОблКонецРемонт = Макет.ПолучитьОбласть("Конец|Ремонт");

ОблШапкаОбщие.Параметры.НаДату = Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
ОблШапкаОбщие.Параметры.Линейка = ""+Отчет.Линейка + " ("+Отчет.Линейка.Комментарий+")";
ТабДок.Вывести(ОблШапкаОбщие);
	Для каждого РМ Из СписокРМ Цикл
		Если СокрЛП(РМ.Значение.ГруппаРабочихМест.Префикс) = "СТ" Тогда
		ОблШапкаСтенд.Параметры.РабочееМесто = РМ.Значение;
		ТабДок.Присоединить(ОблШапкаСтенд);
		Иначе
		ОблШапкаРабочееМесто.Параметры.РабочееМесто = РМ.Значение;
		ТабДок.Присоединить(ОблШапкаРабочееМесто);
		КонецЕсли; 
	КонецЦикла;
		Если ПоказыватьРемонт Тогда
		ТабДок.Присоединить(ОблШапкаРемонт);
		КонецЕсли;

ЗапросЛО = Новый Запрос;
ЗапросЛО.Текст = 
	"ВЫБРАТЬ
	|	ЛьготнаяОчередь.ПЗ
	|ИЗ
	|	РегистрСведений.ЛьготнаяОчередь КАК ЛьготнаяОчередь
	|ГДЕ
	|	ЛьготнаяОчередь.ПЗ.ДатаЗапуска = ДАТАВРЕМЯ(1,1,1,0,0,0)";
РезультатЗапроса = ЗапросЛО.Выполнить();
ВыборкаЛО = РезультатЗапроса.Выбрать();

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданий.ПЗ КАК Ссылка,
	|	ЭтапыПроизводственныхЗаданий.ПЗ.ДокументОснование КАК МТК,
	|	ЭтапыПроизводственныхЗаданий.Изделие.Товар КАК Товар,
	|	ЭтапыПроизводственныхЗаданий.ПЗ.ДокументОснование.Номер КАК НомерМТК
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданий.РабочееМесто = &РабочееМесто
	|	И ЭтапыПроизводственныхЗаданий.ДатаОкончания МЕЖДУ &ДатаНач И &ДатаКон";
	Если СписокНоменклатуры.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ЭтапыПроизводственныхЗаданий.ПЗ.Изделие В ИЕРАРХИИ(&СписокИзделий)";
	КонецЕсли;
		Если Не ПоказыватьРемонт Тогда
		Запрос.Текст = Запрос.Текст + " И ЭтапыПроизводственныхЗаданий.ПЗ.ДокументОснование.Ремонт = ЛОЖЬ";
		КонецЕсли;  
Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ЭтапыПроизводственныхЗаданий.ДатаОкончания";
Запрос.УстановитьПараметр("РабочееМесто",РабочееМесто);
Запрос.УстановитьПараметр("ДатаНач",Отчет.Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон",Отчет.Период.ДатаОкончания);
Запрос.УстановитьПараметр("СписокИзделий",СписокНоменклатуры);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
НомСтр = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	НомСтр = НомСтр + 1;
	ОблПЗОбщие.Параметры.НомСтр = НомСтр;
		Если Не ВыборкаДетальныеЗаписи.Товар.Пустая() Тогда
		ОблПЗОбщие.Параметры.Спецификация = СокрЛП(ВыборкаДетальныеЗаписи.Товар.Наименование);
		Иначе
		ОблПЗОбщие.Параметры.Спецификация = СокрЛП(ВыборкаДетальныеЗаписи.МТК.Номенклатура.Наименование);
		КонецЕсли;
	СтатусРемонта = "";
	ПЗ = ВыборкаДетальныеЗаписи.Ссылка;				
    ОблПЗОбщие.Параметры.ПЗ = ПЗ;
	ОблПЗОбщие.Параметры.НомерПЗ = ПЗ.Номер;
	ОблПЗОбщие.Параметры.ВозвратнаяТара = СокрЛП(ПЗ.ВозвратнаяТара);
	ОблПЗОбщие.Параметры.БарКод = ПЗ.БарКод;
	ОблПЗОбщие.Параметры.КодDanfoss = ОбщийМодульВызовСервера.ПолучитьКодDanfoss(ПЗ.БарКод);
	ОблПЗОбщие.Параметры.Счёт = ПЗ.ДокументОснование.Счёт;
	ОблПЗОбщие.Параметры.ДатаОтгрузки = Формат(ПЗ.ДокументОснование.ДатаОтгрузки,"ДФ=dd.MM.yyyy");
	ВыборкаЛО.Сбросить();
	СтуктураПоиска = Новый Структура("ПЗ",ПЗ);
		Если ВыборкаЛО.НайтиСледующий(СтуктураПоиска) Тогда
		ЛО = "ЛО";
		Иначе
		ЛО = "";
		КонецЕсли; 
	ОблПЗОбщие.Параметры.ЛО = ЛО;
	ТабДок.Вывести(ОблПЗОбщие);
	Отбор = Новый Структура("ПЗ",ПЗ);
		Для каждого РМ Из СписокРМ Цикл	
		ДатаНачала = "";
		ДатаОкончания = "";
			Если СокрЛП(РМ.Значение.ГруппаРабочихМест.Префикс) = "СТ" Тогда
			ТекПЗ = РегистрыСведений.СтендовыйПрогон.ПолучитьПоследнее(,Отбор);			
			ОблПЗСтенд.Параметры.ДатаНачала = ТекПЗ.ДатаПостановки;
			ОблПЗСтенд.Параметры.ДатаОкончания = ТекПЗ.ДатаСнятия;
			ОблПЗСтенд.Параметры.Прогон = ТекПЗ.Прогон;
			ТабДок.Присоединить(ОблПЗСтенд);
			Иначе
			ТекПЗ = РегистрыСведений.ЭтапыПроизводственныхЗаданий.Выбрать(,,Отбор);
				Пока ТекПЗ.Следующий() Цикл
					Если ТекПЗ.РабочееМесто = РМ.Значение Тогда
					ДатаНачала = ТекПЗ.ДатаНачала;
					ДатаОкончания = ТекПЗ.ДатаОкончания;
					Прервать;
					КонецЕсли; 
				КонецЦикла;
			ОблПЗРабочееМесто.Параметры.ДатаНачала = ДатаНачала;
			ОблПЗРабочееМесто.Параметры.ДатаОкончания = ДатаОкончания;
			ТабДок.Присоединить(ОблПЗРабочееМесто);
			КонецЕсли;			
		КонецЦикла;
			Если ПоказыватьРемонт Тогда
			ЗапросРемонт = Новый Запрос;
			СписокРемонтныхКарт = Новый СписокЗначений;

			ЗапросРемонт.Текст = 
				"ВЫБРАТЬ
				|	РемонтнаяКарта.Ссылка
				|ИЗ
				|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
				|ГДЕ
				|	РемонтнаяКарта.ДокументОснование = &ДокументОснование";			
			ЗапросРемонт.УстановитьПараметр("ДокументОснование", ПЗ);		
			РезультатЗапросаРемонт = ЗапросРемонт.Выполнить();
			ВыборкаРемонт = РезультатЗапросаРемонт.Выбрать();
				Пока ВыборкаРемонт.Следующий() Цикл
				СписокРемонтныхКарт.Добавить(ВыборкаРемонт.Ссылка);
					Если ВыборкаРемонт.Ссылка.Проведен Тогда
					СтатусРемонта =	"Завершён"; 					
					Иначе	
					СтатусРемонта =	"Ремонт"; 					
					КонецЕсли;
				КонецЦикла;
			ОблПЗРемонт.Параметры.СтатусРемонта = СтатусРемонта;
			ОблПЗРемонт.Параметры.СписокРемонтныхКарт = СписокРемонтныхКарт;
			ТабДок.Присоединить(ОблПЗРемонт);
			КонецЕсли;			
	КонецЦикла;		
ТабДок.Вывести(ОблКонецОбщие);
	Для каждого РМ Из СписокРМ Цикл
		Если СокрЛП(РМ.Значение.ГруппаРабочихМест.Префикс) = "СТ" Тогда
		ТабДок.Присоединить(ОблКонецСтенд);
		Иначе
		ТабДок.Присоединить(ОблКонецРабочееМесто);
		КонецЕсли;
	КонецЦикла;
		Если ПоказыватьРемонт Тогда
		ТабДок.Присоединить(ОблКонецРемонт);
		КонецЕсли;
ТабДок.ФиксацияСверху = 4;
ТабДок.ФиксацияСлева = 8;
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();
	Если СортировкаОтчёта = 3 Тогда
		Если РабочееМесто.Пустая() Тогда
		Сообщить("Выберите АРМ!");
		Возврат;
		КонецЕсли;
	СформироватьПоАРМНаСервере(); 
	Возврат;	
	КонецЕсли;
ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");
 
ОблШапкаОбщие = Макет.ПолучитьОбласть("Шапка|Общие");	
ОблШапкаРабочееМесто = Макет.ПолучитьОбласть("Шапка|РабочееМесто");
ОблШапкаСтенд = Макет.ПолучитьОбласть("Шапка|Стенд");
ОблШапкаРемонт = Макет.ПолучитьОбласть("Шапка|Ремонт");
	
ОблМТКОбщие = Макет.ПолучитьОбласть("МТК|Общие");	
ОблМТКРабочееМесто = Макет.ПолучитьОбласть("МТК|РабочееМесто");
ОблМТКСтенд = Макет.ПолучитьОбласть("МТК|Стенд");
ОблМТКРемонт = Макет.ПолучитьОбласть("МТК|Ремонт");

ОблПЗОбщие = Макет.ПолучитьОбласть("ПЗ|Общие");	
ОблПЗРабочееМесто = Макет.ПолучитьОбласть("ПЗ|РабочееМесто");
ОблПЗСтенд = Макет.ПолучитьОбласть("ПЗ|Стенд");
ОблПЗРемонт = Макет.ПолучитьОбласть("ПЗ|Ремонт");
	
ОблКонецОбщие = Макет.ПолучитьОбласть("Конец|Общие");	
ОблКонецРабочееМесто = Макет.ПолучитьОбласть("Конец|РабочееМесто");
ОблКонецСтенд = Макет.ПолучитьОбласть("Конец|Стенд");
ОблКонецРемонт = Макет.ПолучитьОбласть("Конец|Ремонт");

ОблШапкаОбщие.Параметры.НаДату = Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
ТабДок.Вывести(ОблШапкаОбщие);
	Для каждого РМ Из СписокРМ Цикл
		Если СокрЛП(РМ.Значение.ГруппаРабочихМест.Префикс) = "СТ" Тогда
		ОблШапкаСтенд.Параметры.РабочееМесто = РМ.Значение;
		ТабДок.Присоединить(ОблШапкаСтенд);
		Иначе
		ОблШапкаРабочееМесто.Параметры.РабочееМесто = РМ.Значение;
		ТабДок.Присоединить(ОблШапкаРабочееМесто);
		КонецЕсли; 
	КонецЦикла;
		Если ПоказыватьРемонт Тогда
		ТабДок.Присоединить(ОблШапкаРемонт);
		КонецЕсли;

ЗапросЛО = Новый Запрос;

ЗапросЛО.Текст = 
	"ВЫБРАТЬ
	|	ЛьготнаяОчередь.ПЗ
	|ИЗ
	|	РегистрСведений.ЛьготнаяОчередь КАК ЛьготнаяОчередь
	|ГДЕ
	|	ЛьготнаяОчередь.ПЗ.ДатаЗапуска = ДАТАВРЕМЯ(1,1,1,0,0,0)";
РезультатЗапроса = ЗапросЛО.Выполнить();
ВыборкаЛО = РезультатЗапроса.Выбрать();

Запрос = Новый Запрос;

	Если Не Отчет.МТК.Пустая() Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПроизводственноеЗадание.Ссылка,
		|	ПроизводственноеЗадание.ДокументОснование КАК МТК,
		|	ПроизводственноеЗадание.Изделие.Товар КАК Товар,
		|	ПроизводственноеЗадание.ДокументОснование.Номер КАК НомерМТК,
		|	ПроизводственноеЗадание.Изделие.Товар.Наименование КАК Наименование
		|ИЗ
		|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
		|ГДЕ
		|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование";	
	Запрос.УстановитьПараметр("ДокументОснование",Отчет.МТК);
	ИначеЕсли ЗначениеЗаполнено(Отчет.БарКод) Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПроизводственноеЗадание.Ссылка,
		|	ПроизводственноеЗадание.ДокументОснование КАК МТК,
		|	ПроизводственноеЗадание.Изделие.Товар КАК Товар,
		|	ПроизводственноеЗадание.ДокументОснование.Номер КАК НомерМТК,
		|	ПроизводственноеЗадание.Изделие.Товар.Наименование КАК Наименование
		|ИЗ
		|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
		|ГДЕ
		|	ПроизводственноеЗадание.БарКод = &БарКод";
 		Если СтрДлина(СокрЛП(Отчет.БарКод)) >= 17 Тогда
		Запрос.УстановитьПараметр("БарКод",Отчет.БарКод);		
		Иначе
		БарКод = ОбщийМодульВызовСервера.ПолучитьБарКодПоКодуDanfoss(Отчет.БарКод);
			Если ЗначениеЗаполнено(БарКод) Тогда
			Запрос.УстановитьПараметр("БарКод",БарКод);
			Иначе
			Сообщить("Не найдено соответствие бар-кода введённому коду Danfoss!");
			Возврат;
			КонецЕсли;		
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(Счёт) Тогда
 	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПроизводственноеЗадание.Ссылка,
		|	ПроизводственноеЗадание.ДокументОснование КАК МТК,
		|	ПроизводственноеЗадание.Изделие.Товар КАК Товар,
		|	ПроизводственноеЗадание.ДокументОснование.Номер КАК НомерМТК,
		|	ПроизводственноеЗадание.Изделие.Товар.Наименование КАК Наименование
		|ИЗ
		|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
		|ГДЕ
		|	ПроизводственноеЗадание.ДокументОснование.Счёт ПОДОБНО &Счёт";	
	Запрос.УстановитьПараметр("Счёт",Счёт+"%");	
	ИначеЕсли ВыборПериодаПо = 1 Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПроизводственноеЗадание.Ссылка,
		|	ПроизводственноеЗадание.ДокументОснование КАК МТК,
		|	ПроизводственноеЗадание.Изделие.Товар КАК Товар,
		|	ПроизводственноеЗадание.ДокументОснование.Номер КАК НомерМТК,
		|	ПроизводственноеЗадание.Изделие.Товар.Наименование КАК Наименование
		|ИЗ
		|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
		|ГДЕ
		|	ПроизводственноеЗадание.ДокументОснование.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И ПроизводственноеЗадание.Линейка = &Линейка";
		Если СписокНоменклатуры.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И ПроизводственноеЗадание.Изделие В ИЕРАРХИИ(&СписокИзделий)";
		КонецЕсли; 
			Если Не ПоказыватьРемонт Тогда
			Запрос.Текст = Запрос.Текст + " И ПроизводственноеЗадание.ДокументОснование.Ремонт = ЛОЖЬ";
			КонецЕсли; 	
	Запрос.УстановитьПараметр("Линейка",Отчет.Линейка);
	Запрос.УстановитьПараметр("ДатаНач",Отчет.Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКон",Отчет.Период.ДатаОкончания);	
	Запрос.УстановитьПараметр("СписокИзделий",СписокНоменклатуры);
	Иначе
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭтапыПроизводственныхЗаданий.ПЗ КАК Ссылка,
		|	ЭтапыПроизводственныхЗаданий.ПЗ.ДокументОснование КАК МТК,
		|	ЭтапыПроизводственныхЗаданий.Изделие.Товар КАК Товар,
		|	ЭтапыПроизводственныхЗаданий.ПЗ.ДокументОснование.Номер КАК НомерМТК,
		|	ЭтапыПроизводственныхЗаданий.Изделие.Товар.Наименование КАК Наименование
		|ИЗ
		|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
		|ГДЕ
		|	ЭтапыПроизводственныхЗаданий.РабочееМесто = &РабочееМесто
		|	И ЭтапыПроизводственныхЗаданий.ДатаОкончания МЕЖДУ &ДатаНач И &ДатаКон";
		Если СписокНоменклатуры.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И ЭтапыПроизводственныхЗаданий.ПЗ.Изделие В ИЕРАРХИИ(&СписокИзделий)";
		КонецЕсли;
			Если Не ПоказыватьРемонт Тогда
			Запрос.Текст = Запрос.Текст + " И ЭтапыПроизводственныхЗаданий.ПЗ.ДокументОснование.Ремонт = ЛОЖЬ";
			КонецЕсли; 	
	Запрос.УстановитьПараметр("РабочееМесто",РабочееМесто);
	Запрос.УстановитьПараметр("ДатаНач",Отчет.Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКон",Отчет.Период.ДатаОкончания);
	Запрос.УстановитьПараметр("СписокИзделий",СписокНоменклатуры);
	КонецЕсли;
		Если СортировкаОтчёта = 1 Тогда
		Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО НомерМТК";
		Иначе
		Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО Наименование";
		КонецЕсли; 
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
НомСтр = 0;
ТекМТК = Документы.МаршрутнаяКарта.ПустаяСсылка();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ТекМТК <> ВыборкаДетальныеЗаписи.МТК Тогда
		ТекМТК = ВыборкаДетальныеЗаписи.МТК;
		ОблМТКОбщие.Параметры.Линейка = ВыборкаДетальныеЗаписи.МТК.Линейка;
		ОблМТКОбщие.Параметры.ЛинейкаКомм = ВыборкаДетальныеЗаписи.МТК.Линейка.Комментарий;
		ОблМТКОбщие.Параметры.МТК = ВыборкаДетальныеЗаписи.МТК;
		ОблМТКОбщие.Параметры.НомерМТК = ВыборкаДетальныеЗаписи.МТК.Номер;
			Если Не ВыборкаДетальныеЗаписи.Товар.Пустая() Тогда
			ОблМТКОбщие.Параметры.Спецификация = СокрЛП(ВыборкаДетальныеЗаписи.Товар.Наименование);
			Иначе
			ОблМТКОбщие.Параметры.Спецификация = СокрЛП(ВыборкаДетальныеЗаписи.МТК.Номенклатура.Наименование);
			КонецЕсли; 
				Если ВыборкаДетальныеЗаписи.МТК.Статус = 2 Тогда
				ОблМТКОбщие.Параметры.Остановка = "О";
				Иначе
				ОблМТКОбщие.Параметры.Остановка = "";
				КонецЕсли; 
		ТабДок.Вывести(ОблМТКОбщие);
			Для каждого РМ Из СписокРМ Цикл
				Если СокрЛП(РМ.Значение.ГруппаРабочихМест.Префикс) = "СТ" Тогда
				ТабДок.Присоединить(ОблМТКСтенд);
				Иначе
				ТабДок.Присоединить(ОблМТКРабочееМесто);
				КонецЕсли;
			КонецЦикла;
				Если ПоказыватьРемонт Тогда
				ТабДок.Присоединить(ОблМТКРемонт);
				КонецЕсли;
		КонецЕсли; 
	НомСтр = НомСтр + 1;
	ОблПЗОбщие.Параметры.НомСтр = НомСтр;
	СтатусРемонта = Перечисления.СтатусыРемонта.ПустаяСсылка();
	ПЗ = ВыборкаДетальныеЗаписи.Ссылка;				
    ОблПЗОбщие.Параметры.ПЗ = ПЗ;
	ОблПЗОбщие.Параметры.НомерПЗ = ПЗ.Номер;
	ОблПЗОбщие.Параметры.ВозвратнаяТара = СокрЛП(ПЗ.ВозвратнаяТара);
	ОблПЗОбщие.Параметры.БарКод = ПЗ.БарКод;
	ОблПЗОбщие.Параметры.КодDanfoss = ОбщийМодульВызовСервера.ПолучитьКодDanfoss(ПЗ.БарКод);
	ОблПЗОбщие.Параметры.Счёт = ПЗ.ДокументОснование.Счёт;
	ОблПЗОбщие.Параметры.ДатаОтгрузки = Формат(ПЗ.ДокументОснование.ДатаОтгрузки,"ДФ=dd.MM.yyyy");
	ВыборкаЛО.Сбросить();
	СтуктураПоиска = Новый Структура("ПЗ",ПЗ);
		Если ВыборкаЛО.НайтиСледующий(СтуктураПоиска) Тогда
		ЛО = "ЛО";
		Иначе
		ЛО = "";
		КонецЕсли; 
	ОблПЗОбщие.Параметры.ЛО = ЛО;
	ТабДок.Вывести(ОблПЗОбщие);
	Отбор = Новый Структура("ПЗ",ПЗ);
		Для каждого РМ Из СписокРМ Цикл	
		ДатаНачала = "";
		ДатаОкончания = "";
			Если СокрЛП(РМ.Значение.ГруппаРабочихМест.Префикс) = "СТ" Тогда
			ТекПЗ = РегистрыСведений.СтендовыйПрогон.ПолучитьПоследнее(,Отбор);			
			ОблПЗСтенд.Параметры.ДатаНачала = ТекПЗ.ДатаПостановки;
			ОблПЗСтенд.Параметры.ДатаОкончания = ТекПЗ.ДатаСнятия;
			ОблПЗСтенд.Параметры.Прогон = ТекПЗ.Прогон;
			ТабДок.Присоединить(ОблПЗСтенд);
			Иначе
			ТекПЗ = РегистрыСведений.ЭтапыПроизводственныхЗаданий.Выбрать(,,Отбор);
				Пока ТекПЗ.Следующий() Цикл
					Если ТекПЗ.РабочееМесто = РМ.Значение Тогда
					ДатаНачала = ТекПЗ.ДатаНачала;
					ДатаОкончания = ТекПЗ.ДатаОкончания;
					Прервать;
					КонецЕсли; 
				КонецЦикла;
			ОблПЗРабочееМесто.Параметры.ДатаНачала = ДатаНачала;
			ОблПЗРабочееМесто.Параметры.ДатаОкончания = ДатаОкончания;
			ТабДок.Присоединить(ОблПЗРабочееМесто);
			КонецЕсли;			
		КонецЦикла;
			Если ПоказыватьРемонт Тогда
			ЗапросРемонт = Новый Запрос;
			СписокРемонтныхКарт = Новый СписокЗначений;

			ЗапросРемонт.Текст = 
				"ВЫБРАТЬ
				|	РемонтнаяКарта.Ссылка
				|ИЗ
				|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
				|ГДЕ
				|	РемонтнаяКарта.ДокументОснование = &ДокументОснование";			
			ЗапросРемонт.УстановитьПараметр("ДокументОснование", ПЗ);		
			РезультатЗапросаРемонт = ЗапросРемонт.Выполнить();
			ВыборкаРемонт = РезультатЗапросаРемонт.Выбрать();
				Пока ВыборкаРемонт.Следующий() Цикл
				СписокРемонтныхКарт.Добавить(ВыборкаРемонт.Ссылка);
					Если ВыборкаРемонт.Ссылка.Проведен Тогда
					СтатусРемонта =	"Завершён"; 					
					Иначе	
					СтатусРемонта =	"Ремонт"; 					
					КонецЕсли;
				КонецЦикла;
			ОблПЗРемонт.Параметры.СтатусРемонта = СтатусРемонта;
			ОблПЗРемонт.Параметры.СписокРемонтныхКарт = СписокРемонтныхКарт;
			ТабДок.Присоединить(ОблПЗРемонт);
			КонецЕсли;			
	КонецЦикла;		
ТабДок.Вывести(ОблКонецОбщие);
	Для каждого РМ Из СписокРМ Цикл
		Если СокрЛП(РМ.Значение.ГруппаРабочихМест.Префикс) = "СТ" Тогда
		ТабДок.Присоединить(ОблКонецСтенд);
		Иначе
		ТабДок.Присоединить(ОблКонецРабочееМесто);
		КонецЕсли;
	КонецЦикла;
		Если ПоказыватьРемонт Тогда
		ТабДок.Присоединить(ОблКонецРемонт);
		КонецЕсли;
ТабДок.ФиксацияСверху = 3;
ТабДок.ФиксацияСлева = 7;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
ПолучитьСписокРМ();
СформироватьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьСписокРМ()
	Если Не Отчет.МТК.Пустая() Тогда
	Линейка = Отчет.МТК.Линейка;
	ИначеЕсли ЗначениеЗаполнено(Отчет.БарКод) Тогда
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	БарКоды.ПЗ.Линейка КАК Линейка
		|ИЗ
		|	РегистрСведений.БарКоды КАК БарКоды
		|ГДЕ
		|	БарКоды.БарКод = &БарКод
		|	И ТИПЗНАЧЕНИЯ(БарКоды.ПЗ) = ТИП(Документ.ПроизводственноеЗадание)";
	 		Если СтрДлина(СокрЛП(Отчет.БарКод)) >= 17 Тогда
			Запрос.УстановитьПараметр("БарКод",Отчет.БарКод);		
			Иначе
			БарКод = ОбщийМодульВызовСервера.ПолучитьБарКодПоКодуDanfoss(Отчет.БарКод);
				Если ЗначениеЗаполнено(БарКод) Тогда
				Запрос.УстановитьПараметр("БарКод",БарКод);
				Иначе
				Сообщить("Не найдено соответствие бар-кода введённому коду Danfoss!");
				Возврат;
				КонецЕсли;		
			КонецЕсли;
	Линейка = Справочники.Линейки.ПустаяСсылка();
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Линейка = ВыборкаДетальныеЗаписи.Линейка;
		КонецЦикла;
			Если Линейка.Пустая() Тогда
			Возврат;
			КонецЕсли; 
	Иначе
		Если Отчет.Линейка.Пустая() Тогда
		Возврат;
		КонецЕсли; 
	Линейка = Отчет.Линейка;
	КонецЕсли; 
СписокРМ.Очистить();
Запрос = Новый Запрос;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	РабочиеМестаЛинеек.Ссылка,
	|	РабочиеМестаЛинеек.ПометкаУдаления,
	|	РабочиеМестаЛинеек.Код КАК Код,
	|	РабочиеМестаЛинеек.Линейка,
	|	РабочиеМестаЛинеек.Наименование
	|ИЗ
	|	Справочник.РабочиеМестаЛинеек КАК РабочиеМестаЛинеек
	|ГДЕ
	|	РабочиеМестаЛинеек.Линейка = &Линейка
	|	И РабочиеМестаЛинеек.ПометкаУдаления = ЛОЖЬ
	|	И РабочиеМестаЛинеек.ЭтоГруппа = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код";
Запрос.УстановитьПараметр("Линейка", Линейка);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокРМ.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Если ТипЗнч(Расшифровка) = Тип("СписокЗначений") Тогда
	СтандартнаяОбработка = Ложь;
		Если Расшифровка.Количество() > 1 Тогда
		РК = Расшифровка.ВыбратьЭлемент();
			Если РК <> Неопределено Тогда
			ОткрытьФорму("Документ.РемонтнаяКарта.Форма.ФормаДокумента",Новый Структура("Ключ",РК.Значение));
			КонецЕсли;
		ИначеЕсли Расшифровка.Количество() = 1 Тогда
		ОткрытьФорму("Документ.РемонтнаяКарта.Форма.ФормаДокумента",Новый Структура("Ключ",Расшифровка[0].Значение));
		КонецЕсли; 	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура БарКодПриИзменении(Элемент)
Отчет.МТК = "";
Счёт = "";
КонецПроцедуры

&НаКлиенте
Процедура МТКПриИзменении(Элемент)
Отчет.БарКод = "";
Счёт = "";
КонецПроцедуры

&НаКлиенте
Процедура СчётПриИзменении(Элемент)
Отчет.МТК = "";
Отчет.БарКод = "";
КонецПроцедуры

&НаКлиенте
Процедура СортировкаОтчётаПриИзменении(Элемент)
	Если СортировкаОтчёта = 3 Тогда
	Элементы.Группа1.Доступность = Ложь;
	Иначе
	Элементы.Группа1.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
СортировкаОтчётаПриИзменении(Неопределено);
КонецПроцедуры
