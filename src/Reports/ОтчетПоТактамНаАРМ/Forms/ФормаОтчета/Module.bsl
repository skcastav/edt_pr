
&НаСервере
Процедура ПостроитьГрафик()
График.Очистить();
ГСЧ = Новый ГенераторСлучайныхЧисел(255);

СерияПлан = График.УстановитьСерию("План");
ЦветСерии = Новый Цвет(ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255));
СерияПлан.Цвет = ЦветСерии;
ЛинияСерии = Новый Линия(ТипЛинииДиаграммы.Пунктир,3);
СерияПлан.Линия = ЛинияСерии;
СерияПлан.Маркер = ТипМаркераДиаграммы.Нет;
СерияФакт = График.УстановитьСерию("Факт");
ЦветСерии = Новый Цвет(ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255));
СерияФакт.Цвет = ЦветСерии;
ЛинияСерии = Новый Линия(ТипЛинииДиаграммы.Сплошная,3);
СерияФакт.Линия = ЛинияСерии;
СерияФакт.Маркер = ТипМаркераДиаграммы.Нет;
График.ОбластьЗаголовка.Текст = "Время такта на "+СписокРабочихМест+" за период с "+Формат(Отчет.Период.ДатаНачала,"ДФ=dd.MM.yyyy")+" по "+Формат(Отчет.Период.ДатаОкончания,"ДФ=dd.MM.yyyy");	
График.КоличествоТочек = 0;
ТекТочка = 0;
ВремяФакт = 0;
ДатаПред = Дата(1,1,1);
График.АвтоТранспонирование = Ложь;
НомСтр = 0;
	Для каждого ТЧ Из ТаблицаПЗ Цикл
		Если НомСтр = 0 Тогда
		ДатаВремяНачалаОтсчёта = ТЧ.ДатаОкончания;
		КонецЕсли; 
	ТекТочка = ТЧ.ДатаОкончания - ДатаВремяНачалаОтсчёта;
			Если ТекТочка < ТочкаОт Тогда
			ДатаПред = ТЧ.ДатаОкончания;
			НомСтр = НомСтр + 1;
			Продолжить;
			КонецЕсли; 
				Если ТочкаДо > 0 Тогда
					Если ТекТочка > ТочкаДо Тогда
					Прервать;
					КонецЕсли; 
				КонецЕсли; 
	Точка = График.Точки.Добавить(Строка(ТекТочка));
	Точка.Значение = ТекТочка;
	Точка.Текст = Лев(ТЧ.ДатаОкончания,СтрДлина(ТЧ.ДатаОкончания)-3);
	ВремяФакт = ТЧ.Время;
	ДатаПред = ТЧ.ДатаОкончания;
	СерияПлан = График.УстановитьСерию("План");
		Если Размерность = 2 Тогда
		График.УстановитьЗначение(Точка,СерияПлан,ВремяТакта,ВремяТакта);
		Иначе
		График.УстановитьЗначение(Точка,СерияПлан,ВремяТакта/60,ВремяТакта/60);
		КонецЕсли; 	
	СерияФакт = График.УстановитьСерию("Факт");
	График.УстановитьЗначение(Точка,СерияФакт,ВремяФакт,ВремяФакт,""+ТЧ.ДатаОкончания+" ("+ВремяФакт+")");
	НомСтр = НомСтр + 1;
	КонецЦикла; 
		Если ТочкаДо = 0 Тогда
		ТочкаМакс = ТекТочка;
		КонецЕсли; 
График.АвтоТранспонирование = Истина;
КонецПроцедуры

&НаСервере
Процедура ПостроитьГистограмму()
Гистограмма.Очистить();
ГСЧ = Новый ГенераторСлучайныхЧисел(255);

СерияЧастота = Гистограмма.УстановитьСерию("Частота");
ЦветСерии = Новый Цвет(ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255));
СерияЧастота.Цвет = ЦветСерии;
ЛинияСерии = Новый Линия(ТипЛинииДиаграммы.Сплошная,3);
СерияЧастота.Линия = ЛинияСерии;
СерияЧастота.Маркер = ТипМаркераДиаграммы.Нет;
Гистограмма.ОбластьЗаголовка.Текст = "Частота повторений на "+СписокРабочихМест+" за период с "+Формат(Отчет.Период.ДатаНачала,"ДФ=dd.MM.yyyy")+" по "+Формат(Отчет.Период.ДатаОкончания,"ДФ=dd.MM.yyyy");	
Гистограмма.КоличествоТочек = 0;
Гистограмма.АвтоТранспонирование = Ложь;
КарманОт = 0;
	Для каждого ТЧ Из ТаблицаЧастоты Цикл
	ТЧ.Количество = 0;
	КарманДо = ТЧ.Карман;
		Для каждого ТЧ_ПЗ Из ТаблицаПЗ Цикл
			Если Размерность = 2 Тогда
			ВремяФакт = ТЧ_ПЗ.Время;
			Иначе
			ВремяФакт = ТЧ_ПЗ.Время*60;
			КонецЕсли;
				Если (ВремяФакт > КарманОт)и(ВремяФакт <= КарманДо) Тогда
				ТЧ.Количество = ТЧ.Количество + 1;
				КонецЕсли;
		КонецЦикла; 	
	Точка = Гистограмма.Точки.Добавить(Строка(ТЧ.Карман));
	СерияЧастота = Гистограмма.УстановитьСерию("Частота");
	Гистограмма.УстановитьЗначение(Точка,СерияЧастота,ТЧ.Количество,ТЧ.Количество);
	КарманОт = КарманДо;
	КонецЦикла;
Гистограмма.АвтоТранспонирование = Истина;
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();
ТаблицаПЗ.Очистить();

СписокПЗ = Новый СписокЗначений;
 
ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");		
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.Период = Формат(Отчет.Период);
ОблШапка.Параметры.ВыбРМ = СписокРабочихМест;

ТабДок.Вывести(ОблШапка);

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданий.ДатаОкончания,
	|	ЭтапыПроизводственныхЗаданий.ПЗ,
	|	ЭтапыПроизводственныхЗаданий.Ремонт
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданий.РабочееМесто В(&РабочиеМеста)
	|	И (ЭтапыПроизводственныхЗаданий.ДатаОкончания МЕЖДУ &ДатаНач И &ДатаКон
	|		ИЛИ ЭтапыПроизводственныхЗаданий.ДатаНачала МЕЖДУ &ДатаНач И &ДатаКон)";	
Запрос.УстановитьПараметр("РабочиеМеста",СписокРабочихМест);
Запрос.УстановитьПараметр("ДатаНач",НачалоДня(Отчет.Период.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон",КонецДня(Отчет.Период.ДатаОкончания));
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если (ВыборкаДетальныеЗаписи.ДатаОкончания >= НачалоДня(Отчет.Период.ДатаНачала))и(ВыборкаДетальныеЗаписи.ДатаОкончания <= КонецДня(Отчет.Период.ДатаОкончания)) Тогда
		ТЧ = ТаблицаПЗ.Добавить();
		ТЧ.Ремонт = ВыборкаДетальныеЗаписи.Ремонт;
		ТЧ.ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
		ТЧ.ДатаОкончания = ВыборкаДетальныеЗаписи.ДатаОкончания;		
		КонецЕсли; 				
	КонецЦикла;
ЗапросРемонт = Новый Запрос;

ЗапросРемонт.Текст = 
	"ВЫБРАТЬ
	|	РемонтнаяКарта.ДокументОснование,
	|	РемонтнаяКарта.ДатаНачала,
	|	РемонтнаяКарта.Ссылка
	|ИЗ
	|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
	|ГДЕ
	|	РемонтнаяКарта.ПометкаУдаления = ЛОЖЬ
	|	И РемонтнаяКарта.РабочееМесто В(&РабочиеМеста)
	|	И РемонтнаяКарта.ДатаНачала МЕЖДУ &ДатаНач И &ДатаКон";		
ЗапросРемонт.УстановитьПараметр("РабочиеМеста", СписокРабочихМест);		
ЗапросРемонт.УстановитьПараметр("ДатаНач",НачалоДня(Отчет.Период.ДатаНачала));
ЗапросРемонт.УстановитьПараметр("ДатаКон",КонецДня(Отчет.Период.ДатаОкончания));
РезультатЗапросаРемонт = ЗапросРемонт.Выполнить();			
ВыборкаДетальныеЗаписиРемонт = РезультатЗапросаРемонт.Выбрать();			
	Пока ВыборкаДетальныеЗаписиРемонт.Следующий() Цикл
	ТЧ = ТаблицаПЗ.Добавить();
	ТЧ.Ремонт = Истина;
	ТЧ.РемонтСсылка = ВыборкаДетальныеЗаписиРемонт.Ссылка;
	ТЧ.ПЗ = ВыборкаДетальныеЗаписиРемонт.ДокументОснование;
	ТЧ.ДатаОкончания = ВыборкаДетальныеЗаписиРемонт.ДатаНачала;
	КонецЦикла;
ТаблицаПЗ.Сортировать("ДатаОкончания"); 
НомСтр = 0;
Время = 0;
МинимальноеЗначение = 99999;
МаксимальноеЗначение = 0;
ДатаПред = Дата(1,1,1);
	Для каждого ТЧ Из ТаблицаПЗ Цикл
	ВРемонт = Ложь;
	ИзРемонта = Ложь;
	РемонтСсылка = "";		
	НомСтр = НомСтр + 1;
		Если ТЧ.Ремонт Тогда			
		ВРемонт = Истина;
		РемонтСсылка = ТЧ.РемонтСсылка;
			Если СписокПЗ.НайтиПоЗначению(ТЧ.ПЗ) = Неопределено Тогда
			СписокПЗ.Добавить(ТЧ.ПЗ);
			Иначе
			ИзРемонта = Истина;
			КонецЕсли; 
		Иначе
			Если СписокПЗ.НайтиПоЗначению(ТЧ.ПЗ) <> Неопределено Тогда
			РемонтСсылка = ТЧ.РемонтСсылка;
			ИзРемонта = Истина;
			КонецЕсли;
		ЗапросРемонт.Текст = 
			"ВЫБРАТЬ
			|	РемонтнаяКарта.Ссылка
			|ИЗ
			|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
			|ГДЕ
			|	РемонтнаяКарта.ПометкаУдаления = ЛОЖЬ
			|	И РемонтнаяКарта.РабочееМесто В(&РабочиеМеста)
			|	И РемонтнаяКарта.ДокументОснование = &ДокументОснование";		
		ЗапросРемонт.УстановитьПараметр("РабочиеМеста", СписокРабочихМест);		
		ЗапросРемонт.УстановитьПараметр("ДокументОснование",ТЧ.ПЗ);
		РезультатЗапросаРемонт = ЗапросРемонт.Выполнить();			
		ВыборкаДетальныеЗаписиРемонт = РезультатЗапросаРемонт.Выбрать();			
			Пока ВыборкаДетальныеЗаписиРемонт.Следующий() Цикл
			РемонтСсылка = ВыборкаДетальныеЗаписиРемонт.Ссылка;
			ИзРемонта = Истина;
			КонецЦикла;  
		КонецЕсли; 
			Если НомСтр = 1 Тогда
			Время = 0;
			Иначе
			Время = ОбщийМодульВызовСервера.ПолучитьВремяМеждуДатами(ДатаПред,ТЧ.ДатаОкончания,Размерность);
				Если Размерность = 2 Тогда
				МинимальноеЗначение = Мин(Время,МинимальноеЗначение);
				МаксимальноеЗначение = Макс(Время,МаксимальноеЗначение);
				Иначе
				МинимальноеЗначение = Мин(Время*60,МинимальноеЗначение);
				МаксимальноеЗначение = Макс(Время*60,МаксимальноеЗначение);
				КонецЕсли;
			КонецЕсли; 
				Если ИзРемонта и ВРемонт Тогда
				ОблПЗ = Макет.ПолучитьОбласть("ПЗ_Ремонт");
				ОблПЗ.Параметры.Ремонт = РемонтСсылка;
				ИначеЕсли ИзРемонта Тогда
				ОблПЗ = Макет.ПолучитьОбласть("ПЗ_ИзРемонта");
				ОблПЗ.Параметры.Ремонт = РемонтСсылка;
				ИначеЕсли ВРемонт Тогда				
				ОблПЗ = Макет.ПолучитьОбласть("ПЗ_ВРемонт");
				ОблПЗ.Параметры.Ремонт = РемонтСсылка;
				Иначе
				ОблПЗ = Макет.ПолучитьОбласть("ПЗ");
				КонецЕсли; 
	ОблПЗ.Параметры.НомСтр = НомСтр;
	ОблПЗ.Параметры.ПЗ = ТЧ.ПЗ;
	ОблПЗ.Параметры.НомерПЗ = ТЧ.ПЗ.Номер;
	ОблПЗ.Параметры.Номен = ТЧ.ПЗ.Изделие;
	ОблПЗ.Параметры.Наимен = СокрЛП(ТЧ.ПЗ.Изделие.Наименование);
	ОблПЗ.Параметры.ДатаОкончания = ТЧ.ДатаОкончания;
	ОблПЗ.Параметры.Время = Формат(Время,"ЧЦ=9; ЧДЦ=3");
	ТЧ.Время = Время;
	ДатаПред = ТЧ.ДатаОкончания;
	ТабДок.Вывести(ОблПЗ);		
	КонецЦикла; 		
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 4;
ТочкаОт = 0;
ТочкаДо = 0;
Элементы.Выбрано.Заголовок = "";
ПостроитьГрафик();
ТочкаОт = 0;
ТочкаДо = ТочкаМакс;
ПостроитьГистограмму();
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
СформироватьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
ТочкаОт = 0;
ТочкаДо = ТочкаМакс;
Элементы.Выбрано.Заголовок = "";
ПостроитьГрафик();
ВыборКонТочки = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ГрафикВыбор(Элемент, ЗначениеДиаграммы, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
	Если Не ВыборКонТочки Тогда
	ТочкаОт = ЗначениеДиаграммы.Точка.Значение;
	ВыборКонТочки = Истина;
	Элементы.Выбрано.Заголовок = "Выбран период с "+ЗначениеДиаграммы.Точка.Текст;
	Иначе
		Если ЗначениеДиаграммы.Точка.Значение > ТочкаОт Тогда
		ТочкаДо = ЗначениеДиаграммы.Точка.Значение;
		ВыборКонТочки = Ложь;
		Элементы.Выбрано.Заголовок = Элементы.Выбрано.Заголовок+" по "+ЗначениеДиаграммы.Точка.Текст;
		ПостроитьГрафик();
		Иначе
		Сообщить("Конечная точка не может быть меньше начальной!");
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура СформироватьКарманыНаСервере(Шаг,Максимум)
ТаблицаЧастоты.Очистить();
к = 0;
	Пока к <= Максимум Цикл
	ТЧ = ТаблицаЧастоты.Добавить();
	ТЧ.Карман = к;
	к = к + Шаг;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура СформироватьКарманы(Команда)
Шаг = 1;
Максимум = МаксимальноеЗначение;
	Если ВвестиЧисло(Шаг,"Введите шаг карманов",5,1) Тогда
		Если ВвестиЧисло(Максимум,"Введите максимум",5,1) Тогда
		СформироватьКарманыНаСервере(Шаг,Максимум);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьГистаграмму(Команда)
ПостроитьГистограмму();
Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаГистограмма;
КонецПроцедуры

&НаСервере
Функция НастройкиНаСервере()
Настройки = Новый Структура("СписокРабочихМест",СписокРабочихМест);
Возврат(Новый Структура("КлючНазначенияИспользования,Настройки","ОтчетПоТактамНаАРМ",Настройки));
КонецФункции

&НаКлиенте
Процедура Настройки(Команда)
Результат = ОткрытьФормуМодально("ОбщаяФорма.НастройкиФорм",НастройкиНаСервере());
	Если Результат <> Неопределено Тогда	
	СписокРабочихМест = Результат.СписокРабочихМест;	
	КонецЕсли;
КонецПроцедуры
