
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("СписокПЗ") Тогда
	СписокПЗ = Параметры.СписокПЗ;
	Отчет.МестоХранения = Параметры.СписокПЗ[0].Значение.Линейка.МестоХраненияКанбанов;
	ИначеЕсли Параметры.Свойство("ПЗ") Тогда
	СписокПЗ.Добавить(Параметры.ПЗ);
	Отчет.МестоХранения = Параметры.ПЗ.Линейка.МестоХраненияКанбанов;
	КонецЕсли;
		Если Параметры.Свойство("ВедомостьЭлементов") Тогда
		Отчет.ВедомостьЭлементов = Истина;
		СформироватьВедомостьЭлементовНаСервере();
		Иначе
		СформироватьНаСервере();
		КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СортироватьПоПорядку(ТекЗнач)
Перем ТемпНач,ТемпКон;

Если (ТекЗнач = "")или(Найти(ТекЗнач,"-") > 0) Тогда
Возврат(ТекЗнач);		
КонецЕсли;
	Для к = 1 по 3 Цикл
		Если (КодСимвола(Сред(ТекЗнач,к,1)) > 47)и(КодСимвола(Сред(ТекЗнач,к,1)) < 58) Тогда
		ТемпНач = Лев(ТекЗнач,к-1);
		ТекЗнач = СтрЗаменить(ТекЗнач,ТемпНач,"");
			Если Найти(ТекЗнач,".") > 0 Тогда
			ТемпКон = Сред(ТекЗнач,Найти(ТекЗнач,"."));
			ТекЗнач = СтрЗаменить(ТекЗнач,ТемпКон,"");
			КонецЕсли;	                            
		    	Пока СтрДлина(ТекЗнач) < 5 Цикл
		    	ТекЗнач = "#"+ТекЗнач;	
				КонецЦикла;
		ТекЗнач = ТемпНач+ТекЗнач+ТемпКон;		
		Прервать;		
		КонецЕсли;
	КонецЦикла;
Возврат(СокрЛП(ТекЗнач));		
КонецФункции

&НаСервере
Процедура РаскрытьНаМПЗ(ВыбСпецификация,КолМПЗ,ПЗ,флНабор)
ТаблицаАналогов = ?(ПЗ.Линейка.ВидЛинейки = Перечисления.ВидыЛинеек.Канбан,ПЗ.ДокументОснование.Аналоги,ПЗ.Аналоги);
НормРасх = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Все(ВыбСпецификация,ТекущаяДата());
	Пока НормРасх.Следующий() Цикл			
		Если флНабор Тогда
		СтрокаТЗ = Отчет.Наборы.Добавить();
		Иначе
		СтрокаТЗ = Отчет.Элементы.Добавить();
		КонецЕсли;
	ВыбНормРасх = НормРасх.Ссылка;
	Элемент = ВыбНормРасх.Элемент;
	Аналог = Ложь; 	
	Примечание = НормРасх.Примечание;
	Позиция = СортироватьПоПорядку(СокрЛП(НормРасх.Позиция));
	ВыбАналог = ТаблицаАналогов.Найти(НормРасх.Ссылка,"НормаРасходов");
		Если ВыбАналог = Неопределено Тогда
			Если ТипЗнч(ВыбНормРасх.Элемент) = Тип("СправочникСсылка.Документация") Тогда
			Количество = "";
			Иначе
			Количество = НормРасх.Норма*КолМПЗ;
			КонецЕсли;			
		Иначе
		Элемент	= ВыбАналог.АналогНормыРасходов.Элемент;
		НормыАНР = ОбщегоНазначенияПовтИсп.АналогиНормРасходов_ПолучитьПоследнее(ВыбАналог.АналогНормыРасходов,ПЗ.ДатаЗапуска);
		Количество = НормыАНР.Норма*КолМПЗ;
		Аналог = Истина;				
		КонецЕсли;
			Если ТипЗнч(ВыбНормРасх.Элемент) = Тип("СправочникСсылка.Номенклатура") Тогда
				Если ВыбНормРасх.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Набор Тогда	
				СтрокаТЗ.Раздел = "6Комплекты";
				СтрокаТЗ.ЕдиницаИзмерения = ВыбНормРасх.Элемент.ОсновнаяЕдиницаИзмерения;
	            СтрокаТЗ.Примечание = Примечание;
				ИначеЕсли ВыбНормРасх.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Основа Тогда	
				СтрокаТЗ.Раздел = "2Сборочные единицы";			
				СтрокаТЗ.ЕдиницаИзмерения = ВыбНормРасх.Элемент.ОсновнаяЕдиницаИзмерения;
	            СтрокаТЗ.Примечание = Примечание;
				ИначеЕсли ВыбНормРасх.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Деталь Тогда	
				СтрокаТЗ.Раздел = "3Детали";		
				СтрокаТЗ.ЕдиницаИзмерения = ВыбНормРасх.Элемент.ОсновнаяЕдиницаИзмерения;
	            СтрокаТЗ.Примечание = Примечание;
				Иначе	
				СтрокаТЗ.Раздел = "2Сборочные единицы";			
				СтрокаТЗ.ЕдиницаИзмерения = ВыбНормРасх.Элемент.ОсновнаяЕдиницаИзмерения;
	            СтрокаТЗ.Примечание = Примечание;
				КонецЕсли;
			ИначеЕсли ТипЗнч(ВыбНормРасх.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
			СтрокаТЗ.Раздел = "4"+СокрЛП(ПолучитьВерхнегоРодителя(НормРасх.Элемент));
			СтрокаТЗ.ЕдиницаИзмерения = ВыбНормРасх.Элемент.ОсновнаяЕдиницаИзмерения;				
			СтрокаТЗ.Примечание = СокрЛП(ВыбНормРасх.Элемент.ИмяФайла);
			ИначеЕсли ТипЗнч(ВыбНормРасх.Элемент) = Тип("СправочникСсылка.Документация") Тогда	
			СтрокаТЗ.Раздел = "1Документация";
			СтрокаТЗ.ВидДокумента = ВыбНормРасх.Элемент.ВидДокумента;
			СтрокаТЗ.Примечание = СокрЛП(ВыбНормРасх.Элемент.ИмяФайла);
			ИначеЕсли ТипЗнч(ВыбНормРасх.Элемент) = Тип("СправочникСсылка.ТехОснастка") Тогда
			СтрокаТЗ.Раздел = "5Технологическая оснастка";
			СтрокаТЗ.Примечание = СокрЛП(ВыбНормРасх.Элемент.ИмяФайла);
			ИначеЕсли ТипЗнч(ВыбНормРасх.Элемент) = Тип("СправочникСсылка.ТехОперации") Тогда
			СтрокаТЗ.Раздел = "7Технологические операции";		
			КонецЕсли;	
	СтрокаТЗ.НормаРасхода = ВыбНормРасх;
	СтрокаТЗ.Позиция = Позиция;
	СтрокаТЗ.Элемент = Элемент;
	СтрокаТЗ.Количество = Количество;
	СтрокаТЗ.Аналог = Аналог;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура РаскрытьНаборНаМПЗ(ВыбСпецификация,КолМПЗ)
НормРасх = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Все(ВыбСпецификация,ТекущаяДата());
	Пока НормРасх.Следующий() Цикл			
		Если ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.Номенклатура") Тогда
			Если НормРасх.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Деталь Тогда
			СтрокаТЗ = Отчет.Наборы.Добавить();	
			СтрокаТЗ.Раздел = "3Детали";
			СтрокаТЗ.НормаРасхода = НормРасх.Ссылка;
			СтрокаТЗ.Элемент = НормРасх.Элемент;
			СтрокаТЗ.Позиция = СортироватьПоПорядку(СокрЛП(НормРасх.Позиция));
            СтрокаТЗ.Количество = НормРасх.Норма*КолМПЗ;		
			СтрокаТЗ.ЕдиницаИзмерения = НормРасх.Элемент.ОсновнаяЕдиницаИзмерения;
			Иначе
			СтрокаТЗ = Отчет.Наборы.Добавить();	
			СтрокаТЗ.Раздел = "2Сборочные единицы";
			СтрокаТЗ.НормаРасхода = НормРасх.Ссылка;
			СтрокаТЗ.Элемент = НормРасх.Элемент;
			СтрокаТЗ.Позиция = СортироватьПоПорядку(СокрЛП(НормРасх.Позиция));
            СтрокаТЗ.Количество = НормРасх.Норма*КолМПЗ;			
			СтрокаТЗ.ЕдиницаИзмерения = НормРасх.Элемент.ОсновнаяЕдиницаИзмерения;
			КонецЕсли;
		ИначеЕсли ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
		СтрокаТЗ = Отчет.Наборы.Добавить();	
		СтрокаТЗ.Раздел = "4"+СокрЛП(ПолучитьВерхнегоРодителя(НормРасх.Элемент));
		СтрокаТЗ.НормаРасхода = НормРасх.Ссылка;
		СтрокаТЗ.Элемент = НормРасх.Элемент;
		СтрокаТЗ.Позиция = СортироватьПоПорядку(СокрЛП(НормРасх.Позиция));
        СтрокаТЗ.Количество = НормРасх.Норма*КолМПЗ;
		СтрокаТЗ.ЕдиницаИзмерения = НормРасх.Элемент.ОсновнаяЕдиницаИзмерения;				
		СтрокаТЗ.Примечание = СокрЛП(НормРасх.Элемент.ИмяФайла);
		ИначеЕсли ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.Документация") Тогда
		СтрокаТЗ = Отчет.Наборы.Добавить();	
		СтрокаТЗ.Раздел = "1Документация";
		СтрокаТЗ.НормаРасхода = НормРасх.Ссылка;
		СтрокаТЗ.ВидДокумента = НормРасх.Элемент.ВидДокумента;
		СтрокаТЗ.Элемент = НормРасх.Элемент;
		СтрокаТЗ.Позиция = СортироватьПоПорядку(СокрЛП(НормРасх.Позиция));
		СтрокаТЗ.Примечание = СокрЛП(НормРасх.Элемент.ИмяФайла);
		ИначеЕсли ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.ТехОснастка") Тогда
		СтрокаТЗ = Отчет.Наборы.Добавить();	
		СтрокаТЗ.Раздел = "5Технологическая оснастка";
		СтрокаТЗ.НормаРасхода = НормРасх.Ссылка;
		СтрокаТЗ.Элемент = НормРасх.Элемент;
		СтрокаТЗ.Количество = НормРасх.Норма*КолМПЗ;
		СтрокаТЗ.Примечание = СокрЛП(НормРасх.Элемент.ИмяФайла);		
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Функция СформироватьНаСервере()
ТабДок.Очистить();
ТаблицаЭтаповСпецификации.Очистить();

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Спецификация");

ОблШапка1 = Макет.ПолучитьОбласть("Шапка1");
ОблШапка2 = Макет.ПолучитьОбласть("Шапка2");
ОблМТК = Макет.ПолучитьОбласть("МТК");
ОблГруппа = Макет.ПолучитьОбласть("Группа");	
ОблОсновной = Макет.ПолучитьОбласть("Основной");	
ОблАналог = Макет.ПолучитьОбласть("Аналог");
ОблНабор = Макет.ПолучитьОбласть("Набор");
ОблДокумент = Макет.ПолучитьОбласть("Док");
ОблТехОперация = Макет.ПолучитьОбласть("ТехОперация");
ОблКонец = Макет.ПолучитьОбласть("Конец");

	Для каждого Строка Из СписокПЗ Цикл	
	ПЗ = Строка.Значение;
	ТаблицаЭтаповСпецификации.Очистить();
	ОбщийМодульВызовСервера.ПолучитьТаблицуЭтаповСпецификации(ТаблицаЭтаповСпецификации,ПЗ.Изделие,ПолучитьБазовоеКоличество(ПЗ.ДокументОснование.Количество,ПЗ.Изделие.ОсновнаяЕдиницаИзмерения),Ложь,ПЗ.ДатаЗапуска);
		Для каждого ТЧ Из ТаблицаЭтаповСпецификации Цикл
		Отчет.Элементы.Очистить();
		РаскрытьНаМПЗ(ТЧ.ЭтапСпецификации,1,ПЗ,Ложь);
		Отчет.Элементы.Сортировать("Раздел,Позиция,Элемент");
		ОблШапка1.Параметры.ЭтапСпецификации = СокрЛП(ТЧ.ЭтапСпецификации.Наименование);
		ОблШапка1.Параметры.ПЗ = ""+ПЗ+" > "+СокрЛП(ПЗ.ДокументОснование.МестоХраненияПотребитель.Наименование);
		ОблШапка1.Параметры.Количество = ТЧ.Количество;
		ОблШапка1.Параметры.Статус = ПолучитьСтатус(ПЗ.Изделие);
			Если ЗначениеЗаполнено(ПЗ.ЛинияSMD) Тогда
			ОблШапка1.Параметры.ЛинияSMD = "Линия SMD: "+СокрЛП(ПЗ.ЛинияSMD.Наименование);					
			КонецЕсли;
				Если ПЗ.Прессформы.Количество() > 0 Тогда
				ОблШапка1.Параметры.Оборудование = СокрЛП(ПЗ.Прессформы[0].Станок.Наименование)+"-"+СокрЛП(ПЗ.Прессформы[0].Прессформа.Наименование);
				КонецЕсли;
		ОблШапка1.Параметры.НомерЯчейки = ПЗ.ДокументОснование.НомерЯчейки;
			Если ТЧ.ЭтапСпецификации = ПЗ.Изделие Тогда
			QRCode = "4;"+ЗначениеВСтрокуВнутр(ПЗ);				
			ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRCode, 0, 100);	
				Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
				КартинкаQRКода = Новый Картинка(ДанныеQRКода);
				ОблШапка1.Рисунки.QRCode.Картинка = КартинкаQRКода;
				Иначе
				Сообщить("Не удалось сформировать QR-код!");
				КонецЕсли;				
			ОблШапка1.Рисунки.QRCode.ВыводитьНаПечать = Истина;
			Иначе
			ОблШапка1.Рисунки.QRCode.Картинка = Новый Картинка();
			ОблШапка1.Рисунки.QRCode.ВыводитьНаПечать = Ложь;
			КонецЕсли;
		ТабДок.Вывести(ОблШапка1);      
		Родитель = ПЗ.ДокументОснование;
			Если ТипЗнч(Родитель.ДокументОснование) = Тип("ДокументСсылка.РемонтнаяКарта") Тогда
			Родитель = Родитель.ДокументОснование;
			ОблМТК.Параметры.МТК = "> "+Родитель+" ("+СокрЛП(Родитель.Изделие)+") > "+Родитель.Линейка;
			ТабДок.Вывести(ОблМТК);			
			Иначе	
				Пока ТипЗнч(Родитель.ДокументОснование) = Тип("ДокументСсылка.МаршрутнаяКарта") Цикл
				Родитель = Родитель.ДокументОснование;
				ОблМТК.Параметры.МТК = "> "+Родитель+" ("+СокрЛП(Родитель.Номенклатура)+") > "+Родитель.Линейка;
				ТабДок.Вывести(ОблМТК);
				КонецЦикла;			
			КонецЕсли;
		ДатаИзм = ТЧ.ЭтапСпецификации.ДатаСозданияСпецификации;
		//ОблШапка2.Параметры.ДатаИзменения = Формат(ОбщийМодульВызовСервера.ОпределитьДатуПоследнегоИзменения(ТЧ.ЭтапСпецификации,Ложь,ПЗ.ДатаЗапуска,ДатаИзм),"ДФ=dd.MM.yyyy");
		ОблШапка2.Параметры.ДатаВывода = ТекущаяДата();
		ОблШапка2.Параметры.ДатаСоздания = Формат(ТЧ.ЭтапСпецификации.ДатаСозданияСпецификации,"ДФ=dd.MM.yyyy");
		ТабДок.Вывести(ОблШапка2);

		ТекРаздел = "";
			Для Каждого СтрокаТЗ Из Отчет.Элементы Цикл
			ОблОсновной.Параметры.ЕдИзм = "";
			ОблОсновной.Параметры.Кол = "";
				Если ТекРаздел <> СтрокаТЗ.Раздел Тогда
				ОблГруппа.Параметры.Группа = Сред(СтрокаТЗ.Раздел,2);	
				ТекРаздел = СтрокаТЗ.Раздел;
				ТабДок.Вывести(ОблГруппа);
				КонецЕсли;
					Если ТекРаздел = "6Комплекты" Тогда
					ОблНабор.Параметры.Группа = СокрЛП(СтрокаТЗ.Элемент);
					ОблНабор.Параметры.Статус = ПолучитьСтатус(СтрокаТЗ.Элемент);
					ТабДок.Вывести(ОблНабор);
					Отчет.Наборы.Очистить();
					РаскрытьНаМПЗ(СтрокаТЗ.Элемент,1,ПЗ,Истина);
					Отчет.Наборы.Сортировать("Раздел,Позиция,Элемент");
					ТекРазделНабор = "";
						Для Каждого СтрокаТЗНабор Из Отчет.Наборы Цикл
							Если ТекРазделНабор <> СтрокаТЗНабор.Раздел Тогда
							ОблГруппа.Параметры.Группа = Сред(СтрокаТЗНабор.Раздел,2);
							ТекРазделНабор = СтрокаТЗНабор.Раздел;
							ТабДок.Вывести(ОблГруппа);
							КонецЕсли;
								Если СтрокаТЗНабор.Аналог Тогда
								ОблАналог.Параметры.Кол = "";					
								ОблАналог.Параметры.Статус = ПолучитьСтатус(СтрокаТЗНабор.Элемент);
								ОблАналог.Параметры.Позиция = СокрЛП(СтрокаТЗНабор.НормаРасхода.Позиция);
								ОблАналог.Параметры.ВидДок = СтрокаТЗНабор.ВидДокумента;
								ОблАналог.Параметры.Наимен = СокрЛП(СтрокаТЗНабор.Элемент.Наименование);
								ОблАналог.Параметры.Элемент = СтрокаТЗНабор.Элемент;
									Если СтрокаТЗНабор.Количество > 0 Тогда
									ОблАналог.Параметры.Кол = СтрокаТЗНабор.Количество;
									ОблАналог.Параметры.КолВсего = СтрокаТЗНабор.Количество*ТЧ.Количество;
									ЯХ = ОбщийМодульРаботаСРегистрами.ПолучитьЯчейкуХранения(СтрокаТЗНабор.Элемент,Отчет.МестоХранения);
										Если ЯХ <> Неопределено Тогда
										ОблАналог.Параметры.УникальныйНомер = ЯХ.УникальныйНомер;
										Иначе	
										ОблАналог.Параметры.УникальныйНомер = "";
										КонецЕсли;							
									КонецЕсли;
								ЕдИзм = СокрЛП(СтрокаТЗНабор.ЕдиницаИзмерения.Наименование);			
								ОблАналог.Параметры.ЕдИзм = ?(ЕдИзм <> "шт",ЕдИзм,"");
								ОблАналог.Параметры.Примечание = СокрЛП(СтрокаТЗНабор.Примечание);	
								ТабДок.Вывести(ОблАналог);
								Иначе
								ОблОсновной.Параметры.Кол = "";					
								ОблОсновной.Параметры.Статус = ПолучитьСтатус(СтрокаТЗНабор.Элемент);
								ОблОсновной.Параметры.Позиция = СокрЛП(СтрокаТЗНабор.НормаРасхода.Позиция);
								ОблОсновной.Параметры.ВидДок = СтрокаТЗНабор.ВидДокумента;
								ОблОсновной.Параметры.Наимен = СокрЛП(СтрокаТЗНабор.Элемент.Наименование);
								ОблОсновной.Параметры.Элемент = СтрокаТЗНабор.Элемент;
									Если СтрокаТЗНабор.Количество > 0 Тогда
									ОблОсновной.Параметры.Кол = СтрокаТЗНабор.Количество;
									ОблОсновной.Параметры.КолВсего = СтрокаТЗНабор.Количество*ТЧ.Количество;
									ЯХ = ОбщийМодульРаботаСРегистрами.ПолучитьЯчейкуХранения(СтрокаТЗНабор.Элемент,Отчет.МестоХранения);
										Если ЯХ <> Неопределено Тогда
										ОблОсновной.Параметры.УникальныйНомер = ЯХ.УникальныйНомер;
										Иначе	
										ОблОсновной.Параметры.УникальныйНомер = "";
										КонецЕсли;							
									КонецЕсли;
								ЕдИзм = СокрЛП(СтрокаТЗНабор.ЕдиницаИзмерения.Наименование);			
								ОблОсновной.Параметры.ЕдИзм = ?(ЕдИзм <> "шт",ЕдИзм,"");
								ОблОсновной.Параметры.Примечание = СокрЛП(СтрокаТЗНабор.Примечание);	
								ТабДок.Вывести(ОблОсновной);     
								КонецЕсли;	
						КонецЦикла;	
					ИначеЕсли ТекРаздел = "1Документация" Тогда
					ОблДокумент.Параметры.Статус = ПолучитьСтатус(СтрокаТЗ.Элемент);
					ОблДокумент.Параметры.Позиция = СокрЛП(СтрокаТЗ.НормаРасхода.Позиция);
					ОблДокумент.Параметры.ВидДок = СтрокаТЗ.ВидДокумента;
					ОблДокумент.Параметры.Наимен = СокрЛП(СтрокаТЗ.Элемент.Наименование);
					ОблДокумент.Параметры.Элемент = СтрокаТЗ.Элемент;
					ОблДокумент.Параметры.Примечание = СокрЛП(СтрокаТЗ.Примечание);	
					ТабДок.Вывести(ОблДокумент);
					Иначе
						Если СтрокаТЗ.Аналог Тогда
						ОблАналог.Параметры.Статус = ПолучитьСтатус(СтрокаТЗ.Элемент);
						ОблАналог.Параметры.Позиция = СокрЛП(СтрокаТЗ.НормаРасхода.Позиция);
						ОблАналог.Параметры.ВидДок = СтрокаТЗ.ВидДокумента;
						ОблАналог.Параметры.Наимен = СокрЛП(СтрокаТЗ.Элемент.Наименование);
						ОблАналог.Параметры.Элемент = СтрокаТЗ.Элемент;
						ОблАналог.Параметры.Кол = СтрокаТЗ.Количество;
						ОблАналог.Параметры.КолВсего = СтрокаТЗ.Количество*ТЧ.Количество;
						ЕдИзм = СокрЛП(СтрокаТЗ.ЕдиницаИзмерения.Наименование);		
						ОблАналог.Параметры.ЕдИзм = ?(ЕдИзм <> "шт",ЕдИзм,"");
						ОблАналог.Параметры.Примечание = СокрЛП(СтрокаТЗ.Примечание);	
						ЯХ = ОбщийМодульРаботаСРегистрами.ПолучитьЯчейкуХранения(СтрокаТЗ.Элемент,Отчет.МестоХранения);
							Если ЯХ <> Неопределено Тогда
							ОблАналог.Параметры.УникальныйНомер = ЯХ.УникальныйНомер;
							Иначе	
							ОблАналог.Параметры.УникальныйНомер = "";
							КонецЕсли;						
						ТабДок.Вывести(ОблАналог);
						Иначе
						ОблОсновной.Параметры.Статус = ПолучитьСтатус(СтрокаТЗ.Элемент);
						ОблОсновной.Параметры.Позиция = СокрЛП(СтрокаТЗ.НормаРасхода.Позиция);
						ОблОсновной.Параметры.ВидДок = СтрокаТЗ.ВидДокумента;
						ОблОсновной.Параметры.Наимен = СокрЛП(СтрокаТЗ.Элемент.Наименование);
						ОблОсновной.Параметры.Элемент = СтрокаТЗ.Элемент;
						ОблОсновной.Параметры.Кол = СтрокаТЗ.Количество;
						ОблОсновной.Параметры.КолВсего = СтрокаТЗ.Количество*ТЧ.Количество;		
						ЕдИзм = СокрЛП(СтрокаТЗ.ЕдиницаИзмерения.Наименование);		
						ОблОсновной.Параметры.ЕдИзм = ?(ЕдИзм <> "шт",ЕдИзм,"");
						ОблОсновной.Параметры.Примечание = СокрЛП(СтрокаТЗ.Примечание);
						ЯХ = ОбщийМодульРаботаСРегистрами.ПолучитьЯчейкуХранения(СтрокаТЗ.Элемент,Отчет.МестоХранения);
							Если ЯХ <> Неопределено Тогда
							ОблОсновной.Параметры.УникальныйНомер = ЯХ.УникальныйНомер;
							Иначе	
							ОблОсновной.Параметры.УникальныйНомер = "";
							КонецЕсли; 
						ТабДок.Вывести(ОблОсновной);						
						КонецЕсли; 
					КонецЕсли;	
			КонецЦикла;
				Если ТЧ.ЭтапСпецификации = ПЗ.Изделие Тогда
					Для каждого ТЧ Из ПЗ.Оборудование Цикл		
					ОблТехОперация.Параметры.ТехОперация = ТЧ.ТехОперация;	
					ТабДок.Вывести(ОблТехОперация);	
					КонецЦикла;
				КонецЕсли;
		КонецЦикла;
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();	
	КонецЦикла; 
ТабДок.РазмерСтраницы = "A4";
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет; 
Возврат(ТабДок);
КонецФункции

&НаСервере
Функция СформироватьВедомостьЭлементовНаСервере()
ТабДок.Очистить();
ТаблицаЭтаповСпецификации.Очистить();

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("ВедомостьЭлементов");

ОблШапка1 = Макет.ПолучитьОбласть("Шапка1");
ОблШапка2 = Макет.ПолучитьОбласть("Шапка2");
ОблМТК = Макет.ПолучитьОбласть("МТК");
ОблГруппа = Макет.ПолучитьОбласть("Группа");	
ОблОсновной = Макет.ПолучитьОбласть("Основной");
ОблКонец = Макет.ПолучитьОбласть("Конец");

	Для каждого Строка Из СписокПЗ Цикл	
	ПЗ = Строка.Значение;
	ТаблицаЭтаповСпецификации.Очистить();
	ОбщийМодульВызовСервера.ПолучитьТаблицуЭтаповСпецификации(ТаблицаЭтаповСпецификации,ПЗ.Изделие,ПолучитьБазовоеКоличество(ПЗ.ДокументОснование.Количество,ПЗ.Изделие.ОсновнаяЕдиницаИзмерения),Ложь,ПЗ.ДатаЗапуска);
		Для каждого ТЧ Из ТаблицаЭтаповСпецификации Цикл
		Отчет.Элементы.Очистить();
		РаскрытьНаМПЗ(ТЧ.ЭтапСпецификации,1,ПЗ,Ложь);
		ТЗ = Отчет.Элементы.Выгрузить();
		ТЗ.Свернуть("Раздел,Элемент,ВидДокумента,ЕдиницаИзмерения","Количество");
		ТЗ.Сортировать("Раздел,Элемент");
		ОблШапка1.Параметры.ЭтапСпецификации = СокрЛП(ТЧ.ЭтапСпецификации.Наименование);
		ОблШапка1.Параметры.ПЗ = ""+ПЗ+" > "+СокрЛП(ПЗ.ДокументОснование.МестоХраненияПотребитель.Наименование);
		ОблШапка1.Параметры.Количество = ТЧ.Количество;
		ОблШапка1.Параметры.Статус = ПолучитьСтатус(ПЗ.Изделие);
			Если ЗначениеЗаполнено(ПЗ.ЛинияSMD) Тогда
			ОблШапка1.Параметры.ЛинияSMD = "Линия SMD: "+СокрЛП(ПЗ.ЛинияSMD.Наименование);					
			КонецЕсли;
				Если ПЗ.Прессформы.Количество() > 0 Тогда
				ОблШапка1.Параметры.Оборудование = СокрЛП(ПЗ.Прессформы[0].Станок.Наименование)+"-"+СокрЛП(ПЗ.Прессформы[0].Прессформа.Наименование);
				КонецЕсли;
		ОблШапка1.Параметры.НомерЯчейки = ПЗ.ДокументОснование.НомерЯчейки;
			Если ТЧ.ЭтапСпецификации = ПЗ.Изделие Тогда
			QRCode = "4;"+ЗначениеВСтрокуВнутр(ПЗ);				
			ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRCode, 0, 100);	
				Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
				КартинкаQRКода = Новый Картинка(ДанныеQRКода);
				ОблШапка1.Рисунки.QRCode.Картинка = КартинкаQRКода;
				Иначе
				Сообщить("Не удалось сформировать QR-код!");
				КонецЕсли;				
			ОблШапка1.Рисунки.QRCode.ВыводитьНаПечать = Истина;
			Иначе
			ОблШапка1.Рисунки.QRCode.Картинка = Новый Картинка();
			ОблШапка1.Рисунки.QRCode.ВыводитьНаПечать = Ложь;
			КонецЕсли;
		ТабДок.Вывести(ОблШапка1);    
		Родитель = ПЗ.ДокументОснование;
			Если ТипЗнч(Родитель.ДокументОснование) = Тип("ДокументСсылка.РемонтнаяКарта") Тогда
			Родитель = Родитель.ДокументОснование;
			ОблМТК.Параметры.МТК = "> "+Родитель+" ("+СокрЛП(Родитель.Изделие)+") > "+Родитель.Линейка;
			ТабДок.Вывести(ОблМТК);			
			Иначе	
				Пока ТипЗнч(Родитель.ДокументОснование) = Тип("ДокументСсылка.МаршрутнаяКарта") Цикл
				Родитель = Родитель.ДокументОснование;
				ОблМТК.Параметры.МТК = "> "+Родитель+" ("+СокрЛП(Родитель.Номенклатура)+") > "+Родитель.Линейка;
				ТабДок.Вывести(ОблМТК);
				КонецЦикла;			
			КонецЕсли;
		ДатаИзм = ТЧ.ЭтапСпецификации.ДатаСозданияСпецификации;
		//ОблШапка2.Параметры.ДатаИзменения = Формат(ОбщийМодульВызовСервера.ОпределитьДатуПоследнегоИзменения(ТЧ.ЭтапСпецификации,Ложь,ПЗ.ДатаЗапуска,ДатаИзм),"ДФ=dd.MM.yyyy");
		ОблШапка2.Параметры.ДатаВывода = ТекущаяДата();
		ОблШапка2.Параметры.ДатаСоздания = Формат(ТЧ.ЭтапСпецификации.ДатаСозданияСпецификации,"ДФ=dd.MM.yyyy");
		ТабДок.Вывести(ОблШапка2);

		ТекРаздел = "";
			Для Каждого СтрокаТЗ Из ТЗ Цикл
			ОблОсновной.Параметры.ЕдИзм = "";
			ОблОсновной.Параметры.Кол = "";
				Если ТекРаздел <> СтрокаТЗ.Раздел Тогда
				ОблГруппа.Параметры.Группа = Сред(СтрокаТЗ.Раздел,2);	
				ТекРаздел = СтрокаТЗ.Раздел;
				ТабДок.Вывести(ОблГруппа);
				КонецЕсли;
			ОблОсновной.Параметры.ЕдИзм = "";
			ОблОсновной.Параметры.Кол = "";				
			ОблОсновной.Параметры.Статус = ПолучитьСтатус(СтрокаТЗ.Элемент);
			ОблОсновной.Параметры.ВидДок = СтрокаТЗ.ВидДокумента;
			ОблОсновной.Параметры.Наимен = СокрЛП(СтрокаТЗ.Элемент.Наименование);
			ОблОсновной.Параметры.Элемент = СтрокаТЗ.Элемент;
			ОблОсновной.Параметры.Кол = СтрокаТЗ.Количество;
			ОблОсновной.Параметры.КолВсего = СтрокаТЗ.Количество*ТЧ.Количество;
			ЕдИзм = СокрЛП(СтрокаТЗ.ЕдиницаИзмерения.Наименование);			
				Если ЕдИзм <> "шт" Тогда
				ОблОсновной.Параметры.ЕдИзм = ЕдИзм;
				КонецЕсли;
			ЯХ = ОбщийМодульРаботаСРегистрами.ПолучитьЯчейкуХранения(СтрокаТЗ.Элемент,Отчет.МестоХранения);
				Если ЯХ <> Неопределено Тогда
				ОблОсновной.Параметры.Стеллаж = ЯХ.Стеллаж;
				ОблОсновной.Параметры.Полка = ЯХ.Полка;
				ОблОсновной.Параметры.УникальныйНомер = ЯХ.УникальныйНомер;
				Иначе
				ОблОсновной.Параметры.Стеллаж = "";
				ОблОсновной.Параметры.Полка = "";				
				ОблОсновной.Параметры.УникальныйНомер = "";
				КонецЕсли;			
			ТабДок.Вывести(ОблОсновной);	
			КонецЦикла;
		КонецЦикла;
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();	
	КонецЦикла; 
ТабДок.РазмерСтраницы = "A4";
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет; 
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура Сформировать(Команда)
	Если Отчет.ВедомостьЭлементов Тогда
	СформироватьВедомостьЭлементовНаСервере();
	Иначе	
	СформироватьНаСервере();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Если ТипЗнч(Расшифровка) = Тип("СправочникСсылка.Документация") Тогда
	СтандартнаяОбработка = Ложь;
	ОбщийМодульКлиент.ОткрытьФайлДокумента(Расшифровка);
	КонецЕсли;
КонецПроцедуры
