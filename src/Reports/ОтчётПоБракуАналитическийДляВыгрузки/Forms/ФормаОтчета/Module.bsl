
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
ВидОтчёта = 1;
РасшифроватьПо = 1;
КонецПроцедуры

&НаСервере
Процедура ПолучитьКоличествоВыпущенных(ТаблицаВыпусков)
Запрос = Новый Запрос;

ЕдиницаИзмерения = Справочники.ЕдиницыИзмерений.НайтиПоНаименованию("шт",Истина);

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииКанбан.Количество КАК Количество,
	|	ВыпускПродукцииКанбан.Изделие КАК Изделие,
	|	ВыпускПродукцииКанбан.Ссылка КАК Ссылка,
	|	ВыпускПродукцииКанбан.ДокументОснование.Линейка КАК Линейка,
	|	ВыпускПродукцииКанбан.Дата КАК Дата
	|ИЗ
	|	Документ.ВыпускПродукцииКанбан КАК ВыпускПродукцииКанбан
	|ГДЕ
	|	ВыпускПродукцииКанбан.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииКанбан.ДокументОснование.ДокументОснование.Ремонт = ЛОЖЬ";
Если СписокПодразделенийДляРасчёта.Количество() > 0 Тогда
Запрос.Текст = Запрос.Текст + " И ВыпускПродукцииКанбан.Подразделение В(&СписокПодразделений)";	
Запрос.УстановитьПараметр("СписокПодразделений", СписокПодразделенийДляРасчёта);
КонецЕсли;
	Если СписокЛинеекДляРасчёта.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ВыпускПродукцииКанбан.ДокументОснование.Линейка В ИЕРАРХИИ(&СписокЛинеек)";	
	Запрос.УстановитьПараметр("СписокЛинеек", СписокЛинеекДляРасчёта);
	КонецЕсли; 
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Отчет.Период.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Отчет.Период.ДатаОкончания));
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаВыпусков.Добавить();
	ТЧ.Дата = Формат(ВыборкаДетальныеЗаписи.Дата,"ДФ=dd.MM.yyyy");
	ТЧ.Линейка = ВыборкаДетальныеЗаписи.Линейка;
	ТЧ.Изделие = ?(ВыборкаДетальныеЗаписи.Изделие.Товар.Пустая(),ВыборкаДетальныеЗаписи.Изделие,ВыборкаДетальныеЗаписи.Изделие.Товар);
	ТЧ.Спецификация = ВыборкаДетальныеЗаписи.Изделие;
	ТЧ.Количество = ?(ВыборкаДетальныеЗаписи.Изделие.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаДетальныеЗаписи.Количество);
	КонецЦикла;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииПоступление.Количество КАК Количество,
	|	ВыпускПродукцииПоступление.Номенклатура КАК Номенклатура,
	|	ВыпускПродукцииПоступление.Ссылка КАК Ссылка,
	|	ВыпускПродукцииПоступление.Ссылка.ДокументОснование.Линейка КАК Линейка,
	|	ВыпускПродукцииПоступление.Ссылка.Дата КАК Дата
	|ИЗ
	|	Документ.ВыпускПродукции.Поступление КАК ВыпускПродукцииПоступление
	|ГДЕ
	|	ВыпускПродукцииПоступление.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииПоступление.Ссылка.НаСклад = ИСТИНА
	|	И ВыпускПродукцииПоступление.Ссылка.ДокументОснование.ДокументОснование.Ремонт = ЛОЖЬ";
Если СписокПодразделенийДляРасчёта.Количество() > 0 Тогда
Запрос.Текст = Запрос.Текст + " И ВыпускПродукцииПоступление.Ссылка.Подразделение В(&СписокПодразделений)";	
Запрос.УстановитьПараметр("СписокПодразделений", СписокПодразделенийДляРасчёта);
КонецЕсли;
	Если СписокЛинеекДляРасчёта.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ВыпускПродукцииПоступление.Ссылка.ДокументОснование.Линейка В ИЕРАРХИИ(&СписокЛинеек)";	
	Запрос.УстановитьПараметр("СписокЛинеек", СписокЛинеекДляРасчёта);
	КонецЕсли; 
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Отчет.Период.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Отчет.Период.ДатаОкончания));
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаВыпусков.Добавить();
	ТЧ.Дата = Формат(ВыборкаДетальныеЗаписи.Дата,"ДФ=dd.MM.yyyy");
	ТЧ.Линейка = ВыборкаДетальныеЗаписи.Линейка;
	ТЧ.Изделие = ?(ВыборкаДетальныеЗаписи.Номенклатура.Товар.Пустая(),ВыборкаДетальныеЗаписи.Номенклатура,ВыборкаДетальныеЗаписи.Номенклатура.Товар);
	ТЧ.Спецификация = ВыборкаДетальныеЗаписи.Номенклатура;
	ТЧ.Количество = ?(ВыборкаДетальныеЗаписи.Номенклатура.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаДетальныеЗаписи.Количество);
	КонецЦикла;
ТаблицаВыпусков.Свернуть("Линейка,Изделие,Спецификация,Дата","Количество");
ТаблицаВыпусков.Сортировать("Линейка,Дата,Изделие");
КонецПроцедуры 

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();
ТаблицаБрака = Новый ТаблицаЗначений;

ТаблицаБрака.Колонки.Добавить("Дата");
ТаблицаБрака.Колонки.Добавить("Линейка");
ТаблицаБрака.Колонки.Добавить("Параметр");
ТаблицаБрака.Колонки.Добавить("Расшифровка");
ТаблицаБрака.Колонки.Добавить("Количество");

//ЕдиницаИзмерения = Справочники.ЕдиницыИзмерений.НайтиПоНаименованию("шт",Истина);

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблСтрока = Макет.ПолучитьОбласть("Строка");
ОблКонец = Макет.ПолучитьОбласть("Конец");
	
ОблШапка.Параметры.ДатаНач = Отчет.Период.ДатаНачала;
ОблШапка.Параметры.ДатаКон = Отчет.Период.ДатаОкончания;
	Если ВидОтчёта = 1 Тогда
	ОблШапка.Параметры.Параметр = "Изделие";
	ИначеЕсли ВидОтчёта = 2 Тогда	
	ОблШапка.Параметры.Параметр = "Рабочее место";	
	ИначеЕсли ВидОтчёта = 3 Тогда	
	ОблШапка.Параметры.Параметр = "Вид брака";
	ИначеЕсли ВидОтчёта = 4 Тогда	
	ОблШапка.Параметры.Параметр = "Неисправный МПЗ";
	ИначеЕсли ВидОтчёта = 5 Тогда	
	ОблШапка.Параметры.Параметр = "Место нахождения брака";
	ИначеЕсли ВидОтчёта = 6 Тогда	
	ОблШапка.Параметры.Параметр = "Этап жизненного цикла";
	ИначеЕсли ВидОтчёта = 7 Тогда	
	ОблШапка.Параметры.Параметр = "Причина ремонта";
	КонецЕсли;
		Если РасшифроватьПо = 1 Тогда	
		ОблШапка.Параметры.Расшифровка = "Изделие";
		ИначеЕсли РасшифроватьПо = 2 Тогда	
		ОблШапка.Параметры.Расшифровка = "Рабочее место ";	
		ИначеЕсли РасшифроватьПо = 3 Тогда	
		ОблШапка.Параметры.Расшифровка = "Вид брака";
		ИначеЕсли РасшифроватьПо = 4 Тогда	
		ОблШапка.Параметры.Расшифровка = "Неисправный МПЗ";
		ИначеЕсли РасшифроватьПо = 5 Тогда	
		ОблШапка.Параметры.Расшифровка = "Место нахождения брака";
		ИначеЕсли РасшифроватьПо = 6 Тогда	
		ОблШапка.Параметры.Расшифровка = "Этап жизненного цикла";
		ИначеЕсли РасшифроватьПо = 7 Тогда	
		ОблШапка.Параметры.Расшифровка =  "Причина ремонта";
		КонецЕсли;
ТабДок.Вывести(ОблШапка);

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РемонтнаяКартаНеисправности.Ссылка КАК Ссылка,
	|	РемонтнаяКартаНеисправности.Ссылка.РабочееМесто КАК РабочееМесто,
	|	РемонтнаяКартаНеисправности.Ссылка.РабочееМесто.Наименование КАК РабочееМестоНаим,
	|	РемонтнаяКартаНеисправности.Ссылка.ДокументОснование.Изделие КАК Изделие,
	|	РемонтнаяКартаНеисправности.Ссылка.ДокументОснование.Изделие.Наименование КАК ИзделиеНаим,
	|	РемонтнаяКартаНеисправности.Ссылка.ДатаОкончания КАК Дата,
	|	РемонтнаяКартаНеисправности.НеисправныйМПЗ КАК МПЗ,
	|	РемонтнаяКартаНеисправности.НеисправныйМПЗ.Наименование КАК НеисправныйМПЗНаим,
	|	РемонтнаяКартаНеисправности.ВидБрака КАК ВидБрака,
	|	РемонтнаяКартаНеисправности.ВидБрака.Наименование КАК ВидБракаНаим,
	|	РемонтнаяКартаНеисправности.ЭтапЖизненногоЦикла КАК ЭтапЖизненногоЦикла,
	|	РемонтнаяКартаНеисправности.ЭтапЖизненногоЦикла.Наименование КАК ЭтапЖизненногоЦиклаНаим,
	|	РемонтнаяКартаНеисправности.МестоНахожденияБрака КАК МестоНахожденияБрака,
	|	РемонтнаяКартаНеисправности.МестоНахожденияБрака.Наименование КАК МестоНахожденияБракаНаим,
	|	РемонтнаяКартаНеисправности.Ссылка.ПричинаРемонта КАК ПричинаРемонта,
	|	РемонтнаяКартаНеисправности.Ссылка.ПричинаРемонта.Наименование КАК ПричинаРемонтаНаим,
	|	РемонтнаяКартаНеисправности.Количество КАК Количество,
	|	РемонтнаяКартаНеисправности.НеисправныйМПЗ.ОсновнаяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РемонтнаяКартаНеисправности.Ссылка.Линейка КАК Линейка
	|ИЗ
	|	Документ.РемонтнаяКарта.Неисправности КАК РемонтнаяКартаНеисправности
	|ГДЕ
	|	РемонтнаяКартаНеисправности.Ссылка.ДатаОкончания МЕЖДУ &ДатаНач И &ДатаКон
	|	И РемонтнаяКартаНеисправности.Ссылка.ПометкаУдаления = ЛОЖЬ";
	Если СписокПодразделений.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И РемонтнаяКартаНеисправности.Ссылка.Линейка.Подразделение В(&СписокПодразделений)";
	Запрос.УстановитьПараметр("СписокПодразделений",СписокПодразделений);
	КонецЕсли;
		Если СписокЛинеек.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И РемонтнаяКартаНеисправности.Ссылка.Линейка В ИЕРАРХИИ(&СписокЛинеек)";
		Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
		КонецЕсли;
			Если СписокРабочихМест.Количество() > 0 Тогда
			Запрос.Текст = Запрос.Текст + " И РемонтнаяКартаНеисправности.Ссылка.РабочееМесто В ИЕРАРХИИ(&СписокРабочихМест)";
			Запрос.УстановитьПараметр("СписокРабочихМест",СписокРабочихМест);
			КонецЕсли;
				Если СписокЭтаповЖизненногоЦикла.Количество() > 0 Тогда
				Запрос.Текст = Запрос.Текст + " И РемонтнаяКартаНеисправности.ЭтапЖизненногоЦикла В ИЕРАРХИИ(&СписокЭтаповЖизненногоЦикла)";
				Запрос.УстановитьПараметр("СписокЭтаповЖизненногоЦикла",СписокЭтаповЖизненногоЦикла);
				КонецЕсли;		
					Если СписокГруппСпецификаций.Количество() > 0 Тогда
					Запрос.Текст = Запрос.Текст + " И РемонтнаяКартаНеисправности.Ссылка.ДокументОснование.Изделие В ИЕРАРХИИ(&СписокГруппСпецификаций)";
					Запрос.УстановитьПараметр("СписокГруппСпецификаций",СписокГруппСпецификаций);
					КонецЕсли;
						Если СписокГруппМПЗ.Количество() > 0 Тогда
						Запрос.Текст = Запрос.Текст + " И РемонтнаяКартаНеисправности.МестоНахожденияБрака В ИЕРАРХИИ(&СписокГруппМПЗ)";
						Запрос.УстановитьПараметр("СписокГруппМПЗ",СписокГруппМПЗ);
						КонецЕсли;
Запрос.Текст = Запрос.Текст + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка,
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.РабочееМесто,
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.РабочееМесто.Наименование,
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.ДокументОснование.Изделие,
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.ДокументОснование.Изделие.Наименование,
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.Дата КАК Дата,
	|	ДвижениеМПЗТабличнаяЧасть.МПЗ,
	|	ДвижениеМПЗТабличнаяЧасть.МПЗ.Наименование,
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.ВидБрака,
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.ВидБрака.Наименование,
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.ЭтапЖизненногоЦикла,
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.ЭтапЖизненногоЦикла.Наименование,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ДвижениеМПЗТабличнаяЧасть.Количество,
	|	ДвижениеМПЗТабличнаяЧасть.ЕдиницаИзмерения,
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.РабочееМесто.Линейка
	|ИЗ
	|	Документ.ДвижениеМПЗ.ТабличнаяЧасть КАК ДвижениеМПЗТабличнаяЧасть
	|ГДЕ
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ДвижениеМПЗТабличнаяЧасть.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И ТИПЗНАЧЕНИЯ(ДвижениеМПЗТабличнаяЧасть.Ссылка.ВидБрака) = ТИП(Справочник.ВидыБрака)";
	Если СписокПодразделений.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ДвижениеМПЗТабличнаяЧасть.Ссылка.РабочееМесто.Линейка.Подразделение В(&СписокПодразделений)";
	Запрос.УстановитьПараметр("СписокПодразделений",СписокПодразделений);
	КонецЕсли;
		Если СписокЛинеек.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И ДвижениеМПЗТабличнаяЧасть.Ссылка.РабочееМесто.Линейка В ИЕРАРХИИ(&СписокЛинеек)";
		Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
		КонецЕсли;
			Если СписокРабочихМест.Количество() > 0 Тогда
			Запрос.Текст = Запрос.Текст + " И ДвижениеМПЗТабличнаяЧасть.Ссылка.РабочееМесто В ИЕРАРХИИ(&СписокРабочихМест)";
			Запрос.УстановитьПараметр("СписокРабочихМест",СписокРабочихМест);
			КонецЕсли;
				Если СписокЭтаповЖизненногоЦикла.Количество() > 0 Тогда
				Запрос.Текст = Запрос.Текст + " И ДвижениеМПЗТабличнаяЧасть.Ссылка.ЭтапЖизненногоЦикла В ИЕРАРХИИ(&СписокЭтаповЖизненногоЦикла)";
				Запрос.УстановитьПараметр("СписокЭтаповЖизненногоЦикла",СписокЭтаповЖизненногоЦикла);
				КонецЕсли;		
					Если СписокГруппСпецификаций.Количество() > 0 Тогда
					Запрос.Текст = Запрос.Текст + " И ДвижениеМПЗТабличнаяЧасть.Ссылка.ДокументОснование.Изделие В ИЕРАРХИИ(&СписокГруппСпецификаций)";
					Запрос.УстановитьПараметр("СписокГруппСпецификаций",СписокГруппСпецификаций);
					КонецЕсли;	
Запрос.Текст = Запрос.Текст + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка,
	|	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.РабочееМесто,
	|	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.РабочееМесто.Наименование,
	|	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ДокументОснование.Изделие,
	|	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ДокументОснование.Изделие.Наименование,
	|	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.Дата КАК Дата,
	|	СписаниеМПЗПрочееТабличнаяЧасть.МПЗ,
	|	СписаниеМПЗПрочееТабличнаяЧасть.МПЗ.Наименование,
	|	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ВидБрака,
	|	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ВидБрака.Наименование,
	|	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ЭтапЖизненногоЦикла,
	|	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ЭтапЖизненногоЦикла.Наименование,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	СписаниеМПЗПрочееТабличнаяЧасть.Количество,
	|	СписаниеМПЗПрочееТабличнаяЧасть.ЕдиницаИзмерения,
	|	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.РабочееМесто.Линейка
	|ИЗ
	|	Документ.СписаниеМПЗПрочее.ТабличнаяЧасть КАК СписаниеМПЗПрочееТабличнаяЧасть
	|ГДЕ
	|	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И ТИПЗНАЧЕНИЯ(СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ВидБрака) = ТИП(Справочник.ВидыБрака)";
	Если СписокПодразделений.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.РабочееМесто.Линейка.Подразделение В(&СписокПодразделений)";
	Запрос.УстановитьПараметр("СписокПодразделений",СписокПодразделений);
	КонецЕсли;
		Если СписокЛинеек.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.РабочееМесто.Линейка В ИЕРАРХИИ(&СписокЛинеек)";
		Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
		КонецЕсли;
			Если СписокРабочихМест.Количество() > 0 Тогда
			Запрос.Текст = Запрос.Текст + " И СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.РабочееМесто В ИЕРАРХИИ(&СписокРабочихМест)";
			Запрос.УстановитьПараметр("СписокРабочихМест",СписокРабочихМест);
			КонецЕсли;
				Если СписокЭтаповЖизненногоЦикла.Количество() > 0 Тогда
				Запрос.Текст = Запрос.Текст + " И СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ЭтапЖизненногоЦикла В ИЕРАРХИИ(&СписокЭтаповЖизненногоЦикла)";
				Запрос.УстановитьПараметр("СписокЭтаповЖизненногоЦикла",СписокЭтаповЖизненногоЦикла);
				КонецЕсли;		
					Если СписокГруппСпецификаций.Количество() > 0 Тогда
					Запрос.Текст = Запрос.Текст + " И СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ДокументОснование.Изделие В ИЕРАРХИИ(&СписокГруппСпецификаций)";
					Запрос.УстановитьПараметр("СписокГруппСпецификаций",СписокГруппСпецификаций);
					КонецЕсли; 
Запрос.Текст = Запрос.Текст + "	ИТОГИ СУММА(Количество) ПО ОБЩИЕ, Линейка";
	Если ВидОтчёта = 1 Тогда	
	Запрос.Текст = Запрос.Текст + ",Изделие";
	ИначеЕсли ВидОтчёта = 2 Тогда	
	Запрос.Текст = Запрос.Текст + ",РабочееМесто";	
	ИначеЕсли ВидОтчёта = 3 Тогда	
	Запрос.Текст = Запрос.Текст + ",ВидБрака";
	ИначеЕсли ВидОтчёта = 4 Тогда	
	Запрос.Текст = Запрос.Текст + ",МПЗ";
	ИначеЕсли ВидОтчёта = 5 Тогда	
	Запрос.Текст = Запрос.Текст + ",МестоНахожденияБрака";
	ИначеЕсли ВидОтчёта = 6 Тогда	
	Запрос.Текст = Запрос.Текст + ",ЭтапЖизненногоЦикла";
	ИначеЕсли ВидОтчёта = 7 Тогда	
	Запрос.Текст = Запрос.Текст + ",ПричинаРемонта";
	КонецЕсли; 
		Если РасшифроватьПо = 1 Тогда	
		Запрос.Текст = Запрос.Текст + ",Изделие";
		ИначеЕсли РасшифроватьПо = 2 Тогда	
		Запрос.Текст = Запрос.Текст + ",РабочееМесто";	
		ИначеЕсли РасшифроватьПо = 3 Тогда	
		Запрос.Текст = Запрос.Текст + ",ВидБрака";
		ИначеЕсли РасшифроватьПо = 4 Тогда	
		Запрос.Текст = Запрос.Текст + ",МПЗ";
		ИначеЕсли РасшифроватьПо = 5 Тогда	
		Запрос.Текст = Запрос.Текст + ",МестоНахожденияБрака";
		ИначеЕсли РасшифроватьПо = 6 Тогда	
		Запрос.Текст = Запрос.Текст + ",ЭтапЖизненногоЦикла";
		ИначеЕсли РасшифроватьПо = 7 Тогда	
		Запрос.Текст = Запрос.Текст + ",ПричинаРемонта";
		КонецЕсли;
Запрос.УстановитьПараметр("ДатаНач",НачалоДня(Отчет.Период.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон",КонецДня(Отчет.Период.ДатаОкончания));
Результат = Запрос.Выполнить();

Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
	ВыборкаЛинейки = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаЛинейки.Следующий() Цикл
		ВыборкаПараметр = ВыборкаЛинейки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПараметр.Следующий() Цикл
				Если ВидОтчёта = 1 Тогда
					Если ТипЗнч(ВыборкаПараметр.Изделие) = Тип("СправочникСсылка.Номенклатура") Тогда
						Если ВыборкаПараметр.Изделие.Товар.Пустая() Тогда
						Параметр = ВыборкаПараметр.Изделие;
						Иначе	
						Параметр = ВыборкаПараметр.Изделие.Товар;
						КонецЕсли;
					Иначе
					Параметр = ВыборкаПараметр.Изделие;
					КонецЕсли;
				ИначеЕсли ВидОтчёта = 2 Тогда	
				Параметр = ВыборкаПараметр.РабочееМесто;	
				ИначеЕсли ВидОтчёта = 3 Тогда	
				Параметр = ВыборкаПараметр.ВидБрака;
				ИначеЕсли ВидОтчёта = 4 Тогда	
				Параметр = ВыборкаПараметр.МПЗ;
				ИначеЕсли ВидОтчёта = 5 Тогда	
				Параметр = ВыборкаПараметр.МестоНахожденияБрака;
				ИначеЕсли ВидОтчёта = 6 Тогда	
				Параметр = ВыборкаПараметр.ЭтапЖизненногоЦикла;
				ИначеЕсли ВидОтчёта = 7 Тогда	
				Параметр = ВыборкаПараметр.ПричинаРемонта;
				КонецЕсли;		
					Если РасшифроватьПо > 0 Тогда
				    ВыборкаРасш = ВыборкаПараметр.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаРасш.Следующий() Цикл
		                ВыборкаДаты = ВыборкаРасш.Выбрать(ОбходРезультатаЗапроса.Прямой);
							Пока ВыборкаДаты.Следующий() Цикл
							ТЧ = ТаблицаБрака.Добавить();
							ТЧ.Дата = Формат(ВыборкаДаты.Дата,"ДФ=dd.MM.yyyy");
							ТЧ.Линейка = ВыборкаЛинейки.Линейка;
							ТЧ.Параметр = Параметр;
								Если РасшифроватьПо = 1 Тогда
									Если ТипЗнч(ВыборкаРасш.Изделие) = Тип("СправочникСсылка.Номенклатура") Тогда
										Если ВыборкаРасш.Изделие.Товар.Пустая() Тогда
										ТЧ.Расшифровка = ВыборкаРасш.Изделие;
										Иначе	
										ТЧ.Расшифровка = ВыборкаРасш.Изделие.Товар;
										КонецЕсли;
									Иначе
									ТЧ.Расшифровка = ВыборкаРасш.Изделие;
									КонецЕсли;								
								ИначеЕсли РасшифроватьПо = 2 Тогда	
								ТЧ.Расшифровка = ВыборкаРасш.РабочееМесто;	
								ИначеЕсли РасшифроватьПо = 3 Тогда	
								ТЧ.Расшифровка = ВыборкаРасш.ВидБрака;
								ИначеЕсли РасшифроватьПо = 4 Тогда	
								ТЧ.Расшифровка = ВыборкаРасш.МПЗ;
								ИначеЕсли РасшифроватьПо = 5 Тогда	
								ТЧ.Расшифровка = ВыборкаРасш.МестоНахожденияБрака;
								ИначеЕсли РасшифроватьПо = 6 Тогда	
								ТЧ.Расшифровка = ВыборкаРасш.ЭтапЖизненногоЦикла;
								ИначеЕсли РасшифроватьПо = 7 Тогда	
								ТЧ.Расшифровка = ВыборкаРасш.ПричинаРемонта;
								КонецЕсли;
							//ТЧ.Количество = ?(ВыборкаДаты.ЕдиницаИзмерения.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаДаты.Количество);
							ТЧ.Количество = ВыборкаДаты.Количество;
							КонецЦикла;						
						КонецЦикла;
					Иначе
					ВыборкаДаты = ВыборкаПараметр.Выбрать(ОбходРезультатаЗапроса.Прямой);	
						Пока ВыборкаДаты.Следующий() Цикл
						ТЧ = ТаблицаБрака.Добавить();
						ТЧ.Дата = Формат(ВыборкаДаты.Дата,"ДФ=dd.MM.yyyy");
						ТЧ.Линейка = ВыборкаЛинейки.Линейка;
						ТЧ.Параметр = Параметр;
						//ТЧ.Количество = ?(ВыборкаДаты.ЕдиницаИзмерения.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаДаты.Количество);
						ТЧ.Количество = ВыборкаДаты.Количество;
						КонецЦикла;					
					КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
ТаблицаБрака.Свернуть("Дата,Линейка,Параметр,Расшифровка","Количество");
ТаблицаБрака.Сортировать("Линейка,Дата,Параметр,Расшифровка");
	Для каждого ТЧ Из ТаблицаБрака Цикл
	ОблСтрока.Параметры.Дата = ТЧ.Дата;
	ОблСтрока.Параметры.Линейка = ТЧ.Линейка;
	ОблСтрока.Параметры.Параметр = ТЧ.Параметр;
	ОблСтрока.Параметры.Расшифровка = ТЧ.Расшифровка;
	ОблСтрока.Параметры.КолНесоответствий = ТЧ.Количество;
	ТабДок.Вывести(ОблСтрока);
	КонецЦикла; 	
ТабДок.Вывести(ОблКонец);

ТаблицаВыпусков = Новый ТаблицаЗначений;

ТаблицаВыпусков.Колонки.Добавить("Дата");
ТаблицаВыпусков.Колонки.Добавить("Линейка");
ТаблицаВыпусков.Колонки.Добавить("Изделие");
ТаблицаВыпусков.Колонки.Добавить("Спецификация");
ТаблицаВыпусков.Колонки.Добавить("Количество");
ПолучитьКоличествоВыпущенных(ТаблицаВыпусков);

ОблШапка2 = Макет.ПолучитьОбласть("Шапка2");
ОблСтрока2 = Макет.ПолучитьОбласть("Строка2");
ОблКонец2 = Макет.ПолучитьОбласть("Конец2");

ТабДок.Вывести(ОблШапка2);
	Для каждого ТЧ Из ТаблицаВыпусков Цикл
	ОблСтрока2.Параметры.Дата = ТЧ.Дата;
	ОблСтрока2.Параметры.Линейка = ТЧ.Линейка;
	ОблСтрока2.Параметры.Изделие = ТЧ.Изделие;
	ОблСтрока2.Параметры.Спецификация = ТЧ.Спецификация;
	ОблСтрока2.Параметры.Количество = ТЧ.Количество;
	ТабДок.Вывести(ОблСтрока2);
	КонецЦикла;
ТабДок.Вывести(ОблКонец2); 
ТабДок.ФиксацияСверху = 2;	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	СформироватьНаСервере();
	КонецЕсли;
КонецПроцедуры

