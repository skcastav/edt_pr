
&НаСервере
Процедура РаскрытьНаМПЗ(ЭтапСпецификации,Кол,МестоХранения)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходов.Элемент,
	|	НормыРасходовСрезПоследних.Норма,
	|	НормыРасходов.Ссылка
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(&НаДату, ) КАК НормыРасходовСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НормыРасходов КАК НормыРасходов
	|		ПО НормыРасходовСрезПоследних.НормаРасходов = НормыРасходов.Ссылка
	|ГДЕ
	|	НормыРасходов.ПометкаУдаления = ЛОЖЬ
	|	И НормыРасходов.Владелец = &Владелец
	|	И ТИПЗНАЧЕНИЯ(НормыРасходов.Элемент) = ТИП(Справочник.Номенклатура)
	|	И НормыРасходовСрезПоследних.Норма > 0";
	Если Не ВидКанбана.Пустая() Тогда
	Запрос.Текст = Запрос.Текст + " И НормыРасходов.Элемент.Канбан = &Канбан";
	Запрос.УстановитьПараметр("Канбан",ВидКанбана);
	КонецЕсли;
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл	
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Номенклатура") Тогда
		БазовоеКоличество = ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения);
			Если ВыборкаНР.Элемент.Канбан.Пустая() Тогда			
			РаскрытьНаМПЗ(ВыборкаНР.Элемент,БазовоеКоличество*Кол,МестоХранения);
			Иначе
				Если Не ВыбПодразделение.Пустая() Тогда
					Если ВыборкаНР.Элемент.Канбан.Подразделение <> ВыбПодразделение Тогда
					Продолжить;
					КонецЕсли;
				КонецЕсли;
			Выборка = Объект.ТаблицаКанбанов.НайтиСтроки(Новый Структура("МПЗ,МестоХранения",ВыборкаНР.Элемент,МестоХранения));
				Если Выборка.Количество() = 0 Тогда
				ТЧ = Объект.ТаблицаКанбанов.Добавить();
				ТЧ.МестоХранения = МестоХранения;
				ТЧ.МПЗ = ВыборкаНР.Элемент;
				ТЧ.КолТребуется = БазовоеКоличество*Кол;
				ТЧ.Подразделение = ВыборкаНР.Элемент.Канбан.Подразделение;
				ТЧ.КолОстаток = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокПоМестуХранения(МестоХранения,ВыборкаНР.Элемент);	
				ТЧ.КолКанбан = ВыборкаНР.Элемент.КолВКанбане;	
				ЯчейкиКомплектации = ОбщийМодульРаботаСРегистрами.ПолучитьЯчейкуКомплектацииПоМестуХранения(МестоХранения,ВыборкаНР.Элемент);
				ТЧ.КоличествоЯчеек = ЯчейкиКомплектации.КоличествоЯчеек;
				ТЧ.КоличествоВЯчейке = ЯчейкиКомплектации.КоличествоВЯчейке;					
				Иначе
				Выборка[0].КолТребуется = Выборка[0].КолТребуется + БазовоеКоличество*Кол; 
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеПоКанбанамНаСервере()
Объект.ТаблицаКанбанов.Очистить();
СписокЛинеек.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Линейки.Ссылка
	|ИЗ
	|	Справочник.Линейки КАК Линейки
	|ГДЕ
	|	Линейки.МестоХраненияКанбанов В ИЕРАРХИИ(&СписокМестХраненияКанбанов)";
Запрос.УстановитьПараметр("СписокМестХраненияКанбанов",СписокМестХранения);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокЛинеек.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла; 	
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Изделие КАК Изделие,
	|	ПроизводственноеЗадание.Ссылка КАК Ссылка,
	|	ПроизводственноеЗадание.Линейка КАК Линейка
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ПометкаУдаления = ЛОЖЬ
	|	И ПроизводственноеЗадание.ДатаЗапуска = ДАТАВРЕМЯ(1,1,1,0,0,0)
	|	И ПроизводственноеЗадание.Линейка В(&СписокЛинеек)
	|ИТОГИ ПО
	|	Изделие,
	|	Линейка";
Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаИзделие = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИзделие.Следующий() Цикл	
	ВыборкаЛинейки = ВыборкаИзделие.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаЛинейки.Следующий() Цикл
		КолИзделий = 0;
		ВыборкаДетальныеЗаписи = ВыборкаЛинейки.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если ВыборкаЛинейки.Линейка.ВидЛинейки = Перечисления.ВидыЛинеек.Канбан Тогда	
				КолИзделий = КолИзделий + ВыборкаДетальныеЗаписи.Ссылка.ДокументОснование.Количество;	
				Иначе
				КолИзделий = КолИзделий + 1;
				КонецЕсли; 
			КонецЦикла;
		РаскрытьНаМПЗ(ВыборкаИзделие.Изделие,КолИзделий,ВыборкаЛинейки.Линейка.МестоХраненияКанбанов);
		КонецЦикла;
	КонецЦикла;	
		Для каждого ТЧ Из Объект.ТаблицаКанбанов Цикл	
		ТЧ.КолДефицит = ТЧ.КолОстаток - ТЧ.КолТребуется;	
		КонецЦикла;
Объект.ТаблицаКанбанов.Сортировать("Подразделение,МПЗ,МестоХранения");
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
ПолучитьДанныеПоКанбанамНаСервере();	
КонецПроцедуры

&НаСервере
Функция ПолучитьEmailСотрудника()
Возврат(ПараметрыСеанса.Пользователь.Email);
КонецФункции

&НаСервере
Функция ПолучитьСписокПочтовойРассылкиНаСервере(Подразделение)
СписокПочтовойРассылки = Новый СписокЗначений;

	Для каждого ТЧ Из Подразделение.ПочтоваяРассылка Цикл
		Если СокрЛП(ТЧ.Сотрудник.Email) <> "" Тогда
		СписокПочтовойРассылки.Добавить(ТЧ.Сотрудник.Email);
		КонецЕсли; 
	КонецЦикла; 
Возврат(СписокПочтовойРассылки);
КонецФункции

&НаСервере
Функция ПолучитьПустоеПодразделение()
Возврат(Справочники.Подразделения.ПустаяСсылка());
КонецФункции

&НаСервере
Функция ПолучитьНаименование(МПЗ)
Возврат(СокрЛП(МПЗ.Наименование));
КонецФункции

&НаКлиенте
Процедура ПочтоваяРассылка(Команда)
Объект.ТаблицаКанбанов.Сортировать("Подразделение,МПЗ");
EmailСотрудника = ПолучитьEmailСотрудника();
СписокПочтовойРассылки = Новый СписокЗначений;
Сообщение = Новый ИнтернетПочтовоеСообщение;
ИПП = Новый ИнтернетПочтовыйПрофиль; 

НастройкиПочты = ОбщийМодульВызовСервера.ПолучитьНастройкиПочты();
ИПП.АдресСервераSMTP = НастройкиПочты.АдресСервераSMTP; 
ИПП.ВремяОжидания = 60; 
ИПП.Пароль = НастройкиПочты.ПарольПочтовогоСервера; 
ИПП.Пользователь = EmailСотрудника;
ИПП.ПортSMTP = НастройкиПочты.ПортSMTP;
флНетСПР =Истина;
ТекПодразделение = ПолучитьПустоеПодразделение();
	Для каждого ТЧ Из Объект.ТаблицаКанбанов Цикл
		Если ТЧ.Пометка Тогда
			Если ТЧ.Подразделение <> ТекПодразделение Тогда
				Если Не ТекПодразделение.Пустая() Тогда
					Если Не флНетСПР Тогда
					Текст = Текст + Символы.ПС+ "";
					Текст = Текст + Символы.ПС+ "С уважением, email: "+EmailСотрудника;
					Сообщение.Тексты.Добавить(Текст);	
					// Подключиться и отправить. 
					Почта = Новый ИнтернетПочта; 
					Почта.Подключиться(ИПП); 
					Почта.Послать(Сообщение); 
					Почта.Отключиться();
					ПоказатьОповещениеПользователя("Сообщение отправлено");					
					КонецЕсли; 				
				КонецЕсли; 
			ТекПодразделение = ТЧ.Подразделение;
			флНетСПР = Ложь;
			СписокПочтовойРассылки = ПолучитьСписокПочтовойРассылкиНаСервере(ТЧ.Подразделение); 
				Если СписокПочтовойРассылки.Количество() = 0 Тогда
				флНетСПР = Истина;
				Сообщить("Нет списка почтовой рассылки для подразделения "+ТЧ.Подразделение);
				Продолжить;
				КонецЕсли;
			Сообщение = Новый ИнтернетПочтовоеСообщение;
	 
				Для каждого СПР Из СписокПочтовойРассылки Цикл
			    Сообщение.Получатели.Добавить(СПР.Значение);
				КонецЦикла; 
			Сообщение.Отправитель.Адрес = EmailСотрудника;
			Сообщение.Тема = "Отчёт по ожидаемому расходу полуфабрикатов в канбане на "+ТекущаяДата(); 
			Текст = "Здравствуйте!";
			Текст = Текст + Символы.ПС+ "";
			Текст = Текст + Символы.ПС+ "В производственной базе сформирован отчёт по ожидаемому расходу полуфабрикатов в канбане:";
			Текст = Текст + Символы.ПС+ "";
			Иначе
				Если флНетСПР Тогда
				Продолжить;
				КонецЕсли; 
			КонецЕсли; 
		Текст = Текст + Символы.ПС + ПолучитьНаименование(ТЧ.МПЗ) + " линейка №" + ПолучитьНаименование(ТЧ.Линейка) + " требуется: " + ТЧ.КолТребуется + "; остаток: " + ТЧ.КолОстаток + "; дефицит: " + ТЧ.КолДефицит + "; канбан: " + ТЧ.КолКанбан;		
		КонецЕсли;
	КонецЦикла; 
		Если Не флНетСПР Тогда
		Текст = Текст + Символы.ПС+ "";
		Текст = Текст + Символы.ПС+ "С уважением, email: "+EmailСотрудника;
		Сообщение.Тексты.Добавить(Текст);	
		// Подключиться и отправить. 
		Почта = Новый ИнтернетПочта; 
		Почта.Подключиться(ИПП); 
		Почта.Послать(Сообщение); 
		Почта.Отключиться();
		ПоказатьОповещениеПользователя("Сообщение отправлено!");		
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	Для каждого ТЧ Из Объект.ТаблицаКанбанов Цикл
	ТЧ.Пометка = Не ТЧ.Подразделение.Пустая();
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПодразделение(Команда)
Перем ВыбПодразд;
СписокПодразелений = Новый СписокЗначений;

	Для каждого ТЧ Из Объект.ТаблицаКанбанов Цикл
		Если Не ТЧ.Подразделение.Пустая() Тогда
			Если СписокПодразелений.НайтиПоЗначению(ТЧ.Подразделение) = Неопределено Тогда
			СписокПодразелений.Добавить(ТЧ.Подразделение);
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла; 
ВыбПодразд = СписокПодразелений.ВыбратьЭлемент("Выберите подразделение",ВыбПодразд);
		Если ВыбПодразд <> Неопределено Тогда
			Для каждого ТЧ Из Объект.ТаблицаКанбанов Цикл
			ТЧ.Пометка = ?(ТЧ.Подразделение = ВыбПодразд.Значение,Истина,Ложь);
			КонецЦикла;	
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсе(Команда)
	Для каждого ТЧ Из Объект.ТаблицаКанбанов Цикл
	ТЧ.Пометка = Ложь;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКанбановПометкаПриИзменении(Элемент)
	Если Элементы.ТаблицаКанбанов.ТекущиеДанные.Подразделение.Пустая() Тогда
	Элементы.ТаблицаКанбанов.ТекущиеДанные.Пометка = Ложь;
	КонецЕсли; 
КонецПроцедуры
