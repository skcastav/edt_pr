
&НаСервере
Процедура РаскрытьНаМПЗ(ЭтапСпецификации,КолУзла)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходов.Ссылка КАК Ссылка,
	|	НормыРасходов.ВидЭлемента КАК ВидЭлемента,
	|	НормыРасходов.Элемент КАК Элемент,
	|	НормыРасходовСрезПоследних.Норма КАК Норма
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(&НаДату, ) КАК НормыРасходовСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НормыРасходов КАК НормыРасходов
	|		ПО НормыРасходовСрезПоследних.НормаРасходов = НормыРасходов.Ссылка
	|ГДЕ
	|	НормыРасходов.ПометкаУдаления = ЛОЖЬ
	|	И НормыРасходов.Владелец = &Владелец
	|	И (ТИПЗНАЧЕНИЯ(НормыРасходов.Элемент) = ТИП(Справочник.Номенклатура)
	|			ИЛИ ТИПЗНАЧЕНИЯ(НормыРасходов.Элемент) = ТИП(Справочник.Материалы))
	|	И НормыРасходовСрезПоследних.Норма > 0";
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
			Если ВидОтчёта = 0 Тогда
				Если ВыборкаНР.Элемент.СтационарныеПитатели.Найти(Линейка,"Линейка") = Неопределено Тогда
				Продолжить;						 			
				КонецЕсли;
			Иначе
				Если ВыборкаНР.Элемент.СтационарныеПитатели.Найти(Линейка,"Линейка") <> Неопределено Тогда
				Продолжить;						 			
				КонецЕсли;	 
			КонецЕсли;
		Выборка = ТаблицаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаНР.Элемент));
			Если Выборка.Количество() = 0 Тогда
			ТЧ = ТаблицаМПЗ.Добавить();
			ТЧ.МПЗ = ВыборкаНР.Элемент;
			ТЧ.КоличествоТребуется = ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла;
			Иначе
			Выборка[0].КоличествоТребуется = Выборка[0].КоличествоТребуется + ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла;
			КонецЕсли; 					
		ИначеЕсли ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Номенклатура") Тогда
			Если ВыборкаНР.Элемент.Канбан.Пустая() Тогда
			РаскрытьНаМПЗ(ВыборкаНР.Элемент,ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПолучитьПотребность()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Изделие КАК Изделие,
	|	ПроизводственноеЗадание.Количество КАК Количество
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	(ПроизводственноеЗадание.ДокументОснование.Статус = 0
	|			ИЛИ ПроизводственноеЗадание.ДокументОснование.Статус = 4)
	|	И ПроизводственноеЗадание.Линейка = &Линейка";
Запрос.УстановитьПараметр("Линейка",Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	РаскрытьНаМПЗ(ВыборкаДетальныеЗаписи.Изделие,ВыборкаДетальныеЗаписи.Количество);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПолучитьПотребностьИзПП()
Запрос = Новый Запрос;
ЗапросЭП = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование.Статус = 1
	|	И ПроизводственноеЗадание.Линейка = &Линейка";
Запрос.УстановитьПараметр("Линейка",Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ЗапросЭП.Текст = 
		"ВЫБРАТЬ
		|	ЭтапыПроизводственныхЗаданий.ПЗ.ДокументОснование КАК МТК
		|ИЗ
		|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
		|ГДЕ
		|	ЭтапыПроизводственныхЗаданий.ПЗ = &ПЗ
		|	И ЭтапыПроизводственныхЗаданий.РабочееМесто.Код = 3
		|	И ЭтапыПроизводственныхЗаданий.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	ЗапросЭП.УстановитьПараметр("ПЗ",ВыборкаДетальныеЗаписи.Ссылка);
	РезультатЗапроса = ЗапросЭП.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда	
		ВыборкаПП = Документы.ПередачаВПроизводство.Выбрать(,,Новый Структура("ДокументОснование",ВыборкаДетальныеЗаписи.Ссылка.ДокументОснование));
			Пока ВыборкаПП.Следующий() Цикл	
			ПП = ВыборкаПП.Ссылка;
				Для каждого ТЧ Из ПП.Спецификация Цикл
					Если ВидОтчёта = 0 Тогда
						Если ТЧ.МПЗ.СтационарныеПитатели.Найти(Линейка,"Линейка") = Неопределено Тогда
						Продолжить;						 			
						КонецЕсли;
					Иначе
						Если ТЧ.МПЗ.СтационарныеПитатели.Найти(Линейка,"Линейка") <> Неопределено Тогда
						Продолжить;						 			
						КонецЕсли;	 
					КонецЕсли;
				Выборка = ТаблицаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ТЧ.МПЗ));
					Если Выборка.Количество() = 0 Тогда
					ТЧ_МПЗ = ТаблицаМПЗ.Добавить();
					ТЧ_МПЗ.МПЗ = ТЧ.МПЗ;
					ТЧ_МПЗ.КоличествоТребуется = ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения);
					Иначе
					Выборка[0].КоличествоТребуется = Выборка[0].КоличествоТребуется + ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения);
					КонецЕсли;				
				КонецЦикла; 
			КонецЦикла;  
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
ТаблицаМПЗ.Очистить();
ТабДок.Очистить();

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблМПЗ = Макет.ПолучитьОбласть("МПЗ");
ОблКонец = Макет.ПолучитьОбласть("Конец");
	
ОблШапка.Параметры.НаДату = Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
ТабДок.Вывести(ОблШапка);

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОстатки.МПЗ КАК МПЗ,
	|	МестаХраненияОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.МестаХранения.Остатки(&НаДату, МестоХранения = &МестоХранения) КАК МестаХраненияОстатки";
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("МестоХранения", Линейка.МестоХраненияКанбанов);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВидОтчёта = 0 Тогда
			Если ВыборкаДетальныеЗаписи.МПЗ.СтационарныеПитатели.Найти(Линейка,"Линейка") = Неопределено Тогда
			Продолжить;						 			
			КонецЕсли;
		Иначе
			Если ВыборкаДетальныеЗаписи.МПЗ.СтационарныеПитатели.Найти(Линейка,"Линейка") <> Неопределено Тогда
			Продолжить;						 			
			КонецЕсли;	 
		КонецЕсли;
	ТЧ = ТаблицаМПЗ.Добавить();
	ТЧ.МПЗ = ВыборкаДетальныеЗаписи.МПЗ;
	ТЧ.КоличествоОстаток = ВыборкаДетальныеЗаписи.КоличествоОстаток;
	КонецЦикла;
ПолучитьПотребностьИзПП();
ТаблицаМПЗ.Сортировать("МПЗ");
	Для каждого ТЧ Из ТаблицаМПЗ Цикл
	КоличествоПополнить = ТЧ.КоличествоОстаток - ТЧ.КоличествоТребуется;
		Если ВидОтчёта = 0 Тогда
			Если КоличествоПополнить >= 0 Тогда
			Продолжить;
			КонецЕсли
		Иначе
			Если КоличествоПополнить <= 0 Тогда
			Продолжить;
			КонецЕсли		
		КонецЕсли; 
	ОблМПЗ.Параметры.Статус = ПолучитьСтатус(ТЧ.МПЗ,ТекущаяДата());		
	ОблМПЗ.Параметры.МПЗ = ТЧ.МПЗ;
	ОблМПЗ.Параметры.ЕдиницаИзмерения = ТЧ.МПЗ.ЕдиницаИзмерения;
	ОблМПЗ.Параметры.Кол = ТЧ.КоличествоТребуется;
	ОблМПЗ.Параметры.КолНаСкладе = ТЧ.КоличествоОстаток;
	ОблМПЗ.Параметры.КолПополнить = КоличествоПополнить;
	ОблМПЗ.Параметры.КолНаСкладеМатериалов = ОбщийМодульВызовСервера.ПолучитьОстатокПоМестуХранения(Линейка.Подразделение.МестоХраненияПоУмолчанию,ТЧ.МПЗ);
	ТабДок.Вывести(ОблМПЗ);	
	КонецЦикла; 
ТабДок.Вывести(ОблКонец);
КонецПроцедуры

&НаСервере
Процедура СформироватьСдачуПриемНПНаСервере()
ТаблицаМПЗ.Очистить();
ТабДок.Очистить();

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет2");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблМПЗ = Макет.ПолучитьОбласть("МПЗ");
ОблКонец = Макет.ПолучитьОбласть("Конец");
	
ОблШапка.Параметры.ДатаСоздания = ТекущаяДата();
ОблШапка.Параметры.Линейка = СокрЛП(Линейка.Наименование);
ТабДок.Вывести(ОблШапка);

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОстатки.МПЗ КАК МПЗ,
	|	МестаХраненияОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.МестаХранения.Остатки(&НаДату, МестоХранения = &МестоХранения) КАК МестаХраненияОстатки";
	Если СписокГруппМПЗ.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " ГДЕ Не МестаХраненияОстатки.МПЗ.Ссылка В ИЕРАРХИИ(&СписокГруппМПЗ)";
	Запрос.УстановитьПараметр("СписокГруппМПЗ", СписокГруппМПЗ);
	КонецЕсли; 
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("МестоХранения", Линейка.МестоХраненияКанбанов);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.МПЗ.СтационарныеПитатели.Найти(Линейка,"Линейка") <> Неопределено Тогда
		Продолжить;						 			
		КонецЕсли;	 
	ТЧ = ТаблицаМПЗ.Добавить();
	ТЧ.МПЗ = ВыборкаДетальныеЗаписи.МПЗ;
	ТЧ.КоличествоОстаток = ВыборкаДетальныеЗаписи.КоличествоОстаток;
	КонецЦикла;
ПолучитьПотребностьИзПП();
ТаблицаМПЗ.Сортировать("МПЗ");
НомСтр = 1;
	Для каждого ТЧ Из ТаблицаМПЗ Цикл
		Если ТЧ.КоличествоТребуется > 0 Тогда
		Продолжить;
		КонецЕсли;		
	ОблМПЗ.Параметры.НомСтр = НомСтр;		
	ОблМПЗ.Параметры.МПЗ = ТЧ.МПЗ;
	ОблМПЗ.Параметры.ЕдиницаИзмерения = ТЧ.МПЗ.ЕдиницаИзмерения;
	ОблМПЗ.Параметры.КолУчёт = ТЧ.КоличествоОстаток;
	ТабДок.Вывести(ОблМПЗ);
	НомСтр = НомСтр + 1;	
	КонецЦикла; 
ТабДок.Вывести(ОблКонец);
ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.АвтоМасштаб = Истина;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ВидОтчёта = 2 Тогда
	СформироватьСдачуПриемНПНаСервере();	
	Иначе	
	СформироватьНаСервере();	
	КонецЕсли; 
КонецПроцедуры
