
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не Параметры.Линейка.Пустая() Тогда
	СписокЛинеек.Очистить();
	СписокЛинеек.Добавить(Параметры.Линейка);
	ВыбПодразделение = ПолучитьПустоеПодразделение();
	ВидКанбана = ПолучитьПустойВидКанбана();
	СвернутьПоМПЗ = Истина;
	СортироватьПо = 3;
	СформироватьСвёрнутыйНаСервере();
	КонецЕсли; 
КонецПроцедуры
 
&НаСервере            
Функция ПолучитьНезапущенноеКоличествоПоИзделию(Изделие)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Изделие КАК Изделие,
	|	СУММА(ПроизводственноеЗадание.Количество) КАК Количество
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.Изделие = &Изделие
	|	И ПроизводственноеЗадание.ДатаЗапуска = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроизводственноеЗадание.Изделие";
Запрос.УстановитьПараметр("Изделие", Изделие);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.Количество);
	КонецЦикла; 
Возврат(0);	
КонецФункции

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();

ТаблицаЛО = Новый ТаблицаЗначений;
Массив = Новый Массив;

Массив.Добавить(Тип("СправочникСсылка.Номенклатура"));
Массив.Добавить(Тип("СправочникСсылка.Материалы"));
ОписаниеТиповСправочников = Новый ОписаниеТипов(Массив);

ТаблицаЛО.Колонки.Добавить("Линейка",Новый ОписаниеТипов("СправочникСсылка.Линейки"));
ТаблицаЛО.Колонки.Добавить("Подразделение",Новый ОписаниеТипов("СправочникСсылка.Подразделения"));
ТаблицаЛО.Колонки.Добавить("Изделие",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
ТаблицаЛО.Колонки.Добавить("МПЗ",ОписаниеТиповСправочников);
ТаблицаЛО.Колонки.Добавить("ВидКанбана",Новый ОписаниеТипов("СправочникСсылка.ВидыКанбанов"));
ТаблицаЛО.Колонки.Добавить("КолНезап",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(7,0)));
ТаблицаЛО.Колонки.Добавить("ДатаЛО",Новый ОписаниеТипов("Дата"));

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");
	
ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблМПЗ = Макет.ПолучитьОбласть("МПЗ");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.ТекДата = ТекущаяДата();
ТабДок.Вывести(ОблШапка);
	
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛьготнаяОчередь.Линейка КАК Линейка,          
	|	ЛьготнаяОчередь.Изделие КАК Изделие,
	|	ЛьготнаяОчередь.НормаРасходов.Элемент КАК МПЗ,
	|	МИНИМУМ(ЛьготнаяОчередь.Период) КАК Период
	|ИЗ
	|	РегистрСведений.ЛьготнаяОчередь КАК ЛьготнаяОчередь
	|ГДЕ
	|	ЛьготнаяОчередь.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	Если СписокЛинеек.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ЛьготнаяОчередь.Линейка В ИЕРАРХИИ(&СписокЛинеек)";
	Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
	КонецЕсли; 
		Если Не ВидКанбана.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И ЛьготнаяОчередь.НормаРасходов.Элемент.Канбан = &Канбан";
		Запрос.УстановитьПараметр("Канбан",ВидКанбана);
		КонецЕсли;
Запрос.Текст = Запрос.Текст + " СГРУППИРОВАТЬ ПО
								|	ЛьготнаяОчередь.Линейка,
								|	ЛьготнаяОчередь.Изделие,
								|	ЛьготнаяОчередь.НормаРасходов.Элемент"; 
Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
РезультатЗапроса = Запрос.Выполнить();	
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ТипЗнч(ВыборкаДетальныеЗаписи.МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
		Подразделение = ВыборкаДетальныеЗаписи.МПЗ.Канбан.Подразделение;
		Иначе
		Подразделение = Константы.МестоХраненияОсновное.Получить().Подразделение;
		КонецЕсли; 
			Если Не ВыбПодразделение.Пустая() Тогда
				Если Подразделение <> ВыбПодразделение Тогда
				Продолжить;
				КонецЕсли; 
			КонецЕсли;  				
				Если ТекущаяДата() - ВыборкаДетальныеЗаписи.Период < СрокДавности*3600 Тогда
				Продолжить;
				КонецЕсли;
	ТЧ = ТаблицаЛО.Добавить(); 
	ТЧ.Линейка = ВыборкаДетальныеЗаписи.Линейка;
	ТЧ.Подразделение = Подразделение;
	ТЧ.Изделие = ВыборкаДетальныеЗаписи.Изделие;
	ТЧ.МПЗ = ВыборкаДетальныеЗаписи.МПЗ;
	ТЧ.ДатаЛО = ВыборкаДетальныеЗаписи.Период;
	ТЧ.КолНезап = ПолучитьНезапущенноеКоличествоПоИзделию(ВыборкаДетальныеЗаписи.Изделие);
		Если ТипЗнч(ВыборкаДетальныеЗаписи.МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
		ТЧ.ВидКанбана = ВыборкаДетальныеЗаписи.МПЗ.Канбан;
		КонецЕсли; 
	КонецЦикла;	
		Если СортироватьПо = 1 Тогда
		ТаблицаЛО.Сортировать("Линейка,Подразделение,МПЗ,ДатаЛО");
		ИначеЕсли СортироватьПо = 2 Тогда
		ТаблицаЛО.Сортировать("Подразделение,Линейка,МПЗ,ДатаЛО");
		ИначеЕсли СортироватьПо = 3 Тогда
		ТаблицаЛО.Сортировать("МПЗ,Подразделение,Линейка,ДатаЛО");
		ИначеЕсли СортироватьПо = 4 Тогда
		ТаблицаЛО.Сортировать("ДатаЛО,Подразделение,Линейка,МПЗ");
		ИначеЕсли СортироватьПо = 5 Тогда
		ТаблицаЛО.Сортировать("ВидКанбана,МПЗ,Подразделение,Линейка");
		КонецЕсли;
			Для каждого ТЧ Из ТаблицаЛО Цикл
			ОблМПЗ.Параметры.Линейка = ТЧ.Линейка;
			ОблМПЗ.Параметры.Подразделение = ТЧ.Подразделение;
			ОблМПЗ.Параметры.Наименование = СокрЛП(ТЧ.Изделие.Наименование);
			ОблМПЗ.Параметры.Изделие = ТЧ.Изделие;
			ОблМПЗ.Параметры.Наимен = СокрЛП(ТЧ.МПЗ.Наименование);
			ОблМПЗ.Параметры.МПЗ = ТЧ.МПЗ;
			ОблМПЗ.Параметры.ДатаЛО = ТЧ.ДатаЛО;
			ОблМПЗ.Параметры.Кол = ТЧ.КолНезап;
			ЯчейкиКомплектации = ОбщийМодульРаботаСРегистрами.ПолучитьЯчейкуКомплектации(ТЧ.Линейка,ТЧ.МПЗ);
			ОблМПЗ.Параметры.КолЯчеек = ЯчейкиКомплектации.КоличествоЯчеек;
			ОблМПЗ.Параметры.КолВЯчейке = ЯчейкиКомплектации.КоличествоВЯчейке;
			ОблМПЗ.Параметры.ВидКанбана = ТЧ.ВидКанбана;
			ТабДок.Вывести(ОблМПЗ);	
			КонецЦикла; 
ОблКонец.Параметры.КолВсего = ТаблицаЛО.Итог("КолНезап");
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 2;
ТаблицаЛО.Свернуть("МПЗ");
СписокМПЗ.Очистить();
	Для каждого ТЧ Из ТаблицаЛО Цикл
	СписокМПЗ.Добавить(ТЧ.МПЗ);
	КонецЦикла; 	
КонецПроцедуры

&НаСервере
Процедура СформироватьСвёрнутыйНаСервере()
ТабДок.Очистить();

ТаблицаЛО = Новый ТаблицаЗначений;
Массив = Новый Массив;

Массив.Добавить(Тип("СправочникСсылка.Номенклатура"));
Массив.Добавить(Тип("СправочникСсылка.Материалы"));
ОписаниеТиповСправочников = Новый ОписаниеТипов(Массив);

ТаблицаЛО.Колонки.Добавить("Линейка",Новый ОписаниеТипов("СправочникСсылка.Линейки"));
ТаблицаЛО.Колонки.Добавить("Подразделение",Новый ОписаниеТипов("СправочникСсылка.Подразделения"));
ТаблицаЛО.Колонки.Добавить("МПЗ",ОписаниеТиповСправочников);
ТаблицаЛО.Колонки.Добавить("ВидКанбана",Новый ОписаниеТипов("СправочникСсылка.ВидыКанбанов"));
ТаблицаЛО.Колонки.Добавить("КолНезап",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(7,0)));

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("МакетСвёрнутый");
	
ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблМПЗ = Макет.ПолучитьОбласть("МПЗ");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.ТекДата = ТекущаяДата();
ТабДок.Вывести(ОблШапка);
	
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛьготнаяОчередь.Период,
	|	ЛьготнаяОчередь.ПЗ,
	|	ЛьготнаяОчередь.Линейка,
	|	ЛьготнаяОчередь.НормаРасходов.Элемент КАК МПЗ,
	|	ЛьготнаяОчередь.Изделие
	|ИЗ
	|	РегистрСведений.ЛьготнаяОчередь КАК ЛьготнаяОчередь
	|ГДЕ
	|	ЛьготнаяОчередь.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	Если СписокЛинеек.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ЛьготнаяОчередь.Линейка В ИЕРАРХИИ(&СписокЛинеек)";
	Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
	КонецЕсли;
		Если Не ВидКанбана.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И ЛьготнаяОчередь.НормаРасходов.Элемент.Канбан = &Канбан";
		Запрос.УстановитьПараметр("Канбан",ВидКанбана);
		КонецЕсли;
Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ЛьготнаяОчередь.ПЗ.НомерОчереди";
Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
РезультатЗапроса = Запрос.Выполнить();	
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ТипЗнч(ВыборкаДетальныеЗаписи.МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
		Подразделение = ВыборкаДетальныеЗаписи.МПЗ.Канбан.Подразделение;
		Иначе
		Подразделение = Справочники.Подразделения.НайтиПоКоду("32");
		КонецЕсли; 
			Если Не ВыбПодразделение.Пустая() Тогда
				Если Подразделение <> ВыбПодразделение Тогда
				Продолжить;
				КонецЕсли; 
			КонецЕсли;  				
				Если ТекущаяДата() - ВыборкаДетальныеЗаписи.Период < СрокДавности*3600 Тогда
				Продолжить;
				КонецЕсли;
	ТЧ = ТаблицаЛО.Добавить(); 
	ТЧ.Линейка = ВыборкаДетальныеЗаписи.ПЗ.Линейка;
	ТЧ.Подразделение = Подразделение;
	ТЧ.МПЗ = ВыборкаДетальныеЗаписи.МПЗ;
	ТЧ.КолНезап = ОбщийМодульВызовСервера.ПолучитьНезапущенноеКоличество(ВыборкаДетальныеЗаписи.ПЗ.ДокументОснование);
		Если ТипЗнч(ВыборкаДетальныеЗаписи.МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
		ТЧ.ВидКанбана = ВыборкаДетальныеЗаписи.МПЗ.Канбан;
		КонецЕсли;
	КонецЦикла;
ТаблицаЛО.Свернуть("Линейка,Подразделение,МПЗ,ВидКанбана","КолНезап");	
		Если СортироватьПо = 1 Тогда
		ТаблицаЛО.Сортировать("Линейка,Подразделение,МПЗ");
		ИначеЕсли СортироватьПо = 2 Тогда
		ТаблицаЛО.Сортировать("Подразделение,Линейка,МПЗ");
		ИначеЕсли СортироватьПо = 3 Тогда
		ТаблицаЛО.Сортировать("МПЗ,Подразделение,Линейка");
		ИначеЕсли СортироватьПо = 4 Тогда
		ТаблицаЛО.Сортировать("МПЗ,Подразделение,Линейка");
		ИначеЕсли СортироватьПо = 5 Тогда
		ТаблицаЛО.Сортировать("ВидКанбана,МПЗ,Подразделение,Линейка");
		КонецЕсли;
			Для каждого ТЧ Из ТаблицаЛО Цикл
			ОблМПЗ.Параметры.Линейка = ТЧ.Линейка;
			ОблМПЗ.Параметры.Подразделение = ТЧ.Подразделение;
			ОблМПЗ.Параметры.Наимен = СокрЛП(ТЧ.МПЗ.Наименование);
			ОблМПЗ.Параметры.МПЗ = ТЧ.МПЗ;
			ОблМПЗ.Параметры.Кол = ТЧ.КолНезап;
			ЯчейкиКомплектации = ОбщийМодульРаботаСРегистрами.ПолучитьЯчейкуКомплектации(ТЧ.Линейка,ТЧ.МПЗ);
			ОблМПЗ.Параметры.КолЯчеек = ЯчейкиКомплектации.КоличествоЯчеек;
			ОблМПЗ.Параметры.КолВЯчейке = ЯчейкиКомплектации.КоличествоВЯчейке;
			ОблМПЗ.Параметры.ВидКанбана = ТЧ.ВидКанбана;
			ТабДок.Вывести(ОблМПЗ);	
			КонецЦикла; 
ОблКонец.Параметры.КолВсего = ТаблицаЛО.Итог("КолНезап");
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 2;
ТаблицаЛО.Свернуть("МПЗ");
СписокМПЗ.Очистить();
	Для каждого ТЧ Из ТаблицаЛО Цикл
	СписокМПЗ.Добавить(ТЧ.МПЗ);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
Состояние("Обработка...",,"Формирование отчёта...");
	Если СвернутьПоМПЗ Тогда
	СформироватьСвёрнутыйНаСервере();
	Иначе	
	СформироватьНаСервере();
	КонецЕсли; 	
КонецПроцедуры

&НаСервере
Функция НастройкиНаСервере()
Настройки = Новый Структура("Подразделение,СписокЛинеек",ВыбПодразделение,СписокЛинеек);
Возврат(Новый Структура("КлючНазначенияИспользования,Настройки","ОтчетПоТекущейЛьготнойОчередиУправленческий",Настройки));
КонецФункции

&НаКлиенте
Процедура Настройки(Команда)
Результат = ОткрытьФормуМодально("ОбщаяФорма.НастройкиФорм",НастройкиНаСервере());
	Если Результат <> Неопределено Тогда	
	ВыбПодразделение = Результат.Подразделение;
	СписокЛинеек = Результат.СписокЛинеек;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОстаткиНаСкладах(Команда)
ИмяОтчета = "ОтчётПоРегиструМестаХранения";
ПараметрыФормы = Новый Структура;
ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьПользовательскиеНастройкиОтчетаСКД(ИмяОтчета,ТекущаяДата(),ТекущаяДата(),Новый Структура("МПЗ",СписокМПЗ),"ОстаткиПоМПЗПоСкладам"));
ПараметрыФормы.Вставить("КлючВарианта","ОстаткиПоМПЗПоСкладам"); 
ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);		
КонецПроцедуры

&НаСервере
Функция ПолучитьПустоеПодразделение()
Возврат(Справочники.Подразделения.ПустаяСсылка());
КонецФункции

&НаСервере
Функция ПолучитьПустойВидКанбана()
Возврат(Справочники.ВидыКанбанов.ПустаяСсылка());
КонецФункции
