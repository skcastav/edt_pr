
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Отчет.НаДату = ТекущаяДата();
Вхождение = 2;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЭтаФорма.Параметры.ЭлементСпецификации <> Неопределено Тогда
	Отчет.ЭлементСпецификации = ЭтаФорма.Параметры.ЭлементСпецификации;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	Если ЭтаФорма.Параметры.ЭлементСпецификации <> Неопределено Тогда
	Отчет.ЭлементСпецификации = ЭтаФорма.Параметры.ЭлементСпецификации; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДерево()
тЭлементы = ДеревоПодчиненности.ПолучитьЭлементы();
   Для Каждого тСтр Из тЭлементы Цикл 
   Элементы.ДеревоПодчиненности.Развернуть(тСтр.ПолучитьИдентификатор(), Истина);
   КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьКорневойЭлемент(ЭтапСпецификации,Позиция)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходов.Элемент
	|ИЗ
	|	Справочник.НормыРасходов КАК НормыРасходов
	|ГДЕ
	|	НормыРасходов.Владелец = &Владелец
	|	И НормыРасходов.Позиция = &Позиция
	|	И НормыРасходов.Корневой = ИСТИНА";
Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
Запрос.УстановитьПараметр("Позиция", Позиция);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.Элемент); 
	КонецЦикла;
Возврат(Неопределено);
КонецФункции

&НаСервере
Процедура ПолучитьПозицииЭлементов(ЭтапСпецификации,СтрЗнч)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ                                                           
	|	НормыРасходовСрезПоследних.Элемент КАК Элемент,
	|	НормыРасходовСрезПоследних.НормаРасходов.Позиция КАК Позиция,
	|	НормыРасходовСрезПоследних.НормаРасходов.Корневой КАК Корневой,
	|	НормыРасходовСрезПоследних.Норма КАК Норма
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(
	|			&НаДату,
	|			Владелец = &Владелец
	|				И Элемент = &Элемент) КАК НормыРасходовСрезПоследних
	|ГДЕ
	|	НормыРасходовСрезПоследних.Норма > 0";
Запрос.УстановитьПараметр("НаДату", Отчет.НаДату);
Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
Запрос.УстановитьПараметр("Элемент", Отчет.ЭлементСпецификации);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = СтрЗнч.ТаблицаКорневыхЭлементов.Добавить();
	ТЧ.Позиция = ВыборкаДетальныеЗаписи.Позиция;
	ТЧ.Элемент = ВыборкаДетальныеЗаписи.Элемент;
	ТЧ.Норма = ВыборкаДетальныеЗаписи.Норма;
		Если ВыборкаДетальныеЗаписи.Корневой Тогда
		ТЧ.КорневойЭлемент = ВыборкаДетальныеЗаписи.Элемент;
		Иначе	
		ТЧ.КорневойЭлемент = ПолучитьКорневойЭлемент(ЭтапСпецификации,СокрЛП(ВыборкаДетальныеЗаписи.Позиция));
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры  

&НаСервере
Процедура ВхождениеВСпецификации(СтрДерево,Элемент)
спНомен = ОбщийМодульВызовСервера.ПолучитьСписокВхожденийБезСтатусов(Элемент,Отчет.НаДату);
	Если спНомен.Количество() = 0 Тогда
		Если Элемент <> СтрДерево.Элемент Тогда
			Если Элемент.Товар.Пустая() Тогда
				Если Вхождение = 3 Тогда
				СтрЗнч = СтрДерево.Строки.Добавить();	
				СтрЗнч.Элемент = Элемент;
				СтрЗнч.Статус = ПолучитьСтатус(Элемент);
					Если ТипЗнч(Элемент) = Тип("СправочникСсылка.Номенклатура") Тогда
					СтрЗнч.Канбан = Элемент.Канбан;
					СтрЗнч.Линейка = Элемент.Линейка;
					СтрЗнч.ДатаСоздания = Элемент.ДатаСозданияСпецификации;		
					КонецЕсли; 
				СтрЗнч.ТаблицаКорневыхЭлементов.Колонки.Добавить("Элемент");
				СтрЗнч.ТаблицаКорневыхЭлементов.Колонки.Добавить("Позиция");
				СтрЗнч.ТаблицаКорневыхЭлементов.Колонки.Добавить("Норма");
				СтрЗнч.ТаблицаКорневыхЭлементов.Колонки.Добавить("КорневойЭлемент");
				ПолучитьПозицииЭлементов(Элемент,СтрЗнч);
				КонецЕсли;
			КонецЕсли;				
		КонецЕсли; 
	Иначе
		Если ТолькоБезПрименяемости Тогда
		Возврат;	
		КонецЕсли;
			Для каждого Строка Из спНомен Цикл
				Если Вхождение = 3 Тогда // конечное
					Если Строка.Значение.Товар.Пустая() Тогда
					ВхождениеВСпецификации(СтрДерево,Строка.Значение);	
					Продолжить;
					КонецЕсли; 
				КонецЕсли;
			СтрЗнч = СтрДерево.Строки.Добавить();
			СтрЗнч.Товар = Строка.Значение.Товар;	
			СтрЗнч.Элемент = Строка.Значение;
			СтрЗнч.Статус = ПолучитьСтатус(Строка.Значение);
				Если ТипЗнч(Строка.Значение) = Тип("СправочникСсылка.Номенклатура") Тогда
				СтрЗнч.Канбан = Строка.Значение.Канбан;
				СтрЗнч.Линейка = Строка.Значение.Линейка;
				СтрЗнч.ДатаСоздания = Строка.Значение.ДатаСозданияСпецификации;		
				КонецЕсли; 
			СтрЗнч.ТаблицаКорневыхЭлементов.Колонки.Добавить("Элемент");
			СтрЗнч.ТаблицаКорневыхЭлементов.Колонки.Добавить("Позиция");
			СтрЗнч.ТаблицаКорневыхЭлементов.Колонки.Добавить("Норма");
			СтрЗнч.ТаблицаКорневыхЭлементов.Колонки.Добавить("КорневойЭлемент");
			ПолучитьПозицииЭлементов(Строка.Значение,СтрЗнч);		
				Если Вхождение <> 2 Тогда // не начальное
				ВхождениеВСпецификации(СтрЗнч,Строка.Значение);		
				КонецЕсли;
			КонецЦикла; 
	КонецЕсли;
СтрДерево.Строки.Сортировать("Товар");
КонецПроцедуры

&НаСервере
Процедура ПрименяемостьНаСервере()
тДерево = РеквизитФормыВЗначение("ДеревоПодчиненности");
тДерево.Строки.Очистить();
	Если Отчет.ЭлементСпецификации.ЭтоГруппа Тогда
	Выборка = Справочники[Отчет.ЭлементСпецификации.Метаданные().имя].ВыбратьИерархически(Отчет.ЭлементСпецификации);
		Пока Выборка.Следующий() Цикл	
			Если Не Выборка.ЭтоГруппа Тогда
				Если Не Выборка.ПометкаУдаления Тогда
					Если ТолькоБезПрименяемости Тогда
					спНомен = ОбщийМодульВызовСервера.ПолучитьСписокВхожденийБезСтатусов(Выборка.Ссылка,Отчет.НаДату);						
						Если спНомен.Количество() = 0 Тогда 
		 				Стр = тДерево.Строки.Добавить();
						Стр.Элемент = Выборка.Ссылка;
						Стр.Статус = ПолучитьСтатус(Выборка.Ссылка);
							Если ТипЗнч(Выборка.Ссылка) = Тип("СправочникСсылка.Номенклатура") Тогда
							Стр.Канбан = Выборка.Ссылка.Канбан;
							Стр.Линейка = Выборка.Ссылка.Линейка;
							Стр.ДатаСоздания = Выборка.Ссылка.ДатаСозданияСпецификации;
							КонецЕсли;
						Иначе
						Продолжить;
						КонецЕсли; 
					Иначе
	 				Стр = тДерево.Строки.Добавить();
					Стр.Элемент = Выборка.Ссылка;
					Стр.Статус = ПолучитьСтатус(Выборка.Ссылка);
						Если ТипЗнч(Выборка.Ссылка) = Тип("СправочникСсылка.Номенклатура") Тогда
						Стр.Канбан = Выборка.Ссылка.Канбан;
						Стр.Линейка = Выборка.Ссылка.Линейка;
						Стр.ДатаСоздания = Выборка.Ссылка.ДатаСозданияСпецификации;
						КонецЕсли; 
					ВхождениеВСпецификации(Стр,Выборка.Ссылка);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли; 
		КонецЦикла;	
	Иначе	
	Стр = тДерево.Строки.Добавить();
	Стр.Элемент = Отчет.ЭлементСпецификации;
	Стр.Статус = ПолучитьСтатус(Отчет.ЭлементСпецификации);
		Если ТипЗнч(Отчет.ЭлементСпецификации) = Тип("СправочникСсылка.Номенклатура") Тогда
		Стр.Канбан = Отчет.ЭлементСпецификации.Канбан;
		Стр.ДатаСоздания = Отчет.ЭлементСпецификации.ДатаСозданияСпецификации;
		КонецЕсли; 
	ВхождениеВСпецификации(Стр,Отчет.ЭлементСпецификации);	
	КонецЕсли;  
ЗначениеВРеквизитФормы(тДерево, "ДеревоПодчиненности");
КонецПроцедуры

&НаКлиенте
Процедура Применяемость(Команда)
Состояние("Обработка...",,"Получение данных...");
Элементы.ДеревоПодчиненностиОсновныеЭлементы.Видимость = Ложь;
ПрименяемостьНаСервере();
РазвернутьДерево();
КонецПроцедуры

&НаСервере
Функция ПолучитьМетаданные(ВыбТип)
Возврат(Метаданные.НайтиПоТипу(ВыбТип).ПолноеИмя());
КонецФункции

&НаКлиенте
Процедура ДеревоПодчиненностиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Элемент.ТекущийЭлемент.Имя = "ДеревоПодчиненностиОсновныеЭлементы" Тогда
	Элементы.ДеревоПодчиненности.ТекущиеДанные.ОсновныеЭлементы.ВыбратьЭлемент("Основные элементы");	
	Возврат;
	КонецЕсли; 
ТекФорма = ПолучитьФорму(ПолучитьМетаданные(ТипЗнч(Элементы.ДеревоПодчиненности.ТекущиеДанные.Элемент))+".ФормаСписка");
ТекФорма.Открыть();
ТекФорма.Элементы.Список.ТекущаяСтрока = Элементы.ДеревоПодчиненности.ТекущиеДанные.Элемент;
КонецПроцедуры

&НаСервере
Процедура ВхождениеАналогаВСпецификации(СтрДерево,Элемент)
ТаблицаНР = Новый ТаблицаЗначений;
ТаблицаОсновныхЭлементов = Новый ТаблицаЗначений;

ТаблицаНР.Колонки.Добавить("Спецификация",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
ТаблицаНР.Колонки.Добавить("НР",Новый ОписаниеТипов("СправочникСсылка.НормыРасходов"));
ТаблицаНР.Колонки.Добавить("Позиция",Новый ОписаниеТипов("Строка",Новый КвалификаторыСтроки(20)));
ТаблицаНР.Колонки.Добавить("ОграниченноеИспользование",Новый ОписаниеТипов("Булево"));

ТаблицаОсновныхЭлементов.Колонки.Добавить("НР");
ТаблицаОсновныхЭлементов.Колонки.Добавить("Наименование");
ТаблицаОсновныхЭлементов.Колонки.Добавить("Позиция",Новый ОписаниеТипов("Строка",Новый КвалификаторыСтроки(20)));
ТаблицаОсновныхЭлементов.Колонки.Добавить("ОграниченноеИспользование",Новый ОписаниеТипов("Булево"));

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	АналогиНормРасходов.Владелец КАК Владелец,
	|	АналогиНормРасходов.Ссылка КАК Ссылка,
	|	АналогиНормРасходов.ОграниченноеИспользование КАК ОграниченноеИспользование
	|ИЗ
	|	РегистрСведений.АналогиНормРасходов.СрезПоследних(&НаДату, ) КАК АналогиНормРасходовСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АналогиНормРасходов КАК АналогиНормРасходов
	|		ПО АналогиНормРасходовСрезПоследних.АналогНормыРасходов = АналогиНормРасходов.Ссылка
	|ГДЕ
	|	АналогиНормРасходов.Элемент = &Элемент
	|	И АналогиНормРасходовСрезПоследних.Норма > 0";
Запрос.УстановитьПараметр("НаДату", Отчет.НаДату);
Запрос.УстановитьПараметр("Элемент", Отчет.ЭлементСпецификации);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
	Нормы = ОбщегоНазначенияПовтИсп.НормыРасходов_ПолучитьПоследнее(ВыборкаДетальныеЗаписи.Владелец);
		Если Нормы.Норма > 0 Тогда
		ТЧ = ТаблицаНР.Добавить();
		ТЧ.Спецификация = ВыборкаДетальныеЗаписи.Владелец.Владелец;
		ТЧ.НР = ВыборкаДетальныеЗаписи.Владелец;
		ТЧ.Позиция = ВыборкаДетальныеЗаписи.Владелец.Позиция;
		ТЧ.ОграниченноеИспользование = ВыборкаДетальныеЗаписи.ОграниченноеИспользование;
		КонецЕсли;
	КонецЦикла;
ТаблицаНР.Сортировать("Спецификация,Позиция,НР");
ТекСпец = Неопределено;
	Для каждого ТЧ Из ТаблицаНР Цикл
		Если ТЧ.Спецификация <> ТекСпец Тогда
			Если ТекСпец <> Неопределено Тогда
				Если Вхождение = 3 Тогда // конечное
					Если ТекСпец.Товар.Пустая() Тогда
					ВхождениеВСпецификации(СтрДерево,ТекСпец);
					ТекСпец = ТЧ.Спецификация;
					ТаблицаОсновныхЭлементов.Очистить();	
					Продолжить;
					КонецЕсли; 
				КонецЕсли;						
			СтрЗнч = СтрДерево.Строки.Добавить();
			СтрЗнч.Элемент = ТекСпец;
			СтрЗнч.Товар = ТекСпец.Товар;
			СтрЗнч.Статус = ПолучитьСтатус(ТекСпец);
			СтрЗнч.Канбан = ТекСпец.Канбан;
			СтрЗнч.ТаблицаКорневыхЭлементов.Колонки.Добавить("Элемент");
			СтрЗнч.ТаблицаКорневыхЭлементов.Колонки.Добавить("Позиция");
			СтрЗнч.ТаблицаКорневыхЭлементов.Колонки.Добавить("Норма");
			СтрЗнч.ТаблицаКорневыхЭлементов.Колонки.Добавить("КорневойЭлемент");
			СтрЗнч.ТаблицаКорневыхЭлементов.Колонки.Добавить("ОграниченноеИспользование");
				Для каждого ТЧ_ОЭ Из ТаблицаОсновныхЭлементов Цикл
				СтрЗнч.ОсновныеЭлементы.Добавить(ТЧ_ОЭ.НР.Элемент,ТЧ_ОЭ.Наименование);
				ТЧ_К = СтрЗнч.ТаблицаКорневыхЭлементов.Добавить();
				ТЧ_К.Позиция = ТЧ_ОЭ.НР.Позиция;
				ТЧ_К.Элемент = ТЧ_ОЭ.НР.Элемент;
				ТЧ_К.Норма = РегистрыСведений.НормыРасходов.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("НормаРасходов",ТЧ_ОЭ.НР)).Норма;
					Если ТЧ_ОЭ.НР.Корневой Тогда
					ТЧ_К.КорневойЭлемент = ТЧ_ОЭ.НР.Элемент;
					Иначе	
					ТЧ_К.КорневойЭлемент = ПолучитьКорневойЭлемент(ТекСпец,СокрЛП(ТЧ_ОЭ.НР.Позиция));
					КонецЕсли;
				ТЧ_К.ОграниченноеИспользование = ТЧ_ОЭ.ОграниченноеИспользование;	
				КонецЦикла; 	
					Если Вхождение <> 2 Тогда // не начальное
					ВхождениеВСпецификации(СтрЗнч,ТекСпец);		
					КонецЕсли;
			КонецЕсли;
		ТекСпец = ТЧ.Спецификация;
		ТаблицаОсновныхЭлементов.Очистить();
		КонецЕсли;
	ТЧ_ОЭ = ТаблицаОсновныхЭлементов.Добавить();
	ТЧ_ОЭ.НР = ТЧ.НР;
	ТЧ_ОЭ.Наименование = СокрЛП(ТЧ.НР.Элемент.Наименование);
	ТЧ_ОЭ.ОграниченноеИспользование = ТЧ.ОграниченноеИспользование;
	КонецЦикла;
		Если ТекСпец <> Неопределено Тогда	
			Если Вхождение = 3 Тогда // конечное
				Если ТекСпец.Товар.Пустая() Тогда
				ВхождениеВСпецификации(СтрДерево,ТекСпец);
				Возврат;	
				КонецЕсли; 
			КонецЕсли;					
		СтрЗнч = СтрДерево.Строки.Добавить();
		СтрЗнч.Элемент = ТекСпец;
		СтрЗнч.Товар = ТекСпец.Товар;
		СтрЗнч.Статус = ПолучитьСтатус(ТекСпец);
		СтрЗнч.Канбан = ТекСпец.Канбан;
		СтрЗнч.ТаблицаКорневыхЭлементов.Колонки.Добавить("Элемент");
		СтрЗнч.ТаблицаКорневыхЭлементов.Колонки.Добавить("Позиция");
		СтрЗнч.ТаблицаКорневыхЭлементов.Колонки.Добавить("Норма");
		СтрЗнч.ТаблицаКорневыхЭлементов.Колонки.Добавить("КорневойЭлемент");
		СтрЗнч.ТаблицаКорневыхЭлементов.Колонки.Добавить("ОграниченноеИспользование");
			Для каждого ТЧ_ОЭ Из ТаблицаОсновныхЭлементов Цикл
			СтрЗнч.ОсновныеЭлементы.Добавить(ТЧ_ОЭ.НР.Элемент,ТЧ_ОЭ.Наименование);
			ТЧ_К = СтрЗнч.ТаблицаКорневыхЭлементов.Добавить();
			ТЧ_К.Позиция = ТЧ_ОЭ.НР.Позиция;
			ТЧ_К.Элемент = ТЧ_ОЭ.НР.Элемент;
			ТЧ_К.Норма = РегистрыСведений.НормыРасходов.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("НормаРасходов",ТЧ_ОЭ.НР)).Норма;
				Если ТЧ_ОЭ.НР.Корневой Тогда
				ТЧ_К.КорневойЭлемент = ТЧ_ОЭ.НР.Элемент;
				Иначе	
				ТЧ_К.КорневойЭлемент = ПолучитьКорневойЭлемент(ТекСпец,СокрЛП(ТЧ_ОЭ.НР.Позиция));
				КонецЕсли;
			ТЧ_К.ОграниченноеИспользование = ТЧ_ОЭ.ОграниченноеИспользование;	
			КонецЦикла;		
				Если Вхождение <> 2 Тогда // не начальное
				ВхождениеВСпецификации(СтрЗнч,ТекСпец);		
				КонецЕсли;
		КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПрименяемостьАналогомНаСервере()
тДерево = РеквизитФормыВЗначение("ДеревоПодчиненности");
тДерево.Строки.Очистить();
Стр = тДерево.Строки.Добавить();
Стр.Элемент = Отчет.ЭлементСпецификации;
Стр.Статус = ПолучитьСтатус(Отчет.ЭлементСпецификации);
	Если ТипЗнч(Отчет.ЭлементСпецификации) = Тип("СправочникСсылка.Номенклатура") Тогда
	Стр.Канбан = Отчет.ЭлементСпецификации.Канбан;
	КонецЕсли; 
ВхождениеАналогаВСпецификации(Стр,Отчет.ЭлементСпецификации); 
ЗначениеВРеквизитФормы(тДерево, "ДеревоПодчиненности");
КонецПроцедуры

&НаКлиенте
Процедура ПрименяемостьАналогом(Команда)
Состояние("Обработка...",,"Получение данных...");
Элементы.ДеревоПодчиненностиОсновныеЭлементы.Видимость = Истина;
ПрименяемостьАналогомНаСервере();
РазвернутьДерево();
КонецПроцедуры

&НаСервере
Процедура СписокВозможныхАналоговНаСервере()
СписокАналогов = ОбщийМодульВызовСервера.ПолучитьСписокВозможныхАналогов(Отчет.ЭлементСпецификации,Отчет.НаДату);
тДерево = РеквизитФормыВЗначение("ДеревоПодчиненности");
тДерево.Строки.Очистить();
Стр = тДерево.Строки.Добавить();
Стр.Элемент = Отчет.ЭлементСпецификации;
Стр.Статус = ПолучитьСтатус(Отчет.ЭлементСпецификации);
	Если ТипЗнч(Отчет.ЭлементСпецификации) = Тип("СправочникСсылка.Номенклатура") Тогда
	Стр.Канбан = Отчет.ЭлементСпецификации.Канбан;
	КонецЕсли;
		Для каждого ВыбАналог Из СписокАналогов Цикл
		СтрЗнч = Стр.Строки.Добавить();
		СтрЗнч.Элемент = ВыбАналог.Значение;
		СтрЗнч.Статус = ПолучитьСтатус(ВыбАналог.Значение);
		КонецЦикла;
			Если ТипЗнч(Отчет.ЭлементСпецификации) = Тип("СправочникСсылка.Материалы") Тогда
				Для каждого ТЧ Из Отчет.ЭлементСпецификации.Аналоги Цикл
				СтрЗнч = Стр.Строки.Добавить();
				СтрЗнч.Элемент = ТЧ.Аналог;
				СтрЗнч.Статус = ПолучитьСтатус(ТЧ.Аналог);
				КонецЦикла; 
			КонецЕсли; 
ЗначениеВРеквизитФормы(тДерево, "ДеревоПодчиненности");
КонецПроцедуры

&НаКлиенте
Процедура СписокВозможныхАналогов(Команда)
Состояние("Обработка...",,"Получение данных...");
Элементы.ДеревоПодчиненностиОсновныеЭлементы.Видимость = Ложь;
СписокВозможныхАналоговНаСервере();
РазвернутьДерево();
КонецПроцедуры

&НаСервере
Процедура НайтиВДереве(КоллекцияСтрокДереваОдногоУровня,СписокНоменклатуры,Уровень) 
    Для Каждого Стр Из КоллекцияСтрокДереваОдногоУровня Цикл
		Если Уровень = 1 Тогда
		СписокНоменклатуры.Добавить(Стр.Элемент);
		КонецЕсли;
    НайтиВДереве(Стр.ПолучитьЭлементы(),СписокНоменклатуры,1);
    КонецЦикла;   
КонецПроцедуры

&НаСервере
Процедура ИзменитьСтатусыНаСервере(СписокНоменклатуры)
НайтиВДереве(ДеревоПодчиненности.ПолучитьЭлементы(),СписокНоменклатуры,0);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСтатусы(Команда)
	Если Вхождение = 3 Тогда
	СписокНоменклатуры = Новый СписокЗначений;

	ИзменитьСтатусыНаСервере(СписокНоменклатуры);
	ОткрытьФорму("Обработка.ИзменениеСтатусовСпецификаций.Форма",Новый Структура("СписокНоменклатуры",СписокНоменклатуры));
	Иначе
	Сообщить("Данная функция доступна только для конечного вхождения!");
	КонецЕсли;
КонецПроцедуры
  
&НаКлиенте
Процедура ДобавитьВСписокКонечныеИзделия(тЭлементы,СписокНоменклатуры)
   	Для Каждого тСтр Из тЭлементы Цикл 
		Если тСтр.Элемент <> Отчет.ЭлементСпецификации Тогда
		СписокНоменклатуры.Добавить(тСтр.Элемент);
		КонецЕсли;
	ДобавитьВСписокКонечныеИзделия(тСтр.ПолучитьЭлементы(),СписокНоменклатуры);
   	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтчётОбУникальности(Команда)
	Если Вхождение = 3 Тогда
	СписокНоменклатуры = Новый СписокЗначений;
   
	ДобавитьВСписокКонечныеИзделия(ДеревоПодчиненности.ПолучитьЭлементы(),СписокНоменклатуры);
	ОткрытьФорму("Отчет.ОтчетОбУникальныхМПЗ.Форма",Новый Структура("СписокНоменклатуры",СписокНоменклатуры));
	Иначе
	Сообщить("Работает только при выборе конечного вхождения!");
	КонецЕсли;
КонецПроцедуры
