
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Отчет.ОстаткиНаДату = ТекущаяДата();
Отчет.РасходЗаПериод.ДатаНачала = ТекущаяДата()-21*86400;
Отчет.РасходЗаПериод.ДатаОкончания = ТекущаяДата();
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикПриИзменении(Элемент)
ПоставщикПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПоставщикПриИзмененииНаСервере()
Договор = Поставщик.ОсновнойДоговор;
КонецПроцедуры

&НаСервере
Процедура ДобавитьМПЗ(Наименование,Количество,Цена,СрокПоставки)
МПЗ = Справочники.Материалы.НайтиПоНаименованию(Наименование,Истина);
	Если МПЗ.Пустая() Тогда
	Сообщить(Наименование+" - МПЗ не найдена!");	
	Возврат;	
	КонецЕсли; 
ТЧ = ТаблицаМПЗ.Добавить();
ТЧ.МПЗ = МПЗ;
ТЧ.ГруппаПоЗакупкам = МПЗ.ГруппаПоЗакупкам;
ТЧ.Количество = Количество;
ТЧ.Цена = Цена;
ТЧ.СрокПоставки = СрокПоставки;
СписокМПЗ.Добавить(МПЗ);
КонецПроцедуры

&НаСервере
Процедура ПодсчётРасходаПоВсемСкладам()
ТаблицаРасходаМПЗ.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОбороты.МПЗ КАК МПЗ,
	|	МестаХраненияОбороты.Регистратор,
	|	МестаХраненияОбороты.КоличествоРасход
	|ИЗ
	|	РегистрНакопления.МестаХранения.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК МестаХраненияОбороты
	|ГДЕ
	|	МестаХраненияОбороты.МПЗ В(&СписокМПЗ)
	|ИТОГИ ПО
	|	МПЗ";
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Отчет.РасходЗаПериод.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Отчет.РасходЗаПериод.ДатаОкончания));
Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМПЗ.Следующий() Цикл
	ТЧ = ТаблицаРасходаМПЗ.Добавить();
	ТЧ.МПЗ = ВыборкаМПЗ.МПЗ;
	ВыборкаДетальныеЗаписи = ВыборкаМПЗ.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ТипЗнч(ВыборкаДетальныеЗаписи.Регистратор) = Тип("ДокументСсылка.ПередачаВПроизводство") Тогда	
			ТЧ.КоличествоРасход = ТЧ.КоличествоРасход + ВыборкаДетальныеЗаписи.КоличествоРасход;
			ИначеЕсли ТипЗнч(ВыборкаДетальныеЗаписи.Регистратор) = Тип("ДокументСсылка.СписаниеМПЗПрочее") Тогда
				Если ВыборкаДетальныеЗаписи.Регистратор.Статья.ПринадлежитЭлементу(ГруппаСтатейСписанияНаИнвентаризацию) Тогда
				ТЧ.КоличествоСписание = ТЧ.КоличествоСписание + ВыборкаДетальныеЗаписи.КоличествоРасход;
				Иначе
					Если ВыборкаДетальныеЗаписи.Регистратор.Статья = СтатьяСписанияНаРеализацию Тогда
					ТЧ.КоличествоРеализация = ТЧ.КоличествоРеализация + ВыборкаДетальныеЗаписи.КоличествоРасход;
					Иначе	
					ТЧ.КоличествоСписание = ТЧ.КоличествоСписание + ВыборкаДетальныеЗаписи.КоличествоРасход;
					КонецЕсли; 
				КонецЕсли; 	
			ИначеЕсли ТипЗнч(ВыборкаДетальныеЗаписи.Регистратор) = Тип("ДокументСсылка.Реализация") Тогда	
			ТЧ.КоличествоРеализация = ТЧ.КоличествоРеализация + ВыборкаДетальныеЗаписи.КоличествоРасход;
			КонецЕсли; 	
		КонецЦикла;	
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПодсчётОстатковПоВыбраннымСкладам()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОстатки.МПЗ,
	|	МестаХраненияОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.МестаХранения.Остатки(&НаДату, ) КАК МестаХраненияОстатки
	|ГДЕ
	|	МестаХраненияОстатки.МестоХранения В ИЕРАРХИИ(&СписокМестХранения)
	|	И МестаХраненияОстатки.МПЗ В(&СписокМПЗ)";
Запрос.УстановитьПараметр("НаДату", КонецДня(Отчет.ОстаткиНаДату));
Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения);
Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.МПЗ)); 
		Если Выборка.Количество() = 0 Тогда			
		ТЧ = ТаблицаРасходаМПЗ.Добавить();
		ТЧ.МПЗ = ВыборкаДетальныеЗаписи.МПЗ;
		ТЧ.КоличествоОстаток = ВыборкаДетальныеЗаписи.КоличествоОстаток;
		Иначе
		Выборка[0].КоличествоОстаток = Выборка[0].КоличествоОстаток + ВыборкаДетальныеЗаписи.КоличествоОстаток;
		КонецЕсли; 	
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура РаскрытьНаМПЗ(Линейка,ЭтапСпецификации,КолУзла)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходов.Элемент,
	|	НормыРасходовСрезПоследних.Норма,
	|	НормыРасходов.Ссылка,
	|	НормыРасходов.ВидЭлемента
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(&НаДату, ) КАК НормыРасходовСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НормыРасходов КАК НормыРасходов
	|		ПО НормыРасходовСрезПоследних.НормаРасходов = НормыРасходов.Ссылка
	|ГДЕ
	|	НормыРасходов.ПометкаУдаления = ЛОЖЬ
	|	И НормыРасходов.Владелец = &Владелец
	|	И (ТИПЗНАЧЕНИЯ(НормыРасходов.Элемент) = ТИП(Справочник.Номенклатура)
	|			ИЛИ ТИПЗНАЧЕНИЯ(НормыРасходов.Элемент) = ТИП(Справочник.Материалы))
	|	И НормыРасходовСрезПоследних.Норма > 0";
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Материалы")Тогда
			Если СписокМПЗ.НайтиПоЗначению(ВыборкаНР.Элемент) = Неопределено Тогда	
			Продолжить;				
			КонецЕсли; 
		Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаНР.Элемент));
			Если Выборка.Количество() = 0 Тогда			
			ТЧ = ТаблицаРасходаМПЗ.Добавить();
			ТЧ.МПЗ = ВыборкаНР.Элемент;
			ТЧ.КоличествоОжидаемыйРасход = ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла;	
			Иначе 
			Выборка[0].КоличествоОжидаемыйРасход = Выборка[0].КоличествоОжидаемыйРасход + ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла;
			КонецЕсли;					
		ИначеЕсли ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Номенклатура")Тогда
			Если ВыборкаНР.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Набор Тогда
			РаскрытьНаМПЗ(Линейка,ВыборкаНР.Элемент,ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла); 
			ИначеЕсли ВыборкаНР.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Основа Тогда
			РаскрытьНаМПЗ(Линейка,ВыборкаНР.Элемент,ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла); 
			Иначе
				Если ВыборкаНР.Элемент.Канбан.Пустая() Тогда
				РаскрытьНаМПЗ(Линейка,ВыборкаНР.Элемент,ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла);				
				КонецЕсли; 				
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПодсчётОжидаемогоРасхода()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Линейка,
	|	ПроизводственноеЗадание.Изделие,
	|	ПроизводственноеЗадание.Количество КАК Количество
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДатаЗапуска = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ПроизводственноеЗадание.Подразделение В(&СписокПодразделений)
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	ПроизводственноеЗадание.Линейка,
	|	ПроизводственноеЗадание.Изделие";
Запрос.УстановитьПараметр("СписокПодразделений", СписокПодразделений);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаЛинейка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЛинейка.Следующий() Цикл
	ВыборкаИзделие = ВыборкаЛинейка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаИзделие.Следующий() Цикл
		РаскрытьНаМПЗ(ВыборкаЛинейка.Линейка,ВыборкаИзделие.Изделие,ВыборкаИзделие.Количество);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура РаскрытьНаМПЗВсюСпецификацию(ЭтапСпецификации,КолУзла)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходов.Элемент,
	|	НормыРасходовСрезПоследних.Норма,
	|	НормыРасходов.Ссылка,
	|	НормыРасходов.ВидЭлемента
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(&НаДату, ) КАК НормыРасходовСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НормыРасходов КАК НормыРасходов
	|		ПО НормыРасходовСрезПоследних.НормаРасходов = НормыРасходов.Ссылка
	|ГДЕ
	|	НормыРасходов.ПометкаУдаления = ЛОЖЬ
	|	И НормыРасходов.Владелец = &Владелец
	|	И (ТИПЗНАЧЕНИЯ(НормыРасходов.Элемент) = ТИП(Справочник.Номенклатура)
	|			ИЛИ ТИПЗНАЧЕНИЯ(НормыРасходов.Элемент) = ТИП(Справочник.Материалы))
	|	И НормыРасходовСрезПоследних.Норма > 0";
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Материалы")Тогда
			Если СписокМПЗ.НайтиПоЗначению(ВыборкаНР.Элемент) = Неопределено Тогда	
			Продолжить;				
			КонецЕсли; 
		Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаНР.Элемент)); 
			Если Выборка.Количество() = 0 Тогда			
			ТЧ = ТаблицаРасходаМПЗ.Добавить();
			ТЧ.МПЗ = ВыборкаНР.Элемент;
			ТЧ.КоличествоРК = ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла;
			Иначе
			Выборка[0].КоличествоРК = Выборка[0].КоличествоРК + ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла;
			КонецЕсли;					
		ИначеЕсли ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Номенклатура")Тогда
		РаскрытьНаМПЗВсюСпецификацию(ВыборкаНР.Элемент,ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла);				
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПодсчётРезервКомплектов()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПерспективныеПланы.МПЗ,
	|	ПерспективныеПланы.РезКм
	|ИЗ
	|	РегистрСведений.ПерспективныеПланы КАК ПерспективныеПланы
	|ГДЕ
	|	ПерспективныеПланы.Период = &НаДату
	|	И ПерспективныеПланы.РезКм > 0";
Запрос.УстановитьПараметр("НаДату", НачалоМесяца(ТекущаяДата()));
	Если СписокГруппНоменклатуры.Количество()> 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ПерспективныеПланы.МПЗ В ИЕРАРХИИ(&СписокГруппНоменклатуры)";
	Запрос.УстановитьПараметр("СписокГруппНоменклатуры", СписокГруппНоменклатуры);
	КонецЕсли; 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	РаскрытьНаМПЗВсюСпецификацию(ВыборкаДетальныеЗаписи.МПЗ,ВыборкаДетальныеЗаписи.РезКм);
	КонецЦикла;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	КрупныеЗаказы.Продукция КАК Продукция,
	|	КрупныеЗаказы.Количество КАК Количество
	|ИЗ
	|	РегистрСведений.КрупныеЗаказы КАК КрупныеЗаказы
	|ГДЕ
	|	КрупныеЗаказы.Обработан = ЛОЖЬ
	|	И КрупныеЗаказы.ДатаРезерва <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	Если СписокГруппНоменклатуры.Количество()> 0 Тогда
	Запрос.Текст = Запрос.Текст + " И КрупныеЗаказы.Продукция В ИЕРАРХИИ(&СписокГруппНоменклатуры)";
	Запрос.УстановитьПараметр("СписокГруппНоменклатуры", СписокГруппНоменклатуры);
	КонецЕсли; 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	РаскрытьНаМПЗВсюСпецификацию(ВыборкаДетальныеЗаписи.Продукция,ВыборкаДетальныеЗаписи.Количество);
	КонецЦикла;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыНаПроизводствоОстатки.Документ КАК Документ,
	|	ЗаказыНаПроизводствоОстатки.Продукция КАК Продукция,
	|	ЗаказыНаПроизводствоОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПроизводство.Остатки КАК ЗаказыНаПроизводствоОстатки";
	Если СписокГруппНоменклатуры.Количество()> 0 Тогда
	Запрос.Текст = Запрос.Текст + " ГДЕ ЗаказыНаПроизводствоОстатки.Продукция В ИЕРАРХИИ(&СписокГруппНоменклатуры)";
	Запрос.УстановитьПараметр("СписокГруппНоменклатуры", СписокГруппНоменклатуры);
	КонецЕсли;	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Продукция = ВыборкаДетальныеЗаписи.Продукция;
		Для каждого ТЧ_Заказ Из ВыборкаДетальныеЗаписи.Документ.Заказ Цикл	
			Если ТЧ_Заказ.Продукция = Продукция Тогда
				Если ТЧ_Заказ.РучнойЗапуск = 0 Тогда
					Если ТЧ_Заказ.КрупныйЗаказ Тогда
					КоличествоНеСоздано = ТЧ_Заказ.Количество - ПолучитьКоличествоСозданых(ВыборкаДетальныеЗаписи.Документ,Продукция);
						Если КоличествоНеСоздано > 0 Тогда
						РаскрытьНаМПЗВсюСпецификацию(Продукция,КоличествоНеСоздано);
						КонецЕсли;	
					КонецЕсли;  
				КонецЕсли; 	
			Прервать;
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();

	Если Константы.КодБазы.Получить() = "ХРК" Тогда
	БазаПроизводства = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Справочники.ОбменДанными.НайтиПоНаименованию("Производство Москва 1С 8", Истина));
	КонецЕсли;
		Если БазаПроизводства = Неопределено Тогда
		Сообщить("Не открыто соединение с производственной базой!");
		Возврат;
		КонецЕсли;

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблМПЗ = Макет.ПолучитьОбласть("МПЗ");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.ДатаНач = Формат(Отчет.РасходЗаПериод.ДатаНачала,"ДФ=dd.MM.yyyy");
ОблШапка.Параметры.ДатаКон = Формат(Отчет.РасходЗаПериод.ДатаОкончания,"ДФ=dd.MM.yyyy");
ОблШапка.Параметры.НаДату = Формат(Отчет.ОстаткиНаДату,"ДФ=dd.MM.yyyy");
ОблШапка.Параметры.МестаХранения = СписокМестХранения;  
ОблШапка.Параметры.Поставщик = Поставщик;
ОблШапка.Параметры.Договор = Договор;
ОблШапка.Параметры.Курс = ОбщийМодульВызовСервера.КурсДляВалюты(Валюта,Отчет.ОстаткиНаДату);
ТабДок.Вывести(ОблШапка);

КолДней = (Отчет.РасходЗаПериод.ДатаОкончания-Отчет.РасходЗаПериод.ДатаНачала)/86400;

// Запрос по заказам поставщикам
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыПоставщикамОстатки.МПЗ,
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику,
	|	ЗаказыПоставщикамОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&НаДату, ) КАК ЗаказыПоставщикамОстатки
	|ГДЕ
	|	ЗаказыПоставщикамОстатки.МПЗ В(&СписокМПЗ)"; 
Запрос.УстановитьПараметр("НаДату", Отчет.ОстаткиНаДату);
Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);
	Если Не Поставщик.Пустая() Тогда
	Запрос.Текст = Запрос.Текст + " И ЗаказыПоставщикамОстатки.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("Контрагент", Поставщик);	
	КонецЕсли;
Запрос.Текст = Запрос.Текст + " ИТОГИ СУММА(КоличествоОстаток) ПО МПЗ,ЗаказПоставщику";
РезультатЗапроса = Запрос.Выполнить();
ВыборкаЗаказыПоставщикамМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

СуммаИтого = 0;
	//Формирование таблицы отчёта
	Для каждого ТЧ Из ТаблицаМПЗ Цикл
	ОблМПЗ.Параметры.ЦенаКарточка = ОбщийМодульВызовСервера.ПолучитьПоследнююЦену(ТЧ.МПЗ,Отчет.ОстаткиНаДату);		
	МПЗ_М = БазаПроизводства.Справочники.Материалы.НайтиПоНаименованию(СокрЛП(ТЧ.МПЗ.Наименование),Истина);
		Если Не МПЗ_М.Пустая() Тогда	
		ОблМПЗ.Параметры.ЦенаКарточкаМ = БазаПроизводства.ОбщийМодульВызовСервера.ПолучитьПоследнююЦену(МПЗ_М,Отчет.ОстаткиНаДату);
		ОблМПЗ.Параметры.ЦенаДоговораМ = БазаПроизводства.ОбщийМодульРаботаСРегистрами.ПолучитьПоследнююЦенуДП(МПЗ_М,Отчет.ОстаткиНаДату);
		ОблМПЗ.Параметры.ЦенаГрнМ = ОблМПЗ.Параметры.ЦенаДоговораМ*ОблШапка.Параметры.Курс;
			Если ОблМПЗ.Параметры.ЦенаГрнМ > 0 Тогда
			ОблМПЗ.Параметры.ОтклонениеМ = (ТЧ.Цена/ОблМПЗ.Параметры.ЦенаГрнМ-1)*100;
			Иначе	
			ОблМПЗ.Параметры.ОтклонениеМ = (ТЧ.Цена/(ОблМПЗ.Параметры.ЦенаКарточкаМ*ОблШапка.Параметры.Курс)-1)*100;
			КонецЕсли;
		КонецЕсли;
	ОблМПЗ.Параметры.ОтклонениеХ = (ТЧ.Цена/ОблМПЗ.Параметры.ЦенаКарточка-1)*100;		
	ОблМПЗ.Параметры.Статус = ПолучитьСтатус(ТЧ.МПЗ);
	ОблМПЗ.Параметры.Наименование = СокрЛП(ТЧ.МПЗ.Наименование); 
	ОблМПЗ.Параметры.МПЗ = ТЧ.МПЗ;
	ОблМПЗ.Параметры.ГруппаПоЗакупкам = ТЧ.МПЗ.ГруппаПоЗакупкам;
	ОблМПЗ.Параметры.ЕдиницаИзмерения = СокрЛП(ТЧ.МПЗ.ЕдиницаИзмерения.Наименование);
	ОблМПЗ.Параметры.МинОстаток = ТЧ.МПЗ.МинОстаток;
	ОблМПЗ.Параметры.СрокПоставки = ТЧ.СрокПоставки; 
	ОблМПЗ.Параметры.Количество = ТЧ.Количество;
	ОблМПЗ.Параметры.Цена = ТЧ.Цена;
	ОблМПЗ.Параметры.Сумма = ТЧ.Цена*ТЧ.Количество;
	СуммаИтого = СуммаИтого + ОблМПЗ.Параметры.Сумма;	
	Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ТЧ.МПЗ));
		Если Выборка.Количество() > 0 Тогда
		ОблМПЗ.Параметры.КоличествоРасход = Выборка[0].КоличествоРасход;
		КоличествоСписание = Выборка[0].КоличествоСписание;
		КоличествоРеализация = Выборка[0].КоличествоРеализация;
		ОблМПЗ.Параметры.КоличествоОстаток = Выборка[0].КоличествоОстаток - Выборка[0].КоличествоРК;
		КоличествоОжидаемыйРасход = Выборка[0].КоличествоОжидаемыйРасход;
		КоличествоРК = Выборка[0].КоличествоРК;
		Иначе	
		ОблМПЗ.Параметры.КоличествоРасход = 0;
		КоличествоСписание = 0;
		КоличествоРеализация = 0;
		ОблМПЗ.Параметры.КоличествоОстаток = 0;
		КоличествоОжидаемыйРасход = 0;
		КоличествоРК = 0;		
		КонецЕсли;
	ВыборкаЗаказыПоставщикамМПЗ.Сбросить();
	Долг = 0;
		Пока ВыборкаЗаказыПоставщикамМПЗ.НайтиСледующий(Новый Структура("МПЗ",ТЧ.МПЗ)) Цикл
		Долг = Долг + ВыборкаЗаказыПоставщикамМПЗ.КоличествоОстаток; 
		КонецЦикла; 
	РУСП = ?(ТЧ.МПЗ.СрокПоставки > 0,Окр((ОблМПЗ.Параметры.КоличествоРасход+КоличествоСписание+КоличествоРеализация)/КолДней*ТЧ.МПЗ.СрокПоставки*7,0,1),0);	
	ОблМПЗ.Параметры.Заказать = (ОблМПЗ.Параметры.КоличествоОстаток+Долг)-(ТЧ.МПЗ.МинОстаток+РУСП);
    ОблМПЗ.Параметры.Заказать = ОблМПЗ.Параметры.Заказать-КоличествоОжидаемыйРасход;
	ТабДок.Вывести(ОблМПЗ); 
	КонецЦикла;
ОблКонец.Параметры.Сумма = СуммаИтого;
ОблКонец.Параметры.СуммаСНДС = СуммаИтого*1.2; 
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 5; 
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
ТаблицаМПЗ.Очистить();
СписокМПЗ.Очистить();	
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	Состояние("Обработка...",,"Загрузка списка МПЗ...");
	Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл c МПЗ");
		Если Результат <> Неопределено Тогда
		ExcelЛист = Результат.ExcelЛист;
		КолСтрок = Результат.КоличествоСтрок;
		    Для к = 2 по КолСтрок Цикл
			Состояние("Обработка...",к*100/КолСтрок,"Загрузка МПЗ из файла...");
			ДобавитьМПЗ(СокрЛП(ExcelЛист.Cells(к,1).Value),Число(ExcelЛист.Cells(к,2).Value),Число(ExcelЛист.Cells(к,3).Value),СокрЛП(ExcelЛист.Cells(к,4).Value));
			КонецЦикла;
		Результат.Excel.Quit();
		КонецЕсли;
	Состояние("Обработка...",,"Подсчёт расхода по всем складам...");
	ПодсчётРасходаПоВсемСкладам();
	Состояние("Обработка...",,"Подсчёт остатков по выбранным складам...");
	ПодсчётОстатковПоВыбраннымСкладам(); 
	Состояние("Обработка...",,"Подсчёт ожидаемого расхода...");
	ПодсчётОжидаемогоРасхода();
		Если ПолучитьРезервКомплектов Тогда	
		Состояние("Обработка...",,"Подсчёт резерв комплектов по перспективному плану...");
		ПодсчётРезервКомплектов();		
		КонецЕсли; 
	Состояние("Обработка...",,"Создание таблицы отчёта...");
	СформироватьНаСервере(); 
	КонецЕсли;
КонецПроцедуры
