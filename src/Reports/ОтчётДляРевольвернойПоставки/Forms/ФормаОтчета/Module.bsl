
&НаСервере
Перем оптЗапросНорм, оптСоотРезультатов;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Отчет.ОстаткиНаДату = ТекущаяДата();
Отчет.РасходЗаПериод.ДатаНачала = ТекущаяДата()-21*86400;
Отчет.РасходЗаПериод.ДатаОкончания = ТекущаяДата();
КонецПроцедуры
          
&НаСервере       
Процедура ПолучитьАналогиНабора(ЭтапСпецификации,СписокАналогов)
ВыборкаДетальныеЗаписи = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_М(ЭтапСпецификации,ТекущаяДата());
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокАналогов.Добавить(ВыборкаДетальныеЗаписи.Элемент);
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ДобавитьМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,МПЗ)
	Если ПолучитьСтатус(МПЗ,ТекущаяДата()) = Перечисления.СтатусыМПЗ.Запрещённая Тогда	
	Возврат;
	КонецЕсли; 
		Если СписокГруппПоЗакупкам.Количество() > 0 Тогда	
			Если НеПринадлежатВыбраннымГруппам Тогда
				Если СписокГруппПоЗакупкам.НайтиПоЗначению(МПЗ.ГруппаПоЗакупкам) <> Неопределено Тогда	
				Возврат;
				КонецЕсли; 
			Иначе	
				Если СписокГруппПоЗакупкам.НайтиПоЗначению(МПЗ.ГруппаПоЗакупкам) = Неопределено Тогда	
				Возврат;
				КонецЕсли; 		
			КонецЕсли; 	
		КонецЕсли; 
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоговорныеПозицииСрезПоследних.Количество,
	|	ДоговорныеПозицииСрезПоследних.ОстатокПоДоговору,
	|	ДоговорныеПозицииСрезПоследних.ДоговорнаяПозиция.Владелец.Владелец КАК Поставщик
	|ИЗ
	|	РегистрСведений.ДоговорныеПозиции.СрезПоследних КАК ДоговорныеПозицииСрезПоследних
	|ГДЕ
	|	ДоговорныеПозицииСрезПоследних.ДоговорнаяПозиция.МПЗ = &МПЗ";
	Если Не Договор.Пустая() Тогда
	Запрос.Текст = Запрос.Текст + " И ДоговорныеПозицииСрезПоследних.ДоговорнаяПозиция.Владелец = &Договор"; 
	Запрос.УстановитьПараметр("Договор", Договор);
	ИначеЕсли Не Поставщик.Пустая() Тогда
	Запрос.Текст = Запрос.Текст + " И ДоговорныеПозицииСрезПоследних.ДоговорнаяПозиция.Владелец.Владелец = &Поставщик"; 
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	КонецЕсли; 
Запрос.УстановитьПараметр("МПЗ", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если (Не Поставщик.Пустая())или(Не Договор.Пустая()) Тогда
		Если ВыборкаДетальныеЗаписи.Количество() = 0 Тогда
		Возврат;
		КонецЕсли; 
	КонецЕсли; 
ТЧ = ТаблицаМПЗ.Добавить();
ТЧ.МПЗ = МПЗ;
ТЧ.ГруппаМПЗ = МПЗ.Родитель;
ТЧ.ГруппаПоЗакупкам = МПЗ.ГруппаПоЗакупкам;	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ.КоличествоПоДоговору = ТЧ.КоличествоПоДоговору + ВыборкаДетальныеЗаписи.Количество;
	ТЧ.ОстатокПоДоговору = ТЧ.ОстатокПоДоговору + ВыборкаДетальныеЗаписи.ОстатокПоДоговору;
	КонецЦикла;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	АналогиНормРасходов.Ссылка КАК Ссылка,
	|	АналогиНормРасходов.ВидЭлемента КАК ВидЭлемента,
	|	АналогиНормРасходов.Элемент КАК Элемент
	|ИЗ
	|	Справочник.АналогиНормРасходов КАК АналогиНормРасходов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НормыРасходов.СрезПоследних(&НаДату, ) КАК НормыРасходовСрезПоследних
	|		ПО АналогиНормРасходов.Владелец = НормыРасходовСрезПоследних.НормаРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыМПЗ.СрезПоследних(&НаДату, ) КАК СтатусыМПЗСрезПоследних
	|		ПО АналогиНормРасходов.Владелец.Владелец = СтатусыМПЗСрезПоследних.МПЗ
	|ГДЕ
	|	АналогиНормРасходов.Владелец.Элемент = &Элемент
	|	И НормыРасходовСрезПоследних.Норма > 0     
	|	И АналогиНормРасходов.ПометкаУдаления = ЛОЖЬ
	|	И СтатусыМПЗСрезПоследних.Статус <> &Статус";
Запрос.УстановитьПараметр("Элемент", МПЗ);
Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыСпецификаций.Запрещённая);
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	НормыАНР = ОбщегоНазначенияПовтИсп.АналогиНормРасходов_ПолучитьПоследнее(ВыборкаДетальныеЗаписи.Ссылка,ТекущаяДата());
		Если НормыАНР.Норма > 0 Тогда                            
			Если ВыборкаДетальныеЗаписи.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Набор Тогда					
			СписокАналогов = Новый СписокЗначений;                               

			ПолучитьАналогиНабора(ВыборкаДетальныеЗаписи.Элемент,СписокАналогов);
				Для каждого Аналог Из СписокАналогов Цикл 
					Если ТаблицаАналоговМПЗ.НайтиСтроки(Новый Структура("МПЗ,АналогМПЗ",МПЗ,Аналог.Значение)).Количество() = 0 Тогда	
					ТЧ = ТаблицаАналоговМПЗ.Добавить();
					ТЧ.МПЗ = МПЗ;
					ТЧ.АналогМПЗ = Аналог.Значение;
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли ВыборкаДетальныеЗаписи.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Материал Тогда
				Если ТаблицаАналоговМПЗ.НайтиСтроки(Новый Структура("МПЗ,АналогМПЗ",МПЗ,ВыборкаДетальныеЗаписи.Элемент)).Количество() = 0 Тогда	
				ТЧ = ТаблицаАналоговМПЗ.Добавить();
				ТЧ.МПЗ = МПЗ;
				ТЧ.АналогМПЗ = ВыборкаДетальныеЗаписи.Элемент;
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
		Для каждого ТЧ Из МПЗ.Аналоги Цикл 
			Если ПолучитьСтатус(ТЧ.Аналог) <> Перечисления.СтатусыМПЗ.Запрещённая Тогда
				Если ТаблицаАналоговМПЗ.НайтиСтроки(Новый Структура("МПЗ,АналогМПЗ",МПЗ,ТЧ.Аналог)).Количество() = 0 Тогда	
				ТЧ_ТАМ = ТаблицаАналоговМПЗ.Добавить();
				ТЧ_ТАМ.МПЗ = МПЗ;
				ТЧ_ТАМ.АналогМПЗ = ТЧ.Аналог;					
				КонецЕсли;
			КонецЕсли;
		КонецЦикла; 	
КонецПроцедуры

&НаСервере
Процедура СоздатьСписокМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ)
Запрос = Новый Запрос;

	Если СписокГруппМПЗ.Количество() > 0 Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Материалы.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Материалы КАК Материалы
		|ГДЕ
		|	Материалы.ПометкаУдаления = ЛОЖЬ
		|	И Материалы.Ссылка В ИЕРАРХИИ(&СписокМПЗ)
		|	И Материалы.ЭтоГруппа = ЛОЖЬ";
	Запрос.УстановитьПараметр("СписокМПЗ", СписокГруппМПЗ);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДобавитьМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;	
	Иначе	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорныеПозиции.МПЗ
		|ИЗ
		|	Справочник.ДоговорныеПозиции КАК ДоговорныеПозиции
		|ГДЕ
		|	ДоговорныеПозиции.Владелец = &Владелец";
	Запрос.УстановитьПараметр("Владелец", Договор);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДобавитьМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,ВыборкаДетальныеЗаписи.МПЗ);
		КонецЦикла; 
	КонецЕсли;
ТаблицаМПЗ.Сортировать("ГруппаМПЗ,ГруппаПоЗакупкам,МПЗ");
ТаблицаАналоговМПЗ.Сортировать("МПЗ,АналогМПЗ");
	Для каждого ТЧ Из ТаблицаМПЗ Цикл	
	СписокМПЗ.Добавить(ТЧ.МПЗ);
	КонецЦикла; 
		Для каждого ТЧ Из ТаблицаАналоговМПЗ Цикл
			Если СписокМПЗ.НайтиПоЗначению(ТЧ.АналогМПЗ) = Неопределено Тогда
			СписокМПЗ.Добавить(ТЧ.АналогМПЗ);			
			КонецЕсли; 
		КонецЦикла;
СписокМПЗ.СортироватьПоЗначению();
КонецПроцедуры

&НаСервере
Процедура ПодсчётРасходаПоВсемСкладам(ТаблицаРасходаМПЗ)
ТаблицаРасходаДокументы.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОбороты.МПЗ КАК МПЗ,
	|	МестаХраненияОбороты.Регистратор,
	|	МестаХраненияОбороты.КоличествоРасход
	|ИЗ
	|	РегистрНакопления.МестаХранения.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК МестаХраненияОбороты
	|ГДЕ
	|	МестаХраненияОбороты.МПЗ В(&СписокМПЗ)
	|ИТОГИ ПО
	|	МПЗ";
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Отчет.РасходЗаПериод.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Отчет.РасходЗаПериод.ДатаОкончания));
Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМПЗ.Следующий() Цикл
	ТЧ = ТаблицаРасходаМПЗ.Добавить();
	ТЧ.МПЗ = ВыборкаМПЗ.МПЗ;
	ВыборкаДетальныеЗаписи = ВыборкаМПЗ.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ТипЗнч(ВыборкаДетальныеЗаписи.Регистратор) = Тип("ДокументСсылка.ПередачаВПроизводство") Тогда	
			ТЧ.КоличествоРасход = ТЧ.КоличествоРасход + ВыборкаДетальныеЗаписи.КоличествоРасход;
			ТЧ_Док = ТаблицаРасходаДокументы.Добавить();
			ТЧ_Док.МПЗ = ВыборкаМПЗ.МПЗ;
			ТЧ_Док.Документ = ВыборкаДетальныеЗаписи.Регистратор;
			ТЧ_Док.Количество = ВыборкаДетальныеЗаписи.КоличествоРасход;
			ИначеЕсли ТипЗнч(ВыборкаДетальныеЗаписи.Регистратор) = Тип("ДокументСсылка.СписаниеМПЗПрочее") Тогда
				Если ВыборкаДетальныеЗаписи.Регистратор.Статья.ПринадлежитЭлементу(ГруппаСтатейСписанияНаИнвентаризацию) Тогда
				ТЧ.КоличествоСписание = ТЧ.КоличествоСписание + ВыборкаДетальныеЗаписи.КоличествоРасход;
				ТЧ_Док = ТаблицаРасходаДокументы.Добавить();
				ТЧ_Док.МПЗ = ВыборкаМПЗ.МПЗ;				
				ТЧ_Док.Документ = ВыборкаДетальныеЗаписи.Регистратор;
				ТЧ_Док.Количество = ВыборкаДетальныеЗаписи.КоличествоРасход;
				Иначе
					Если ВыборкаДетальныеЗаписи.Регистратор.Статья = СтатьяСписанияНаРеализацию Тогда
					ТЧ.КоличествоРеализация = ТЧ.КоличествоРеализация + ВыборкаДетальныеЗаписи.КоличествоРасход;
					ТЧ_Док = ТаблицаРасходаДокументы.Добавить();
					ТЧ_Док.МПЗ = ВыборкаМПЗ.МПЗ;
					ТЧ_Док.Документ = ВыборкаДетальныеЗаписи.Регистратор;
					ТЧ_Док.СписаниеНаРеализацию = Истина;
					ТЧ_Док.Количество = ВыборкаДетальныеЗаписи.КоличествоРасход;
					Иначе	
					ТЧ.КоличествоСписание = ТЧ.КоличествоСписание + ВыборкаДетальныеЗаписи.КоличествоРасход;
					ТЧ_Док = ТаблицаРасходаДокументы.Добавить();
					ТЧ_Док.МПЗ = ВыборкаМПЗ.МПЗ;
					ТЧ_Док.Документ = ВыборкаДетальныеЗаписи.Регистратор;
					ТЧ_Док.Количество = ВыборкаДетальныеЗаписи.КоличествоРасход;
					КонецЕсли; 
				КонецЕсли; 	
			ИначеЕсли ТипЗнч(ВыборкаДетальныеЗаписи.Регистратор) = Тип("ДокументСсылка.Реализация") Тогда	
			ТЧ.КоличествоРеализация = ТЧ.КоличествоРеализация + ВыборкаДетальныеЗаписи.КоличествоРасход;
			ТЧ_Док = ТаблицаРасходаДокументы.Добавить();
			ТЧ_Док.МПЗ = ВыборкаМПЗ.МПЗ;
			ТЧ_Док.Документ = ВыборкаДетальныеЗаписи.Регистратор;
			ТЧ_Док.Количество = ВыборкаДетальныеЗаписи.КоличествоРасход;
			КонецЕсли; 	
		КонецЦикла;	
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПодсчётОстатковПоВыбраннымСкладам(ТаблицаРасходаМПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОстатки.МПЗ,
	|	МестаХраненияОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.МестаХранения.Остатки(&НаДату, ) КАК МестаХраненияОстатки
	|ГДЕ
	|	МестаХраненияОстатки.МестоХранения В ИЕРАРХИИ(&СписокМестХранения)
	|	И МестаХраненияОстатки.МПЗ В(&СписокМПЗ)";
Запрос.УстановитьПараметр("НаДату", КонецДня(Отчет.ОстаткиНаДату));
Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения);
Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.МПЗ)); 
		Если Выборка.Количество() = 0 Тогда			
		ТЧ = ТаблицаРасходаМПЗ.Добавить();
		ТЧ.МПЗ = ВыборкаДетальныеЗаписи.МПЗ;
		ТЧ.КоличествоОстаток = ВыборкаДетальныеЗаписи.КоличествоОстаток;
		Иначе
		Выборка[0].КоличествоОстаток = Выборка[0].КоличествоОстаток + ВыборкаДетальныеЗаписи.КоличествоОстаток;
		КонецЕсли; 	
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура РаскрытьНаМПЗВсюСпецификацию(ТаблицаРасходаМПЗ,ЭтапСпецификации,КолУзла)
	Если оптСоотРезультатов.Получить(ЭтапСпецификации) = Неопределено Тогда 
	Запрос = оптЗапросНорм;
	Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
	РезультатЗапроса = Запрос.Выполнить();
	оптСоотРезультатов.Вставить(ЭтапСпецификации, РезультатЗапроса);
	Иначе
	РезультатЗапроса = оптСоотРезультатов[ЭтапСпецификации];
	КонецЕсли;
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Материалы")Тогда
		РаскрытьНаМПЗВсюСпецификацию(ТаблицаРасходаМПЗ,ВыборкаНР.Элемент,ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла);
			Если СписокМПЗ.НайтиПоЗначению(ВыборкаНР.Элемент) = Неопределено Тогда	
			Продолжить;				
			КонецЕсли; 
		Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаНР.Элемент)); 
			Если Выборка.Количество() = 0 Тогда			
			ТЧ = ТаблицаРасходаМПЗ.Добавить();
			ТЧ.МПЗ = ВыборкаНР.Элемент;
			ТЧ.КоличествоРК = ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла;
			Иначе
			Выборка[0].КоличествоРК = Выборка[0].КоличествоРК + ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла;
			КонецЕсли;					
		ИначеЕсли ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Номенклатура")Тогда
		РаскрытьНаМПЗВсюСпецификацию(ТаблицаРасходаМПЗ,ВыборкаНР.Элемент,ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла);				
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПодсчётРезервКомплектов(ТаблицаРасходаМПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПерспективныеПланы.МПЗ,
	|	ПерспективныеПланы.РезКм
	|ИЗ
	|	РегистрСведений.ПерспективныеПланы КАК ПерспективныеПланы
	|ГДЕ
	|	ПерспективныеПланы.Период = &НаДату
	|	И ПерспективныеПланы.РезКм > 0";
Запрос.УстановитьПараметр("НаДату", НачалоМесяца(ТекущаяДата()));
	Если СписокГруппНоменклатуры.Количество()> 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ПерспективныеПланы.МПЗ В ИЕРАРХИИ(&СписокГруппНоменклатуры)";
	Запрос.УстановитьПараметр("СписокГруппНоменклатуры", СписокГруппНоменклатуры);
	КонецЕсли; 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	РаскрытьНаМПЗВсюСпецификацию(ТаблицаРасходаМПЗ,ВыборкаДетальныеЗаписи.МПЗ,ВыборкаДетальныеЗаписи.РезКм);
	КонецЦикла; 

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПерспективныеПланы.МПЗ КАК МПЗ,
	|	ПерспективныеПланы.РезКм КАК РезКм
	|ИЗ
	|	РегистрСведений.ПерспективныеПланы КАК ПерспективныеПланы
	|ГДЕ
	|	ПерспективныеПланы.Период = &НаДату
	|	И ПерспективныеПланы.РезКм > 0
	|	И ПерспективныеПланы.МПЗ В(&СписокМПЗ)";
Запрос.УстановитьПараметр("НаДату", НачалоМесяца(ТекущаяДата())); 
Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ); 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.МПЗ)); 
		Если Выборка.Количество() = 0 Тогда			
		ТЧ = ТаблицаРасходаМПЗ.Добавить();
		ТЧ.МПЗ = ВыборкаДетальныеЗаписи.МПЗ;
		ТЧ.КоличествоРК = ВыборкаДетальныеЗаписи.РезКм;
		Иначе
		Выборка[0].КоличествоРК = Выборка[0].КоличествоРК + ВыборкаДетальныеЗаписи.РезКм;
		КонецЕсли;	
	КонецЦикла;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	КрупныеЗаказы.Продукция КАК Продукция,
	|	КрупныеЗаказы.Количество КАК Количество
	|ИЗ
	|	РегистрСведений.КрупныеЗаказы КАК КрупныеЗаказы
	|ГДЕ
	|	КрупныеЗаказы.Обработан = ЛОЖЬ
	|	И КрупныеЗаказы.Продукция В(&СписокМПЗ)
	|	И КрупныеЗаказы.ДатаРезерва <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ); 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.Продукция)); 
		Если Выборка.Количество() = 0 Тогда			
		ТЧ = ТаблицаРасходаМПЗ.Добавить();
		ТЧ.МПЗ = ВыборкаДетальныеЗаписи.Продукция;
		ТЧ.КоличествоРК = ВыборкаДетальныеЗаписи.Количество;
		Иначе
		Выборка[0].КоличествоРК = Выборка[0].КоличествоРК + ВыборкаДетальныеЗаписи.Количество;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура РаскрытьНаМПЗ(ТаблицаРасходаМПЗ,Линейка,Номенклатура,ЭтапСпецификации,КолУзла)
	Если оптЗапросНорм = Неопределено Тогда
	оптЗапросНорм = ОбщийМодульВызовСервера.ПолучитьЗапросНормРасходовПоВладельцу_Н_М(ТекущаяДата(),СписокГруппМПЗ,НеПринадлежатВыбраннымГруппам);
	КонецЕсли;
		Если оптСоотРезультатов = Неопределено Тогда
		оптСоотРезультатов = Новый Соответствие;
		КонецЕсли;
			Если оптСоотРезультатов.Получить(ЭтапСпецификации) = Неопределено Тогда 
			Запрос = оптЗапросНорм;
			Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
			РезультатЗапроса = Запрос.Выполнить();
			оптСоотРезультатов.Вставить(ЭтапСпецификации, РезультатЗапроса);
			Иначе
			РезультатЗапроса = оптСоотРезультатов[ЭтапСпецификации];
			КонецЕсли;
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл
	Количество = ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(ВыборкаНР.Норма,ВыборкаНР.ЭлементОЕИ)*КолУзла;
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Материалы")Тогда 
		РаскрытьНаМПЗ(ТаблицаРасходаМПЗ,Линейка,Номенклатура,ВыборкаНР.Элемент,Количество);
			Если СписокМПЗ.НайтиПоЗначению(ВыборкаНР.Элемент) = Неопределено Тогда	
			Продолжить;				
			КонецЕсли;
		Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаНР.Элемент));
			Если Выборка.Количество() = 0 Тогда			
			ТЧ = ТаблицаРасходаМПЗ.Добавить();
			ТЧ.МПЗ = ВыборкаНР.Элемент;
			ТЧ.КоличествоОжидаемыйРасход = Количество;
			ТЧ_Лин = ТаблицаРасходаПоЛинейкам.Добавить();
			ТЧ_Лин.МПЗ = ВыборкаНР.Элемент;
			ТЧ_Лин.Линейка = Линейка;
			ТЧ_Лин.Количество = Количество;	
			Иначе
			ВыборкаЛин = ТаблицаРасходаПоЛинейкам.НайтиСтроки(Новый Структура("МПЗ,Линейка",ВыборкаНР.Элемент,Линейка));
				Если ВыборкаЛин.Количество() = 0 Тогда
				ТЧ_Лин = ТаблицаРасходаПоЛинейкам.Добавить();
				ТЧ_Лин.МПЗ = ВыборкаНР.Элемент;
				ТЧ_Лин.Линейка = Линейка;
				ТЧ_Лин.Количество = Количество;					
				Иначе	
				ВыборкаЛин[0].Количество = ВыборкаЛин[0].Количество + Количество;
				КонецЕсли; 
			Выборка[0].КоличествоОжидаемыйРасход = Выборка[0].КоличествоОжидаемыйРасход + Количество;
			КонецЕсли;					
		Иначе 
			Если ВыборкаНР.Элемент.ПереходНаРедизайн Тогда
			Результат = ОбщийМодульРаботаСРегистрами.ПолучитьПФРедизайна(Номенклатура,ВыборкаНР.Элемент);
				Если Результат <> Неопределено Тогда
				РаскрытьНаМПЗ(ТаблицаРасходаМПЗ,Линейка,Номенклатура,Результат.ЭлементНовый,Количество);
				Продолжить;
				КонецЕсли;	
			КонецЕсли;
		РаскрытьНаМПЗ(ТаблицаРасходаМПЗ,Линейка,Номенклатура,ВыборкаНР.Элемент,Количество);
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПодсчётОжидаемогоРасхода(ТаблицаРасходаМПЗ)
ТаблицаПродукции = ОбщийМодульВызовСервера.ПолучитьТаблицуПриборовОжидаемогоРасхода(СписокПодразделений,Ложь,Истина);
	Для каждого ТЧ Из ТаблицаПродукции Цикл 
	РаскрытьНаМПЗ(ТаблицаРасходаМПЗ,ТЧ.Линейка,ТЧ.Продукция,ТЧ.Продукция,ТЧ.Количество);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьГербер(МПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИзготовлениеПечатныхПлат.ФайлИзготовления
	|ИЗ
	|	РегистрСведений.ИзготовлениеПечатныхПлат КАК ИзготовлениеПечатныхПлат
	|ГДЕ
	|	ИзготовлениеПечатныхПлат.МПЗ = &МПЗ
	|	И ИзготовлениеПечатныхПлат.Действующий = ИСТИНА
	|	И ИзготовлениеПечатныхПлат.ФайлИзготовления.ВидДокумента = &ВидДокумента";
Запрос.УстановитьПараметр("ВидДокумента", Перечисления.ВидыДокументов.Гербер);
Запрос.УстановитьПараметр("МПЗ", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(СокрЛП(ВыборкаДетальныеЗаписи.ФайлИзготовления.Наименование));
	КонецЦикла;
Возврат("");
КонецФункции

&НаСервере
Функция ПолучитьКоличествоОстатокАналогов(ТаблицаАналоговМПЗ,ТаблицаРасходаМПЗ,МПЗ)
КоличествоОстаток = 0;
ВыборкаАналогиМПЗ = ТаблицаАналоговМПЗ.НайтиСтроки(Новый Структура("МПЗ",МПЗ));
	Для к = 0 по ВыборкаАналогиМПЗ.Количество()-1 Цикл
		Если ВыборкаАналогиМПЗ[к].АналогМПЗ.ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.ПустаяСсылка() Тогда	
		Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ", ВыборкаАналогиМПЗ[к].АналогМПЗ));
			Если Выборка.Количество() > 0 Тогда
			КоличествоОстаток = КоличествоОстаток + (Выборка[0].КоличествоОстаток - Выборка[0].КоличествоРК);
			КонецЕсли;		
		КонецЕсли;  
	КонецЦикла;
Возврат(КоличествоОстаток);
КонецФункции

&НаСервере
Функция ПолучитьКонтрагентаВПоследнемЗаказеПоставщику(МПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗаказыПоставщикамОбороты.Контрагент КАК Контрагент,
	|	ЗаказыПоставщикамОбороты.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Обороты(, , Регистратор, ) КАК ЗаказыПоставщикамОбороты
	|ГДЕ
	|	ЗаказыПоставщикамОбороты.МПЗ = &МПЗ
	|	И ЗаказыПоставщикамОбороты.КоличествоПриход > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказыПоставщикамОбороты.ЗаказПоставщику.Дата УБЫВ";
Запрос.УстановитьПараметр("МПЗ", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.Контрагент);
	КонецЦикла;
Возврат(Справочники.Контрагенты.ПустаяСсылка());
КонецФункции 

&НаСервере
Функция СформироватьНаСервере()
ТабДок.Очистить();
ТаблицаРасходаПоЛинейкам.Очистить();
ТаблицаРасходаДокументы.Очистить();
СписокМПЗ.Очистить();

ТаблицаМПЗ = Новый ТаблицаЗначений;

ТаблицаМПЗ.Колонки.Добавить("МПЗ");
ТаблицаМПЗ.Индексы.Добавить("МПЗ");
ТаблицаМПЗ.Колонки.Добавить("ГруппаМПЗ");
ТаблицаМПЗ.Колонки.Добавить("ГруппаПоЗакупкам");
ТаблицаМПЗ.Колонки.Добавить("КоличествоПоДоговору", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3)));
ТаблицаМПЗ.Колонки.Добавить("ОстатокПоДоговору", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3)));

ТаблицаАналоговМПЗ = Новый ТаблицаЗначений;

ТаблицаАналоговМПЗ.Колонки.Добавить("МПЗ");
ТаблицаАналоговМПЗ.Индексы.Добавить("МПЗ");
ТаблицаАналоговМПЗ.Колонки.Добавить("АналогМПЗ");

ТаблицаРасходаМПЗ = Новый ТаблицаЗначений;

ТаблицаРасходаМПЗ.Колонки.Добавить("МПЗ");
ТаблицаРасходаМПЗ.Индексы.Добавить("МПЗ");
ТаблицаРасходаМПЗ.Колонки.Добавить("КоличествоОжидаемыйРасход", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3))); 
ТаблицаРасходаМПЗ.Колонки.Добавить("КоличествоРасход", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3)));
ТаблицаРасходаМПЗ.Колонки.Добавить("КоличествоСписание", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3)));
ТаблицаРасходаМПЗ.Колонки.Добавить("КоличествоРеализация", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3)));
ТаблицаРасходаМПЗ.Колонки.Добавить("КоличествоОстаток", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3)));
ТаблицаРасходаМПЗ.Колонки.Добавить("КоличествоРК", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3)));

СоздатьСписокМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ);
ПодсчётРасходаПоВсемСкладам(ТаблицаРасходаМПЗ);
ПодсчётОжидаемогоРасхода(ТаблицаРасходаМПЗ);
ПодсчётОстатковПоВыбраннымСкладам(ТаблицаРасходаМПЗ);
	Если ПолучитьРезервКомплектов Тогда
	ПодсчётРезервКомплектов(ТаблицаРасходаМПЗ);
	КонецЕсли;
		Если СоздатьЗаявкуНаЗакупку Тогда
		Заявка = Документы.ЗаявкаНаЗакупку.СоздатьДокумент();
		Заявка.Автор = ПараметрыСеанса.Пользователь;
		Заявка.Дата = ТекущаяДата();
		Заявка.Подразделение = СписокПодразделений[0].Значение;
		Заявка.УстановитьНовыйНомер(ПрисвоитьПрефикс(Заявка.Подразделение));
		Заявка.Комментарий = СписокГруппМПЗ;
		КонецЕсли; 

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблГруппа = Макет.ПолучитьОбласть("Группа");
ОблМПЗ = Макет.ПолучитьОбласть("МПЗ");
ОблЗаказ = Макет.ПолучитьОбласть("Заказ");
ОблАналог = Макет.ПолучитьОбласть("Аналог");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.ДатаНач = Формат(Отчет.РасходЗаПериод.ДатаНачала,"ДФ=dd.MM.yyyy");
ОблШапка.Параметры.ДатаКон = Формат(Отчет.РасходЗаПериод.ДатаОкончания,"ДФ=dd.MM.yyyy");
ОблШапка.Параметры.НаДату = Формат(Отчет.ОстаткиНаДату,"ДФ=dd.MM.yyyy");
ОблШапка.Параметры.МестаХранения = СписокМестХранения;
	Если СписокГруппПоЗакупкам.Количество() > 0 Тогда
		Если НеПринадлежатВыбраннымГруппам Тогда		
		ОблШапка.Параметры.ПринадлежностьГруппе = "Не принадлежат группам по закупкам "+СписокГруппПоЗакупкам;
		Иначе
		ОблШапка.Параметры.ПринадлежностьГруппе = "Принадлежат группам по закупкам "+СписокГруппПоЗакупкам;
		КонецЕсли; 
	Иначе
	ОблШапка.Параметры.ПринадлежностьГруппе = "Принадлежат любым группам по закупкам";	
	КонецЕсли;  
ОблШапка.Параметры.Поставщик = Поставщик;
ОблШапка.Параметры.Договор = Договор;
ОблШапка.Параметры.ДатаВывода = Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
ТабДок.Вывести(ОблШапка);

КолДней = (Отчет.РасходЗаПериод.ДатаОкончания-Отчет.РасходЗаПериод.ДатаНачала)/86400;

// Запрос по заказам поставщикам
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыПоставщикамОстатки.МПЗ,
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику,
	|	ЗаказыПоставщикамОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&НаДату, ) КАК ЗаказыПоставщикамОстатки
	|ГДЕ
	|	ЗаказыПоставщикамОстатки.МПЗ В(&СписокМПЗ)";
	Если СписокПодразделенийЗаказов.Количество() > 0 Тогда
		Если ИсключитьПодразделения Тогда
		Запрос.Текст = Запрос.Текст + " И НЕ ЗаказыПоставщикамОстатки.ЗаказПоставщику.Подразделение В(&СписокПодразделений)";
		Иначе	
		Запрос.Текст = Запрос.Текст + " И ЗаказыПоставщикамОстатки.ЗаказПоставщику.Подразделение В(&СписокПодразделений)";		
		КонецЕсли;	
	Запрос.УстановитьПараметр("СписокПодразделений", СписокПодразделенийЗаказов);
	КонецЕсли; 
Запрос.УстановитьПараметр("НаДату", КонецДня(Отчет.ОстаткиНаДату));
Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);
	Если Не Поставщик.Пустая() Тогда
	Запрос.Текст = Запрос.Текст + " И ЗаказыПоставщикамОстатки.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("Контрагент", Поставщик);	
	КонецЕсли;
Запрос.Текст = Запрос.Текст + " ИТОГИ СУММА(КоличествоОстаток) ПО МПЗ,ЗаказПоставщику";
РезультатЗапроса = Запрос.Выполнить();
ВыборкаЗаказыПоставщикамМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

//Формирование таблицы отчёта
ТекГруппаМПЗ = Неопределено;
	Для каждого ТЧ Из ТаблицаМПЗ Цикл
		Если ТекГруппаМПЗ <> ТЧ.ГруппаМПЗ Тогда
		ТекГруппаМПЗ = ТЧ.ГруппаМПЗ;
		ОблГруппа.Параметры.ГруппаМПЗ = ТекГруппаМПЗ;
		ТабДок.Вывести(ОблГруппа);
		КонецЕсли;
	ОблМПЗ.Параметры.Статус = ПолучитьСтатус(ТЧ.МПЗ);
	ОблМПЗ.Параметры.Наименование = СокрЛП(ТЧ.МПЗ.Наименование); 
	ОблМПЗ.Параметры.МПЗ = ТЧ.МПЗ;
	ОблМПЗ.Параметры.PartNumber = СокрЛП(ТЧ.МПЗ.PartNumber);
	ОблМПЗ.Параметры.ГруппаПоЗакупкам = ТЧ.МПЗ.ГруппаПоЗакупкам;
	ОблМПЗ.Параметры.ЕдиницаИзмерения = СокрЛП(ТЧ.МПЗ.ЕдиницаИзмерения.Наименование);
	ОблМПЗ.Параметры.МинОстаток = ТЧ.МПЗ.МинОстаток;
	ОблМПЗ.Параметры.КратностьУпаковки = ТЧ.МПЗ.КратностьУпаковки;
	ОблМПЗ.Параметры.СрокПоставки = ТЧ.МПЗ.СрокПоставки; 
	ОблМПЗ.Параметры.СтраховойЗапас = ТЧ.МПЗ.СтраховойЗапас;
	ОблМПЗ.Параметры.ТочкаЗаказа = ТЧ.МПЗ.ТочкаЗаказа;
	ПроцентКТочкеЗаказа = ТЧ.МПЗ.ТочкаЗаказа/100*ПроцентКТЗ;
	ОблМПЗ.Параметры.ПроцентКТочкеЗаказа = ПроцентКТочкеЗаказа;
	ОблМПЗ.Параметры.МаксимальныйЗапас = ТЧ.МПЗ.МаксимальныйЗапас;
	ОблМПЗ.Параметры.КоличествоКЗаказу = ТЧ.МПЗ.КоличествоКЗаказу;
	ОблМПЗ.Параметры.ОстатокПоДоговору = ТЧ.ОстатокПоДоговору;
	ОблМПЗ.Параметры.Гербер = ПолучитьГербер(ТЧ.МПЗ); 
	Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ТЧ.МПЗ));
		Если Выборка.Количество() > 0 Тогда
		ОблМПЗ.Параметры.КоличествоРасход = Выборка[0].КоличествоРасход;
		ОблМПЗ.Параметры.КоличествоСписание = Выборка[0].КоличествоСписание;
		ОблМПЗ.Параметры.КоличествоРеализация = Выборка[0].КоличествоРеализация;
		ОблМПЗ.Параметры.КоличествоОстаток = Выборка[0].КоличествоОстаток - Выборка[0].КоличествоРК;// - Выборка[0].КоличествоОжидаемыйРасход;
		ОблМПЗ.Параметры.КоличествоРК = Выборка[0].КоличествоРК;
		ОблМПЗ.Параметры.КоличествоОжидаемыйРасход = Выборка[0].КоличествоОжидаемыйРасход;
		Иначе	
		ОблМПЗ.Параметры.КоличествоРасход = 0;
		ОблМПЗ.Параметры.КоличествоСписание = 0;
		ОблМПЗ.Параметры.КоличествоРеализация = 0;
		ОблМПЗ.Параметры.КоличествоОстаток = 0;
		ОблМПЗ.Параметры.КоличествоРК = 0;
		ОблМПЗ.Параметры.КоличествоОжидаемыйРасход = 0;		
		КонецЕсли;
	Цены = РегистрыСведений.Цены.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("МПЗ",ТЧ.МПЗ));
	ОблМПЗ.Параметры.Цена = Формат(Цены.Цена,"ЧЦ=15; ЧДЦ=2; ЧРД=-");
	ВыборкаЗаказыПоставщикамМПЗ.Сбросить();
	ОблМПЗ.Параметры.Долг = 0;
		Пока ВыборкаЗаказыПоставщикамМПЗ.НайтиСледующий(Новый Структура("МПЗ",ТЧ.МПЗ)) Цикл
		ОблМПЗ.Параметры.Долг = ОблМПЗ.Параметры.Долг + ВыборкаЗаказыПоставщикамМПЗ.КоличествоОстаток; 
		КонецЦикла;
	Заказать = "-";
	КолОст = ОблМПЗ.Параметры.КоличествоОстаток+ПолучитьКоличествоОстатокАналогов(ТаблицаАналоговМПЗ,ТаблицаРасходаМПЗ,ТЧ.МПЗ);
		Если КолОст <= ОблМПЗ.Параметры.МаксимальныйЗапас Тогда
			Если (КолОст > (ОблМПЗ.Параметры.ТочкаЗаказа + ПроцентКТочкеЗаказа))и
				 (ОблМПЗ.Параметры.Долг = 0) Тогда	
			Заказать = ОблМПЗ.Параметры.КоличествоКЗаказу;
			ИначеЕсли (КолОст <= (ОблМПЗ.Параметры.ТочкаЗаказа + ПроцентКТочкеЗаказа))и
				 	  (КолОст > ОблМПЗ.Параметры.СтраховойЗапас)и
					  (ОблМПЗ.Параметры.Долг <= ОблМПЗ.Параметры.КоличествоКЗаказу) Тогда	
			Заказать = ОблМПЗ.Параметры.КоличествоКЗаказу;
			ИначеЕсли (КолОст <= ОблМПЗ.Параметры.СтраховойЗапас)и
				 	  (ОблМПЗ.Параметры.Долг < 2*ОблМПЗ.Параметры.КоличествоКЗаказу) Тогда	
			Заказать = ОблМПЗ.Параметры.КоличествоКЗаказу;
			КонецЕсли;	
		КонецЕсли;  
	ОблМПЗ.Параметры.Заказать = Заказать;
		Если ВыводитьПоследнегоПоставщика Тогда
			Если Заказать <> "-" Тогда
				Если Заказать > 0 Тогда
				ОблМПЗ.Параметры.Контрагент = ПолучитьКонтрагентаВПоследнемЗаказеПоставщику(ТЧ.МПЗ);
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли;    
	ТекОбл = ТабДок.Вывести(ОблМПЗ);
		Если ОблМПЗ.Параметры.КоличествоОстаток <= ОблМПЗ.Параметры.МаксимальныйЗапас Тогда
			Если (ОблМПЗ.Параметры.КоличествоОстаток > (ОблМПЗ.Параметры.ТочкаЗаказа + ПроцентКТочкеЗаказа)) Тогда	
			ТабДок.Область(ТекОбл.Верх, 16, ТекОбл.Низ, 16).ЦветФона = WebЦвета.Зеленый;
			ИначеЕсли (ОблМПЗ.Параметры.КоличествоОстаток <= (ОблМПЗ.Параметры.ТочкаЗаказа + ПроцентКТочкеЗаказа))и
				 	  (ОблМПЗ.Параметры.КоличествоОстаток > ОблМПЗ.Параметры.СтраховойЗапас) Тогда	
			ТабДок.Область(ТекОбл.Верх, 16, ТекОбл.Низ, 16).ЦветФона = WebЦвета.Желтый;
			ИначеЕсли (ОблМПЗ.Параметры.КоличествоОстаток <= ОблМПЗ.Параметры.СтраховойЗапас) Тогда	
			ТабДок.Область(ТекОбл.Верх, 16, ТекОбл.Низ, 16).ЦветФона = WebЦвета.Красный;
			КонецЕсли;	
		КонецЕсли; 		
			Если СоздатьЗаявкуНаЗакупку Тогда
				Если ОблМПЗ.Параметры.Заказать <> "-" Тогда
					Если ОблМПЗ.Параметры.Заказать > 0 Тогда
				    ТЧ_Заявка = Заявка.ТабличнаяЧасть.Добавить();
					ТЧ_Заявка.МПЗ = ТЧ.МПЗ;
					ТЧ_Заявка.Количество = ОблМПЗ.Параметры.Заказать;
					ТЧ_Заявка.ЕдиницаИзмерения = ПолучитьОсновнуюЕдиницуИзмеренияПоБазовой(ТЧ.МПЗ);
					КонецЕсли;
				КонецЕсли; 
			КонецЕсли;  
	ВыборкаЗаказыПоставщикамМПЗ.Сбросить();
		Если ВыборкаЗаказыПоставщикамМПЗ.НайтиСледующий(Новый Структура("МПЗ",ТЧ.МПЗ)) Тогда
		ВыборкаДетальныеЗаписи = ВыборкаЗаказыПоставщикамМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если ВыборкаДетальныеЗаписи.КоличествоОстаток > 0 Тогда
				ОблЗаказ.Параметры.Документ = ВыборкаДетальныеЗаписи.ЗаказПоставщику;
				ОблЗаказ.Параметры.ДатаИсполнения = Формат(ВыборкаДетальныеЗаписи.ЗаказПоставщику.ДатаИсполнения,"ДФ=dd.MM.yyyy"); 
				ОблЗаказ.Параметры.Долг = ВыборкаДетальныеЗаписи.КоличествоОстаток; 
	            ТабДок.Вывести(ОблЗаказ);				
				КонецЕсли; 				
		    КонецЦикла;
		КонецЕсли;
	//Аналоги МПЗ
	ВыборкаАналогиМПЗ = ТаблицаАналоговМПЗ.НайтиСтроки(Новый Структура("МПЗ",ТЧ.МПЗ));
		Для к = 0 по ВыборкаАналогиМПЗ.Количество()-1 Цикл
		АналогМПЗ = ВыборкаАналогиМПЗ[к].АналогМПЗ;
		ОблАналог.Параметры.Статус = ПолучитьСтатус(АналогМПЗ);
		ОблАналог.Параметры.Наименование = СокрЛП(АналогМПЗ.Наименование); 
		ОблАналог.Параметры.МПЗ = АналогМПЗ;
		ОблАналог.Параметры.PartNumber = СокрЛП(АналогМПЗ.PartNumber);
		ОблАналог.Параметры.ГруппаПоЗакупкам = АналогМПЗ.ГруппаПоЗакупкам;
		ОблАналог.Параметры.ЕдиницаИзмерения = СокрЛП(АналогМПЗ.ЕдиницаИзмерения.Наименование);
		ОблАналог.Параметры.МинОстаток = АналогМПЗ.МинОстаток;
		ОблАналог.Параметры.КратностьУпаковки = АналогМПЗ.КратностьУпаковки;
		ОблАналог.Параметры.СрокПоставки = АналогМПЗ.СрокПоставки; 
		ОблАналог.Параметры.СтраховойЗапас = АналогМПЗ.СтраховойЗапас;
		ОблАналог.Параметры.ТочкаЗаказа = АналогМПЗ.ТочкаЗаказа;
		ПроцентКТочкеЗаказа = АналогМПЗ.ТочкаЗаказа/100*ПроцентКТЗ;
		ОблАналог.Параметры.ПроцентКТочкеЗаказа = ПроцентКТочкеЗаказа;
		ОблАналог.Параметры.МаксимальныйЗапас = АналогМПЗ.МаксимальныйЗапас;
		ОблАналог.Параметры.КоличествоКЗаказу = АналогМПЗ.КоличествоКЗаказу;
		Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",АналогМПЗ));
			Если Выборка.Количество() > 0 Тогда
			ОблАналог.Параметры.КоличествоРасход = Выборка[0].КоличествоРасход;
			ОблАналог.Параметры.КоличествоСписание = Выборка[0].КоличествоСписание;
			ОблАналог.Параметры.КоличествоРеализация = Выборка[0].КоличествоРеализация;
			ОблАналог.Параметры.КоличествоОстаток = Выборка[0].КоличествоОстаток - Выборка[0].КоличествоРК;// - Выборка[0].КоличествоОжидаемыйРасход;
			ОблАналог.Параметры.КоличествоРК = Выборка[0].КоличествоРК;
			ОблАналог.Параметры.КоличествоОжидаемыйРасход = Выборка[0].КоличествоОжидаемыйРасход;
			Иначе	
			ОблАналог.Параметры.КоличествоРасход = 0;
			ОблАналог.Параметры.КоличествоСписание = 0;
			ОблАналог.Параметры.КоличествоРеализация = 0;
			ОблАналог.Параметры.КоличествоОстаток = 0;	
			ОблАналог.Параметры.КоличествоРК = 0;
			ОблАналог.Параметры.КоличествоОжидаемыйРасход = 0;	
			КонецЕсли;
		Цены = РегистрыСведений.Цены.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("МПЗ",АналогМПЗ));
		ОблАналог.Параметры.Цена = Цены.Цена;
		ВыборкаЗаказыПоставщикамМПЗ.Сбросить();
		ОблАналог.Параметры.Долг = 0;
			Пока ВыборкаЗаказыПоставщикамМПЗ.НайтиСледующий(Новый Структура("МПЗ",АналогМПЗ)) Цикл
			ОблАналог.Параметры.Долг = ОблАналог.Параметры.Долг + ВыборкаЗаказыПоставщикамМПЗ.КоличествоОстаток; 
			КонецЦикла;
		Заказать = "-";
			Если ОблАналог.Параметры.КоличествоОстаток <= ОблАналог.Параметры.МаксимальныйЗапас Тогда
				Если (ОблАналог.Параметры.КоличествоОстаток > (ОблАналог.Параметры.ТочкаЗаказа + ПроцентКТочкеЗаказа))и
					 (ОблАналог.Параметры.Долг = 0) Тогда	
				Заказать = ОблАналог.Параметры.КоличествоКЗаказу;
				ИначеЕсли (ОблАналог.Параметры.КоличествоОстаток <= (ОблАналог.Параметры.ТочкаЗаказа + ПроцентКТочкеЗаказа))и
					 	  (ОблАналог.Параметры.КоличествоОстаток > ОблАналог.Параметры.СтраховойЗапас)и
						  (ОблАналог.Параметры.Долг <= ОблАналог.Параметры.КоличествоКЗаказу) Тогда	
				Заказать = ОблАналог.Параметры.КоличествоКЗаказу;
				ИначеЕсли (ОблАналог.Параметры.КоличествоОстаток <= ОблАналог.Параметры.СтраховойЗапас)и
					 	  (ОблАналог.Параметры.Долг < 2*ОблАналог.Параметры.КоличествоКЗаказу) Тогда	
				Заказать = ОблАналог.Параметры.КоличествоКЗаказу;
				КонецЕсли;	
			КонецЕсли;
				Если ВыводитьПоследнегоПоставщика Тогда
					Если Заказать <> "-" Тогда
						Если Заказать > 0 Тогда
						ОблАналог.Параметры.Контрагент = ПолучитьКонтрагентаВПоследнемЗаказеПоставщику(АналогМПЗ);
						КонецЕсли;
					КонецЕсли;  
				КонецЕсли; 
		ОблАналог.Параметры.Заказать = Заказать;   
		ТекОбл = ТабДок.Вывести(ОблАналог);
			Если ОблАналог.Параметры.КоличествоОстаток <= ОблАналог.Параметры.МаксимальныйЗапас Тогда
				Если (ОблАналог.Параметры.КоличествоОстаток > (ОблАналог.Параметры.ТочкаЗаказа + ПроцентКТочкеЗаказа)) Тогда	
				ТабДок.Область(ТекОбл.Верх, 16, ТекОбл.Низ, 16).ЦветФона = WebЦвета.Зеленый;
				ИначеЕсли (ОблАналог.Параметры.КоличествоОстаток <= (ОблАналог.Параметры.ТочкаЗаказа + ПроцентКТочкеЗаказа))и
					 	  (ОблАналог.Параметры.КоличествоОстаток > ОблАналог.Параметры.СтраховойЗапас) Тогда	
				ТабДок.Область(ТекОбл.Верх, 16, ТекОбл.Низ, 16).ЦветФона = WebЦвета.Желтый;
				ИначеЕсли (ОблАналог.Параметры.КоличествоОстаток <= ОблАналог.Параметры.СтраховойЗапас) Тогда	
				ТабДок.Область(ТекОбл.Верх, 16, ТекОбл.Низ, 16).ЦветФона = WebЦвета.Красный;
				КонецЕсли;	
			КонецЕсли;
		ВыборкаЗаказыПоставщикамМПЗ.Сбросить();
			Если ВыборкаЗаказыПоставщикамМПЗ.НайтиСледующий(Новый Структура("МПЗ",АналогМПЗ)) Тогда
			ВыборкаДетальныеЗаписи = ВыборкаЗаказыПоставщикамМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Если ВыборкаДетальныеЗаписи.КоличествоОстаток > 0 Тогда
					ОблЗаказ.Параметры.Документ = ВыборкаДетальныеЗаписи.ЗаказПоставщику;
					ОблЗаказ.Параметры.ДатаИсполнения = Формат(ВыборкаДетальныеЗаписи.ЗаказПоставщику.ДатаИсполнения,"ДФ=dd.MM.yyyy"); 
					ОблЗаказ.Параметры.Долг = ВыборкаДетальныеЗаписи.КоличествоОстаток; 
	            	ТабДок.Вывести(ОблЗаказ);				
					КонецЕсли;
			    КонецЦикла;
			КонецЕсли;
		КонецЦикла; 
	КонецЦикла; 
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 6; 
ТабДок.ФиксацияСлева = 5;
	Если СоздатьЗаявкуНаЗакупку Тогда
		Если Заявка.ТабличнаяЧасть.Количество() > 0 Тогда
		Заявка.Записать(РежимЗаписиДокумента.Запись);
		Возврат(Заявка.Ссылка);		
		КонецЕсли;
	КонецЕсли;
Возврат(Неопределено); 
КонецФункции

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	Элементы.ВсеНастройки.Скрыть();
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах(); 
	Состояние("Обработка...",,"Создание таблицы отчёта...");
	Результат = СформироватьНаСервере();
		Если СоздатьЗаявкуНаЗакупку Тогда
			Если Результат <> Неопределено Тогда
			ОткрытьФорму("Документ.ЗаявкаНаЗакупку.ФормаОбъекта",Новый Структура("Ключ",Результат));
			КонецЕсли; 
		КонецЕсли;
	ОкончаниеЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Элементы.ВсеНастройки.ЗаголовокСвернутогоОтображения = "Сформирован за "+Окр((ОкончаниеЗамера - НачалоЗамера)/1000/60,1)+" мин."; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикПриИзменении(Элемент)
ПоставщикПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПоставщикПриИзмененииНаСервере()
Договор = Поставщик.ОсновнойДоговор;
КонецПроцедуры

&НаСервере
Функция ВывестиРасшифровкуПоДокументам(ВидДокумента,Расшифровка)
ТД = Новый ТабличныйДокумент;
ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("РасшифровкаПоДокументам");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблДокумент = Макет.ПолучитьОбласть("Документ");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.ДатаНач = Формат(Отчет.РасходЗаПериод.ДатаНачала,"ДФ=dd.MM.yyyy");
ОблШапка.Параметры.ДатаКон = Формат(Отчет.РасходЗаПериод.ДатаОкончания,"ДФ=dd.MM.yyyy");
ОблШапка.Параметры.МПЗ = Расшифровка;
	Если ВидДокумента = 1 Тогда
	ОблШапка.Параметры.ВидДокумента = "Передачи в производство";
	ИначеЕсли ВидДокумента = 2 Тогда
	ОблШапка.Параметры.ВидДокумента = "Списания МПЗ прочие";
	ИначеЕсли ВидДокумента = 3 Тогда
	ОблШапка.Параметры.ВидДокумента = "Списания на реализацию";
	КонецЕсли;
ТД.Вывести(ОблШапка);
КоличествоВсего = 0;
	Для каждого ТЧ Из ТаблицаРасходаДокументы Цикл	
		Если ТЧ.МПЗ = Расшифровка Тогда
			Если ВидДокумента = 1 Тогда	
				Если ТипЗнч(ТЧ.Документ) = Тип("ДокументСсылка.ПередачаВПроизводство") Тогда
				ОблДокумент.Параметры.Документ = ТЧ.Документ;
				ОблДокумент.Параметры.Количество = ТЧ.Количество;
				ОблДокумент.Параметры.ЕдиницаИзмерения = СокрЛП(Расшифровка.ЕдиницаИзмерения.Наименование);
				ТД.Вывести(ОблДокумент);
				КоличествоВсего = КоличествоВсего + ТЧ.Количество;
				КонецЕсли; 
			ИначеЕсли ВидДокумента = 2 Тогда	
				Если ТипЗнч(ТЧ.Документ) = Тип("ДокументСсылка.СписаниеМПЗПрочее") Тогда
					Если Не ТЧ.СписаниеНаРеализацию Тогда
					ОблДокумент.Параметры.Документ = ТЧ.Документ;
					ОблДокумент.Параметры.Количество = ТЧ.Количество;
					ОблДокумент.Параметры.ЕдиницаИзмерения = СокрЛП(Расшифровка.ЕдиницаИзмерения.Наименование);
					ТД.Вывести(ОблДокумент);
					КоличествоВсего = КоличествоВсего + ТЧ.Количество;					
					КонецЕсли; 
				КонецЕсли; 
			ИначеЕсли ВидДокумента = 3 Тогда	
				Если ТипЗнч(ТЧ.Документ) = Тип("ДокументСсылка.СписаниеМПЗПрочее") Тогда
					Если ТЧ.СписаниеНаРеализацию Тогда
					ОблДокумент.Параметры.Документ = ТЧ.Документ;
					ОблДокумент.Параметры.Количество = ТЧ.Количество;
					ОблДокумент.Параметры.ЕдиницаИзмерения = СокрЛП(Расшифровка.ЕдиницаИзмерения.Наименование);
					ТД.Вывести(ОблДокумент);
					КоличествоВсего = КоличествоВсего + ТЧ.Количество;					
					КонецЕсли; 
				ИначеЕсли ТипЗнч(ТЧ.Документ) = Тип("ДокументСсылка.Реализация") Тогда
				ОблДокумент.Параметры.Документ = ТЧ.Документ;
				ОблДокумент.Параметры.Количество = ТЧ.Количество;
				ОблДокумент.Параметры.ЕдиницаИзмерения = СокрЛП(Расшифровка.ЕдиницаИзмерения.Наименование);
				ТД.Вывести(ОблДокумент);
				КоличествоВсего = КоличествоВсего + ТЧ.Количество;
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
ОблКонец.Параметры.КоличествоВсего = КоличествоВсего;
ТД.Вывести(ОблКонец);
ТД.Защита = Истина;
ТД.ФиксацияСверху = 3; 
Возврат(ТД);
КонецФункции

&НаСервере
Функция ВывестиОжидаемыйРасходПоЛинейкам(Расшифровка)
ТД = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("ОжидаемыйРасходПоЛинейкам");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблЛинейка = Макет.ПолучитьОбласть("Линейка");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ТД.Вывести(ОблШапка);
КоличествоВсего = 0;
Выборка = ТаблицаРасходаПоЛинейкам.НайтиСтроки(Новый Структура("МПЗ",Расшифровка));
	Для к = 0 По Выборка.ВГраница() Цикл	
	ОблЛинейка.Параметры.Линейка = Выборка[к].Линейка;
	ОблЛинейка.Параметры.Количество = Выборка[к].Количество;
	ТД.Вывести(ОблЛинейка);
	КоличествоВсего = КоличествоВсего + Выборка[к].Количество;
	КонецЦикла;
ОблКонец.Параметры.КоличествоВсего = КоличествоВсего;
ТД.Вывести(ОблКонец);
ТД.Защита = Истина;
ТД.ФиксацияСверху = 3; 
Возврат(ТД);
КонецФункции

&НаСервере
Функция ВывестиРасходНаПроизводство(Расшифровка)
Запрос = Новый Запрос;
ТД = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("РасшифровкаПоРасходуНаПроизводство");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблМестоХранения = Макет.ПолучитьОбласть("МестоХранения");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.МПЗ = Расшифровка;
ТД.Вывести(ОблШапка);

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОбороты.МестоХранения КАК МестоХранения,
	|	МестаХраненияОбороты.КоличествоРасход КАК КоличествоРасход,
	|	МестаХраненияОбороты.Регистратор
	|ИЗ
	|	РегистрНакопления.МестаХранения.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК МестаХраненияОбороты
	|ГДЕ
	|	МестаХраненияОбороты.МПЗ = &МПЗ
	|
	|УПОРЯДОЧИТЬ ПО
	|	МестоХранения
	|ИТОГИ
	|	СУММА(КоличествоРасход)
	|ПО
	|	МестоХранения";
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Отчет.РасходЗаПериод.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Отчет.РасходЗаПериод.ДатаОкончания));
Запрос.УстановитьПараметр("МПЗ", Расшифровка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМестоХранения = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
КоличествоВсего = 0;
	Пока ВыборкаМестоХранения.Следующий() Цикл
	КоличествоМХ = 0;
	ВыборкаДетальныеЗаписи = ВыборкаМестоХранения.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ТипЗнч(ВыборкаДетальныеЗаписи.Регистратор) = Тип("ДокументСсылка.ПередачаВПроизводство") Тогда	
			КоличествоМХ = КоличествоМХ + ВыборкаДетальныеЗаписи.КоличествоРасход;
			КоличествоВсего = КоличествоВсего + ВыборкаДетальныеЗаписи.КоличествоРасход;
			КонецЕсли;	
		КонецЦикла;
			Если КоличествоМХ > 0 Тогда
			ОблМестоХранения.Параметры.МестоХранения = ВыборкаМестоХранения.МестоХранения;
			ОблМестоХранения.Параметры.Количество = КоличествоМХ;
			ОблМестоХранения.Параметры.ЕдиницаИзмерения = СокрЛП(Расшифровка.ЕдиницаИзмерения.Наименование);
			ТД.Вывести(ОблМестоХранения);
			КонецЕсли; 
	КонецЦикла;	
ОблКонец.Параметры.КоличествоВсего = КоличествоВсего;
ТД.Вывести(ОблКонец);
ТД.Защита = Истина;
ТД.ФиксацияСверху = 3; 
Возврат(ТД);
КонецФункции

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
ИмяКолонки = СокрЛП(Сред(Элемент.ТекущаяОбласть.Имя,Найти(Элемент.ТекущаяОбласть.Имя,"C")));
НомерКолонки = Число(Сред(ИмяКолонки,2));
	Если НомерКолонки = 11 Тогда
	СтандартнаяОбработка = Ложь;
	ТД = ВывестиРасходНаПроизводство(Расшифровка);
	ТД.Показать("Расход на производство по местам хранения");
	ИначеЕсли НомерКолонки = 12 Тогда
	СтандартнаяОбработка = Ложь;
	ТД = ВывестиРасшифровкуПоДокументам(2,Расшифровка);
	ТД.Показать("Расшифровка по списаниям");
	ИначеЕсли НомерКолонки = 13 Тогда
	СтандартнаяОбработка = Ложь;
	ТД = ВывестиРасшифровкуПоДокументам(3,Расшифровка);
	ТД.Показать("Расшифровка по реализациям");
	ИначеЕсли НомерКолонки = 14 Тогда
	СтандартнаяОбработка = Ложь;
	ТД = ВывестиОжидаемыйРасходПоЛинейкам(Расшифровка);
	ТД.Показать("Ожидаемый расход по линейкам");
	ИначеЕсли НомерКолонки = 16 Тогда
		Если ТипЗнч(Расшифровка) <> Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		СтандартнаяОбработка = Ложь;
		ИмяОтчета = "ОтчётПоРегиструМестаХранения";
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
		ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьПользовательскиеНастройкиОтчетаСКД(ИмяОтчета,Отчет.ОстаткиНаДату,Отчет.ОстаткиНаДату,Новый Структура("МПЗ,МестоХранения",Расшифровка,СписокМестХранения),"ОстаткиПоСкладам"));
		ПараметрыФормы.Вставить("КлючВарианта","ОстаткиПоСкладам"); 
		ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);		
		КонецЕсли;
	ИначеЕсли НомерКолонки = 17 Тогда
	СтандартнаяОбработка = Ложь;
	Отбор = Новый Структура("МПЗ",Расшифровка);
		Если Не Поставщик.Пустая() Тогда	
		Отбор.Вставить("Контрагент",Поставщик);
		КонецЕсли;
			Если Не Договор.Пустая() Тогда	
			Отбор.Вставить("Договор",Договор);
			КонецЕсли; 
	ИмяОтчета = "ОтчётПоРегиструЗаказыПоставщикам";
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
	ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьПользовательскиеНастройкиОтчетаСКД(ИмяОтчета,НачалоГода(ТекущаяДата()),ТекущаяДата(),Отбор,"ПоПоставщикамВРазрезеЗаказов"));
	ПараметрыФормы.Вставить("КлючВарианта","ПоПоставщикамВРазрезеЗаказов"); 
	ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);	 
	КонецЕсли;
КонецПроцедуры
