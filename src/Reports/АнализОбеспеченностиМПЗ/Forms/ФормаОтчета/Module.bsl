
&НаСервере
Функция ПолучитьНезапущенныеИзделия()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Изделие КАК Изделие,
	|	СУММА(ПроизводственноеЗадание.Количество) КАК Количество
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДатаЗапуска = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроизводственноеЗадание.Изделие";
Возврат(Запрос.Выполнить().Выгрузить());	
КонецФункции
                   
&НаСервере
Функция ПолучитьОстаткиПоЗНП()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыНаПроизводствоОстатки.Продукция КАК Продукция,
	|	ЗаказыНаПроизводствоОстатки.Документ КАК Документ,
	|	ЗаказыНаПроизводствоОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПроизводство.Остатки КАК ЗаказыНаПроизводствоОстатки
	|ГДЕ
	|	ЗаказыНаПроизводствоОстатки.Документ.Закрыт = ЛОЖЬ
	|	И ЗаказыНаПроизводствоОстатки.Документ.Проведен = ИСТИНА";
Возврат(Запрос.Выполнить().Выгрузить());
КонецФункции 

&НаСервере
Функция ПолучитьСозданныеИзделия()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Номенклатура КАК Номенклатура,
	|	МаршрутнаяКарта.Количество КАК Количество,
	|	МаршрутнаяКарта.ДокументОснование КАК ЗНП
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.ДокументОснование.Закрыт = ЛОЖЬ
	|	И МаршрутнаяКарта.Статус <> 3";
Возврат(Запрос.Выполнить().Выгрузить());
КонецФункции 

&НаСервере
Процедура ВхождениеВСпецификацииКонечные(Элемент,Норма,СписокИзделий)
спНомен = ОбщийМодульВызовСервера.ПолучитьСписокВхожденийСНормой(Элемент,ТекущаяДата());
	Для каждого Строка Из спНомен Цикл
		Если Не Строка.Значение.Товар.Пустая() Тогда
			Если СписокИзделий.НайтиПоЗначению(Строка.Значение) = Неопределено Тогда
			СписокИзделий.Добавить(Строка.Значение,Норма*Число(Строка.Представление));
			КонецЕсли;	
		КонецЕсли;
	ВхождениеВСпецификацииКонечные(Строка.Значение,Норма*Число(Строка.Представление),СписокИзделий);
	КонецЦикла;
КонецПроцедуры
                    
&НаСервере
Функция ПолучитьОстатокПоЗаказамПоставщикам(МПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыПоставщикамОстатки.МПЗ КАК МПЗ,
	|	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&НаДату, ) КАК ЗаказыПоставщикамОстатки
	|ГДЕ
	|	ЗаказыПоставщикамОстатки.МПЗ = &МПЗ
	|ИТОГИ
	|	СУММА(КоличествоОстаток)
	|ПО
	|	МПЗ"; 
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("МПЗ", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаЗаказыПоставщикамМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЗаказыПоставщикамМПЗ.Следующий() Цикл
	Возврат(ВыборкаЗаказыПоставщикамМПЗ.КоличествоОстаток);	
	КонецЦикла;
Возврат(0);
КонецФункции

&НаСервере
Функция ПолучитьСводныйОстатокПФПоМестамХранения(спПФ)
Запрос = Новый Запрос;
МВТ = Новый МенеджерВременныхТаблиц;              

Запрос.МенеджерВременныхТаблиц = МВТ;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(МестаХраненияОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	МестаХраненияОстатки.МПЗ КАК МПЗ
	|ПОМЕСТИТЬ МХО
	|ИЗ
	|	РегистрНакопления.МестаХранения.Остатки(
	|			&НаДату,
	|			МестоХранения В ИЕРАРХИИ (&СписокМестХранения)
	|				И МПЗ В (&спПФ)) КАК МестаХраненияОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	МестаХраненияОстатки.МПЗ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МПЗ";
Запрос.УстановитьПараметр("НаДату", ТекущаяДата()); 
Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения); 
Запрос.УстановитьПараметр("спПФ", спПФ); 
Запрос.Выполнить();
Запрос.Текст="ВЫБРАТЬ * из МХО";
Возврат(Запрос.Выполнить().Выгрузить());
КонецФункции
   
&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();
ТЗ = Новый ТаблицаЗначений;

СписокИзделий = Новый СписокЗначений;

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблМПЗ = Макет.ПолучитьОбласть("МПЗ");
ОблИтогоМПЗ = Макет.ПолучитьОбласть("ИтогоМПЗ");
ОблПФ = Макет.ПолучитьОбласть("ПФ");
ОблИтогоПФ = Макет.ПолучитьОбласть("ИтогоПФ");
ОблИзделие = Макет.ПолучитьОбласть("Изделие");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.НаДату = ТекущаяДата();
ТабДок.Вывести(ОблШапка);

ОблМПЗ.Параметры.НаименованиеМПЗ = СокрЛП(МПЗ.Наименование);
ОблМПЗ.Параметры.МПЗ = МПЗ;
ТабДок.Вывести(ОблМПЗ);
ТабДок.НачатьГруппуСтрок("МПЗ");
спПФ = ОбщийМодульВызовСервера.ПолучитьСписокВхожденийСНормой(МПЗ,ТекущаяДата());
ТаблицаМХО = ПолучитьСводныйОстатокПФПоМестамХранения(спПФ);
ТаблицаНезапущенных = ПолучитьНезапущенныеИзделия(); 
ТаблицаНезапущенных.Индексы.Добавить("Изделие");
ТаблицаНесозданных = ПолучитьОстаткиПоЗНП();
ТаблицаНесозданных.Индексы.Добавить("Продукция");
ТаблицаСозданных = ПолучитьСозданныеИзделия();
ТаблицаСозданных.Индексы.Добавить("Номенклатура,ЗНП");

КоличествоНеобеспеченных = 0;
	Для каждого ПФ Из спПФ Цикл
	флВыведен = Ложь;	
	СписокИзделий.Очистить(); 
	ВхождениеВСпецификацииКонечные(ПФ.Значение,1,СписокИзделий);
	Выборка = ТаблицаМХО.Найти(ПФ.Значение,"МПЗ");
		Если Выборка <> Неопределено Тогда
		КоличествоНаСкладах = Выборка.КоличествоОстаток;
		Иначе	
		КоличествоНаСкладах = 0;
		КонецЕсли;
	КоличествоНезапущенныхИтого = 0;
	КоличествоНесозданныхИтого = 0; 
		Для каждого Изд Из СписокИзделий Цикл
		Выборка = ТаблицаНезапущенных.Найти(Изд.Значение,"Изделие");
			Если Выборка <> Неопределено Тогда
			КоличествоНезапущенных = Выборка.Количество;
			Иначе	
			КоличествоНезапущенных = 0;
			КонецЕсли;  
		КоличествоНесозданных = 0;
		Выборка = ТаблицаНесозданных.НайтиСтроки(Новый Структура("Продукция",Изд.Значение));
			Для к = 0 По Выборка.ВГраница() Цикл
			КоличествоНесозданных = КоличествоНесозданных + Выборка[к].КоличествоОстаток;
			ВыборкаМТК = ТаблицаСозданных.НайтиСтроки(Новый Структура("Номенклатура,ЗНП",Изд.Значение,Выборка[к].Документ));
				Для л = 0 По ВыборкаМТК.ВГраница() Цикл
				КоличествоНесозданных = КоличествоНесозданных - ВыборкаМТК[л].Количество;
				КонецЦикла;		
			КонецЦикла;
				Если (КоличествоНезапущенных + КоличествоНесозданных) > 0 Тогда
					Если Не флВыведен Тогда
					ОблПФ.Параметры.НаименованиеПФ = СокрЛП(ПФ.Значение.Наименование);
					ОблПФ.Параметры.ПФ = ПФ.Значение; 
					ОблПФ.Параметры.Норма = Число(ПФ.Представление);
					ТабДок.Вывести(ОблПФ);		
					ТабДок.НачатьГруппуСтрок("ПФ");
					флВыведен = Истина;
					КонецЕсли;				       
				ОблИзделие.Параметры.НаименованиеИзделие = СокрЛП(Изд.Значение.Наименование);
				ОблИзделие.Параметры.Изделие = Изд.Значение;
				ОблИзделие.Параметры.Линейка = Изд.Значение.Линейка; 
				ОблИзделие.Параметры.Норма = Число(Изд.Представление);			
				ОблИзделие.Параметры.КоличествоНезапущенных = КоличествоНезапущенных;
				ОблИзделие.Параметры.КоличествоНесозданных = КоличествоНесозданных;
				ТабДок.Вывести(ОблИзделие);
				КоличествоНезапущенныхИтого = КоличествоНезапущенныхИтого + КоличествоНезапущенных*Число(Изд.Представление);
				КоличествоНесозданныхИтого = КоличествоНесозданныхИтого + КоличествоНесозданных*Число(Изд.Представление);
				КонецЕсли;
		КонецЦикла;
			Если флВыведен Тогда
			ТабДок.ЗакончитьГруппуСтрок();
			ОблИтогоПФ.Параметры.КоличествоНаСкладах = КоличествоНаСкладах;
			ОблИтогоПФ.Параметры.КоличествоНезапущенных = КоличествоНезапущенныхИтого;
			ОблИтогоПФ.Параметры.КоличествоНесозданных = КоличествоНесозданныхИтого;
			ОблИтогоПФ.Параметры.Обеспеченность = ОблИтогоПФ.Параметры.КоличествоНаСкладах - КоличествоНезапущенныхИтого - КоличествоНесозданныхИтого;
				Если ОблИтогоПФ.Параметры.Обеспеченность < 0 Тогда
				КоличествоНеобеспеченных = КоличествоНеобеспеченных + ОблИтогоПФ.Параметры.Обеспеченность*Число(ПФ.Представление);
				КонецЕсли;
			ТабДок.Вывести(ОблИтогоПФ);
			КонецЕсли;
	КонецЦикла;
ТабДок.ЗакончитьГруппуСтрок();
ОблИтогоМПЗ.Параметры.КоличествоНаСкладах = ОбщийМодульВызовСервера.ПолучитьСводныйОстатокПоМестамХранения(СписокМестХранения,МПЗ);
ОблИтогоМПЗ.Параметры.КоличествоВПути = ПолучитьОстатокПоЗаказамПоставщикам(МПЗ);
ОблИтогоМПЗ.Параметры.Обеспеченность = ОблИтогоМПЗ.Параметры.КоличествоНаСкладах + ОблИтогоМПЗ.Параметры.КоличествоВПути + КоличествоНеобеспеченных;
ТабДок.Вывести(ОблИтогоМПЗ);
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 2;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах(); 
	Состояние("Обработка...",,"Формирование таблицы отчёта...");
	СформироватьНаСервере();
	ОкончаниеЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Элементы.ВремяФормирования.Заголовок = ""+Окр((ОкончаниеЗамера - НачалоЗамера)/1000/60,1)+" мин.";
	КонецЕсли;
КонецПроцедуры
