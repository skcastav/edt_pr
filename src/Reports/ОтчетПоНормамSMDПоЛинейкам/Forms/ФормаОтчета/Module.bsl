
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Константы.КодБазы.Получить() = "БГР" Тогда
	Подразделение = Справочники.Подразделения.НайтиПоНаименованию("Богородицк линия SMD",Истина);
	Иначе	
	Подразделение = Справочники.Подразделения.НайтиПоНаименованию("Харьков линия SMD",Истина);
	КонецЕсли; 
		Если Не ОбщийМодульВызовСервера.РазрешенноеПодразделение(Подразделение) Тогда
		Сообщить("У Вас нет прав для просмотра этого отчёта!");
		Отказ = Истина;
		КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура НаДатуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
Ф = ПолучитьФорму("ОбщаяФорма.ВыборМесяца");
Результат = Ф.ОткрытьМодально();
	Если Результат <> Неопределено Тогда
	Отчет.НаДату = НачалоМесяца(Результат);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
Запрос = Новый Запрос;

ТабДок.Очистить();
СписокЛинеек.Очистить();
СписокНоменклатуры.Очистить();

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапкаОбщие = Макет.ПолучитьОбласть("Шапка|Общие");
ОблШапкаЛинейка = Макет.ПолучитьОбласть("Шапка|Линейка");
ОблШапкаДопНормы = Макет.ПолучитьОбласть("Шапка|ДопНормы");
ОблМПЗОбщие = Макет.ПолучитьОбласть("МПЗ|Общие");
ОблМПЗЛинейка = Макет.ПолучитьОбласть("МПЗ|Линейка");
ОблМПЗДопНормы = Макет.ПолучитьОбласть("МПЗ|ДопНормы");
ОблКонецОбщие = Макет.ПолучитьОбласть("Конец|Общие");
ОблКонецЛинейка = Макет.ПолучитьОбласть("Конец|Линейка");
ОблКонецДопНормы = Макет.ПолучитьОбласть("Конец|ДопНормы");	

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Линейки.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Линейки КАК Линейки
	|ГДЕ
	|	Линейки.Подразделение = &Подразделение
	|	И Линейки.ПометкаУдаления = ЛОЖЬ";
Запрос.УстановитьПараметр("Подразделение",Подразделение);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокЛинеек.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла; 
ОблШапкаОбщие.Параметры.НаДату = ТекущаяДата();
ТабДок.Вывести(ОблШапкаОбщие);
	Для каждого Линейка Из СписокЛинеек Цикл
	ОблШапкаЛинейка.Параметры.Линейка = Линейка.Значение;
	ТабДок.Присоединить(ОблШапкаЛинейка);
	КонецЦикла; 
ТабДок.Присоединить(ОблШапкаДопНормы);

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.СтатусыМПЗ.СрезПоследних(&НаДату, ) КАК СтатусыМПЗСрезПоследних
	|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО СтатусыМПЗСрезПоследних.МПЗ = Номенклатура.Ссылка
	|ГДЕ
	|	Номенклатура.Родитель В ИЕРАРХИИ(&ГруппыНоменклатуры)
	|	И Номенклатура.ЭтоГруппа = ЛОЖЬ
	|	И Номенклатура.ПометкаУдаления = ЛОЖЬ
	|	И СтатусыМПЗСрезПоследних.Статус <> &Статус
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура.Наименование";
Запрос.УстановитьПараметр("ГруппыНоменклатуры",ГруппыНоменклатуры);
Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыСпецификаций.Запрещённая);
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокНоменклатуры.Добавить(ВыборкаДетальныеЗаписи.Ссылка,глНаименованиеВСкобкахБезЭтапа(ВыборкаДетальныеЗаписи.Ссылка.Наименование));
	КонецЦикла;
СписокНоменклатуры.СортироватьПоПредставлению();
	Для каждого МПЗ Из СписокНоменклатуры Цикл 
	ОблМПЗОбщие.Параметры.Наименование = СокрЛП(МПЗ.Значение.Наименование);
	ОблМПЗОбщие.Параметры.МПЗ = МПЗ.Значение;
	ОблМПЗОбщие.Параметры.Статус = ПолучитьСтатус(МПЗ.Значение);
	ТабДок.Вывести(ОблМПЗОбщие);
		Для каждого Линейка Из СписокЛинеек Цикл
			Если МПЗ.Значение.ЛинейкиSMD.Найти(Линейка.Значение,"Линейка") <> Неопределено Тогда
			ОблМПЗЛинейка.Параметры.Линейка = Линейка.Значение;
			Иначе			
			ОблМПЗЛинейка.Параметры.Линейка = "";			
			КонецЕсли;
		НормыSMD = РегистрыСведений.НормыSMDПоЛинейкам.ПолучитьПоследнее(Отчет.НаДату,Новый Структура("МПЗ,Линейка",МПЗ.Значение,Линейка.Значение));
		ОблМПЗЛинейка.Параметры.НВ = НормыSMD.НормаВремени;
		ОблМПЗЛинейка.Параметры.НЧ = НормыSMD.ЦенаНормоЧаса; 
		ТекОбл = ТабДок.Присоединить(ОблМПЗЛинейка);
			Если ЗначениеЗаполнено(ОблМПЗЛинейка.Параметры.Линейка) Тогда
				Если ОблМПЗЛинейка.Параметры.НВ = 0 или ОблМПЗЛинейка.Параметры.НЧ = 0 Тогда
				ТабДок.Область(ТекОбл.Верх, ТекОбл.Лево, ТекОбл.Низ, ТекОбл.Лево).ЦветФона = WebЦвета.Коралловый;//Новый Цвет(255,0,0);
				КонецЕсли;	
			КонецЕсли; 
		КонецЦикла;
	НормыОТ = РегистрыСведений.НормыОптическогоТеста.ПолучитьПоследнее(Отчет.НаДату,Новый Структура("МПЗ",МПЗ.Значение));
	ОблМПЗДопНормы.Параметры.Кот = НормыОТ.Коэффициент;
	ОблМПЗДопНормы.Параметры.Рот = НормыОТ.Расценка;
	НормыЭК = РегистрыСведений.НормыЭлектроконтроля.ПолучитьПоследнее(Отчет.НаДату,Новый Структура("МПЗ",МПЗ.Значение));
	ОблМПЗДопНормы.Параметры.НВэк = НормыЭК.НормаВремени;
	ОблМПЗДопНормы.Параметры.Рэк = НормыЭК.Расценка;
	ТабДок.Присоединить(ОблМПЗДопНормы);	 
	КонецЦикла;
ТабДок.Вывести(ОблКонецОбщие);
	Для каждого Линейка Из СписокЛинеек Цикл
	ТабДок.Присоединить(ОблКонецЛинейка);
	КонецЦикла;
ТабДок.Присоединить(ОблКонецДопНормы);
ТабДок.ФиксацияСверху = 2;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	СформироватьНаСервере();
	КонецЕсли; 
КонецПроцедуры
