
&НаСервере
Функция СортироватьПоПорядку(ТекЗнач) 
	
Перем ТемпНач,ТемпКон;

Если (ТекЗнач = "")или(Найти(ТекЗнач,"-") > 0) Тогда
Возврат(ТекЗнач);		
КонецЕсли;

	Для к = 1 по 3 Цикл
		Если (КодСимвола(Сред(ТекЗнач,к,1)) > 47)и(КодСимвола(Сред(ТекЗнач,к,1)) < 58) Тогда
		ТемпНач = Лев(ТекЗнач,к-1);
		ТекЗнач = СтрЗаменить(ТекЗнач,ТемпНач,"");
			Если Найти(ТекЗнач,".") > 0 Тогда
			ТемпКон = Сред(ТекЗнач,Найти(ТекЗнач,"."));
			ТекЗнач = СтрЗаменить(ТекЗнач,ТемпКон,"");
			КонецЕсли;	                            
		    	Пока СтрДлина(ТекЗнач) < 5 Цикл
		    	ТекЗнач = "#"+ТекЗнач;	
				КонецЦикла;
		ТекЗнач = ТемпНач+ТекЗнач+ТемпКон;		
		Прервать;		
		КонецЕсли;
	КонецЦикла;
Возврат(СокрЛП(ТекЗнач));	
	
КонецФункции

&НаСервере
Функция УдалитьНули(ТекЗнач) 	
	Для к = 1 по СтрДлина(ТекЗнач) Цикл
		Если Сред(ТекЗнач,к,1) = "#" Тогда
		ТекЗнач = СтрЗаменить(ТекЗнач,Сред(ТекЗнач,к,1),"");				
		Прервать;
		КонецЕсли;	
	КонецЦикла;		
Возврат(ТекЗнач);	
КонецФункции

&НаСервере
Процедура РаскрытьНаМПЗ(ВыбСпецификация,КолМПЗ)
НормРасх = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Все(ВыбСпецификация,КонецДня(Отчет.НаДату));
	Пока НормРасх.Следующий() Цикл			
		Если ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.Номенклатура") Тогда
			Если НормРасх.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Набор Тогда
			СтрокаТЗ = Отчет.Элементы.Добавить();
			РазделПоЕСКД = ПолучитьРазделПоЕСКД(НормРасх.Элемент.Родитель);
				Если ЗначениеЗаполнено(РазделПоЕСКД) Тогда
				СтрокаТЗ.Раздел = РазделПоЕСКД;
				Иначе
				СтрокаТЗ.Раздел = "6Комплекты";
				КонецЕсли; 	
			СтрокаТЗ.Элемент = НормРасх.Элемент;
				Если (Найти(НормРасх.Элемент.Наименование,"КУВФ.") > 0)или
					 (Найти(НормРасх.Элемент.Наименование,"АРАВ.") > 0) Тогда
				СтрокаТЗ.Обозначение = Лев(НормРасх.Элемент.Наименование,Найти(НормРасх.Элемент.Наименование,"(")-1);
				СтрокаТЗ.НаименованиеЭлемента = глНаименованиеВСкобкахБезЭтапа(НормРасх.Элемент.Наименование);
				Иначе
				СтрокаТЗ.Обозначение = "";
				СтрокаТЗ.НаименованиеЭлемента = НормРасх.Элемент.Наименование;
				КонецЕсли;
			СтрокаТЗ.Позиция = СортироватьПоПорядку(СокрЛП(НормРасх.Позиция));
            СтрокаТЗ.Количество = НормРасх.Норма*КолМПЗ;
			СтрокаТЗ.ЕдиницаИзмерения = НормРасх.Элемент.ОсновнаяЕдиницаИзмерения;	
			ИначеЕсли НормРасх.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Основа Тогда
			РаскрытьНаМПЗ(НормРасх.Элемент,КолМПЗ*ПолучитьБазовоеКоличество(НормРасх.Норма,НормРасх.Элемент.ОсновнаяЕдиницаИзмерения));
			ИначеЕсли НормРасх.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Деталь Тогда
			СтрокаТЗ = Отчет.Элементы.Добавить();
				Если ЗначениеЗаполнено(РазделПоЕСКД) Тогда
				СтрокаТЗ.Раздел = РазделПоЕСКД;
				Иначе
				СтрокаТЗ.Раздел = "3Детали";
				КонецЕсли; 	
			СтрокаТЗ.Элемент = НормРасх.Элемент;
				Если (Найти(НормРасх.Элемент.Наименование,"КУВФ.") > 0)или
					 (Найти(НормРасх.Элемент.Наименование,"АРАВ.") > 0) Тогда
				СтрокаТЗ.Обозначение = Лев(НормРасх.Элемент.Наименование,Найти(НормРасх.Элемент.Наименование,"(")-1);
				СтрокаТЗ.НаименованиеЭлемента = глНаименованиеВСкобкахБезЭтапа(НормРасх.Элемент.Наименование);
				Иначе
				СтрокаТЗ.Обозначение = "";
				СтрокаТЗ.НаименованиеЭлемента = НормРасх.Элемент.Наименование;
				КонецЕсли;
			СтрокаТЗ.Позиция = СортироватьПоПорядку(СокрЛП(НормРасх.Позиция));
            СтрокаТЗ.Количество = НормРасх.Норма*КолМПЗ;		
			СтрокаТЗ.ЕдиницаИзмерения = НормРасх.Элемент.ОсновнаяЕдиницаИзмерения;
			Иначе
			СтрокаТЗ = Отчет.Элементы.Добавить();
				Если ЗначениеЗаполнено(РазделПоЕСКД) Тогда
				СтрокаТЗ.Раздел = РазделПоЕСКД;
				Иначе
				СтрокаТЗ.Раздел = "2Сборочные единицы";
				КонецЕсли; 	
			СтрокаТЗ.Элемент = НормРасх.Элемент;
				Если (Найти(НормРасх.Элемент.Наименование,"КУВФ.") > 0)или
					 (Найти(НормРасх.Элемент.Наименование,"АРАВ.") > 0) Тогда
				СтрокаТЗ.Обозначение = Лев(НормРасх.Элемент.Наименование,Найти(НормРасх.Элемент.Наименование,"(")-1);
				СтрокаТЗ.НаименованиеЭлемента = глНаименованиеВСкобкахБезЭтапа(НормРасх.Элемент.Наименование);
				Иначе
				СтрокаТЗ.Обозначение = "";
				СтрокаТЗ.НаименованиеЭлемента = НормРасх.Элемент.Наименование;
				КонецЕсли;
			СтрокаТЗ.Позиция = СортироватьПоПорядку(СокрЛП(НормРасх.Позиция));
            СтрокаТЗ.Количество = НормРасх.Норма*КолМПЗ;			
			СтрокаТЗ.ЕдиницаИзмерения = НормРасх.Элемент.ОсновнаяЕдиницаИзмерения;
			КонецЕсли;
		ИначеЕсли ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
		СтрокаТЗ = Отчет.Элементы.Добавить();
			Если ЗначениеЗаполнено(РазделПоЕСКД) Тогда
			СтрокаТЗ.Раздел = РазделПоЕСКД;
			Иначе
			СтрокаТЗ.Раздел = "4"+СокрЛП(ПолучитьВерхнегоРодителя(НормРасх.Элемент));
			КонецЕсли;		
		СтрокаТЗ.Элемент = НормРасх.Элемент;
			Если (Найти(НормРасх.Элемент.Наименование,"КУВФ.") > 0)или
				 (Найти(НормРасх.Элемент.Наименование,"АРАВ.") > 0) Тогда
			СтрокаТЗ.Обозначение = Лев(НормРасх.Элемент.Наименование,Найти(НормРасх.Элемент.Наименование,"(")-1);
			СтрокаТЗ.НаименованиеЭлемента = глНаименованиеВСкобкахБезЭтапа(НормРасх.Элемент.Наименование);
			Иначе
			СтрокаТЗ.Обозначение = "";
			СтрокаТЗ.НаименованиеЭлемента = НормРасх.Элемент.Наименование;
			КонецЕсли;
		СтрокаТЗ.Позиция = СортироватьПоПорядку(СокрЛП(НормРасх.Позиция));
        СтрокаТЗ.Количество = НормРасх.Норма*КолМПЗ;
		СтрокаТЗ.ЕдиницаИзмерения = НормРасх.Элемент.ОсновнаяЕдиницаИзмерения;
		СтрокаТЗ.ИмяФайла = НормРасх.Элемент.ИмяФайла;
		ИначеЕсли ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.Документация") Тогда
		Выборка = Отчет.Элементы.НайтиСтроки(Новый Структура("Элемент",НормРасх.Элемент));
			Если Выборка.Количество() > 0 Тогда
			Продолжить;
			КонецЕсли; 
		СтрокаТЗ = Отчет.Элементы.Добавить();	
		СтрокаТЗ.Раздел = "1Документация";
		СтрокаТЗ.Элемент = НормРасх.Элемент;
			Если (Найти(НормРасх.Элемент.Наименование,"КУВФ.") > 0)или
				 (Найти(НормРасх.Элемент.Наименование,"АРАВ.") > 0) Тогда
				Если Найти(НормРасх.Элемент.Наименование,"(") > 0 Тогда
				СтрокаТЗ.Обозначение = Лев(НормРасх.Элемент.Наименование,Найти(НормРасх.Элемент.Наименование,"(")-1);
				Иначе
				СтрокаТЗ.Обозначение = НормРасх.Элемент.Наименование;
				КонецЕсли; 
			СтрокаТЗ.НаименованиеЭлемента = НормРасх.Элемент.ВидДокумента;
			Иначе
			СтрокаТЗ.Обозначение = НормРасх.Элемент.Наименование;
			СтрокаТЗ.НаименованиеЭлемента = НормРасх.Элемент.ВидДокумента;
			КонецЕсли;
		СтрокаТЗ.Позиция = СортироватьПоПорядку(СокрЛП(НормРасх.Позиция));
		СтрокаТЗ.ИмяФайла = НормРасх.Элемент.ИмяФайла;		
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
ТД = Новый ТабличныйДокумент;
МассивЛистов = Новый Массив;

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("СпецификацияЕСКД");

ОблШапкаОсновная = Макет.ПолучитьОбласть("Шапка|Основная");
ОблСтрокаОсновная = Макет.ПолучитьОбласть("Строка|Основная");
ОблСтрока1Основная = Макет.ПолучитьОбласть("Строка1|Основная");
ОблФорматка1Основная = Макет.ПолучитьОбласть("Форматка1|Основная");
ОблФорматка2Основная = Макет.ПолучитьОбласть("Форматка2|Основная");
ОблСтраница1ФорматкаСлева = Макет.ПолучитьОбласть("Страница1|ФорматкаСлева");
ОблСтраница2ФорматкаСлева = Макет.ПолучитьОбласть("Страница2|ФорматкаСлева");

	Если (Найти(Отчет.Спецификация.Наименование,"КУВФ.") > 0)или
		 (Найти(Отчет.Спецификация.Наименование,"АРАВ.") > 0)или
		 (Найти(Отчет.Спецификация.Наименование,"360.") > 0)или
		 (Найти(Отчет.Спецификация.Наименование,"310.") > 0)или
		 (Найти(Отчет.Спецификация.Наименование,"361.") > 0)Тогда
	Обозначение = Лев(Отчет.Спецификация.Наименование,Найти(Отчет.Спецификация.Наименование,"(")-1);
	Наименование = глНаименованиеВСкобкахБезЭтапа(Отчет.Спецификация.Наименование);
	Иначе
	Обозначение = "";
	Наименование = СокрЛП(Отчет.Спецификация.Наименование);
	КонецЕсли; 
ТД.Вывести(ОблШапкаОсновная);
Лист = 1;
к = 1;
Раздел = "";
	Для каждого ТЧ Из Отчет.Элементы Цикл
		Если Раздел <> ТЧ.Раздел Тогда
			Если Лист = 1 Тогда
				Если к + 4 > 28 Тогда
					Если к < 28 Тогда
					ОблСтрокаОсновная.Параметры.Позиция = "";
					ОблСтрокаОсновная.Параметры.Обозначение = "";
					ОблСтрокаОсновная.Параметры.Наименование = "";
					ОблСтрокаОсновная.Параметры.Элемент = "";
					ОблСтрокаОсновная.Параметры.Количество = "";
					ОблСтрокаОсновная.Параметры.Примечание = "";
						Для л = к + 1 По 28 Цикл
						ТД.Вывести(ОблСтрокаОсновная);
						КонецЦикла; 				
					КонецЕсли;
				ОблФорматка1Основная.Параметры.Обозначение = Обозначение;
				ОблФорматка1Основная.Параметры.Наименование = Наименование;
				ОблФорматка1Основная.Параметры.Разработал = ОбщийМодульВызовСервера.ФИО_Инициалы(Отчет.Разработал);
				ОблФорматка1Основная.Параметры.Проверил = ОбщийМодульВызовСервера.ФИО_Инициалы(Отчет.Проверил);
				ОблФорматка1Основная.Параметры.Утвердил = ОбщийМодульВызовСервера.ФИО_Инициалы(Отчет.Утвердил); 
				ТД.Вывести(ОблФорматка1Основная);
				МассивЛистов.Добавить(ТД.ПолучитьОбласть("R1C3:R36C19"));
				ТД.Очистить();
				ТД.Вывести(ОблШапкаОсновная);
				Лист = Лист + 1;
				к = 1;
				КонецЕсли; 
			Иначе	
				Если к + 4 > 31 Тогда
					Если к < 31 Тогда
					ОблСтрокаОсновная.Параметры.Позиция = "";
					ОблСтрокаОсновная.Параметры.Обозначение = "";
					ОблСтрокаОсновная.Параметры.Наименование = "";
					ОблСтрокаОсновная.Параметры.Элемент = "";
					ОблСтрокаОсновная.Параметры.Количество = "";
					ОблСтрокаОсновная.Параметры.Примечание = "";
						Для л = к + 1 По 31 Цикл
						ТД.Вывести(ОблСтрокаОсновная);
						КонецЦикла; 				
					КонецЕсли;
				ОблФорматка2Основная.Параметры.Обозначение = Обозначение;
				ОблФорматка2Основная.Параметры.Лист = Лист;
				ТД.Вывести(ОблФорматка2Основная);
				МассивЛистов.Добавить(ТД.ПолучитьОбласть("R1C3:R34C19"));
				ТД.Очистить();
				ТД.Вывести(ОблШапкаОсновная);
				Лист = Лист + 1;
				к = 1;
				КонецЕсли; 			
			КонецЕсли;
		ОблСтрокаОсновная.Параметры.Позиция = ""; 
		ОблСтрокаОсновная.Параметры.Обозначение = "";
		ОблСтрокаОсновная.Параметры.Наименование = "";
		ОблСтрокаОсновная.Параметры.Элемент = "";
		ОблСтрокаОсновная.Параметры.Количество = "";
		ОблСтрокаОсновная.Параметры.Примечание = "";
		ТД.Вывести(ОблСтрокаОсновная);
		к = к + 1;
		ОблСтрокаОсновная.Параметры.Наименование = Сред(ТЧ.Раздел,2);
		ТД.Вывести(ОблСтрокаОсновная);
		к = к + 1;
		Обл = ТД.Область("R"+(к)+"C12:R"+(к)+"C16");
		Обл.Шрифт = Новый Шрифт("Arial Narrow",12,Истина,Ложь,Истина);
		Обл.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
		ОблСтрокаОсновная.Параметры.Наименование = "";
		ТД.Вывести(ОблСтрокаОсновная);
		к = к + 1;
		Раздел = ТЧ.Раздел;
		КонецЕсли; 
			Если Лист = 1 Тогда
				Если к + 1 > 28 Тогда
					Если к < 28 Тогда
					ОблСтрокаОсновная.Параметры.Позиция = "";
					ОблСтрокаОсновная.Параметры.Обозначение = "";
					ОблСтрокаОсновная.Параметры.Наименование = "";
					ОблСтрокаОсновная.Параметры.Элемент = "";
					ОблСтрокаОсновная.Параметры.Количество = "";
					ОблСтрокаОсновная.Параметры.Примечание = "";
						Для л = к + 1 По 28 Цикл
						ТД.Вывести(ОблСтрокаОсновная);
						КонецЦикла; 				
					КонецЕсли;
				ОблФорматка1Основная.Параметры.Обозначение = Обозначение;
				ОблФорматка1Основная.Параметры.Наименование = Наименование;
				ОблФорматка1Основная.Параметры.Разработал = ОбщийМодульВызовСервера.ФИО_Инициалы(Отчет.Разработал);
				ОблФорматка1Основная.Параметры.Проверил = ОбщийМодульВызовСервера.ФИО_Инициалы(Отчет.Проверил);
				ОблФорматка1Основная.Параметры.Утвердил = ОбщийМодульВызовСервера.ФИО_Инициалы(Отчет.Утвердил); 
				ТД.Вывести(ОблФорматка1Основная);
				МассивЛистов.Добавить(ТД.ПолучитьОбласть("R1C3:R36C19"));
				ТД.Очистить();
				ТД.Вывести(ОблШапкаОсновная);
				Лист = Лист + 1;
				к = 1;
				КонецЕсли; 
			Иначе	
				Если к + 1 > 31 Тогда
					Если к < 31 Тогда
					ОблСтрокаОсновная.Параметры.Позиция = "";
					ОблСтрокаОсновная.Параметры.Обозначение = "";
					ОблСтрокаОсновная.Параметры.Наименование = "";
					ОблСтрокаОсновная.Параметры.Элемент = "";
					ОблСтрокаОсновная.Параметры.Количество = "";
					ОблСтрокаОсновная.Параметры.Примечание = "";
						Для л = к + 1 По 31 Цикл
						ТД.Вывести(ОблСтрокаОсновная);
						КонецЦикла; 				
					КонецЕсли;
				ОблФорматка2Основная.Параметры.Обозначение = Обозначение;
				ОблФорматка2Основная.Параметры.Лист = Лист; 
				ТД.Вывести(ОблФорматка2Основная);
				МассивЛистов.Добавить(ТД.ПолучитьОбласть("R1C3:R34C19"));
				ТД.Очистить();
				ТД.Вывести(ОблШапкаОсновная);
				Лист = Лист + 1;
				к = 1;
				КонецЕсли; 			
			КонецЕсли;
				Если ЗначениеЗаполнено(ТЧ.ИмяФайла) Тогда
				ОблСтрока1Основная.Параметры.Позиция = УдалитьНули(ТЧ.Позиция);
				ОблСтрока1Основная.Параметры.Обозначение = ТЧ.Обозначение;
				ОблСтрока1Основная.Параметры.Наименование = ТЧ.НаименованиеЭлемента;
				ОблСтрока1Основная.Параметры.Элемент = ТЧ.Элемент;
				ОблСтрока1Основная.Параметры.Количество = ТЧ.Количество;
				ТД.Вывести(ОблСтрока1Основная);
				Иначе
				ОблСтрокаОсновная.Параметры.Позиция = УдалитьНули(ТЧ.Позиция);
				ОблСтрокаОсновная.Параметры.Обозначение = ТЧ.Обозначение;
				ОблСтрокаОсновная.Параметры.Наименование = ТЧ.НаименованиеЭлемента;
				ОблСтрокаОсновная.Параметры.Элемент = ТЧ.Элемент;
				ОблСтрокаОсновная.Параметры.Количество = ТЧ.Количество;
				ОблСтрокаОсновная.Параметры.Примечание = ТЧ.Примечание;	
				ТД.Вывести(ОблСтрокаОсновная);
				КонецЕсли; 
	к = к + 1;
	КонецЦикла;

		Если Лист = 1 Тогда
			Если к < 28 Тогда
			ОблСтрокаОсновная.Параметры.Позиция = "";
			ОблСтрокаОсновная.Параметры.Обозначение = "";
			ОблСтрокаОсновная.Параметры.Наименование = "";
			ОблСтрокаОсновная.Параметры.Элемент = "";
			ОблСтрокаОсновная.Параметры.Количество = "";
			ОблСтрокаОсновная.Параметры.Примечание = "";
				Для л = к + 1 По 28 Цикл
				ТД.Вывести(ОблСтрокаОсновная);
				КонецЦикла; 				
			КонецЕсли;
		ОблФорматка1Основная.Параметры.Обозначение = Обозначение;
		ОблФорматка1Основная.Параметры.Наименование = Наименование;
		ОблФорматка1Основная.Параметры.Разработал = ОбщийМодульВызовСервера.ФИО_Инициалы(Отчет.Разработал);
		ОблФорматка1Основная.Параметры.Проверил = ОбщийМодульВызовСервера.ФИО_Инициалы(Отчет.Проверил);
		ОблФорматка1Основная.Параметры.Утвердил = ОбщийМодульВызовСервера.ФИО_Инициалы(Отчет.Утвердил); 
		ТД.Вывести(ОблФорматка1Основная);
		МассивЛистов.Добавить(ТД.ПолучитьОбласть("R1C3:R36C19"));
		Иначе
	 		Если к < 31 Тогда
			ОблСтрокаОсновная.Параметры.Позиция = "";
			ОблСтрокаОсновная.Параметры.Обозначение = "";
			ОблСтрокаОсновная.Параметры.Наименование = "";
			ОблСтрокаОсновная.Параметры.Элемент = "";
			ОблСтрокаОсновная.Параметры.Количество = "";
			ОблСтрокаОсновная.Параметры.Примечание = "";
				Для л = к + 1 По 31 Цикл
				ТД.Вывести(ОблСтрокаОсновная);
				КонецЦикла; 				
			КонецЕсли;
		ОблФорматка2Основная.Параметры.Обозначение = Обозначение;
		ОблФорматка2Основная.Параметры.Лист = Лист;
		ТД.Вывести(ОблФорматка2Основная);
		МассивЛистов.Добавить(ТД.ПолучитьОбласть("R1C3:R34C19"));		
		КонецЕсли;
ТабДок.Очистить();
	Для к = 0 По МассивЛистов.Количество()-1 Цикл	
		Если к = 0 Тогда
		ТабДок.Вывести(ОблСтраница1ФорматкаСлева);
		Иначе
		ТабДок.Вывести(ОблСтраница2ФорматкаСлева);
		КонецЕсли; 
	ТабДок.Присоединить(МассивЛистов[к]);
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
		Если Лист > 1 Тогда
		ТабДок.Область("R33C16:R33C17").Текст = 1;	
		КонецЕсли; 
ТабДок.Область("R33C18:R33C19").Текст = Лист;
ТабДок.РазмерСтраницы = "A4";
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
ТабДок.ЧерноБелаяПечать = Истина;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	Отчет.Элементы.Очистить();
	ЭтаФорма.Заголовок = "Спецификация "+СокрЛП(Отчет.Спецификация);
	РаскрытьНаМПЗ(Отчет.Спецификация,1);
	Отчет.Элементы.Сортировать("Раздел,Позиция,Обозначение,НаименованиеЭлемента");
	СформироватьНаСервере();	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Спецификация") Тогда
		Если Параметры.Свойство("НаДату") Тогда
		Отчет.НаДату = Параметры.НаДату;
		Иначе
		Отчет.НаДату = ТекущаяДата();
		КонецЕсли; 
	Отчет.Спецификация = Параметры.Спецификация;
	ЭтаФорма.Заголовок = "Спецификация "+СокрЛП(Отчет.Спецификация.Наименование);
	РаскрытьНаМПЗ(Отчет.Спецификация,1);
	Отчет.Элементы.Сортировать("Раздел,Позиция,Обозначение,НаименованиеЭлемента");
	СформироватьНаСервере();
	Иначе
	Отчет.НаДату = ТекущаяДата();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
КлючУникальности = Новый УникальныйИдентификатор();
КонецПроцедуры

&НаСервере
Функция ПолучитьДокумент(Элемент)
Возврат(Элемент.ИмяФайла);
КонецФункции

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Если ТипЗнч(Расшифровка) = Тип("СправочникСсылка.Номенклатура") Тогда
	СтандартнаяОбработка = Ложь;
	П = Новый Структура("Спецификация,НаДату",Расшифровка,Отчет.НаДату);
	ОткрытьФорму("Отчет.ПечатьСпецификацииЕСКД.Форма.ФормаОтчета",П);
	ИначеЕсли ТипЗнч(Расшифровка) = Тип("СправочникСсылка.Материалы") Тогда
	СтандартнаяОбработка = Ложь;
		Если ЗначениеЗаполнено(ПолучитьДокумент(Расшифровка)) Тогда
		СтандартнаяОбработка = Ложь;
		ЗапуститьПриложение(ОбщийМодульВызовСервера.ПолучитьФайлДокумента(ПолучитьДокумент(Расшифровка)));
		Иначе
		Сообщить("Файл не прикреплен!");
		КонецЕсли;
	ИначеЕсли ТипЗнч(Расшифровка) = Тип("СправочникСсылка.ТехОснастка") Тогда
	СтандартнаяОбработка = Ложь;
		Если ЗначениеЗаполнено(ПолучитьДокумент(Расшифровка)) Тогда
		СтандартнаяОбработка = Ложь;
		ЗапуститьПриложение(ОбщийМодульВызовСервера.ПолучитьФайлДокумента(ПолучитьДокумент(Расшифровка)));
		Иначе
		Сообщить("Файл не прикреплен!");
		КонецЕсли; 
	Иначе	
		Если ЗначениеЗаполнено(Расшифровка) Тогда
		СтандартнаяОбработка = Ложь;
		ОбщийМодульКлиент.ОткрытьФайлДокумента(Расшифровка);
		КонецЕсли; 	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура СпецификацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Не Отчет.Изделие.Пустая() Тогда
	СтандартнаяОбработка = Ложь;
	Ф = ПолучитьФорму("Справочник.Номенклатура.ФормаВыбора");
	ЭлементОтбора = Ф.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Товар");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбора.ПравоеЗначение = Отчет.Изделие;
	Ф.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	Отчет.Спецификация = Ф.ОткрытьМодально();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ИзделиеПриИзменении(Элемент)
Отчет.Спецификация = "";
КонецПроцедуры


