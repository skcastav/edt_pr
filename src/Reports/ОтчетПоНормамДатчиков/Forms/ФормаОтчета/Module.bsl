
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
ВидОтчёта = 1;
НаДату = КонецМесяца(ТекущаяДата());
	Если Константы.КодБазы.Получить() = "БГР" Тогда
	Подразделение = Справочники.Подразделения.НайтиПоНаименованию("Богородицк УД",Истина);
	Иначе	
	Подразделение = Справочники.Подразделения.НайтиПоНаименованию("Харьков УД",Истина);
	КонецЕсли;
		Если Не ОбщийМодульВызовСервера.РазрешенноеПодразделение(Подразделение) Тогда
		Сообщить("У Вас нет прав для просмотра этого отчёта!");
		Отказ = Истина;
		КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ЗаполнитьТаблицуТехОпераций(Изделие,СписокТО)
Запрос = Новый Запрос;
СписокТОНомен = Новый СписокЗначений;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходов.Элемент
	|ИЗ
	|	Справочник.НормыРасходов КАК НормыРасходов
	|ГДЕ
	|	НормыРасходов.Владелец = &Изделие
	|	И НормыРасходов.Элемент В ИЕРАРХИИ(&СписокТО)";
Запрос.УстановитьПараметр("Изделие", Изделие);
Запрос.УстановитьПараметр("СписокТО", СписокТО);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокТОНомен.Добавить(ВыборкаДетальныеЗаписи.Элемент);
	КонецЦикла;
Возврат(СписокТОНомен);
КонецФункции

&НаСервере
Процедура СформироватьНаСервере()
Запрос = Новый Запрос;
СписокНоменклатуры = Новый СписокЗначений;
СписокТО = Новый СписокЗначений;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РабочиеМестаЛинеекТехОперации.ТехОперация,
	|	РабочиеМестаЛинеекТехОперации.Ссылка.Код КАК Код
	|ИЗ
	|	Справочник.РабочиеМестаЛинеек.ТехОперации КАК РабочиеМестаЛинеекТехОперации
	|ГДЕ
	|	РабочиеМестаЛинеекТехОперации.Ссылка.Линейка В ИЕРАРХИИ(&Линейки)";
Запрос.УстановитьПараметр("Линейки", СписокЛинеек);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.ТехОперация.ЭтоГруппа Тогда
		ВыборкаТО = Справочники.ТехОперации.ВыбратьИерархически(ВыборкаДетальныеЗаписи.ТехОперация);
			Пока ВыборкаТО.Следующий() Цикл
				Если Не ВыборкаТО.ПометкаУдаления Тогда
				 	Если Не ВыборкаТО.ЭтоГруппа Тогда
						Если СписокТО.НайтиПоЗначению(ВыборкаТО.Ссылка) = Неопределено Тогда						
						СписокТО.Добавить(ВыборкаТО.Ссылка,Формат(ВыборкаДетальныеЗаписи.Код,"ЧЦ=3; ЧВН=")+ВыборкаТО.Код);
						КонецЕсли;
					КонецЕсли; 
				КонецЕсли;
			КонецЦикла; 		
		Иначе	
			Если СписокТО.НайтиПоЗначению(ВыборкаДетальныеЗаписи.ТехОперация) = Неопределено Тогда						
			СписокТО.Добавить(ВыборкаДетальныеЗаписи.ТехОперация,Формат(ВыборкаДетальныеЗаписи.Код,"ЧЦ=3; ЧВН=")+ВыборкаДетальныеЗаписи.ТехОперация.Код);
			КонецЕсли;		
		КонецЕсли; 
	КонецЦикла;
СписокТО.СортироватьПоПредставлению(); 
ТабДок.Очистить();

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапкаОбщая = Макет.ПолучитьОбласть("Шапка|Общая");
ОблШапкаНормы = Макет.ПолучитьОбласть("Шапка|Нормы");
ОблШапкаСтоимость = Макет.ПолучитьОбласть("Шапка|Стоимость");
ОблШапкаНормыИтого = Макет.ПолучитьОбласть("Шапка|НормыИтого");
ОблШапкаСтоимостьИтого = Макет.ПолучитьОбласть("Шапка|СтоимостьИтого");
ОблМПЗОбщая = Макет.ПолучитьОбласть("МПЗ|Общая");
ОблМПЗНормы = Макет.ПолучитьОбласть("МПЗ|Нормы");
ОблМПЗСтоимость = Макет.ПолучитьОбласть("МПЗ|Стоимость");
ОблМПЗНормыИтого = Макет.ПолучитьОбласть("МПЗ|НормыИтого");
ОблМПЗСтоимостьИтого = Макет.ПолучитьОбласть("МПЗ|СтоимостьИтого");
ОблКонецОбщая = Макет.ПолучитьОбласть("Конец|Общая");
ОблКонецНормы = Макет.ПолучитьОбласть("Конец|Нормы");
ОблКонецСтоимость = Макет.ПолучитьОбласть("Конец|Стоимость");
ОблКонецНормыИтого = Макет.ПолучитьОбласть("Конец|НормыИтого");
ОблКонецСтоимостьИтого = Макет.ПолучитьОбласть("Конец|СтоимостьИтого");	

ОблШапкаОбщая.Параметры.НаДату = Формат(Отчет.НаДату,"ДФ=dd.MM.yyyy");
ТабДок.Вывести(ОблШапкаОбщая);
	Если ВидОтчёта = 1 Тогда
		Для каждого ТО Из СписокТО Цикл	
		ОблШапкаНормы.Параметры.ТО = ТО.Значение;
		ТабДок.Присоединить(ОблШапкаНормы);
		КонецЦикла;
 	ТабДок.Присоединить(ОблШапкаНормыИтого);
	Иначе	
		Для каждого ТО Из СписокТО Цикл	
		ОблШапкаСтоимость.Параметры.ТО = ТО.Значение;
		ТабДок.Присоединить(ОблШапкаСтоимость);				
		КонецЦикла;
 	ТабДок.Присоединить(ОблШапкаСтоимостьИтого);
	КонецЕсли;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.СтатусыМПЗ.СрезПоследних(&НаДату, ) КАК СтатусыМПЗСрезПоследних
	|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО СтатусыМПЗСрезПоследних.МПЗ = Номенклатура.Ссылка
	|ГДЕ
	|	Номенклатура.Ссылка В ИЕРАРХИИ(&ГруппаНоменклатуры)";
	Если СписокЛинеек.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И Номенклатура.Линейка В ИЕРАРХИИ(&СписокЛинеек)";	
	Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);		
	КонецЕсли; 
Запрос.УстановитьПараметр("ГруппаНоменклатуры",ГруппаНоменклатуры);
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
	Если Не ПоказыватьЗапрещённые Тогда
	Запрос.Текст = Запрос.Текст + " И СтатусыМПЗСрезПоследних.Статус <> &Статус";	
	Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыСпецификаций.Запрещённая);
	КонецЕсли; 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокНоменклатуры.Добавить(ВыборкаДетальныеЗаписи.Ссылка,глНаименованиеВСкобкахБезЭтапа(ВыборкаДетальныеЗаписи.Ссылка.Наименование));
	КонецЦикла;
СписокНоменклатуры.СортироватьПоПредставлению();
	Для каждого МПЗ Из СписокНоменклатуры Цикл 
	ОблМПЗОбщая.Параметры.Наименование = СокрЛП(МПЗ.Значение.Наименование);
	ОблМПЗОбщая.Параметры.МПЗ = МПЗ.Значение;
	ОблМПЗОбщая.Параметры.Статус = ПолучитьСтатус(МПЗ.Значение,Отчет.НаДату);
	ТабДок.Вывести(ОблМПЗОбщая);
	СписокТОНомен = ЗаполнитьТаблицуТехОпераций(МПЗ.Значение,СписокТО);
	Трудоёмкость = 0;
	СтоимостьИтого = 0;
		Для каждого ТО Из СписокТО Цикл
			Если СписокТОНомен.НайтиПоЗначению(ТО.Значение) <> Неопределено Тогда
			НормыТО = РегистрыСведений.НормыТО.ПолучитьПоследнее(Отчет.НаДату,Новый Структура("ТехОперация",ТО.Значение));
			НВ = НормыТО.Норма;
			Расценка = НормыТО.Стоимость;
			Стоимость = НВ/60*Расценка;
			флТО = Истина;
			Иначе
			НВ = 0;
			Расценка = 0;
			Стоимость = 0;
			флТО = Ложь;
			КонецЕсли;
				Если ВидОтчёта = 1 Тогда
				ОблМПЗНормы.Параметры.НВ = НВ;
				ОблМПЗНормы.Параметры.Расценка = Расценка;
				ТекОбл = ТабДок.Присоединить(ОблМПЗНормы);
				Трудоёмкость = Трудоёмкость + НВ;
				Иначе	
				ОблМПЗСтоимость.Параметры.Стоимость = Стоимость;
				ТекОбл = ТабДок.Присоединить(ОблМПЗСтоимость);
				СтоимостьИтого = СтоимостьИтого + Стоимость;
				КонецЕсли;
					Если флТО Тогда 
						Если НВ = 0 или Расценка = 0 Тогда
						ТабДок.Область(ТекОбл.Верх, ТекОбл.Лево, ТекОбл.Низ, ТекОбл.Лево).ЦветФона = WebЦвета.Коралловый;
						КонецЕсли;
					КонецЕсли;
		КонецЦикла;
			Если ВидОтчёта = 1 Тогда
			ОблМПЗНормыИтого.Параметры.Трудоёмкость = Трудоёмкость;
			ТабДок.Присоединить(ОблМПЗНормыИтого);
			Иначе	
			ОблМПЗСтоимостьИтого.Параметры.СтоимостьИтого = СтоимостьИтого;
			ТабДок.Присоединить(ОблМПЗСтоимостьИтого);
			КонецЕсли;
	КонецЦикла;
ТабДок.Вывести(ОблКонецОбщая);
	Если ВидОтчёта = 1 Тогда
		Для каждого ТО Из СписокТО Цикл	
		ТабДок.Присоединить(ОблКонецНормы);				
		КонецЦикла;
 	ТабДок.Присоединить(ОблКонецНормыИтого);
	Иначе	
		Для каждого ТО Из СписокТО Цикл	
		ТабДок.Присоединить(ОблКонецСтоимость);				
		КонецЦикла;
 	ТабДок.Присоединить(ОблКонецСтоимостьИтого);
	КонецЕсли;
ТабДок.ФиксацияСверху = 2;
ТабДок.ФиксацияСлева = 2;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	СформироватьНаСервере();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура НаДатуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
Ф = ПолучитьФорму("ОбщаяФорма.ВыборМесяца");
Результат = Ф.ОткрытьМодально();
	Если Результат <> Неопределено Тогда
	Отчет.НаДату = НачалоМесяца(Результат);
	КонецЕсли;
КонецПроцедуры
