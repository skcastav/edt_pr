
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
ВидОтчёта = 1;
ВидРасчёта = 1;
РасшифроватьПо = 1;
СортироватьПо = 1;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
Элементы.СписокЛинеекДляРасчёта.Доступность = ?(ВидРасчёта = 1,Истина,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ВидРасчётаПриИзменении(Элемент)
Элементы.СписокЛинеекДляРасчёта.Доступность = ?(ВидРасчёта = 1,Истина,Ложь);
КонецПроцедуры

&НаСервере
Функция ПолучитьМестаХраненияКанбанов()
СписокМестХранения = Новый СписокЗначений;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Линейки.МестоХраненияКанбанов
	|ИЗ
	|	Справочник.Линейки КАК Линейки
	|ГДЕ
	|	Линейки.Подразделение В ИЕРАРХИИ(&СписокПодразделений)";
Запрос.УстановитьПараметр("СписокПодразделений", СписокПодразделений);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокМестХранения.Добавить(ВыборкаДетальныеЗаписи.МестоХраненияКанбанов);
	КонецЦикла;
КонецФункции

&НаСервере
Процедура ПолучитьКоличествоВыпущенных()
СписокОбщихКоличеств.Очистить();
Запрос = Новый Запрос;

ЕдиницаИзмерения = Справочники.ЕдиницыИзмерений.НайтиПоНаименованию("шт",Истина);

	Для каждого Период Из СписокПериодов Цикл
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВыпускПродукцииКанбан.Количество,
		|	ВыпускПродукцииКанбан.Изделие
		|ИЗ
		|	Документ.ВыпускПродукцииКанбан КАК ВыпускПродукцииКанбан
		|ГДЕ
		|	ВыпускПродукцииКанбан.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И ВыпускПродукцииКанбан.ДокументОснование.ДокументОснование.Ремонт = ЛОЖЬ";
	Если Не Подразделение.Пустая() Тогда
	Запрос.Текст = Запрос.Текст + " И ВыпускПродукцииКанбан.Подразделение = &Подразделение";	
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	КонецЕсли;
		Если СписокЛинеекДляРасчёта.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И ВыпускПродукцииКанбан.ДокументОснование.Линейка В ИЕРАРХИИ(&СписокЛинеек)";	
		Запрос.УстановитьПараметр("СписокЛинеек", СписокЛинеекДляРасчёта);
		КонецЕсли; 
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Период.Значение.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Период.Значение.ДатаОкончания));
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	КолВып = 0;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КолВып = КолВып + ?(ВыборкаДетальныеЗаписи.Изделие.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаДетальныеЗаписи.Количество);
		КонецЦикла;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВыпускПродукцииПоступление.Количество,
		|	ВыпускПродукцииПоступление.Номенклатура
		|ИЗ
		|	Документ.ВыпускПродукции.Поступление КАК ВыпускПродукцииПоступление
		|ГДЕ
		|	ВыпускПродукцииПоступление.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И ВыпускПродукцииПоступление.Ссылка.НаСклад = ИСТИНА
		|	И ВыпускПродукцииПоступление.Ссылка.ДокументОснование.ДокументОснование.Ремонт = ЛОЖЬ";
	Если Не Подразделение.Пустая() Тогда
	Запрос.Текст = Запрос.Текст + " И ВыпускПродукцииПоступление.Ссылка.ДокументОснование.Подразделение = &Подразделение";	
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	КонецЕсли;
		Если СписокЛинеекДляРасчёта.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И ВыпускПродукцииПоступление.Ссылка.ДокументОснование.Линейка В ИЕРАРХИИ(&СписокЛинеек)";	
		Запрос.УстановитьПараметр("СписокЛинеек", СписокЛинеекДляРасчёта);
		КонецЕсли; 
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Период.Значение.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Период.Значение.ДатаОкончания));
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КолВып = КолВып + ?(ВыборкаДетальныеЗаписи.Номенклатура.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаДетальныеЗаписи.Количество);
		КонецЦикла;
	СписокОбщихКоличеств.Добавить(КолВып);
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ПолучитьКоличествоПереданных()
СписокОбщихКоличеств.Очистить();
СписокМестХранения = Новый СписокЗначений;
СписокМестХраненияБрака = Новый СписокЗначений;
Запрос = Новый Запрос;

ЕдиницаИзмерения = Справочники.ЕдиницыИзмерений.НайтиПоНаименованию("шт",Истина);

	Для каждого Период Из СписокПериодов Цикл
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПередачиВПроизводствоОбороты.КоличествоПриход,
		|	ПередачиВПроизводствоОбороты.МПЗ
		|ИЗ
		|	РегистрНакопления.ПередачиВПроизводство.Обороты(&ДатаНач, &ДатаКон, , ) КАК ПередачиВПроизводствоОбороты
		|ГДЕ
		|	ПередачиВПроизводствоОбороты.Документ.Подразделение В ИЕРАРХИИ(&СписокПодразделений)
		|	И ПередачиВПроизводствоОбороты.МПЗ.Канбан.Подразделение = &Подразделение";
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Период.Значение.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Период.Значение.ДатаОкончания));
	Запрос.УстановитьПараметр("СписокПодразделений", СписокПодразделений);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	КолПереданных = 0;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КолПереданных = КолПереданных + ?(ВыборкаДетальныеЗаписи.МПЗ.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаДетальныеЗаписи.КоличествоПриход);
		КонецЦикла;
	СписокМестХранения = ПолучитьМестаХраненияКанбанов();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СписаниеМПЗПрочееТабличнаяЧасть.Количество,
		|	СписаниеМПЗПрочееТабличнаяЧасть.ЕдиницаИзмерения
		|ИЗ
		|	Документ.СписаниеМПЗПрочее.ТабличнаяЧасть КАК СписаниеМПЗПрочееТабличнаяЧасть
		|ГДЕ
		|	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И СписаниеМПЗПрочееТабличнаяЧасть.МПЗ.Канбан.Подразделение = &Подразделение
		|	И СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.МестоХранения В ИЕРАРХИИ(&СписокМестХранения)";
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Период.Значение.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Период.Значение.ДатаОкончания));
	Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КолПереданных = КолПереданных + ?(ВыборкаДетальныеЗаписи.ЕдиницаИзмерения.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаДетальныеЗаписи.Количество);
		КонецЦикла;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДвижениеМПЗТабличнаяЧасть.Количество,
		|	ДвижениеМПЗТабличнаяЧасть.ЕдиницаИзмерения
		|ИЗ
		|	Документ.ДвижениеМПЗ.ТабличнаяЧасть КАК ДвижениеМПЗТабличнаяЧасть
		|ГДЕ
		|	ДвижениеМПЗТабличнаяЧасть.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И ДвижениеМПЗТабличнаяЧасть.Ссылка.МестоХранения В(&СписокМестХранения)
		|	И ДвижениеМПЗТабличнаяЧасть.Ссылка.МестоХраненияВ = &МестоХраненияБрака
		|	И ДвижениеМПЗТабличнаяЧасть.МПЗ.Канбан.Подразделение = &Подразделение";
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Период.Значение.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Период.Значение.ДатаОкончания));
	Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения);
	Запрос.УстановитьПараметр("МестоХраненияБрака", Подразделение.МестоХраненияБрака);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КолПереданных = КолПереданных + ?(ВыборкаДетальныеЗаписи.ЕдиницаИзмерения.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаДетальныеЗаписи.Количество);
		КонецЦикла;
	СписокОбщихКоличеств.Добавить(КолПереданных);
	КонецЦикла;
КонецПроцедуры 

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();
ТаблицаРемонта = Новый ТаблицаЗначений;
Массив = Новый Массив;
СписокРемонтов = Новый СписокЗначений;

ЕдиницаИзмерения = Справочники.ЕдиницыИзмерений.НайтиПоНаименованию("шт",Истина);

	Если ВидРасчёта = 1 Тогда
	ПолучитьКоличествоВыпущенных();
	Иначе	
	ПолучитьКоличествоПереданных();
	КонецЕсли;

Массив.Добавить(Тип("СправочникСсылка.Номенклатура"));
Массив.Добавить(Тип("СправочникСсылка.РабочиеМестаЛинеек"));
Массив.Добавить(Тип("СправочникСсылка.ПричиныРемонта"));
Массив.Добавить(Тип("СправочникСсылка.Материалы"));
Массив.Добавить(Тип("Null"));
Массив.Добавить(Тип("Неопределено"));

ОписаниеТиповСправочников = Новый ОписаниеТипов(Массив);

ТаблицаРемонта.Колонки.Добавить("Параметр",ОписаниеТиповСправочников);

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапкаОбщие = Макет.ПолучитьОбласть("Шапка|Общие");
ОблПараметрОбщие = Макет.ПолучитьОбласть("Параметр|Общие");
ОблРасшифровкаОбщие = Макет.ПолучитьОбласть("Расшифровка|Общие");
ОблКонецОбщие = Макет.ПолучитьОбласть("Конец|Общие");
ОблШапкаПериод = Макет.ПолучитьОбласть("Шапка|Период");
ОблПараметрПериод = Макет.ПолучитьОбласть("Параметр|Период");
ОблРасшифровкаПериод = Макет.ПолучитьОбласть("Расшифровка|Период");
ОблКонецПериод = Макет.ПолучитьОбласть("Конец|Период");
	
СписокКолонокСуммирования = "";
Отчет.Период.ДатаНачала = ТекущаяДата();
Отчет.Период.ДатаОкончания = Дата(1,1,1);
	Для каждого Период Из СписокПериодов Цикл
	Отчет.Период.ДатаНачала = Мин(Отчет.Период.ДатаНачала,Период.Значение.ДатаНачала);
	Отчет.Период.ДатаОкончания = Макс(Отчет.Период.ДатаОкончания,Период.Значение.ДатаОкончания);
	ТаблицаРемонта.Колонки.Добавить("к"+Строка(Период.ПолучитьИдентификатор()),Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(7,0)));
	СписокКолонокСуммирования = СписокКолонокСуммирования+"к"+Строка(Период.ПолучитьИдентификатор())+",";
	КонецЦикла; 
СписокКолонокСуммирования = Лев(СписокКолонокСуммирования,СтрДлина(СписокКолонокСуммирования)-1);

ОблШапкаОбщие.Параметры.ДатаНач = Отчет.Период.ДатаНачала;
ОблШапкаОбщие.Параметры.ДатаКон = Отчет.Период.ДатаОкончания;
ТабДок.Вывести(ОблШапкаОбщие);
Стр = 0;
	Для каждого Период Из СписокПериодов Цикл
	ОблШапкаПериод.Параметры.Период = Период.Значение;
	ОблШапкаПериод.Параметры.КоличествоДляРасчёта = СписокОбщихКоличеств[Стр].Значение;
	ТабДок.Присоединить(ОблШапкаПериод);
	Стр = Стр + 1;
	КонецЦикла;

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РемонтнаяКарта.Ссылка КАК Ссылка,
	|	РемонтнаяКарта.РабочееМесто КАК РабочееМесто,
	|	РемонтнаяКарта.РабочееМесто.Наименование КАК РабочееМестоНаим,
	|	РемонтнаяКарта.ДокументОснование.Изделие КАК Изделие,
	|	РемонтнаяКарта.ДокументОснование.Изделие.Наименование КАК ИзделиеНаим,
	|	РемонтнаяКарта.Дата КАК Дата,
	|	РемонтнаяКарта.ПричинаРемонта КАК ПричинаРемонта,
	|	РемонтнаяКарта.ПричинаРемонта.Наименование КАК ПричинаРемонтаНаим,
	|	РемонтнаяКарта.Количество КАК Количество,
	|	РемонтнаяКарта.ДокументОснование.Изделие.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
	|ГДЕ
	|	РемонтнаяКарта.Дата МЕЖДУ &ДатаНач И &ДатаКон";
	Если СписокПодразделений.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И РемонтнаяКарта.Линейка.Подразделение В(&СписокПодразделений)";
	Запрос.УстановитьПараметр("СписокПодразделений",СписокПодразделений);
	КонецЕсли;
		Если СписокЛинеек.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И РемонтнаяКарта.Линейка В ИЕРАРХИИ(&СписокЛинеек)";
		Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
		КонецЕсли;
			Если СписокРабочихМест.Количество() > 0 Тогда
			Запрос.Текст = Запрос.Текст + " И РемонтнаяКарта.РабочееМесто В ИЕРАРХИИ(&СписокРабочихМест)";
			Запрос.УстановитьПараметр("СписокРабочихМест",СписокРабочихМест);
			КонецЕсли;		
				Если СписокГруппСпецификаций.Количество() > 0 Тогда
				Запрос.Текст = Запрос.Текст + " И РемонтнаяКарта.ДокументОснование.Изделие В ИЕРАРХИИ(&СписокГруппСпецификаций)";
				Запрос.УстановитьПараметр("СписокГруппСпецификаций",СписокГруппСпецификаций);
				КонецЕсли;
					Если СортироватьПо = 1 Тогда
						Если ВидОтчёта = 1 Тогда	
						Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО Изделие";
						ИначеЕсли ВидОтчёта = 2 Тогда	
						Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО РабочееМестоНаим";	
						ИначеЕсли ВидОтчёта = 3 Тогда	
						Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ПричинаРемонтаНаим";
						КонецЕсли; 
							Если РасшифроватьПо = 1 Тогда	
							Запрос.Текст = Запрос.Текст + ",Изделие";
							ИначеЕсли РасшифроватьПо = 2 Тогда	
							Запрос.Текст = Запрос.Текст + ",РабочееМестоНаим";	
							ИначеЕсли РасшифроватьПо = 3 Тогда	
							Запрос.Текст = Запрос.Текст + ",ПричинаРемонтаНаим";
							КонецЕсли;
					ИначеЕсли СортироватьПо = 2 Тогда
					Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО Количество";
					ИначеЕсли СортироватьПо = 3 Тогда
					Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО Количество УБЫВ";			
					КонецЕсли; 
Запрос.Текст = Запрос.Текст + "	ИТОГИ СУММА(Количество) ПО ОБЩИЕ";
	Если ВидОтчёта = 1 Тогда	
	Запрос.Текст = Запрос.Текст + ",Изделие";
	ИначеЕсли ВидОтчёта = 2 Тогда	
	Запрос.Текст = Запрос.Текст + ",РабочееМесто";	
	ИначеЕсли ВидОтчёта = 3 Тогда	
	Запрос.Текст = Запрос.Текст + ",ПричинаРемонта";
	КонецЕсли; 
		Если РасшифроватьПо = 1 Тогда	
		Запрос.Текст = Запрос.Текст + ",Изделие";
		ИначеЕсли РасшифроватьПо = 2 Тогда	
		Запрос.Текст = Запрос.Текст + ",РабочееМесто";	
		ИначеЕсли РасшифроватьПо = 3 Тогда	
		Запрос.Текст = Запрос.Текст + ",ПричинаРемонта";
		КонецЕсли;
Запрос.УстановитьПараметр("ДатаНач",НачалоДня(Отчет.Период.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон",КонецДня(Отчет.Период.ДатаОкончания));
Результат = Запрос.Выполнить();

Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
	ВыборкаПараметр = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПараметр.Следующий() Цикл
		СписокРемонтов.Очистить();
			Если ВидОтчёта = 1 Тогда
			Параметр = ВыборкаПараметр.Изделие;
			ИначеЕсли ВидОтчёта = 2 Тогда	
			Параметр = ВыборкаПараметр.РабочееМесто;	
			ИначеЕсли ВидОтчёта = 3 Тогда	
			Параметр = ВыборкаПараметр.ПричинаРемонта;
			КонецЕсли;
					//Если ТипЗнч(Параметр) = Тип("Null") Тогда	
					//Продолжить;
					//КонецЕсли; 		
				Если РасшифроватьПо > 0 Тогда
			    ВыборкаРасш = ВыборкаПараметр.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаРасш.Следующий() Цикл
	                ВыборкаДаты = ВыборкаРасш.Выбрать(ОбходРезультатаЗапроса.Прямой);
						Пока ВыборкаДаты.Следующий() Цикл
							Если СписокРемонтов.НайтиПоЗначению(ВыборкаДаты.Ссылка) = Неопределено Тогда	
							СписокРемонтов.Добавить(ВыборкаДаты.Ссылка);
							КонецЕсли;					
						Стр = 1;
							Для каждого Период Из СписокПериодов Цикл	
								Если (ВыборкаДаты.Дата >= Период.Значение.ДатаНачала) и (ВыборкаДаты.Дата <= Период.Значение.ДатаОкончания) Тогда
								ТЧ = ТаблицаРемонта.Добавить();
								ТЧ.Параметр = Параметр;									
								ТЧ.Установить(Стр,?(ВыборкаДаты.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаДаты.Количество));	
								Прервать;	
								КонецЕсли; 
							Стр = Стр + 1;
							КонецЦикла; 
						КонецЦикла;						
					КонецЦикла;
				Иначе
				ВыборкаДаты = ВыборкаПараметр.Выбрать(ОбходРезультатаЗапроса.Прямой);	
					Пока ВыборкаДаты.Следующий() Цикл
						Если СписокРемонтов.НайтиПоЗначению(ВыборкаДаты.Ссылка) = Неопределено Тогда	
						СписокРемонтов.Добавить(ВыборкаДаты.Ссылка);
						КонецЕсли; 
					Стр = 1;
						Для каждого Период Из СписокПериодов Цикл	
							Если (ВыборкаДаты.Дата >= Период.Значение.ДатаНачала) и (ВыборкаДаты.Дата <= Период.Значение.ДатаОкончания) Тогда
							ТЧ = ТаблицаРемонта.Добавить();
							ТЧ.Параметр = Параметр;	
							ТЧ.Установить(Стр,?(ВыборкаДаты.ЕдиницаИзмерения <> ЕдиницаИзмерения,1,ВыборкаДаты.Количество));									
							Прервать;	
							КонецЕсли; 
						Стр = Стр + 1;
						КонецЦикла;
					КонецЦикла;					
				КонецЕсли;
		КонецЦикла;
	КонецЦикла;
ТаблицаРемонта.Свернуть("Параметр",СписокКолонокСуммирования);	
	
Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
	ВыборкаПараметр = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПараметр.Следующий() Цикл
		КолНесоответствийВсего = ВыборкаПараметр.Ссылка;
			Если ВидОтчёта = 1 Тогда
			ОблПараметрОбщие.Параметры.Наименование = СокрЛП(ВыборкаПараметр.Изделие);
			ОблПараметрОбщие.Параметры.Расшифровка = ВыборкаПараметр.Изделие;		
			ИначеЕсли ВидОтчёта = 2 Тогда	
			ОблПараметрОбщие.Параметры.Наименование = СокрЛП(ВыборкаПараметр.РабочееМесто);	
			ОблПараметрОбщие.Параметры.Расшифровка = ВыборкаПараметр.РабочееМесто;				
			ИначеЕсли ВидОтчёта = 3 Тогда	
			ОблПараметрОбщие.Параметры.Наименование = СокрЛП(ВыборкаПараметр.ПричинаРемонта);
			ОблПараметрОбщие.Параметры.Расшифровка = ВыборкаПараметр.ПричинаРемонта;				
			КонецЕсли;
				//Если ТипЗнч(ОблПараметрОбщие.Параметры.Расшифровка) = Тип("Null") Тогда	
				//Продолжить;
				//КонецЕсли; 
		ТЧ = ТаблицаРемонта.Найти(ОблПараметрОбщие.Параметры.Расшифровка,"Параметр");
				Если ТипЗнч(ОблПараметрОбщие.Параметры.Расшифровка) = Тип("Неопределено") Тогда
				ОблПараметрОбщие.Параметры.Наименование = "не выбран";
				ОблПараметрОбщие.Параметры.Расшифровка = "#";
				ИначеЕсли ТипЗнч(ОблПараметрОбщие.Параметры.Расшифровка) = Тип("Null") Тогда
				ОблПараметрОбщие.Параметры.Наименование = "реквизит не предусмотрен";
				ИначеЕсли ОблПараметрОбщие.Параметры.Расшифровка.Пустая() Тогда
				ОблПараметрОбщие.Параметры.Наименование = "не выбран";
				КонецЕсли; 
		ТабДок.Вывести(ОблПараметрОбщие);
		Стр = 1;
			Для каждого Период Из СписокПериодов Цикл
			КоличествоДляРасчёта = СписокОбщихКоличеств[Стр-1].Значение;
			ОблПараметрПериод.Параметры.КолНесоответствий = ?(ТЧ <> Неопределено,ТЧ.Получить(Стр),0);
			ОблПараметрПериод.Параметры.Процент = ?(ТаблицаРемонта.Итог("к"+Строка(Период.ПолучитьИдентификатор())) > 0,Формат(ОблПараметрПериод.Параметры.КолНесоответствий*100/ТаблицаРемонта.Итог("к"+Строка(Период.ПолучитьИдентификатор())),"ЧЦ=6; ЧДЦ=2"),0);
			ОблПараметрПериод.Параметры.КолНесоответствийНа100 = Формат(?(КоличествоДляРасчёта > 0,ОблПараметрПериод.Параметры.КолНесоответствий*100/КоличествоДляРасчёта,0),"ЧЦ=6; ЧДЦ=2");
			ТабДок.Присоединить(ОблПараметрПериод);
			Стр = Стр + 1;
			КонецЦикла; 			
				Если РасшифроватьПо > 0 Тогда
				ТабДок.НачатьГруппуСтрок("По параметру", Истина);
			    ВыборкаРасш = ВыборкаПараметр.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаРасш.Следующий() Цикл
						Если РасшифроватьПо = 1 Тогда	
						ОблРасшифровкаОбщие.Параметры.Наименование = СокрЛП(ВыборкаРасш.Изделие);
						ОблРасшифровкаОбщие.Параметры.Расшифровка = ВыборкаРасш.Изделие;			
						ИначеЕсли РасшифроватьПо = 2 Тогда	
						ОблРасшифровкаОбщие.Параметры.Наименование = СокрЛП(ВыборкаРасш.РабочееМесто);
						ОблРасшифровкаОбщие.Параметры.Расшифровка = ВыборкаРасш.РабочееМесто;						
						ИначеЕсли РасшифроватьПо = 3 Тогда	
						ОблРасшифровкаОбщие.Параметры.Наименование = СокрЛП(ВыборкаРасш.ПричинаРемонта);
						ОблРасшифровкаОбщие.Параметры.Расшифровка = ВыборкаРасш.ПричинаРемонта;					
						КонецЕсли;
					ТабДок.Вывести(ОблРасшифровкаОбщие);
					ВыборкаДаты = ВыборкаРасш.Выбрать(ОбходРезультатаЗапроса.Прямой);
					Стр = 1;
						Для каждого Период Из СписокПериодов Цикл
						КоличествоДляРасчёта = СписокОбщихКоличеств[Стр-1].Значение;
						Кол = ?(ТЧ <> Неопределено,ТЧ.Получить(Стр),0);
						СписокРемонтов.Очистить();
						КолНесоответствий = 0;
						ВыборкаДаты.Сбросить();	
							Пока ВыборкаДаты.Следующий() Цикл
								Если СписокРемонтов.НайтиПоЗначению(ВыборкаДаты.Ссылка) = Неопределено Тогда	
								СписокРемонтов.Добавить(ВыборкаДаты.Ссылка);
								КонецЕсли; 
									Если (ВыборкаДаты.Дата >= Период.Значение.ДатаНачала) и (ВыборкаДаты.Дата <= Период.Значение.ДатаОкончания) Тогда
									КолНесоответствий = КолНесоответствий + 1;	
									КонецЕсли;
							КонецЦикла; 
						ОблРасшифровкаПериод.Параметры.КолНесоответствий = КолНесоответствий;
						ОблРасшифровкаПериод.Параметры.Процент = ?(ТаблицаРемонта.Итог("к"+Строка(Период.ПолучитьИдентификатор())) > 0,Формат(КолНесоответствий*100/ТаблицаРемонта.Итог("к"+Строка(Период.ПолучитьИдентификатор())),"ЧЦ=6; ЧДЦ=2"),0);
						ОблРасшифровкаПериод.Параметры.КолНесоответствийНа100 = ?(КоличествоДляРасчёта > 0,Формат(КолНесоответствий*100/КоличествоДляРасчёта,"ЧЦ=6; ЧДЦ=2"),0);
						ТабДок.Присоединить(ОблРасшифровкаПериод);
						Стр = Стр + 1;
						КонецЦикла;						
					КонецЦикла;
				ТабДок.ЗакончитьГруппуСтрок();	
				КонецЕсли; 
		КонецЦикла;
	КонецЦикла;
ТабДок.Вывести(ОблКонецОбщие);
Стр = 0;
	Для каждого Период Из СписокПериодов Цикл
	КоличествоДляРасчёта = СписокОбщихКоличеств[Стр].Значение;
	ОблКонецПериод.Параметры.КолНесоответствийВсего = ТаблицаРемонта.Итог("к"+Строка(Период.ПолучитьИдентификатор()));
	ОблКонецПериод.Параметры.КолНесоответствийНа100Всего = ?(КоличествоДляРасчёта > 0,Формат(ОблКонецПериод.Параметры.КолНесоответствийВсего*100/КоличествоДляРасчёта,"ЧЦ=6; ЧДЦ=2"),0);
	ТабДок.Присоединить(ОблКонецПериод);
	Стр = Стр + 1;
	КонецЦикла; 
ТабДок.ФиксацияСверху = 4;	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		Если ВидРасчёта = 1 Тогда
			Если Подразделение.Пустая() и СписокЛинеекДляРасчёта.Количество() = 0 Тогда
		    Сообщить("Выберите подразделение или список линеек для расчёта!");
			Возврат;
			КонецЕсли;
		Иначе
			Если Подразделение.Пустая() Тогда
		    Сообщить("Выберите подразделение для расчёта!");
			Возврат;
			КонецЕсли;		
		КонецЕсли;
	СформироватьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
Период = СписокПериодов[0].Значение;
СписокПараметров = Новый Структура();
	Если СписокЛинеек.Количество() > 0 Тогда
	СписокПараметров.Вставить("Линейка",СписокЛинеек);	
	КонецЕсли;
		Если СписокРабочихМест.Количество() > 0 Тогда
		СписокПараметров.Вставить("РабочееМесто",СписокРабочихМест);	
		КонецЕсли;
			Если СписокПодразделений.Количество() > 0 Тогда
			СписокПараметров.Вставить("Подразделение",СписокПодразделений);
			КонецЕсли;    
				Если ВидОтчёта = 1 Тогда
				СписокПараметров.Вставить("Изделие",Расшифровка);
				ВариантОтчёта = "ПоИзделиям";
				ИначеЕсли ВидОтчёта = 2 Тогда
				СписокПараметров.Вставить("РабочееМесто",Расшифровка);
				ВариантОтчёта = "ПоРабочимМестам";
				ИначеЕсли ВидОтчёта = 3 Тогда
				СписокПараметров.Вставить("ПричинаРемонта",Расшифровка);
				ВариантОтчёта = "ПоПричинамРемонта";
				КонецЕсли;
	Для каждого Период Из СписокПериодов Цикл
	ИмяОтчета = "ОтчётПоРемонтнымКартамПолный_СКД";
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
	ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьПользовательскиеНастройкиОтчетаСКД(ИмяОтчета,Период.Значение.ДатаНачала,Период.Значение.ДатаОкончания,СписокПараметров,ВариантОтчёта));
	ПараметрыФормы.Вставить("КлючВарианта",ВариантОтчёта); 
	ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы,,Истина);
	КонецЦикла; 
КонецПроцедуры
