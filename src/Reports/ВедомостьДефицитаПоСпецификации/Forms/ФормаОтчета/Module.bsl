
&НаСервере
Процедура РаскрытьНаМПЗ(ЭтапСпецификации,КолУзла,ТаблицаМПЗ,ТаблицаАналогов)
НормРасх = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н_М(ЭтапСпецификации,ТекущаяДата());
	Пока НормРасх.Следующий() Цикл
		Если ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
		ТЧ = ТаблицаМПЗ.Добавить();
		ТЧ.МПЗ = НормРасх.Элемент;
		ТЧ.Количество = ПолучитьБазовоеКоличество(НормРасх.Норма,НормРасх.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла;
		ТабАналогов = ОбщегоНазначенияПовтИсп.ПолучитьАналогиНормРасходов(НормРасх.Ссылка,ТекущаяДата());
			Для каждого ТЧ_ТА Из ТабАналогов Цикл
			ТЧ = ТаблицаАналогов.Добавить();
			ТЧ.МПЗ = НормРасх.Элемент;
			ТЧ.Аналог = ТЧ_ТА.Элемент;
			ТЧ.Количество = ПолучитьБазовоеКоличество(ТЧ_ТА.Норма,ТЧ_ТА.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла;	
			КонецЦикла;
		Иначе
		РаскрытьНаМПЗ(НормРасх.Элемент,ПолучитьБазовоеКоличество(НормРасх.Норма,НормРасх.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла,ТаблицаМПЗ,ТаблицаАналогов);
		КонецЕсли;  
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
Запрос = Новый Запрос;
ТабДок = Новый ТабличныйДокумент;
Массив = Новый Массив;
ТаблицаМПЗ = Новый ТаблицаЗначений;
ТаблицаАналогов = Новый ТаблицаЗначений;

Массив.Добавить(Тип("СправочникСсылка.Номенклатура"));
Массив.Добавить(Тип("СправочникСсылка.Материалы"));

ТаблицаМПЗ.Колонки.Добавить("МПЗ",Новый ОписаниеТипов(Массив));
ТаблицаМПЗ.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(17,6)));

ТаблицаАналогов.Колонки.Добавить("МПЗ",Новый ОписаниеТипов(Массив));
ТаблицаАналогов.Колонки.Добавить("Аналог",Новый ОписаниеТипов(Массив));
ТаблицаАналогов.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(17,6)));

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблМПЗ = Макет.ПолучитьОбласть("МПЗ");
ОблАналог = Макет.ПолучитьОбласть("Аналог");
ОблМестоХранения = Макет.ПолучитьОбласть("МестоХранения");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.Изделие = Отчет.Спецификация;
ОблШапка.Параметры.Количество = Отчет.Количество;
ТабДок.Вывести(ОблШапка);
РаскрытьНаМПЗ(Отчет.Спецификация,Отчет.Количество,ТаблицаМПЗ,ТаблицаАналогов);
ТаблицаМПЗ.Свернуть("МПЗ","Количество");
ТаблицаМПЗ.Сортировать("МПЗ");
ТаблицаАналогов.Свернуть("МПЗ,Аналог","Количество");
ТаблицаАналогов.Сортировать("МПЗ,Аналог");
Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОстатки.МПЗ КАК МПЗ,
	|	МестаХраненияОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	МестаХраненияОстатки.МестоХранения КАК МестоХранения
	|ИЗ
	|	РегистрНакопления.МестаХранения.Остатки КАК МестаХраненияОстатки
	|ГДЕ
	|	МестаХраненияОстатки.МестоХранения В ИЕРАРХИИ(&СписокМестХранения)
	|ИТОГИ
	|	СУММА(КоличествоОстаток)
	|ПО
	|	МПЗ,
	|	МестоХранения";
Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для каждого ТЧ Из ТаблицаМПЗ Цикл
	Кол = ТЧ.Количество;	
	ОблМПЗ.Параметры.МПЗ = ТЧ.МПЗ;
	ОблМПЗ.Параметры.Кол = Кол;
	ОблМПЗ.Параметры.ЕдиницаИзмерения = ТЧ.МПЗ.ЕдиницаИзмерения;
	ВыборкаМПЗ.Сбросить();
	КолНаСкладе = 0;
		Пока ВыборкаМПЗ.НайтиСледующий(Новый Структура("МПЗ",ТЧ.МПЗ)) Цикл
		КолНаСкладе = ВыборкаМПЗ.КоличествоОстаток;	
		КонецЦикла;
	ОблМПЗ.Параметры.КолНаСкладе = КолНаСкладе;
		Если КолНаСкладе < Кол Тогда
		КолДефицит = ?(КолНаСкладе < 0,0,КолНаСкладе)-Кол;
		Иначе	
		КолДефицит = 0;
		КонецЕсли; 
	ОблМПЗ.Параметры.КолДефицит = КолДефицит;
	ТабДок.Вывести(ОблМПЗ);
	ТабДок.НачатьГруппуСтрок("МПЗ", Ложь);
	ВыборкаМПЗ.Сбросить();
		Пока ВыборкаМПЗ.НайтиСледующий(Новый Структура("МПЗ",ТЧ.МПЗ)) Цикл
		ВыборкаМестаХранения = ВыборкаМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаМестаХранения.НайтиСледующий(Новый Структура("МПЗ",ТЧ.МПЗ)) Цикл
			ОблМестоХранения.Параметры.МестоХранения = ВыборкаМестаХранения.МестоХранения;
			ОблМестоХранения.Параметры.КолНаСкладе = ВыборкаМестаХранения.КоличествоОстаток;
			ТабДок.Вывести(ОблМестоХранения);
			КонецЦикла;	
		КонецЦикла;
	ВыборкаАналогов = ТаблицаАналогов.НайтиСтроки(Новый Структура("МПЗ",ТЧ.МПЗ));
			Для к = 0 По ВыборкаАналогов.Количество()-1 Цикл
			Кол = ВыборкаАналогов[к].Количество;
			ОблАналог.Параметры.МПЗ = ВыборкаАналогов[к].Аналог;
			ОблАналог.Параметры.Кол = Кол;
			ОблАналог.Параметры.ЕдиницаИзмерения = ВыборкаАналогов[к].Аналог.ЕдиницаИзмерения;
			ВыборкаМПЗ.Сбросить();
			КолНаСкладе = 0;
				Пока ВыборкаМПЗ.НайтиСледующий(Новый Структура("МПЗ",ВыборкаАналогов[к].Аналог)) Цикл
				КолНаСкладе = ВыборкаМПЗ.КоличествоОстаток;	
				КонецЦикла;
			ОблАналог.Параметры.КолНаСкладе = КолНаСкладе;
				Если КолНаСкладе < Кол Тогда
				КолДефицит = ?(КолНаСкладе < 0,0,КолНаСкладе)-Кол;
				Иначе	
				КолДефицит = 0;
				КонецЕсли; 
			ОблАналог.Параметры.КолДефицит = КолДефицит;
			ТабДок.Вывести(ОблАналог);
			ВыборкаМПЗ.Сбросить();
				Пока ВыборкаМПЗ.НайтиСледующий(Новый Структура("МПЗ",ВыборкаАналогов[к].Аналог)) Цикл
				ВыборкаМестаХранения = ВыборкаМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаМестаХранения.НайтиСледующий(Новый Структура("МПЗ",ВыборкаАналогов[к].Аналог)) Цикл
					ОблМестоХранения.Параметры.МестоХранения = ВыборкаМестаХранения.МестоХранения;
					ОблМестоХранения.Параметры.КолНаСкладе = ВыборкаМестаХранения.КоличествоОстаток;
					ТабДок.Вывести(ОблМестоХранения);
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
	ТабДок.ЗакончитьГруппуСтрок(); 
	КонецЦикла;
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 2;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	СформироватьНаСервере();
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Спецификация") Тогда
	Отчет.Спецификация = Параметры.Спецификация;
	Отчет.Количество = 1;
	КонецЕсли; 
КонецПроцедуры
