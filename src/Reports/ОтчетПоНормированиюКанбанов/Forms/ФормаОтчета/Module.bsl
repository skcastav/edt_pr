
&НаСервере
Процедура ИсключитьПеориод(ВыходнойДень,Линейка,ТаблицаИзделий)	
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииКанбан.Изделие КАК Изделие,
	|	ВыпускПродукцииКанбан.Количество КАК Количество,
	|	ВыпускПродукцииКанбан.Изделие.Наименование КАК ИзделиеНаименование
	|ИЗ
	|	Документ.ВыпускПродукцииКанбан КАК ВыпускПродукцииКанбан
	|ГДЕ
	|	ВыпускПродукцииКанбан.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииКанбан.ДокументОснование.Линейка = &Линейка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИзделиеНаименование
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Изделие"; 
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ВыходнойДень));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(ВыходнойДень));
Запрос.УстановитьПараметр("Линейка", Линейка); 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаИзделия = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИзделия.Следующий() Цикл
	Выборка = ТаблицаИзделий.Найти(ВыборкаИзделия.Изделие,"Изделие");
	Выборка.Количество = Выборка.Количество - ВыборкаИзделия.Количество;
	КонецЦикла;
КонецПроцедуры 

&НаСервере
Процедура СформироватьНаСервере()
СписокТО = Новый СписокЗначений;
ТаблицаИзделий = Новый ТаблицаЗначений;
ТаблицаТО = Новый ТаблицаЗначений;

ТаблицаИзделий.Колонки.Добавить("Изделие",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
ТаблицаИзделий.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)));

ТаблицаТО.Колонки.Добавить("ТО",Новый ОписаниеТипов("СправочникСсылка.ТехОперации"));
ТаблицаТО.Колонки.Добавить("Линейка",Новый ОписаниеТипов("СправочникСсылка.Линейки"));
ТаблицаТО.Колонки.Добавить("СуммаТО",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)));

ГруппаТехОпераций = Справочники.ТехОперации.НайтиПоРеквизиту("Подразделение",СписокЛинеек[0].Значение.Подразделение);
ВыборкаТО = Справочники.ТехОперации.ВыбратьИерархически(ГруппаТехОпераций);
	Пока ВыборкаТО.Следующий() Цикл
		Если ВыборкаТО.ЭтоГруппа Тогда
		Продолжить;	
		КонецЕсли;
	СписокТО.Добавить(ВыборкаТО.Ссылка,ВыборкаТО.Ссылка.Код);
		Для каждого Линейка Из СписокЛинеек Цикл
			Если Линейка.Значение.ЭтоГруппа Тогда
			ВыборкаЛинейки = Справочники.Линейки.ВыбратьИерархически(Линейка.Значение);
				Пока ВыборкаЛинейки.Следующий() Цикл					
					Если Не ВыборкаЛинейки.Ссылка.ЭтоГруппа Тогда
					ТЧ = ТаблицаТО.Добавить();
					ТЧ.ТО = ВыборкаТО.Ссылка;
					ТЧ.Линейка = ВыборкаЛинейки.Ссылка;
					КонецЕсли;			
				КонецЦикла; 
			Иначе	
			ТЧ = ТаблицаТО.Добавить();
			ТЧ.ТО = ВыборкаТО.Ссылка;
			ТЧ.Линейка = Линейка.Значение;			
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
СписокТО.СортироватьПоПредставлению();
ТабДок.Очистить();

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
	Если ЗначениеЗаполнено(ЭтаФорма.Параметры.Документ) Тогда
	Макет = ОбъектЗн.ПолучитьМакет("МакетДляДокумента");
	Иначе
	Макет = ОбъектЗн.ПолучитьМакет("Макет");
	КонецЕсли;

ОблШапкаОбщая = Макет.ПолучитьОбласть("Шапка|Общая");
ОблШапкаТехОперация = Макет.ПолучитьОбласть("Шапка|ТехОперация");
ОблШапкаИтого = Макет.ПолучитьОбласть("Шапка|Итого");
ОблЛинейкаОбщая = Макет.ПолучитьОбласть("Линейка|Общая");
ОблЛинейкаТехОперация = Макет.ПолучитьОбласть("Линейка|ТехОперация");
ОблЛинейкаИтого = Макет.ПолучитьОбласть("Линейка|Итого");
ОблЛинейкаИтогоОбщая = Макет.ПолучитьОбласть("ЛинейкаИтого|Общая");
ОблЛинейкаИтогоТехОперация = Макет.ПолучитьОбласть("ЛинейкаИтого|ТехОперация");
ОблЛинейкаИтогоИтого = Макет.ПолучитьОбласть("ЛинейкаИтого|Итого");
ОблИзделиеОбщая = Макет.ПолучитьОбласть("Изделие|Общая");
ОблИзделиеТехОперация = Макет.ПолучитьОбласть("Изделие|ТехОперация");
ОблИзделиеИтого = Макет.ПолучитьОбласть("Изделие|Итого");
ОблКонецОбщая = Макет.ПолучитьОбласть("Конец|Общая");
ОблКонецТехОперация = Макет.ПолучитьОбласть("Конец|ТехОперация");
ОблКонецИтого = Макет.ПолучитьОбласть("Конец|Итого");

ОблШапкаОбщая.Параметры.ДатаНач = Формат(Отчет.Период.ДатаНачала,"ДФ=dd.MM.yyyy");
ОблШапкаОбщая.Параметры.ДатаКон = Формат(Отчет.Период.ДатаОкончания,"ДФ=dd.MM.yyyy");
ОблШапкаОбщая.Параметры.ВидОтчёта = ?(БезУчётаВыходныхДней,"Без учёта выходных дней: "+СписокВыходныхДней,"");
	Если ЗначениеЗаполнено(ЭтаФорма.Параметры.Документ) Тогда
	ОблШапкаОбщая.Параметры.ВидДокумента = ТипЗнч(ЭтаФорма.Параметры.Документ);
	ОблШапкаОбщая.Параметры.Подразделение = ЭтаФорма.Параметры.Документ.Подразделение;
	КонецЕсли;
ТабДок.Вывести(ОблШапкаОбщая);
	Для каждого ТО Из СписокТО Цикл	
	ОблШапкаТехОперация.Параметры.ТО = ТО.Значение;
	ТабДок.Присоединить(ОблШапкаТехОперация);				
	КонецЦикла;
ТабДок.Присоединить(ОблШапкаИтого);

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииКанбан.ДокументОснование.Линейка КАК Линейка,
	|	ВыпускПродукцииКанбан.Изделие КАК Изделие,
	|	ВыпускПродукцииКанбан.Количество КАК Количество,
	|	ВыпускПродукцииКанбан.ДокументОснование.Линейка.Наименование КАК ДокументОснованиеЛинейкаНаименование,
	|	ВыпускПродукцииКанбан.Изделие.Наименование КАК ИзделиеНаименование
	|ИЗ
	|	Документ.ВыпускПродукцииКанбан КАК ВыпускПродукцииКанбан
	|ГДЕ
	|	ВыпускПродукцииКанбан.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииКанбан.ДокументОснование.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументОснованиеЛинейкаНаименование,
	|	ИзделиеНаименование
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Линейка,
	|	Изделие"; 
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Отчет.Период.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Отчет.Период.ДатаОкончания));
Запрос.УстановитьПараметр("СписокЛинеек", СписокЛинеек);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаЛинейки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
СуммаЛинейкаВсего = 0;
	Пока ВыборкаЛинейки.Следующий() Цикл
	ТаблицаИзделий.Очистить();
	СуммаЛинейкаИтого = 0;
	ОблЛинейкаОбщая.Параметры.Линейка = ВыборкаЛинейки.Линейка;
	ТабДок.Вывести(ОблЛинейкаОбщая);
		Для каждого ТО Из СписокТО Цикл
		ТабДок.Присоединить(ОблЛинейкаТехОперация);				
		КонецЦикла;
	ТабДок.Присоединить(ОблЛинейкаИтого);
	ТабДок.НачатьГруппуСтрок("Этап", Истина);
	ВыборкаИзделия = ВыборкаЛинейки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаИзделия.Следующий() Цикл
		ТЧ = ТаблицаИзделий.Добавить();
		ТЧ.Изделие = ВыборкаИзделия.Изделие;
		ТЧ.Количество = ВыборкаИзделия.Количество;
		КонецЦикла;
			Если БезУчётаВыходныхДней Тогда
				Для каждого Стр Из СписокВыходныхДней Цикл
				ИсключитьПеориод(Стр.Значение,ВыборкаЛинейки.Линейка,ТаблицаИзделий);
				КонецЦикла;
			КонецЕсли;
				Для каждого ТЧ Из ТаблицаИзделий Цикл 
				СуммаИзделиеИтого = 0;
				ОблИзделиеОбщая.Параметры.Наименование = СокрЛП(ТЧ.Изделие.Наименование);
				ОблИзделиеОбщая.Параметры.Изделие = ТЧ.Изделие;
				ОблИзделиеОбщая.Параметры.Количество = ТЧ.Количество;
				ТабДок.Вывести(ОблИзделиеОбщая);
					Для каждого ТО Из СписокТО Цикл
					НормыВремени = РегистрыСведений.НормыВремени.ПолучитьПоследнее(Отчет.Период.ДатаНачала,Новый Структура("МПЗ,ТехОперация",ТЧ.Изделие,ТО.Значение));
					НормыТО = РегистрыСведений.НормыТО.ПолучитьПоследнее(Отчет.Период.ДатаНачала,Новый Структура("ТехОперация",ТО.Значение));
					Расценка = Окр(НормыВремени.НормаВремени/60*НормыТО.Стоимость,2,РежимОкругления.Окр15как20);
					ОблИзделиеТехОперация.Параметры.НВ = НормыВремени.НормаВремени;
					ОблИзделиеТехОперация.Параметры.Расценка = Расценка;
					Сумма = Расценка*ТЧ.Количество;
					ОблИзделиеТехОперация.Параметры.Сумма = Сумма;
					ТабДок.Присоединить(ОблИзделиеТехОперация);
					СуммаИзделиеИтого = СуммаИзделиеИтого + Сумма;
					Выборка = ТаблицаТО.НайтиСтроки(Новый Структура("ТО,Линейка",ТО.Значение,ВыборкаЛинейки.Линейка));
					Выборка[0].СуммаТО = Выборка[0].СуммаТО + Сумма;				
					КонецЦикла;
				ОблИзделиеИтого.Параметры.СуммаИзделиеИтого = СуммаИзделиеИтого;
				ТабДок.Присоединить(ОблИзделиеИтого);
				СуммаЛинейкаИтого = СуммаЛинейкаИтого + СуммаИзделиеИтого;
				КонецЦикла;	
	ТабДок.ЗакончитьГруппуСтрок();
	ОблЛинейкаИтогоОбщая.Параметры.Линейка = ВыборкаЛинейки.Линейка;
	ТабДок.Вывести(ОблЛинейкаИтогоОбщая);
		Для каждого ТО Из СписокТО Цикл
		Выборка = ТаблицаТО.НайтиСтроки(Новый Структура("ТО,Линейка",ТО.Значение,ВыборкаЛинейки.Линейка));
		ОблЛинейкаИтогоТехОперация.Параметры.СуммаИтого = Выборка[0].СуммаТО;
		ТабДок.Присоединить(ОблЛинейкаИтогоТехОперация);				
		КонецЦикла;
	ОблЛинейкаИтогоИтого.Параметры.СуммаЛинейкаИтого = СуммаЛинейкаИтого;
	ТабДок.Присоединить(ОблЛинейкаИтогоИтого);
	СуммаЛинейкаВсего = СуммаЛинейкаВсего + СуммаЛинейкаИтого;
	КонецЦикла;
ТаблицаТО.Свернуть("ТО","СуммаТО");
	Если ЗначениеЗаполнено(ЭтаФорма.Параметры.Документ) Тогда
	ОблКонецОбщая.Параметры.Мастер = ЭтаФорма.Параметры.Документ.Автор;
	ОблКонецОбщая.Параметры.ЗаместительНачальникаПоУправлениюРесурсами = ОбщийМодульВызовСервера.ПолучитьСотрудникаПоДолжности("Заместитель начальника по управлению ресурсами");
	ОблКонецОбщая.Параметры.НачальникПЭО = ОбщийМодульВызовСервера.ПолучитьСотрудникаПоДолжности("Начальник ПЭО");
	КонецЕсли;
ТабДок.Вывести(ОблКонецОбщая);
	Для каждого ТО Из СписокТО Цикл
	Выборка = ТаблицаТО.Найти(ТО.Значение,"ТО");
	ОблКонецТехОперация.Параметры.СуммаВсего = Выборка.СуммаТО;
	ТабДок.Присоединить(ОблКонецТехОперация);				
	КонецЦикла;
ОблКонецИтого.Параметры.СуммаЛинейкаВсего = СуммаЛинейкаВсего;
ТабДок.Присоединить(ОблКонецИтого);
ТабДок.ФиксацияСверху = 4;
ТабДок.ФиксацияСлева = 2;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		Если ОбщийМодульВызовСервера.РазрешенныйСписокЛинеек(СписокЛинеек) Тогда
		СформироватьНаСервере();		
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыДокумента(Документ)
Парам = Новый Структура("Линейка,Дата,ВедомостьВыходногоДня,БезУчётаВыходныхДней",Документ.Линейка,Документ.Дата,Документ.ВедомостьВыходногоДня,Документ.БезУчётаВыходныхДней);
Возврат(Парам);
КонецФункции

&НаСервере
Функция ПолучитьСписокВыходныхДней(Документ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	БригаднаяСделка.Дата
	|ИЗ
	|	Документ.БригаднаяСделка КАК БригаднаяСделка
	|ГДЕ
	|	БригаднаяСделка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И БригаднаяСделка.Подразделение = &Подразделение
	|	И БригаднаяСделка.ВедомостьВыходногоДня = ИСТИНА
	|	И БригаднаяСделка.Комментарий ПОДОБНО &Комментарий";
Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Документ.Дата));
Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Документ.Дата));
Запрос.УстановитьПараметр("Подразделение", Документ.Подразделение);
Запрос.УстановитьПараметр("Комментарий", Документ.Комментарий);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокВыходныхДней.Добавить(ВыборкаДетальныеЗаписи.Дата);
	КонецЦикла;
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(ЭтаФорма.Параметры.Документ) Тогда
	ПараметрыДокумента = ПолучитьПараметрыДокумента(ЭтаФорма.Параметры.Документ);	
	СписокЛинеек.Очистить();
	СписокЛинеек.Добавить(ПараметрыДокумента.Линейка);
		Если ПараметрыДокумента.ВедомостьВыходногоДня Тогда        
		Отчет.Период.ДатаНачала = ПараметрыДокумента.Дата;			
		Отчет.Период.ДатаОкончания = ПараметрыДокумента.Дата;
		Иначе
		Отчет.Период.ДатаНачала = НачалоМесяца(ПараметрыДокумента.Дата);			
		Отчет.Период.ДатаОкончания = КонецМесяца(ПараметрыДокумента.Дата);		
		КонецЕсли;
	БезУчётаВыходныхДней = ПараметрыДокумента.БезУчётаВыходныхДней;
		Если БезУчётаВыходныхДней Тогда
		СписокВыходныхДней.Очистить();
		ПолучитьСписокВыходныхДней(ЭтаФорма.Параметры.Документ);		
		КонецЕсли;
	Сформировать(Неопределено);   	
	КонецЕсли; 
КонецПроцедуры
