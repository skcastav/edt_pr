
&НаСервере
Процедура СформироватьНаСервере()
	Если СписокПериодов.Количество() = 0 Тогда
	Сообщить("Выберите хотя бы один период в списке периодов");
	КонецЕсли; 
ТабДок.Очистить();
ТаблицаБрака = Новый ТаблицаЗначений;
Массив = Новый Массив;
СписокБрака = Новый СписокЗначений;

Массив.Добавить(Тип("СправочникСсылка.Номенклатура"));
Массив.Добавить(Тип("СправочникСсылка.РабочиеМестаЛинеек"));
Массив.Добавить(Тип("СправочникСсылка.ВидыНеисправностей"));
Массив.Добавить(Тип("СправочникСсылка.Материалы"));
Массив.Добавить(Тип("СправочникСсылка.КомментарииНеисправностей"));

ОписаниеТиповСправочников = Новый ОписаниеТипов(Массив);

ТаблицаБрака.Колонки.Добавить("Параметр",ОписаниеТиповСправочников);

Макет = Отчеты.ОтчётПоБракуПолуфабрикатовАналитический.ПолучитьМакет("Макет");

ОблШапкаОбщие = Макет.ПолучитьОбласть("Шапка|Общие");
ОблПараметрОбщие = Макет.ПолучитьОбласть("Параметр|Общие");
ОблРасшифровкаОбщие = Макет.ПолучитьОбласть("Расшифровка|Общие");
ОблКонецОбщие = Макет.ПолучитьОбласть("Конец|Общие");
ОблШапкаПериод = Макет.ПолучитьОбласть("Шапка|Период");
ОблПараметрПериод = Макет.ПолучитьОбласть("Параметр|Период");
ОблРасшифровкаПериод = Макет.ПолучитьОбласть("Расшифровка|Период");
ОблКонецПериод = Макет.ПолучитьОбласть("Конец|Период");
	
СписокКолонокСуммирования = "";
Отчет.Период.ДатаНачала = ТекущаяДата();
Отчет.Период.ДатаОкончания = Дата(1,1,1);
	Для каждого Период Из СписокПериодов Цикл
	Отчет.Период.ДатаНачала = Мин(Отчет.Период.ДатаНачала,Период.Значение.ДатаНачала);
	Отчет.Период.ДатаОкончания = Макс(Отчет.Период.ДатаОкончания,Период.Значение.ДатаОкончания);
	ТаблицаБрака.Колонки.Добавить("к"+Строка(Период.ПолучитьИдентификатор()),Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(7,0)));
	СписокКолонокСуммирования = СписокКолонокСуммирования+"к"+Строка(Период.ПолучитьИдентификатор())+",";
	КонецЦикла; 
СписокКолонокСуммирования = Лев(СписокКолонокСуммирования,СтрДлина(СписокКолонокСуммирования)-1);

ОблШапкаОбщие.Параметры.ДатаНач = Формат(Отчет.Период.ДатаНачала,"ДФ=dd.MM.yyyy");
ОблШапкаОбщие.Параметры.ДатаКон = Формат(Отчет.Период.ДатаОкончания,"ДФ=dd.MM.yyyy");
ОблШапкаОбщие.Параметры.ДатаВывода = ТекущаяДата();
ТабДок.Вывести(ОблШапкаОбщие);
	Для каждого Период Из СписокПериодов Цикл
	ОблШапкаПериод.Параметры.Период = Период.Значение;
	ТабДок.Присоединить(ОблШапкаПериод);
	КонецЦикла;

Запрос = Новый Запрос;

Запрос.Текст =
	"ВЫБРАТЬ
	|	БракПроизводстваОбороты.Изделие,
	|	БракПроизводстваОбороты.РабочееМесто,
	|	БракПроизводстваОбороты.РабочееМесто.Наименование КАК РабочееМестоНаим,
	|	БракПроизводстваОбороты.Регистратор.ВидНеисправности КАК ВидНеисправности,
	|	БракПроизводстваОбороты.Регистратор.ВидНеисправности.Наименование КАК ВидНеисправностиНаим,
	|	БракПроизводстваОбороты.Регистратор.ВидНеисправности.Родитель КАК МестоВозникновенияБрака,
	|	БракПроизводстваОбороты.Регистратор.ВидНеисправности.Родитель.Наименование КАК МестоВозникновенияБракаНаим,
	|	БракПроизводстваОбороты.Регистратор КАК Ссылка,
	|	БракПроизводстваОбороты.Документ
	|ИЗ
	|	РегистрНакопления.БракПроизводства.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК БракПроизводстваОбороты
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(БракПроизводстваОбороты.Регистратор) = ТИП(Документ.СписаниеМПЗПрочее)"; 
	Если СписокЛинеек.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И БракПроизводстваОбороты.Документ.РабочееМесто.Линейка В(&СписокЛинеек)";
	Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
	КонецЕсли;
		Если Не ПодразделениеВыбраковщик.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И БракПроизводстваОбороты.Документ.РабочееМесто.Линейка.Подразделение = &ПодразделениеВыбраковщик";
		Запрос.УстановитьПараметр("ПодразделениеВыбраковщик",ПодразделениеВыбраковщик);
		КонецЕсли;
			Если Не ПодразделениеПоставщик.Пустая() Тогда
			Запрос.Текст = Запрос.Текст + " И БракПроизводстваОбороты.Изделие.Канбан.Подразделение = &ПодразделениеПоставщик";
			Запрос.УстановитьПараметр("ПодразделениеПоставщик",ПодразделениеПоставщик);
			КонецЕсли;	
				Если СортироватьПо = 1 Тогда
					Если ВидОтчёта = 1 Тогда	
					Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО Изделие";
					ИначеЕсли ВидОтчёта = 2 Тогда	
					Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО РабочееМестоНаим";	
					ИначеЕсли ВидОтчёта = 3 Тогда	
					Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ВидНеисправностиНаим";
					ИначеЕсли ВидОтчёта = 4 Тогда	
					Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО МестоВозникновенияБракаНаим";
					КонецЕсли; 
						Если РасшифроватьПо = 1 Тогда	
						Запрос.Текст = Запрос.Текст + ",Изделие";
						ИначеЕсли РасшифроватьПо = 2 Тогда	
						Запрос.Текст = Запрос.Текст + ",РабочееМестоНаим";	
						ИначеЕсли РасшифроватьПо = 3 Тогда	
						Запрос.Текст = Запрос.Текст + ",ВидНеисправностиНаим";
						ИначеЕсли РасшифроватьПо = 4 Тогда	
						Запрос.Текст = Запрос.Текст + ",МестоВозникновенияБракаНаим";
						КонецЕсли;
				ИначеЕсли СортироватьПо = 2 Тогда
				Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО Ссылка";
				ИначеЕсли СортироватьПо = 3 Тогда
				Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО Ссылка УБЫВ";			
				КонецЕсли; 
Запрос.Текст = Запрос.Текст + "	ИТОГИ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Ссылка) ПО ОБЩИЕ";
	Если ВидОтчёта = 1 Тогда	
	Запрос.Текст = Запрос.Текст + ",Изделие";
	ИначеЕсли ВидОтчёта = 2 Тогда	
	Запрос.Текст = Запрос.Текст + ",РабочееМесто";	
	ИначеЕсли ВидОтчёта = 3 Тогда	
	Запрос.Текст = Запрос.Текст + ",ВидНеисправности";
	ИначеЕсли ВидОтчёта = 4 Тогда	
	Запрос.Текст = Запрос.Текст + ",МестоВозникновенияБрака";
	КонецЕсли; 
		Если РасшифроватьПо = 1 Тогда	
		Запрос.Текст = Запрос.Текст + ",Изделие";
		ИначеЕсли РасшифроватьПо = 2 Тогда	
		Запрос.Текст = Запрос.Текст + ",РабочееМесто";	
		ИначеЕсли РасшифроватьПо = 3 Тогда	
		Запрос.Текст = Запрос.Текст + ",ВидНеисправности";
		ИначеЕсли РасшифроватьПо = 4 Тогда	
		Запрос.Текст = Запрос.Текст + ",МестоВозникновенияБрака";
		КонецЕсли;
Запрос.УстановитьПараметр("ДатаНач",НачалоДня(Отчет.Период.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон",КонецДня(Отчет.Период.ДатаОкончания));
Результат = Запрос.Выполнить();

Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
	ВыборкаПараметр = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПараметр.Следующий() Цикл
		СписокБрака.Очистить();
			Если ВидОтчёта = 1 Тогда
			Параметр = ВыборкаПараметр.Изделие;
			ИначеЕсли ВидОтчёта = 2 Тогда	
			Параметр = ВыборкаПараметр.РабочееМесто;	
			ИначеЕсли ВидОтчёта = 3 Тогда	
			Параметр = ВыборкаПараметр.ВидНеисправности;
			ИначеЕсли ВидОтчёта = 4 Тогда	
			Параметр = ВыборкаПараметр.МестоВозникновенияБрака;
			КонецЕсли;		
				Если РасшифроватьПо > 0 Тогда
			    ВыборкаРасш = ВыборкаПараметр.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаРасш.Следующий() Цикл
	                ВыборкаДаты = ВыборкаРасш.Выбрать(ОбходРезультатаЗапроса.Прямой);
						Пока ВыборкаДаты.Следующий() Цикл
							Если СписокБрака.НайтиПоЗначению(ВыборкаДаты.Ссылка) <> Неопределено Тогда	
							Продолжить;
							КонецЕсли; 
						СписокБрака.Добавить(ВыборкаДаты.Ссылка);					
						Стр = 1;
							Для каждого Период Из СписокПериодов Цикл	
								Если (ВыборкаДаты.Ссылка.Дата >= Период.Значение.ДатаНачала) и (ВыборкаДаты.Ссылка.Дата <= Период.Значение.ДатаОкончания) Тогда
								ТЧ = ТаблицаБрака.Добавить();
								ТЧ.Параметр = Параметр;									
								ТЧ.Установить(Стр,1);	
								Прервать;	
								КонецЕсли; 
							Стр = Стр + 1;
							КонецЦикла; 
						КонецЦикла;						
					КонецЦикла;
				Иначе
				ВыборкаДаты = ВыборкаПараметр.Выбрать(ОбходРезультатаЗапроса.Прямой);	
					Пока ВыборкаДаты.Следующий() Цикл
						Если СписокБрака.НайтиПоЗначению(ВыборкаДаты.Ссылка) <> Неопределено Тогда	
						Продолжить;
						КонецЕсли; 
					СписокБрака.Добавить(ВыборкаДаты.Ссылка);
					Стр = 1;
						Для каждого Период Из СписокПериодов Цикл	
							Если (ВыборкаДаты.Ссылка.Дата >= Период.Значение.ДатаНачала) и (ВыборкаДаты.Ссылка.Дата <= Период.Значение.ДатаОкончания) Тогда
							ТЧ = ТаблицаБрака.Добавить();
							ТЧ.Параметр = Параметр;	
							ТЧ.Установить(Стр,1);									
							Прервать;	
							КонецЕсли; 
						Стр = Стр + 1;
						КонецЦикла;
					КонецЦикла;					
				КонецЕсли;
		КонецЦикла;
	КонецЦикла;
ТаблицаБрака.Свернуть("Параметр",СписокКолонокСуммирования);	
	
Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
	ВыборкаПараметр = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПараметр.Следующий() Цикл
		КолРемонтовВсего = ВыборкаПараметр.Ссылка;
			Если ВидОтчёта = 1 Тогда
			ОблПараметрОбщие.Параметры.Наименование = СокрЛП(ВыборкаПараметр.Изделие.Наименование);
			ОблПараметрОбщие.Параметры.Расшифровка = ВыборкаПараметр.Изделие;		
			ИначеЕсли ВидОтчёта = 2 Тогда	
			ОблПараметрОбщие.Параметры.Наименование = СокрЛП(ВыборкаПараметр.РабочееМесто.Наименование);	
			ОблПараметрОбщие.Параметры.Расшифровка = ВыборкаПараметр.РабочееМесто;				
			ИначеЕсли ВидОтчёта = 3 Тогда	
			ОблПараметрОбщие.Параметры.Наименование = СокрЛП(ВыборкаПараметр.ВидНеисправности.Наименование);
			ОблПараметрОбщие.Параметры.Расшифровка = ВыборкаПараметр.ВидНеисправности;				
			ИначеЕсли ВидОтчёта = 4 Тогда	
			ОблПараметрОбщие.Параметры.Наименование = СокрЛП(ВыборкаПараметр.МестоВозникновенияБрака.Наименование);
			ОблПараметрОбщие.Параметры.Расшифровка = ВыборкаПараметр.МестоВозникновенияБрака;				
			КонецЕсли;
		ТабДок.Вывести(ОблПараметрОбщие);
		ТЧ = ТаблицаБрака.Найти(ОблПараметрОбщие.Параметры.Расшифровка,"Параметр");
		Стр = 1;
			Для каждого Период Из СписокПериодов Цикл
			ОблПараметрПериод.Параметры.КолРемонтов = ТЧ.Получить(Стр);
			ОблПараметрПериод.Параметры.Процент = Формат(?(ТаблицаБрака.Итог("к"+Строка(Период.ПолучитьИдентификатор())) > 0,ТЧ.Получить(Стр)*100/ТаблицаБрака.Итог("к"+Строка(Период.ПолучитьИдентификатор())),0),"ЧЦ=6; ЧДЦ=2");
			ТабДок.Присоединить(ОблПараметрПериод);
			Стр = Стр + 1;
			КонецЦикла; 			
				Если РасшифроватьПо > 0 Тогда
				ТабДок.НачатьГруппуСтрок("По параметру", Истина);
			    ВыборкаРасш = ВыборкаПараметр.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаРасш.Следующий() Цикл
						Если РасшифроватьПо = 1 Тогда	
						ОблРасшифровкаОбщие.Параметры.Наименование = СокрЛП(ВыборкаРасш.Изделие.Наименование);
						ОблРасшифровкаОбщие.Параметры.Расшифровка = ВыборкаРасш.Изделие;			
						ИначеЕсли РасшифроватьПо = 2 Тогда	
						ОблРасшифровкаОбщие.Параметры.Наименование = СокрЛП(ВыборкаРасш.РабочееМесто.Наименование);
						ОблРасшифровкаОбщие.Параметры.Расшифровка = ВыборкаРасш.РабочееМесто;						
						ИначеЕсли РасшифроватьПо = 3 Тогда	
						ОблРасшифровкаОбщие.Параметры.Наименование = СокрЛП(ВыборкаРасш.ВидНеисправности.Наименование);
						ОблРасшифровкаОбщие.Параметры.Расшифровка = ВыборкаРасш.ВидНеисправности;						
						ИначеЕсли РасшифроватьПо = 4 Тогда	
						ОблРасшифровкаОбщие.Параметры.Наименование = СокрЛП(ВыборкаРасш.МестоВозникновенияБрака.Наименование);
						ОблРасшифровкаОбщие.Параметры.Расшифровка = ВыборкаРасш.МестоВозникновенияБрака;					
						КонецЕсли;
					ТабДок.Вывести(ОблРасшифровкаОбщие);
					ВыборкаДаты = ВыборкаРасш.Выбрать(ОбходРезультатаЗапроса.Прямой);
					Стр = 1;
						Для каждого Период Из СписокПериодов Цикл
						СписокБрака.Очистить();
						КолРемонтов = 0;
						ВыборкаДаты.Сбросить();	
							Пока ВыборкаДаты.Следующий() Цикл
								Если СписокБрака.НайтиПоЗначению(ВыборкаДаты.Ссылка) <> Неопределено Тогда	
								Продолжить;
								КонецЕсли; 
							СписокБрака.Добавить(ВыборкаДаты.Ссылка);							
								Если (ВыборкаДаты.Ссылка.Дата >= Период.Значение.ДатаНачала) и (ВыборкаДаты.Ссылка.Дата <= Период.Значение.ДатаОкончания) Тогда
								КолРемонтов = КолРемонтов + 1;	
								КонецЕсли;
							КонецЦикла; 
						ОблРасшифровкаПериод.Параметры.КолРемонтовРасш = КолРемонтов;
						ОблРасшифровкаПериод.Параметры.ПроцентРасш = ?(ТЧ.Получить(Стр) > 0,Формат(КолРемонтов*100/ТЧ.Получить(Стр),"ЧЦ=6; ЧДЦ=2"),0);
						ТабДок.Присоединить(ОблРасшифровкаПериод);
						Стр = Стр + 1;
						КонецЦикла;						
					КонецЦикла;
				ТабДок.ЗакончитьГруппуСтрок();	
				КонецЕсли; 
		КонецЦикла;
	КонецЦикла;
ТабДок.Вывести(ОблКонецОбщие);
	Для каждого Период Из СписокПериодов Цикл
	ОблКонецПериод.Параметры.КолРемонтовВсего = ТаблицаБрака.Итог("к"+Строка(Период.ПолучитьИдентификатор()));
	ТабДок.Присоединить(ОблКонецПериод);
	КонецЦикла; 
ТабДок.ФиксацияСверху = 4;	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
СформироватьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
П = Новый Структура("Период,Линейки,ВидОтчёта,ПодразделениеВыбраковщик,ПодразделениеПоставщик,Расшифровка",Отчет.Период,СписокЛинеек,ВидОтчёта,ПодразделениеВыбраковщик,ПодразделениеПоставщик,Расшифровка);
ОткрытьФорму("Отчет.ОтчётПоБракуПолуфабрикатовПолный.Форма.ФормаОтчета",П);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
ВидОтчёта = 1;
РасшифроватьПо = 0;
СортироватьПо = 1;
КонецПроцедуры
