
&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблГруппа = Макет.ПолучитьОбласть("Группа");
ОблМПЗ = Макет.ПолучитьОбласть("МПЗ");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.ДатаНач = НачалоДня(Отчет.Период.ДатаНачала);
ОблШапка.Параметры.ДатаКон = КонецДня(Отчет.Период.ДатаОкончания);
ТабДок.Вывести(ОблШапка);

Запрос = Новый Запрос;
СписокПустыхСсылок = Новый СписокЗначений;

СписокПустыхСсылок.Добавить(Справочники.Материалы.ПустаяСсылка());
СписокПустыхСсылок.Добавить(Справочники.Номенклатура.ПустаяСсылка());

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОстаткиИОбороты.МПЗ КАК МПЗ,
	|	МестаХраненияОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
	|	МестаХраненияОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
	|	МестаХраненияОстаткиИОбороты.КоличествоПриход,
	|	МестаХраненияОстаткиИОбороты.КоличествоРасход,
	|	МестаХраненияОстаткиИОбороты.Регистратор,
	|	ВЫБОР
	|		КОГДА МестаХраненияОстаткиИОбороты.МПЗ.Родитель В (&ПустаяСсылка)
	|			ТОГДА МестаХраненияОстаткиИОбороты.МПЗ.Наименование
	|		КОГДА МестаХраненияОстаткиИОбороты.МПЗ.Родитель.Родитель В (&ПустаяСсылка)
	|			ТОГДА МестаХраненияОстаткиИОбороты.МПЗ.Родитель.Наименование
	|		КОГДА МестаХраненияОстаткиИОбороты.МПЗ.Родитель.Родитель.Родитель В (&ПустаяСсылка)
	|			ТОГДА МестаХраненияОстаткиИОбороты.МПЗ.Родитель.Родитель.Наименование
	|		КОГДА МестаХраненияОстаткиИОбороты.МПЗ.Родитель.Родитель.Родитель.Родитель В (&ПустаяСсылка)
	|			ТОГДА МестаХраненияОстаткиИОбороты.МПЗ.Родитель.Родитель.Родитель.Наименование
	|		КОГДА МестаХраненияОстаткиИОбороты.МПЗ.Родитель.Родитель.Родитель.Родитель.Родитель В (&ПустаяСсылка)
	|			ТОГДА МестаХраненияОстаткиИОбороты.МПЗ.Родитель.Родитель.Родитель.Родитель.Наименование
	|	КОНЕЦ КАК РодительВерхнегоУровня,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(МестаХраненияОстаткиИОбороты.МПЗ) = ТИП(Справочник.Материалы)
	|			ТОГДА 1
	|		КОГДА ТИПЗНАЧЕНИЯ(МестаХраненияОстаткиИОбороты.МПЗ) = ТИП(Справочник.Номенклатура)
	|			ТОГДА 2
	|	КОНЕЦ КАК ВидМПЗ
	|ИЗ
	|	РегистрНакопления.МестаХранения.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Регистратор, , ) КАК МестаХраненияОстаткиИОбороты
	|ГДЕ
	|	МестаХраненияОстаткиИОбороты.МестоХранения = &МестоХранения";
	Если ВидМПЗ = 1 Тогда
	Запрос.Текст = Запрос.Текст + " И ТИПЗНАЧЕНИЯ(МестаХраненияОстаткиИОбороты.МПЗ) = ТИП(Справочник.Материалы)";
	ИначеЕсли ВидМПЗ = 2 Тогда	
	Запрос.Текст = Запрос.Текст + " И ТИПЗНАЧЕНИЯ(МестаХраненияОстаткиИОбороты.МПЗ) = ТИП(Справочник.Номенклатура)";
	КонецЕсли;
Запрос.Текст = Запрос.Текст + "	УПОРЯДОЧИТЬ ПО
								|	ВидМПЗ,
								|	РодительВерхнегоУровня,
								|	МестаХраненияОстаткиИОбороты.МПЗ.Наименование
								|ИТОГИ
								|	СУММА(КоличествоНачальныйОстаток),
								|	СУММА(КоличествоКонечныйОстаток)
								|ПО
								|	МПЗ"; 
Запрос.УстановитьПараметр("ДатаНач",НачалоДня(Отчет.Период.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон",КонецДня(Отчет.Период.ДатаОкончания));
Запрос.УстановитьПараметр("МестоХранения",Отчет.МестоХранения);
Запрос.УстановитьПараметр("ПустаяСсылка",СписокПустыхСсылок);

РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
КоличествоНаходокВсего = 0;
СуммаНаходокВсего = 0;
КоличествоПотерьВсего = 0;
СуммаПотерьВсего = 0;
ТекГруппа = Неопределено;
	Пока ВыборкаМПЗ.Следующий() Цикл
		Если ВыборкаМПЗ.РодительВерхнегоУровня <> ТекГруппа Тогда
			Если ТекГруппа <> Неопределено Тогда
			ТабДок.ЗакончитьГруппуСтрок();
			КонецЕсли;
		ОблГруппа.Параметры.Группа = ВыборкаМПЗ.РодительВерхнегоУровня;
		ТабДок.Вывести(ОблГруппа);
		ТабДок.НачатьГруппуСтрок("Группа",Истина); 
		ТекГруппа = ВыборкаМПЗ.РодительВерхнегоУровня;
		КонецЕсли; 
	ОблМПЗ.Параметры.Наименование = СокрЛП(ВыборкаМПЗ.МПЗ.Наименование);
	ОблМПЗ.Параметры.МПЗ = ВыборкаМПЗ.МПЗ;
	ОблМПЗ.Параметры.ЕдиницаИзмерения = ВыборкаМПЗ.МПЗ.ЕдиницаИзмерения;
		Если ТипЗнч(ВыборкаМПЗ.МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
		ОблМПЗ.Параметры.ГруппаПоЗакупкам = ВыборкаМПЗ.МПЗ.ГруппаПоЗакупкам;
		ОблМПЗ.Параметры.Цена = ОбщийМодульВызовСервера.ПолучитьПоследнююЦену(ВыборкаМПЗ.МПЗ,Отчет.Период.ДатаОкончания);
		Иначе
		ОблМПЗ.Параметры.ГруппаПоЗакупкам = "";
		ОблМПЗ.Параметры.Цена = ОбщийМодульВызовСервера.ПолучитьСтоимостьМПЗ(ВыборкаМПЗ.МПЗ,1,Отчет.Период.ДатаОкончания,0);
		КонецЕсли; 
	ОблМПЗ.Параметры.КоличествоНО = ВыборкаМПЗ.КоличествоНачальныйОстаток;
	ОблМПЗ.Параметры.КоличествоКО = ВыборкаМПЗ.КоличествоКонечныйОстаток;
	КоличествоПриход = 0;
	КоличествоРасходНаПередачи = 0;
	КоличествоРасходНаСписания = 0;
	КоличествоРасходПрочий = 0;
	ВыборкаДетальныеЗаписи = ВыборкаМПЗ.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.КоличествоПриход > 0 Тогда
				Если ТипЗнч(ВыборкаДетальныеЗаписи.Регистратор) = Тип("ДокументСсылка.ПоступлениеМПЗПрочее") Тогда
					Если ВыборкаДетальныеЗаписи.Регистратор.Статья = СтатьяЗатратИзлишки Тогда
					Продолжить;					
					КонецЕсли;			
				КонецЕсли;
			КоличествоПриход = КоличествоПриход + ВыборкаДетальныеЗаписи.КоличествоПриход;
			ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоРасход > 0 Тогда
				Если ТипЗнч(ВыборкаДетальныеЗаписи.Регистратор) = Тип("ДокументСсылка.ПередачаВПроизводство") Тогда
				КоличествоРасходНаПередачи = КоличествоРасходНаПередачи + ВыборкаДетальныеЗаписи.КоличествоРасход;				
				ИначеЕсли ТипЗнч(ВыборкаДетальныеЗаписи.Регистратор) = Тип("ДокументСсылка.СписаниеМПЗПрочее") Тогда
					Если ВыборкаДетальныеЗаписи.Регистратор.Статья = СтатьяЗатратНедостача Тогда
					Продолжить;
					КонецЕсли; 
				КоличествоРасходНаСписания = КоличествоРасходНаСписания + ВыборкаДетальныеЗаписи.КоличествоРасход;
				Иначе
				КоличествоРасходПрочий = КоличествоРасходПрочий + ВыборкаДетальныеЗаписи.КоличествоРасход;
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла;
	ОблМПЗ.Параметры.КоличествоПриход = КоличествоПриход;
	ОблМПЗ.Параметры.КоличествоРасходНаПередачи = КоличествоРасходНаПередачи;
	ОблМПЗ.Параметры.КоличествоРасходНаСписания = КоличествоРасходНаСписания;
	ОблМПЗ.Параметры.КоличествоРасходПрочий = КоличествоРасходПрочий;
	КоличествоОстаток = ВыборкаМПЗ.КоличествоНачальныйОстаток + КоличествоПриход - КоличествоРасходНаПередачи - КоличествоРасходНаСписания - КоличествоРасходПрочий;
	ОблМПЗ.Параметры.КоличествоОстаток = КоличествоОстаток;
	КоличествоНаходок = 0;
	КоличествоПотерь = 0;
	СуммаНаходок = 0;
	СуммаПотерь = 0;
		Если (КоличествоОстаток - ВыборкаМПЗ.КоличествоКонечныйОстаток) < 0 Тогда
		КоличествоНаходок = КоличествоОстаток - ВыборкаМПЗ.КоличествоКонечныйОстаток;
		СуммаНаходок = КоличествоНаходок*ОблМПЗ.Параметры.Цена;
		ИначеЕсли (КоличествоОстаток - ВыборкаМПЗ.КоличествоКонечныйОстаток) > 0 Тогда	
		КоличествоПотерь = КоличествоОстаток - ВыборкаМПЗ.КоличествоКонечныйОстаток;
		СуммаПотерь = КоличествоПотерь*ОблМПЗ.Параметры.Цена;
		КонецЕсли;
	ОблМПЗ.Параметры.КоличествоНаходок = КоличествоНаходок;
	ОблМПЗ.Параметры.СуммаНаходок = СуммаНаходок;
	ОблМПЗ.Параметры.КоличествоПотерь = КоличествоПотерь;
	ОблМПЗ.Параметры.СуммаПотерь = СуммаПотерь;
	ТабДок.Вывести(ОблМПЗ);
	КоличествоНаходокВсего = КоличествоНаходокВсего + КоличествоНаходок;
	СуммаНаходокВсего = СуммаНаходокВсего + СуммаНаходок;
	КоличествоПотерьВсего = КоличествоПотерьВсего + КоличествоПотерь;
	СуммаПотерьВсего = СуммаПотерьВсего + СуммаПотерь;
	КонецЦикла;
ТабДок.ЗакончитьГруппуСтрок();
ОблКонец.Параметры.КоличествоНаходокВсего = КоличествоНаходокВсего;
ОблКонец.Параметры.СуммаНаходокВсего = СуммаНаходокВсего;
ОблКонец.Параметры.КоличествоПотерьВсего = КоличествоПотерьВсего;
ОблКонец.Параметры.СуммаПотерьВсего = СуммаПотерьВсего;
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 3;
ТабДок.ФиксацияСлева = 3;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	СформироватьНаСервере();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
ИмяКолонки = СокрЛП(Сред(Элемент.ТекущаяОбласть.Имя,Найти(Элемент.ТекущаяОбласть.Имя,"C")));
НомерКолонки = Число(Сред(ИмяКолонки,2));
	Если НомерКолонки = 1 Тогда
	СтандартнаяОбработка = Ложь;
	СписокСтатей = Новый СписокЗначений;

	СписокСтатей.Добавить(СтатьяЗатратИзлишки);
	СписокСтатей.Добавить(СтатьяЗатратНедостача);
	ИмяОтчета = "ОтчётПоРегиструМестаХранения";
	КлючВарианта = "ПоДокументамБезСтатейИнвентаризации";
	ПараметрыОтбора = Новый Структура("МПЗ,МестоХранения,ДокументСтатья",Расшифровка,Отчет.МестоХранения,СписокСтатей);
	ВидыСравнений = Новый Структура("МПЗ,МестоХранения,ДокументСтатья",ВидСравненияКомпоновкиДанных.Равно,ВидСравненияКомпоновкиДанных.Равно,ВидСравненияКомпоновкиДанных.НеВСписке);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
	ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьНастройкиОтчетаСКД(ИмяОтчета,НачалоДня(Отчет.Период.ДатаНачала),КонецДня(Отчет.Период.ДатаОкончания),ПараметрыОтбора,ВидыСравнений,КлючВарианта));
	ПараметрыФормы.Вставить("КлючВарианта",КлючВарианта); 
	ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);
	ИначеЕсли НомерКолонки = 12 Тогда
	СтандартнаяОбработка = Ложь;
	ИмяОтчета = "ОтчётПоРегиструМестаХранения";
	КлючВарианта = "ПоДокументамПрочим";
	ПараметрыОтбора = Новый Структура("МПЗ,МестоХранения,ТипДокумента,ДокументСтатья",Расшифровка,Отчет.МестоХранения,"Документ.СписаниеМПЗПрочее",СтатьяЗатратНедостача);
	ВидыСравнений = Новый Структура("МПЗ,МестоХранения,ТипДокумента,ДокументСтатья",ВидСравненияКомпоновкиДанных.Равно,ВидСравненияКомпоновкиДанных.Равно,ВидСравненияКомпоновкиДанных.Равно,ВидСравненияКомпоновкиДанных.Равно);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
	ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьНастройкиОтчетаСКД(ИмяОтчета,НачалоДня(Отчет.Период.ДатаНачала),КонецДня(Отчет.Период.ДатаОкончания),ПараметрыОтбора,ВидыСравнений,КлючВарианта));
	ПараметрыФормы.Вставить("КлючВарианта",КлючВарианта); 
	ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);
	ИначеЕсли НомерКолонки = 14 Тогда
	СтандартнаяОбработка = Ложь;
	ИмяОтчета = "ОтчётПоРегиструМестаХранения";
	КлючВарианта = "ПоДокументамПрочим";
	ПараметрыОтбора = Новый Структура("МПЗ,МестоХранения,ТипДокумента,ДокументСтатья",Расшифровка,Отчет.МестоХранения,"Документ.ПоступлениеМПЗПрочее",СтатьяЗатратИзлишки);
	ВидыСравнений = Новый Структура("МПЗ,МестоХранения,ТипДокумента,ДокументСтатья",ВидСравненияКомпоновкиДанных.Равно,ВидСравненияКомпоновкиДанных.Равно,ВидСравненияКомпоновкиДанных.Равно,ВидСравненияКомпоновкиДанных.Равно);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
	ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьНастройкиОтчетаСКД(ИмяОтчета,НачалоДня(Отчет.Период.ДатаНачала),КонецДня(Отчет.Период.ДатаОкончания),ПараметрыОтбора,ВидыСравнений,КлючВарианта));
	ПараметрыФормы.Вставить("КлючВарианта",КлючВарианта); 
	ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);
	КонецЕсли;		
КонецПроцедуры
