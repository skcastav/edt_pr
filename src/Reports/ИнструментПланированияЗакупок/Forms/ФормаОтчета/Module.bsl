&НаСервере
Перем оптЗапросНорм, оптСоотРезультатов;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Отчет.Период.ДатаНачала = НачалоМесяца(ТекущаяДата());
Отчет.Период.ДатаОкончания = КонецГода(ТекущаяДата());
ТипСправочника = 1;
ТипИзделий = 1;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ТипСправочника = 1 Тогда
	СписокГруппНоменклатуры.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Материалы");
	Иначе	
	СписокГруппНоменклатуры.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИзФайла(Наименование)
	Если ТипСправочника = 1 Тогда
	Выборка = Справочники.Материалы.НайтиПоНаименованию(Наименование,Истина);
	Иначе	
	Выборка = Справочники.Номенклатура.НайтиПоНаименованию(Наименование,Истина);
	КонецЕсли; 
		Если Не Выборка.Пустая() Тогда
		СписокГруппНоменклатуры.Добавить(Выборка);
		Иначе	
		Сообщить(Наименование+" - не найден в справочнике!");
		КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНоменклатуру(Команда)
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл со списком");
	Если Результат <> Неопределено Тогда
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок;
	    Для к = 2 по КолСтрок Цикл
		Состояние("Обработка...",к*100/КолСтрок,"Загрузка из списка...");
		ЗагрузитьИзФайла(СокрЛП(ExcelЛист.Cells(к,1).Value));
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
  
&НаСервере       
Процедура ПолучитьАналогиНабора(ЭтапСпецификации,КолУзла,СписокАналогов)
ВыборкаДетальныеЗаписи = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_М(ЭтапСпецификации,ТекущаяДата());
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокАналогов.Добавить(ВыборкаДетальныеЗаписи.Элемент,Строка(ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(ВыборкаДетальныеЗаписи.Норма,ВыборкаДетальныеЗаписи.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла));
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ДобавитьМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,НормРасх,Количество,КолУзла,Знач МПЗ = Неопределено,ДатаС,ДатаПо)
	Если МПЗ = Неопределено Тогда 
	МПЗ = ОбщегоНазначенияПовтИсп.ПолучитьЗначениеРеквизита(НормРасх,"Элемент");
	КонецЕсли;	
		Если ПолучитьСтатус(МПЗ,ТекущаяДата()) = Перечисления.СтатусыМПЗ.Запрещённая Тогда	
		Возврат;
		КонецЕсли;
			Если СписокГруппПоЗакупкам.Количество() > 0 Тогда	
				Если НеПринадлежатВыбраннымГруппамПоЗакупкам Тогда
					Если СписокГруппПоЗакупкам.НайтиПоЗначению(МПЗ.ГруппаПоЗакупкам) <> Неопределено Тогда	
					Возврат;
					КонецЕсли; 
				Иначе	
					Если СписокГруппПоЗакупкам.НайтиПоЗначению(МПЗ.ГруппаПоЗакупкам) = Неопределено Тогда	
					Возврат;
					КонецЕсли; 		
				КонецЕсли; 	
			КонецЕсли;
Запрос = Новый Запрос;
СписокАналогов = Новый СписокЗначений;

Выборка = ТаблицаМПЗ.Найти(МПЗ,"МПЗ");
	Если Выборка = Неопределено Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыСПоставщикамиОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ДоговорыСПоставщиками.Остатки(&НаДату, ) КАК ДоговорыСПоставщикамиОстатки
		|ГДЕ
		|	ДоговорыСПоставщикамиОстатки.МПЗ = &МПЗ";
	Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
	Запрос.УстановитьПараметр("МПЗ", МПЗ);
	РезультатЗапроса = Запрос.Выполнить(); 
	ТЧ = ТаблицаМПЗ.Добавить();
	ТЧ.МПЗ = МПЗ;
	ТЧ.ГруппаМПЗ = МПЗ.Родитель;
	ТЧ.ГруппаПоЗакупкам = МПЗ.ГруппаПоЗакупкам;	
	ТЧ.НаличиеДоговора = ?(Не РезультатЗапроса.Пустой(),"+","");
	ТЧ.КоличествоОстаток = ОбщийМодульВызовСервера.ПолучитьСводныйОстатокПоМестамХранения(СписокМестХранения,МПЗ,ТекущаяДата());
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура");
	ТЧ.ТаблицаНоменклатуры.Индексы.Добавить("Номенклатура");
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("Количество");
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("ДатаС");
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("ДатаПо");
	Иначе
	ТЧ = Выборка;
	КонецЕсли;
Выборка = ТЧ.ТаблицаНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура,ДатаС,ДатаПо",Номенклатура,ДатаС,ДатаПо));
	Если Выборка.Количество() = 0 Тогда
	ТЧ_Ном = ТЧ.ТаблицаНоменклатуры.Добавить();
	ТЧ_Ном.Номенклатура = Номенклатура;
	ТЧ_Ном.Количество = Количество;
	ТЧ_Ном.ДатаС = ДатаС;	
	ТЧ_Ном.ДатаПо = ДатаПо;
	Иначе
	Выборка[0].Количество = Выборка[0].Количество + Количество;
	КонецЕсли;    
ТаблицаАналогов = ОбщегоНазначенияПовтИсп.ПолучитьАналогиНормРасходов(НормРасх);
	Для каждого ТЧ_ТА Из ТаблицаАналогов Цикл 
		Если ТЧ_ТА.Ссылка.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Набор Тогда
		ПолучитьАналогиНабора(ТЧ_ТА.Ссылка.Элемент,ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(ТЧ_ТА.Норма,ТЧ_ТА.Ссылка.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла,СписокАналогов);
		ИначеЕсли ТЧ_ТА.Ссылка.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Материал Тогда
		СписокАналогов.Добавить(ТЧ_ТА.Ссылка.Элемент,Строка(ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(ТЧ_ТА.Норма,ТЧ_ТА.Ссылка.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла));
		КонецЕсли; 
	КонецЦикла;	      
		Для каждого Ан Из СписокАналогов Цикл
		Аналог = Ан.Значение;
		КоличествоАналога = Число(АН.Представление);
		Выборка = ТаблицаАналоговМПЗ.НайтиСтроки(Новый Структура("МПЗ,АналогМПЗ",МПЗ,Аналог));
			Если Выборка.Количество() = 0 Тогда
			ТЧ = ТаблицаАналоговМПЗ.Добавить();
			ТЧ.МПЗ = МПЗ;
			ТЧ.АналогМПЗ = Аналог;
			ТЧ.КоличествоОстаток = ОбщийМодульВызовСервера.ПолучитьСводныйОстатокПоМестамХранения(СписокМестХранения,Аналог,ТекущаяДата());
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ДоговорыСПоставщикамиОстатки.КоличествоОстаток КАК КоличествоОстаток
				|ИЗ
				|	РегистрНакопления.ДоговорыСПоставщиками.Остатки(&НаДату, ) КАК ДоговорыСПоставщикамиОстатки
				|ГДЕ
				|	ДоговорыСПоставщикамиОстатки.МПЗ = &МПЗ";
			Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
			Запрос.УстановитьПараметр("МПЗ", Аналог);
			РезультатЗапроса = Запрос.Выполнить();
			ТЧ.НаличиеДоговора = ?(Не РезультатЗапроса.Пустой(),"+","");
			ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура");
			ТЧ.ТаблицаНоменклатуры.Индексы.Добавить("Номенклатура");
			ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("Количество");
			ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("ДатаС");
			ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("ДатаПо");
			Иначе
			ТЧ = Выборка[0];
			КонецЕсли;
		Выборка = ТЧ.ТаблицаНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура,ДатаС,ДатаПо",Номенклатура,ДатаС,ДатаПо));
			Если Выборка.Количество() = 0 Тогда
			ТЧ_Ном = ТЧ.ТаблицаНоменклатуры.Добавить();
			ТЧ_Ном.Номенклатура = Номенклатура;
			ТЧ_Ном.Количество = КоличествоАналога;
			ТЧ_Ном.ДатаС = ДатаС;	
			ТЧ_Ном.ДатаПо = ДатаПо;
			Иначе
			Выборка[0].Количество = Выборка[0].Количество + КоличествоАналога;
			КонецЕсли;				
		КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьТНП(ТаблицаМПЗ,ТаблицаАналоговМПЗ,ТаблицаРасходаМПЗ,МПЗ)
	Если СписокГруппПоЗакупкам.Количество() > 0 Тогда	
		Если НеПринадлежатВыбраннымГруппамПоЗакупкам Тогда
			Если СписокГруппПоЗакупкам.НайтиПоЗначению(МПЗ.ГруппаПоЗакупкам) <> Неопределено Тогда	
			Возврат;
			КонецЕсли; 
		Иначе	
			Если СписокГруппПоЗакупкам.НайтиПоЗначению(МПЗ.ГруппаПоЗакупкам) = Неопределено Тогда	
			Возврат;
			КонецЕсли; 		
		КонецЕсли; 	
	КонецЕсли;
Запрос = Новый Запрос;

Выборка = ТаблицаМПЗ.Найти(МПЗ,"МПЗ");
	Если Выборка = Неопределено Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорныеПозицииСрезПоследних.Количество,
		|	ДоговорныеПозицииСрезПоследних.ОстатокПоДоговору,
		|	ДоговорныеПозицииСрезПоследних.ДоговорнаяПозиция.Владелец.Владелец КАК Поставщик
		|ИЗ
		|	РегистрСведений.ДоговорныеПозиции.СрезПоследних КАК ДоговорныеПозицииСрезПоследних
		|ГДЕ
		|	ДоговорныеПозицииСрезПоследних.ДоговорнаяПозиция.МПЗ = &МПЗ"; 
	Запрос.УстановитьПараметр("МПЗ", МПЗ);
	РезультатЗапроса = Запрос.Выполнить(); 
	ТЧ = ТаблицаМПЗ.Добавить();
	ТЧ.МПЗ = МПЗ;
	ТЧ.ГруппаМПЗ = МПЗ.Родитель;
	ТЧ.ГруппаПоЗакупкам = МПЗ.ГруппаПоЗакупкам;
	ТЧ.НаличиеДоговора = ?(Не РезультатЗапроса.Пустой(),"+","");
	ТЧ.КоличествоОстаток = ОбщийМодульВызовСервера.ПолучитьСводныйОстатокПоМестамХранения(СписокМестХранения,МПЗ,ТекущаяДата());
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура");
	ТЧ.ТаблицаНоменклатуры.Индексы.Добавить("Номенклатура");
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("Количество");
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("ДатаС");
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("ДатаПо");
	ТЧ_Р = ТаблицаРасходаМПЗ.Добавить();
	ТЧ_Р.МПЗ = МПЗ;
	ТЧ_Р.КоличествоОжидаемыйРасход = ОбщийМодульРаботаСРегистрами.ПолучитьСводныйОстатокПоДолгам(МПЗ);	
	Иначе
	ТЧ = Выборка;
	КонецЕсли;
Выборка = ТЧ.ТаблицаНоменклатуры.Найти(МПЗ,"Номенклатура");
	Если Выборка = Неопределено Тогда
	ТЧ_Ном = ТЧ.ТаблицаНоменклатуры.Добавить();
	ТЧ_Ном.Номенклатура = МПЗ;
	ТЧ_Ном.Количество = 1;
	ТЧ_Ном.ДатаС = Отчет.Период.ДатаНачала;	
	ТЧ_Ном.ДатаПо = Отчет.Период.ДатаОкончания;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура РаскрытьНаМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,ЭтапСпецификации,КолУзла,ДатаС,ДатаПо)
	Если оптЗапросНорм = Неопределено Тогда
	оптЗапросНорм = ОбщийМодульВызовСервера.ПолучитьЗапросНормРасходовПоВладельцу_Н_М(ТекущаяДата(),СписокГруппМПЗ,НеПринадлежатВыбраннымГруппам);
	КонецЕсли;
		Если оптСоотРезультатов = Неопределено Тогда
		оптСоотРезультатов = Новый Соответствие;
		КонецЕсли;
			Если оптСоотРезультатов.Получить(ЭтапСпецификации) = Неопределено Тогда 
			Запрос = оптЗапросНорм;
			Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
			РезультатЗапроса = Запрос.Выполнить();
			оптСоотРезультатов.Вставить(ЭтапСпецификации, РезультатЗапроса);
			Иначе
			РезультатЗапроса = оптСоотРезультатов[ЭтапСпецификации];
			КонецЕсли;
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл 
	БазовоеКоличество = ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(ВыборкаНР.Норма,ВыборкаНР.ЭлементОЕИ)*КолУзла;
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
		ДобавитьМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,ВыборкаНР.Ссылка,БазовоеКоличество,КолУзла,ВыборкаНР.Элемент,ДатаС,ДатаПо);  					
		РаскрытьНаМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,ВыборкаНР.Элемент,БазовоеКоличество,ДатаС,ДатаПо);
		Иначе
		Результат = ОбщийМодульРаботаСРегистрами.ПолучитьПФРедизайна(Номенклатура,ВыборкаНР.Элемент);
			Если Результат <> Неопределено Тогда
			ДатаПоНовая = НачалоМесяца(Результат.ДатаС-1);
			Иначе
			ДатаПоНовая = ДатаПо;
			КонецЕсли;
		РаскрытьНаМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,ВыборкаНР.Элемент,БазовоеКоличество,ДатаС,ДатаПоНовая);
			Если Результат <> Неопределено Тогда
			РаскрытьНаМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,Результат.ЭлементНовый,БазовоеКоличество,Результат.ДатаС,ДатаПо);
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьКонтрагентаВПоследнемЗаказеПоставщику(МПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗаказыПоставщикамОбороты.Контрагент КАК Контрагент,
	|	ЗаказыПоставщикамОбороты.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Обороты(, , Регистратор, ) КАК ЗаказыПоставщикамОбороты
	|ГДЕ
	|	ЗаказыПоставщикамОбороты.МПЗ = &МПЗ
	|	И ЗаказыПоставщикамОбороты.КоличествоПриход > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказыПоставщикамОбороты.ЗаказПоставщику.Дата УБЫВ";
Запрос.УстановитьПараметр("МПЗ", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.Контрагент);
	КонецЦикла;
Возврат(Справочники.Контрагенты.ПустаяСсылка());
КонецФункции 

&НаСервере
Процедура РаскрытьНаМПЗОжидаемыйРасход(ТаблицаРасходаМПЗ,СписокМПЗ,Линейка,Номенклатура,ЭтапСпецификации,КолУзла)
	Если оптСоотРезультатов.Получить(ЭтапСпецификации) = Неопределено Тогда 
	Запрос = оптЗапросНорм;
	Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
	РезультатЗапроса = Запрос.Выполнить();
	оптСоотРезультатов.Вставить(ЭтапСпецификации, РезультатЗапроса);
	Иначе
	РезультатЗапроса = оптСоотРезультатов[ЭтапСпецификации];
	КонецЕсли;	
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл
	Количество = ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(ВыборкаНР.Норма,ВыборкаНР.ЭлементОЕИ)*КолУзла;
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Материалы")Тогда           
		РаскрытьНаМПЗОжидаемыйРасход(ТаблицаРасходаМПЗ,СписокМПЗ,Линейка,Номенклатура,ВыборкаНР.Элемент,Количество); 
			Если СписокМПЗ.НайтиПоЗначению(ВыборкаНР.Элемент) = Неопределено Тогда	
			Продолжить;				
			КонецЕсли;  
		Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаНР.Элемент));
			Если Выборка.Количество() = 0 Тогда			
			ТЧ = ТаблицаРасходаМПЗ.Добавить();
			ТЧ.МПЗ = ВыборкаНР.Элемент;
			ТЧ.КоличествоОжидаемыйРасход = Количество;
			ТЧ_Лин = ТаблицаРасходаПоЛинейкам.Добавить();
			ТЧ_Лин.МПЗ = ВыборкаНР.Элемент;
			ТЧ_Лин.Линейка = Линейка;
			ТЧ_Лин.Количество = Количество;
			Иначе
			ВыборкаЛин = ТаблицаРасходаПоЛинейкам.НайтиСтроки(Новый Структура("МПЗ,Линейка",ВыборкаНР.Элемент,Линейка));
				Если ВыборкаЛин.Количество() = 0 Тогда
				ТЧ_Лин = ТаблицаРасходаПоЛинейкам.Добавить();
				ТЧ_Лин.МПЗ = ВыборкаНР.Элемент;
				ТЧ_Лин.Линейка = Линейка;
				ТЧ_Лин.Количество = Количество;					
				Иначе	
				ВыборкаЛин[0].Количество = ВыборкаЛин[0].Количество + Количество;
				КонецЕсли; 
			Выборка[0].КоличествоОжидаемыйРасход = Выборка[0].КоличествоОжидаемыйРасход + Количество;
			КонецЕсли; 				
		Иначе 
			Если ВыборкаНР.Элемент.ПереходНаРедизайн Тогда
			Результат = ОбщийМодульРаботаСРегистрами.ПолучитьПФРедизайна(Номенклатура,ВыборкаНР.Элемент);
				Если Результат <> Неопределено Тогда
				РаскрытьНаМПЗОжидаемыйРасход(ТаблицаРасходаМПЗ,СписокМПЗ,Линейка,Номенклатура,Результат.ЭлементНовый,Количество); 
				Продолжить;
				КонецЕсли;	
			КонецЕсли;
		РаскрытьНаМПЗОжидаемыйРасход(ТаблицаРасходаМПЗ,СписокМПЗ,Линейка,Номенклатура,ВыборкаНР.Элемент,Количество); 
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПодсчётОжидаемогоРасхода(ТаблицаРасходаМПЗ,СписокМПЗ)
ТаблицаПродукции = ОбщийМодульВызовСервера.ПолучитьТаблицуПриборовОжидаемогоРасхода(СписокПодразделений,Ложь,Истина);
	Для каждого ТЧ Из ТаблицаПродукции Цикл 
	РаскрытьНаМПЗОжидаемыйРасход(ТаблицаРасходаМПЗ,СписокМПЗ,ТЧ.Линейка,ТЧ.Продукция,ТЧ.Продукция,ТЧ.Количество);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура РаскрытьНаМПЗВсюСпецификацию(ТаблицаРасходаМПЗ,СписокМПЗ,ЭтапСпецификации,КолУзла)
	Если оптСоотРезультатов.Получить(ЭтапСпецификации) = Неопределено Тогда 
	Запрос = оптЗапросНорм;
	Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
	РезультатЗапроса = Запрос.Выполнить();
	оптСоотРезультатов.Вставить(ЭтапСпецификации, РезультатЗапроса);
	Иначе
	РезультатЗапроса = оптСоотРезультатов[ЭтапСпецификации];
	КонецЕсли;
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Материалы")Тогда
		РаскрытьНаМПЗВсюСпецификацию(ТаблицаРасходаМПЗ,СписокМПЗ,ВыборкаНР.Элемент,ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла);
			Если СписокМПЗ.НайтиПоЗначению(ВыборкаНР.Элемент) = Неопределено Тогда	
			Продолжить;				
			КонецЕсли; 
		Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаНР.Элемент)); 
			Если Выборка.Количество() = 0 Тогда			
			ТЧ = ТаблицаРасходаМПЗ.Добавить();
			ТЧ.МПЗ = ВыборкаНР.Элемент;
			ТЧ.КоличествоРК = ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла;
			Иначе
			Выборка[0].КоличествоРК = Выборка[0].КоличествоРК + ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла;
			КонецЕсли;					
		Иначе
		РаскрытьНаМПЗВсюСпецификацию(ТаблицаРасходаМПЗ,СписокМПЗ,ВыборкаНР.Элемент,ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла);				
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПодсчётРезервКомплектов(ТаблицаРасходаМПЗ,СписокМПЗ)
Запрос = Новый Запрос;

	Если ТипСправочника = 2 Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПерспективныеПланы.МПЗ,
		|	ПерспективныеПланы.РезКм
		|ИЗ
		|	РегистрСведений.ПерспективныеПланы КАК ПерспективныеПланы
		|ГДЕ
		|	ПерспективныеПланы.Период = &НаДату
		|	И ПерспективныеПланы.РезКм > 0";
	Запрос.УстановитьПараметр("НаДату", НачалоМесяца(ТекущаяДата())); 
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		РаскрытьНаМПЗВсюСпецификацию(ТаблицаРасходаМПЗ,СписокМПЗ,ВыборкаДетальныеЗаписи.МПЗ,ВыборкаДетальныеЗаписи.РезКм);
		КонецЦикла;  
	КонецЕсли;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПерспективныеПланы.МПЗ КАК МПЗ,
	|	ПерспективныеПланы.РезКм КАК РезКм
	|ИЗ
	|	РегистрСведений.ПерспективныеПланы КАК ПерспективныеПланы
	|ГДЕ
	|	ПерспективныеПланы.Период = &НаДату
	|	И ПерспективныеПланы.РезКм > 0
	|	И ПерспективныеПланы.МПЗ В(&СписокМПЗ)";
Запрос.УстановитьПараметр("НаДату", НачалоМесяца(ТекущаяДата())); 
Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ); 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.МПЗ)); 
		Если Выборка.Количество() = 0 Тогда			
		ТЧ = ТаблицаРасходаМПЗ.Добавить();
		ТЧ.МПЗ = ВыборкаДетальныеЗаписи.МПЗ;
		ТЧ.КоличествоРК = ВыборкаДетальныеЗаписи.РезКм;
		Иначе
		Выборка[0].КоличествоРК = Выборка[0].КоличествоРК + ВыборкаДетальныеЗаписи.РезКм;
		КонецЕсли;	
	КонецЦикла;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	КрупныеЗаказы.Продукция КАК Продукция,
	|	КрупныеЗаказы.Количество КАК Количество
	|ИЗ
	|	РегистрСведений.КрупныеЗаказы КАК КрупныеЗаказы
	|ГДЕ
	|	КрупныеЗаказы.Обработан = ЛОЖЬ
	|	И КрупныеЗаказы.Продукция В(&СписокМПЗ)
	|	И КрупныеЗаказы.ДатаРезерва <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ); 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.Продукция)); 
		Если Выборка.Количество() = 0 Тогда			
		ТЧ = ТаблицаРасходаМПЗ.Добавить();
		ТЧ.МПЗ = ВыборкаДетальныеЗаписи.Продукция;
		ТЧ.КоличествоРК = ВыборкаДетальныеЗаписи.Количество;
		Иначе
		Выборка[0].КоличествоРК = Выборка[0].КоличествоРК + ВыборкаДетальныеЗаписи.Количество;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();

ТаблицаМПЗ = Новый ТаблицаЗначений;

ТаблицаМПЗ.Колонки.Добавить("МПЗ");
ТаблицаМПЗ.Индексы.Добавить("МПЗ");
ТаблицаМПЗ.Колонки.Добавить("ГруппаМПЗ");
ТаблицаМПЗ.Колонки.Добавить("ГруппаПоЗакупкам");
ТаблицаМПЗ.Колонки.Добавить("КоличествоОстаток");
ТаблицаМПЗ.Колонки.Добавить("НаличиеДоговора");
ТаблицаМПЗ.Колонки.Добавить("ТаблицаНоменклатуры",Новый ОписаниеТипов("ТаблицаЗначений"));

ТаблицаАналоговМПЗ = Новый ТаблицаЗначений;

ТаблицаАналоговМПЗ.Колонки.Добавить("МПЗ");
ТаблицаАналоговМПЗ.Индексы.Добавить("МПЗ");
ТаблицаАналоговМПЗ.Колонки.Добавить("АналогМПЗ");
ТаблицаАналоговМПЗ.Колонки.Добавить("КоличествоОстаток");
ТаблицаАналоговМПЗ.Колонки.Добавить("НаличиеДоговора");
ТаблицаАналоговМПЗ.Колонки.Добавить("ТаблицаНоменклатуры",Новый ОписаниеТипов("ТаблицаЗначений"));

ТаблицаРасходаМПЗ = Новый ТаблицаЗначений;

ТаблицаРасходаМПЗ.Колонки.Добавить("МПЗ");
ТаблицаРасходаМПЗ.Индексы.Добавить("МПЗ");
ТаблицаРасходаМПЗ.Колонки.Добавить("КоличествоОжидаемыйРасход", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3)));
ТаблицаРасходаМПЗ.Колонки.Добавить("КоличествоРК", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3)));

	Если ТипСправочника = 1 Тогда
		Для каждого ТЧ Из ЭтаФорма.Номенклатура Цикл
		ДобавитьТНП(ТаблицаМПЗ,ТаблицаАналоговМПЗ,ТаблицаРасходаМПЗ,ТЧ.Номенклатура);
		КонецЦикла;	
	Иначе	
		Для каждого ТЧ Из ЭтаФорма.Номенклатура Цикл
		РаскрытьНаМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,ТЧ.Номенклатура,ТЧ.Номенклатура,1,Отчет.Период.ДатаНачала,Отчет.Период.ДатаОкончания);
		КонецЦикла;	
	КонецЕсли;

ТаблицаМПЗ.Сортировать("ГруппаМПЗ,МПЗ"); 
ТаблицаАналоговМПЗ.Сортировать("МПЗ,АналогМПЗ");
СписокМПЗ = Новый СписокЗначений;

	Для каждого ТЧ Из ТаблицаМПЗ Цикл
	СписокМПЗ.Добавить(ТЧ.МПЗ);
	КонецЦикла;
		Для каждого ТЧ Из ТаблицаАналоговМПЗ Цикл
			Если СписокМПЗ.НайтиПоЗначению(ТЧ.АналогМПЗ) = Неопределено Тогда
			СписокМПЗ.Добавить(ТЧ.АналогМПЗ);
			КонецЕсли; 
		КонецЦикла;
			Если ТипСправочника = 2 Тогда	
			ПодсчётОжидаемогоРасхода(ТаблицаРасходаМПЗ,СписокМПЗ);
			КонецЕсли;                                            
ПодсчётРезервКомплектов(ТаблицаРасходаМПЗ,СписокМПЗ);
// Запрос по заказам поставщикам
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыПоставщикамОстаткиИОбороты.МПЗ КАК МПЗ,
	|	ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику,
	|	ЗаказыПоставщикамОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
	|	ЗаказыПоставщикамОстаткиИОбороты.КоличествоРасход
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Регистратор, , ) КАК ЗаказыПоставщикамОстаткиИОбороты
	|ГДЕ
	|	ЗаказыПоставщикамОстаткиИОбороты.МПЗ В(&СписокМПЗ)";
Запрос.УстановитьПараметр("ДатаНач", НачалоГода(ТекущаяДата()));
Запрос.УстановитьПараметр("ДатаКон", ТекущаяДата());
Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);
	Если Не Поставщик.Пустая() Тогда
	Запрос.Текст = Запрос.Текст + " И ЗаказыПоставщикамОстаткиИОбороты.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("Контрагент", Поставщик);	
	КонецЕсли;
		Если Не Договор.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И ЗаказыПоставщикамОстаткиИОбороты.Договор = &Договор";
		Запрос.УстановитьПараметр("Договор", Договор);	
		КонецЕсли;
Запрос.Текст = Запрос.Текст + " ИТОГИ СУММА(КоличествоКонечныйОстаток),СУММА(КоличествоРасход) ПО МПЗ,ЗаказПоставщику";
РезультатЗапроса = Запрос.Выполнить();
ВыборкаЗаказыПоставщикамМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапкаОбщая = Макет.ПолучитьОбласть("Шапка|Общая");
ОблШапкаПериод = Макет.ПолучитьОбласть("Шапка|Период");
ОблШапкаМинОстаток = Макет.ПолучитьОбласть("Шапка|МинОстаток");
ОблГруппаОбщая = Макет.ПолучитьОбласть("Группа|Общая");
ОблГруппаПериод = Макет.ПолучитьОбласть("Группа|Период");
ОблГруппаМинОстаток = Макет.ПолучитьОбласть("Группа|МинОстаток");
ОблМПЗОбщая = Макет.ПолучитьОбласть("МПЗ|Общая");
ОблМПЗПериод = Макет.ПолучитьОбласть("МПЗ|Период");
ОблМПЗМинОстаток = Макет.ПолучитьОбласть("МПЗ|МинОстаток");
ОблАналогОбщая = Макет.ПолучитьОбласть("Аналог|Общая");
ОблАналогПериод = Макет.ПолучитьОбласть("Аналог|Период");
ОблАналогМинОстаток = Макет.ПолучитьОбласть("Аналог|МинОстаток");
ОблКонецОбщая = Макет.ПолучитьОбласть("Конец|Общая");
ОблКонецПериод = Макет.ПолучитьОбласть("Конец|Период");
ОблКонецМинОстаток = Макет.ПолучитьОбласть("Конец|МинОстаток");

ОблШапкаОбщая.Параметры.ДатаВывода = ТекущаяДата();
ТабДок.Вывести(ОблШапкаОбщая);

ЭтаФорма_Номенклатура = РеквизитФормыВЗначение("Номенклатура"); // оптимизация
ЭтаФорма_Номенклатура.Индексы.Добавить("Номенклатура");

	Для Каждого Стр Из СписокПериодов Цикл
	ОблШапкаПериод.Параметры.ММГГ = Формат(Стр.Значение,"ДФ=MM.yy");
	ТабДок.Присоединить(ОблШапкаПериод);
	КонецЦикла;	
ТабДок.Присоединить(ОблШапкаМинОстаток);
ТекГруппаМПЗ = Неопределено;
	Для каждого ТЧ Из ТаблицаМПЗ Цикл
		Если ТекГруппаМПЗ <> ТЧ.ГруппаМПЗ Тогда
			Если ТекГруппаМПЗ <> Неопределено Тогда		
			ТабДок.ЗакончитьГруппуСтрок();
			КонецЕсли; 
		ТекГруппаМПЗ = ТЧ.ГруппаМПЗ;
		ОблГруппаОбщая.Параметры.ГруппаМПЗ = ТекГруппаМПЗ;
		ТабДок.Вывести(ОблГруппаОбщая);
			Для Каждого Стр Из СписокПериодов Цикл
			ТабДок.Присоединить(ОблГруппаПериод);
			КонецЦикла;	
		ТабДок.Присоединить(ОблГруппаМинОстаток);
		ТабДок.НачатьГруппуСтрок("По группам МПЗ", Истина);
		КонецЕсли;
	МПЗ = ТЧ.МПЗ;
	ВыборкаРасход = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",МПЗ)); 
		Если ВыборкаРасход.Количество() > 0 Тогда
		ОблМПЗОбщая.Параметры.КоличествоОжидаемыйРасход = ВыборкаРасход[0].КоличествоОжидаемыйРасход;
		ОблМПЗОбщая.Параметры.КолРК = ВыборкаРасход[0].КоличествоРК;
		Иначе	
		ОблМПЗОбщая.Параметры.КоличествоОжидаемыйРасход = 0;
	    ОблМПЗОбщая.Параметры.КолРК = 0;
		КонецЕсли;                                          
	ОблМПЗОбщая.Параметры.Статус = ПолучитьСтатус(МПЗ);
	ОблМПЗОбщая.Параметры.Наименование = СокрЛП(МПЗ.Наименование); 
	ОблМПЗОбщая.Параметры.МПЗ = МПЗ;
	ОблМПЗОбщая.Параметры.ГруппаПоЗакупкам = МПЗ.ГруппаПоЗакупкам;
	ОблМПЗОбщая.Параметры.ЕдиницаИзмерения = ОбщегоНазначенияПовтИсп.ПолучитьЗначениеРеквизита(МПЗ,"ЕдиницаИзмерения.Наименование");
	ОблМПЗОбщая.Параметры.Цена = ОбщийМодульВызовСервера.ПолучитьПоследнююЦену(МПЗ,Отчет.Период.ДатаОкончания);
	ОблМПЗОбщая.Параметры.СрокПоставки = МПЗ.СрокПоставки; 
	ОблМПЗОбщая.Параметры.КоличествоОстаток = ТЧ.КоличествоОстаток;
	ОблМПЗОбщая.Параметры.НаличиеДоговора = ТЧ.НаличиеДоговора;
	ОблМПЗОбщая.Параметры.Контрагент = ПолучитьКонтрагентаВПоследнемЗаказеПоставщику(МПЗ);
	ВыборкаЗаказыПоставщикамМПЗ.Сбросить();
		Если ВыборкаЗаказыПоставщикамМПЗ.НайтиСледующий(Новый Структура("МПЗ",МПЗ)) Тогда
		ОблМПЗОбщая.Параметры.Долг = ВыборкаЗаказыПоставщикамМПЗ.КоличествоКонечныйОстаток;
		Иначе	
		ОблМПЗОбщая.Параметры.Долг = 0; 
		КонецЕсли;
	КоличествоОстатокПоДоговору = 0;
	ТабДок.Вывести(ОблМПЗОбщая);
	НомСтр = 1;
		Для Каждого Стр Из СписокПериодов Цикл 
		КоличествоРасход = 0;
			Для Каждого ТЧ_Ном Из ТЧ.ТаблицаНоменклатуры Цикл			
			Выборка = ЭтаФорма_Номенклатура.НайтиСтроки(Новый Структура("Номенклатура",ТЧ_Ном.Номенклатура));
				Для к = 0 по Выборка.ВГраница() Цикл
					Если (Стр.Значение>=ТЧ_Ном.ДатаС)и(Стр.Значение<=ТЧ_Ном.ДатаПо) Тогда
					КоличествоРасход = КоличествоРасход + Выборка[к]["Д"+НомСтр]*ТЧ_Ном.Количество;										
					КонецЕсли;
				КонецЦикла; 
			КонецЦикла;
		ОблМПЗПериод.Параметры.КоличествоРасход = КоличествоРасход;
		ТабДок.Присоединить(ОблМПЗПериод);
		НомСтр = НомСтр + 1;
		КонецЦикла;
	ОблМПЗМинОстаток.Параметры.МинОстаток = МПЗ.МинОстаток;
	ТабДок.Присоединить(ОблМПЗМинОстаток);
	ВыборкаАналоги = ТаблицаАналоговМПЗ.НайтиСтроки(Новый Структура("МПЗ",МПЗ));
		Если ВыборкаАналоги.Количество() > 0 Тогда
		ТабДок.НачатьГруппуСтрок("По МПЗ", Истина);
			Для м = 0 по ВыборкаАналоги.ВГраница() Цикл	
			Аналог = ВыборкаАналоги[м].АналогМПЗ;
			ВыборкаРасход = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",Аналог)); 
				Если ВыборкаРасход.Количество() > 0 Тогда
				ОблАналогОбщая.Параметры.КоличествоОжидаемыйРасход = ВыборкаРасход[0].КоличествоОжидаемыйРасход;
				ОблАналогОбщая.Параметры.КолРК = ВыборкаРасход[0].КоличествоРК;
				Иначе	
				ОблАналогОбщая.Параметры.КоличествоОжидаемыйРасход = 0;
				ОблАналогОбщая.Параметры.КолРК = 0;	
				КонецЕсли;
			ОблАналогОбщая.Параметры.Статус = ПолучитьСтатус(Аналог);
			ОблАналогОбщая.Параметры.Наименование = СокрЛП(Аналог.Наименование); 
			ОблАналогОбщая.Параметры.МПЗ = Аналог;
			ОблАналогОбщая.Параметры.ГруппаПоЗакупкам = Аналог.ГруппаПоЗакупкам;
			ОблАналогОбщая.Параметры.ЕдиницаИзмерения = ОбщегоНазначенияПовтИсп.ПолучитьЗначениеРеквизита(Аналог,"ЕдиницаИзмерения.Наименование");
			ОблАналогОбщая.Параметры.Цена = ОбщийМодульВызовСервера.ПолучитьПоследнююЦену(Аналог,Отчет.Период.ДатаОкончания);
			ОблАналогОбщая.Параметры.СрокПоставки = Аналог.СрокПоставки; 
			ОблАналогОбщая.Параметры.КоличествоОстаток = ВыборкаАналоги[м].КоличествоОстаток;
			ОблАналогОбщая.Параметры.НаличиеДоговора = ВыборкаАналоги[м].НаличиеДоговора;
			ОблАналогОбщая.Параметры.Контрагент = ПолучитьКонтрагентаВПоследнемЗаказеПоставщику(Аналог);
			ВыборкаЗаказыПоставщикамМПЗ.Сбросить();
				Если ВыборкаЗаказыПоставщикамМПЗ.НайтиСледующий(Новый Структура("МПЗ",Аналог)) Тогда
				ОблАналогОбщая.Параметры.Долг = ВыборкаЗаказыПоставщикамМПЗ.КоличествоКонечныйОстаток;
				Иначе	
				ОблАналогОбщая.Параметры.Долг = 0; 
				КонецЕсли;
			ТабДок.Вывести(ОблАналогОбщая);
			НомСтр = 1;
				Для Каждого Стр Из СписокПериодов Цикл 
				КоличествоРасход = 0;
					Для Каждого ТЧ_Ном Из ВыборкаАналоги[м].ТаблицаНоменклатуры Цикл	
					Выборка = ЭтаФорма_Номенклатура.НайтиСтроки(Новый Структура("Номенклатура",ТЧ_Ном.Номенклатура));
						Для к = 0 по Выборка.ВГраница() Цикл
							Если (Стр.Значение>=ТЧ_Ном.ДатаС)и(Стр.Значение<=ТЧ_Ном.ДатаПо) Тогда
							КоличествоРасход = КоличествоРасход + Выборка[к]["Д"+НомСтр]*ТЧ_Ном.Количество;										
							КонецЕсли; 
						КонецЦикла; 
					КонецЦикла;
				ОблАналогПериод.Параметры.КоличествоРасход = КоличествоРасход;
				ТабДок.Присоединить(ОблАналогПериод);
				НомСтр = НомСтр + 1;
				КонецЦикла;
			ОблАналогМинОстаток.Параметры.МинОстаток = Аналог.МинОстаток;
			ТабДок.Присоединить(ОблАналогМинОстаток);
			КонецЦикла;
		ТабДок.ЗакончитьГруппуСтрок();
		КонецЕсли; 
	КонецЦикла;
		Если ТекГруппаМПЗ <> Неопределено Тогда		
		ТабДок.ЗакончитьГруппуСтрок();
		КонецЕсли;
ТабДок.Вывести(ОблКонецОбщая);
	Для Каждого Стр Из СписокПериодов Цикл
	ТабДок.Присоединить(ОблКонецПериод);
	КонецЦикла;	
ТабДок.Присоединить(ОблКонецМинОстаток);
ТабДок.ФиксацияСверху = 3;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	Элементы.Настройки.Скрыть();
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах(); 
	Состояние("Обработка...",,"Формирование таблицы отчёта...");
	СформироватьНаСервере();
	ОкончаниеЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Элементы.Настройки.ЗаголовокСвернутогоОтображения = "Сформирован за "+Окр((ОкончаниеЗамера - НачалоЗамера)/1000/60,1)+" мин.";
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПолучитьПерспективныйПланНаСервере()
ТЗ = Новый ТаблицаЗначений;

ТЗ.Колонки.Добавить("Статус",Новый ОписаниеТипов("ПеречислениеСсылка.СтатусыСпецификаций"),"Ст.");
ТЗ.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"),"Номенклатура");
СписокПериодов.Очистить();
ТекДата = Отчет.Период.ДатаНачала;
	Пока ТекДата <= Отчет.Период.ДатаОкончания Цикл
		Если День(ТекДата) = 1 Тогда
		СписокПериодов.Добавить(ТекДата);	
		ТЗ.Колонки.Добавить("Д"+СписокПериодов.Количество(),Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)),Формат(ТекДата,"ДФ=MM.yy"));	
		КонецЕсли;			
	ТекДата = ТекДата + 86400;
	КонецЦикла;
	
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПерспективныеПланы.МПЗ КАК МПЗ,
	|	ПерспективныеПланы.Количество КАК Количество,
	|	ПерспективныеПланы.Период КАК Период
	|ИЗ
	|	РегистрСведений.ПерспективныеПланы КАК ПерспективныеПланы
	|ГДЕ
	|	ПерспективныеПланы.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И ТИПЗНАЧЕНИЯ(ПерспективныеПланы.МПЗ) = ТИП(Справочник.Номенклатура)
	|	И ПерспективныеПланы.Проект = &Проект";
	Если СписокГруппНоменклатуры.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ПерспективныеПланы.МПЗ В ИЕРАРХИИ(&СписокГруппНоменклатуры)";
	Запрос.УстановитьПараметр("СписокГруппНоменклатуры", СписокГруппНоменклатуры);
	КонецЕсли;
Запрос.Текст = Запрос.Текст + " ИТОГИ СУММА(Количество) ПО МПЗ,Период ПЕРИОДАМИ(МЕСЯЦ, , )";
Запрос.УстановитьПараметр("ДатаНач", Отчет.Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон", Отчет.Период.ДатаОкончания);
Запрос.УстановитьПараметр("Проект", Справочники.Проекты.ПустаяСсылка());
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМПЗ.Следующий() Цикл
		Если ВыборкаМПЗ.Количество = 0 Тогда
		Продолжить;
		КонецЕсли;
			Если ТипИзделий = 1 Тогда
				Если Найти(ВыборкаМПЗ.МПЗ.Наименование,"_Х") > 0 Тогда
				Продолжить;
				КонецЕсли;	
			ИначеЕсли ТипИзделий = 2 Тогда
				Если Найти(ВыборкаМПЗ.МПЗ.Наименование,"_Х") = 0 Тогда
				Продолжить;
				КонецЕсли;			
			КонецЕсли;
	ТЧ = ТЗ.Добавить();
	ТЧ.Статус = ПолучитьСтатус(ВыборкаМПЗ.МПЗ);		
	ТЧ.Номенклатура = ВыборкаМПЗ.МПЗ;
	ВыборкаПериод = ВыборкаМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	НомСтр = 0;
		Для Каждого Стр Из СписокПериодов Цикл
		НомСтр = НомСтр + 1;
	    ВыборкаПериод.Сбросить();
			Если ВыборкаПериод.НайтиСледующий(Новый Структура("Период",Стр.Значение)) Тогда
			ТЧ["Д"+НомСтр] = ВыборкаПериод.Количество;			
			Иначе
			ТЧ["Д"+НомСтр] = 0;
			КонецЕсли;
		КонецЦикла;	
	КонецЦикла;
МассивРеквизитов = Новый Массив;
МассивУдаляемыхРеквизитов = Новый Массив;
МассивРеквизитов.Добавить(Новый РеквизитФормы("Номенклатура", Новый ОписаниеТипов("ТаблицаЗначений"), "", "Номенклатура"));
	Для Каждого Колонка Из ТЗ.Колонки Цикл
    МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "Номенклатура", Колонка.Заголовок)); 
	КонецЦикла;
МассивУдаляемыхРеквизитов.Добавить("Номенклатура");
	Если Элементы.Найти("Номенклатура") <> Неопределено Тогда
	Элементы.Удалить(Элементы["Номенклатура"]);
	ИзменитьРеквизиты(,МассивУдаляемыхРеквизитов);
	КонецЕсли;
ИзменитьРеквизиты(МассивРеквизитов);
//Помещаем Элементы на форму 
Таблица = Элементы.Добавить("Номенклатура", Тип("ТаблицаФормы"),Элементы.ПерспективныйПлан); 
Таблица.ПутьКДанным = "Номенклатура"; 
Таблица.Отображение = ОтображениеТаблицы.Список;
Таблица.ЧередованиеЦветовСтрок = Истина; 
	Для Каждого Колонка Из ТЗ.Колонки Цикл
    НовыйЭлемент = Элементы.Добавить("Номенклатура_" + Колонка.Имя, Тип("ПолеФормы"), Таблица); 
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
    НовыйЭлемент.ПутьКДанным = "Номенклатура." + Колонка.Имя; 
	КонецЦикла;
//переносим таблицу значений на форму 
ЗначениеВРеквизитФормы(ТЗ,"Номенклатура");
КонецПроцедуры

&НаСервере
Процедура ПолучитьПерспективныйПланТНПНаСервере()
ТЗ = Новый ТаблицаЗначений;

ТЗ.Колонки.Добавить("Статус",Новый ОписаниеТипов("ПеречислениеСсылка.СтатусыМПЗ"),"Ст.");
ТЗ.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Материалы"),"МПЗ");
ТЗ.Колонки.Добавить("КоличествоВыпущено",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)),"Выпущено");
ТЗ.Колонки.Добавить("КоличествоНеЗапущено",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)),"Не запущено");
ТЗ.Индексы.Добавить("Номенклатура"); // оптимизация
СписокПериодов.Очистить();
ТекДата = Отчет.Период.ДатаНачала;
	Пока ТекДата <= Отчет.Период.ДатаОкончания Цикл
		Если День(ТекДата) = 1 Тогда
		СписокПериодов.Добавить(ТекДата);	
		ТЗ.Колонки.Добавить("Д"+СписокПериодов.Количество(),Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)),Формат(ТекДата,"ДФ=MM.yy"));	
		КонецЕсли;			
	ТекДата = ТекДата + 86400;
	КонецЦикла;
	
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПерспективныеПланы.МПЗ КАК МПЗ,
	|	ПерспективныеПланы.Количество КАК Количество,
	|	ПерспективныеПланы.Период КАК Период
	|ИЗ
	|	РегистрСведений.ПерспективныеПланы КАК ПерспективныеПланы
	|ГДЕ
	|	ПерспективныеПланы.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И ТИПЗНАЧЕНИЯ(ПерспективныеПланы.МПЗ) = ТИП(Справочник.Материалы)
	|	И ПерспективныеПланы.Проект = &Проект";
Запрос.УстановитьПараметр("ДатаНач", Отчет.Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон", Отчет.Период.ДатаОкончания);
Запрос.УстановитьПараметр("Проект", Справочники.Проекты.ПустаяСсылка());
	Если СписокГруппНоменклатуры.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ПерспективныеПланы.МПЗ В ИЕРАРХИИ(&СписокГруппНоменклатуры)";
	Запрос.УстановитьПараметр("СписокГруппНоменклатуры", СписокГруппНоменклатуры);
	КонецЕсли;
Запрос.Текст = Запрос.Текст + " ИТОГИ СУММА(Количество) ПО МПЗ,Период ПЕРИОДАМИ(МЕСЯЦ, , )";
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМПЗ.Следующий() Цикл
		Если ВыборкаМПЗ.Количество = 0 Тогда
		Продолжить;
		КонецЕсли;
	ТЧ = ТЗ.Добавить();
	ТЧ.Статус = ПолучитьСтатус(ВыборкаМПЗ.МПЗ);		
	ТЧ.Номенклатура = ВыборкаМПЗ.МПЗ;
	ВыборкаПериод = ВыборкаМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	НомСтр = 0;
		Для Каждого Стр Из СписокПериодов Цикл
		НомСтр = НомСтр + 1;
	    ВыборкаПериод.Сбросить();
			Если ВыборкаПериод.НайтиСледующий(Новый Структура("Период",Стр.Значение)) Тогда
			ТЧ["Д"+НомСтр] = ВыборкаПериод.Количество;			
			Иначе
			ТЧ["Д"+НомСтр] = 0;
			КонецЕсли;
		КонецЦикла;	
	КонецЦикла;
МассивРеквизитов = Новый Массив;
МассивУдаляемыхРеквизитов = Новый Массив;
МассивРеквизитов.Добавить(Новый РеквизитФормы("Номенклатура", Новый ОписаниеТипов("ТаблицаЗначений"), "", "Номенклатура"));
	Для Каждого Колонка Из ТЗ.Колонки Цикл
    МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "Номенклатура", Колонка.Заголовок)); 
	КонецЦикла;
МассивУдаляемыхРеквизитов.Добавить("Номенклатура");
	Если Элементы.Найти("Номенклатура") <> Неопределено Тогда
	Элементы.Удалить(Элементы["Номенклатура"]);
	ИзменитьРеквизиты(,МассивУдаляемыхРеквизитов);
	КонецЕсли;
ИзменитьРеквизиты(МассивРеквизитов);
//Помещаем Элементы на форму 
Таблица = Элементы.Добавить("Номенклатура", Тип("ТаблицаФормы"),Элементы.ПерспективныйПлан); 
Таблица.ПутьКДанным = "Номенклатура"; 
Таблица.Отображение = ОтображениеТаблицы.Список;
Таблица.ЧередованиеЦветовСтрок = Истина; 
	Для Каждого Колонка Из ТЗ.Колонки Цикл
    НовыйЭлемент = Элементы.Добавить("Номенклатура_" + Колонка.Имя, Тип("ПолеФормы"), Таблица); 
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
    НовыйЭлемент.ПутьКДанным = "Номенклатура." + Колонка.Имя; 
	КонецЦикла;
//переносим таблицу значений на форму 
ЗначениеВРеквизитФормы(ТЗ,"Номенклатура");
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПерспективныйПлан(Команда)
	Если ТипСправочника = 1 Тогда
	ПолучитьПерспективныйПланТНПНаСервере();
	Иначе
	ПолучитьПерспективныйПланНаСервере();
	КонецЕсли;
Элементы.Сформировать.Доступность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикПриИзменении(Элемент)
ПоставщикПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПоставщикПриИзмененииНаСервере()
Договор = Поставщик.ОсновнойДоговор;
КонецПроцедуры

&НаСервере
Функция ВывестиОжидаемыйРасходПоЛинейкам(Расшифровка)
ТД = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("ОжидаемыйРасходПоЛинейкам");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблЛинейка = Макет.ПолучитьОбласть("Линейка");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ТД.Вывести(ОблШапка);
КоличествоВсего = 0;
Выборка = ТаблицаРасходаПоЛинейкам.НайтиСтроки(Новый Структура("МПЗ",Расшифровка));
	Для к = 0 По Выборка.ВГраница() Цикл	
	ОблЛинейка.Параметры.Линейка = Выборка[к].Линейка;
	ОблЛинейка.Параметры.Количество = Выборка[к].Количество;
	ТД.Вывести(ОблЛинейка);
	КоличествоВсего = КоличествоВсего + Выборка[к].Количество;
	КонецЦикла;
ОблКонец.Параметры.КоличествоВсего = КоличествоВсего;
ТД.Вывести(ОблКонец);
ТД.Защита = Истина;
ТД.ФиксацияСверху = 3; 
Возврат(ТД);
КонецФункции

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
ИмяКолонки = СокрЛП(Сред(Элемент.ТекущаяОбласть.Имя,Найти(Элемент.ТекущаяОбласть.Имя,"C")));
НомерКолонки = Число(Сред(ИмяКолонки,2));
	Если НомерКолонки = 12 Тогда
	СтандартнаяОбработка = Ложь;
	ТД = ВывестиОжидаемыйРасходПоЛинейкам(Расшифровка);
	ТД.Показать("Ожидаемый расход по линейкам");
	ИначеЕсли НомерКолонки = 7 Тогда
	СтандартнаяОбработка = Ложь;
	Отбор = Новый Структура("МПЗ",Расшифровка);
		Если СписокМестХранения.Количество() > 0 Тогда	
		Отбор.Вставить("МестоХранения",СписокМестХранения);
		КонецЕсли;
	ИмяОтчета = "ОтчётПоРегиструМестаХранения";
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
	ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьПользовательскиеНастройкиОтчетаСКД(ИмяОтчета,ТекущаяДата(),ТекущаяДата(),Отбор,"ОстаткиПоСкладам"));
	ПараметрыФормы.Вставить("КлючВарианта","ОстаткиПоСкладам"); 
	ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);	
	ИначеЕсли НомерКолонки = 8 Тогда
	СтандартнаяОбработка = Ложь;
	Отбор = Новый Структура("МПЗ",Расшифровка);
		Если Не Поставщик.Пустая() Тогда	
		Отбор.Вставить("Контрагент",Поставщик);
		КонецЕсли;
			Если Не Договор.Пустая() Тогда	
			Отбор.Вставить("Договор",Договор);
			КонецЕсли; 
	ИмяОтчета = "ОтчётПоРегиструЗаказыПоставщикам";
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
	ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьПользовательскиеНастройкиОтчетаСКД(ИмяОтчета,НачалоГода(ТекущаяДата()),ТекущаяДата(),Отбор,"ПоПоставщикамВРазрезеЗаказов"));
	ПараметрыФормы.Вставить("КлючВарианта","ПоПоставщикамВРазрезеЗаказов"); 
	ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);	
	ИначеЕсли НомерКолонки = 9 Тогда
	СтандартнаяОбработка = Ложь;
	Отбор = Новый Структура("МПЗ",Расшифровка);
		Если Не Поставщик.Пустая() Тогда	
		Отбор.Вставить("Контрагент",Поставщик);
		КонецЕсли;
			Если Не Договор.Пустая() Тогда	
			Отбор.Вставить("Договор",Договор);
			КонецЕсли; 
	ИмяОтчета = "ОтчетПоРегиструДоговорыСПоставщиками";
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
	ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьПользовательскиеНастройкиОтчетаСКД(ИмяОтчета,ТекущаяДата(),ТекущаяДата(),Отбор,"Остатки"));
	ПараметрыФормы.Вставить("КлючВарианта","Остатки"); 
	ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТипСправочникаПриИзменении(Элемент)
СписокГруппНоменклатуры.Очистить();
Элементы.Сформировать.Доступность = Ложь;
	Если ТипСправочника = 1 Тогда
	СписокГруппНоменклатуры.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Материалы");	
	Иначе	
	СписокГруппНоменклатуры.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	КонецЕсли; 
КонецПроцедуры
