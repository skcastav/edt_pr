
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(ЭтаФорма.Параметры.Документ) Тогда
	ПараметрыДокумента = ПолучитьПараметрыДокумента(ЭтаФорма.Параметры.Документ);	
	СписокЛинеек.Очистить();
    ПолучитьСписокЛинеек(ПараметрыДокумента.Линейка,ПараметрыДокумента.Проектные);	
		Если ПараметрыДокумента.ВедомостьВыходногоДня Тогда        
		Отчет.Период.ДатаНачала = ПараметрыДокумента.Дата;			
		Отчет.Период.ДатаОкончания = ПараметрыДокумента.Дата;
		Иначе
		Отчет.Период.ДатаНачала = НачалоМесяца(ПараметрыДокумента.Дата);			
		Отчет.Период.ДатаОкончания = КонецМесяца(ПараметрыДокумента.Дата);		
		КонецЕсли;
	БезУчётаВыходныхДней = ПараметрыДокумента.БезУчётаВыходныхДней;
		Если БезУчётаВыходныхДней Тогда
		СписокВыходныхДней.Очистить();
		ПолучитьСписокВыходныхДней(ЭтаФорма.Параметры.Документ);		
		КонецЕсли;
	Сформировать(Неопределено);   	
	КонецЕсли; 
КонецПроцедуры 

&НаСервере
Функция ПолучитьПараметрыДокумента(Документ)
Парам = Новый Структура("Линейка,ЭтоГруппа,Дата,ВедомостьВыходногоДня,БезУчётаВыходныхДней,Проектные",Документ.Линейка,Документ.Линейка.ЭтоГруппа,Документ.Дата,Документ.ВедомостьВыходногоДня,Документ.БезУчётаВыходныхДней,Документ.Проектные);
Возврат(Парам);
КонецФункции

&НаСервере
Функция ПолучитьСписокВыходныхДней(Документ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИндивидуальнаяСделка.Дата
	|ИЗ
	|	Документ.ИндивидуальнаяСделка КАК ИндивидуальнаяСделка
	|ГДЕ
	|	ИндивидуальнаяСделка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ИндивидуальнаяСделка.Подразделение = &Подразделение
	|	И ИндивидуальнаяСделка.ВедомостьВыходногоДня = ИСТИНА
	|	И ИндивидуальнаяСделка.ПометкаУдаления = ЛОЖЬ
	|	И ИндивидуальнаяСделка.Комментарий ПОДОБНО &Комментарий";
Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Документ.Дата));
Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Документ.Дата));
Запрос.УстановитьПараметр("Подразделение", Документ.Подразделение);
Запрос.УстановитьПараметр("Комментарий", Документ.Комментарий);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокВыходныхДней.Добавить(ВыборкаДетальныеЗаписи.Дата);
	КонецЦикла;
КонецФункции

&НаСервере
Функция ПолучитьСписокЛинеек(ГруппаЛинеек,Проектные)
Линейки = Справочники.Линейки.Выбрать(ГруппаЛинеек);
	Пока Линейки.Следующий() Цикл
		Если Линейки.Проектная = Проектные Тогда
		СписокЛинеек.Добавить(Линейки.Ссылка);
		КонецЕсли;			
	КонецЦикла;
КонецФункции

&НаСервере
Процедура ИсключитьПериод(ВыходнойДень,ТаблицаИзделий)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииПоступление.Номенклатура КАК Изделие,
	|	ВыпускПродукцииПоступление.Количество КАК Количество,
	|	ВыпускПродукцииПоступление.Номенклатура.Наименование КАК НоменклатураНаименование,
	|	ВыпускПродукцииПоступление.Ссылка.Дата КАК Дата
	|ИЗ
	|	Документ.ВыпускПродукции.Поступление КАК ВыпускПродукцииПоступление
	|ГДЕ
	|	ВыпускПродукцииПоступление.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииПоступление.Ссылка.НаСклад = ИСТИНА
	|	И ВыпускПродукцииПоступление.Ссылка.ДокументОснование.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	УПОРЯДОЧИТЬ ПО НоменклатураНаименование 
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Изделие"; 
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ВыходнойДень));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(ВыходнойДень));
Запрос.УстановитьПараметр("СписокЛинеек", СписокЛинеек); 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаИзделия = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИзделия.Следующий() Цикл
	Выборка = ТаблицаИзделий.Найти(ВыборкаИзделия.Изделие,"Изделие");
	Выборка.Количество = Выборка.Количество - ВыборкаИзделия.Количество;
	КонецЦикла;
КонецПроцедуры 

&НаСервере
Функция ПолучитьСписокТО(Номенклатура)
Запрос = Новый Запрос;
СписокТО = Новый СписокЗначений;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходов.Элемент,
	|	НормыРасходовСрезПоследних.Норма
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(&НаДату, ) КАК НормыРасходовСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НормыРасходов КАК НормыРасходов
	|		ПО НормыРасходовСрезПоследних.НормаРасходов = НормыРасходов.Ссылка
	|ГДЕ
	|	НормыРасходов.ПометкаУдаления = ЛОЖЬ
	|	И НормыРасходов.Владелец = &Владелец
	|	И ТИПЗНАЧЕНИЯ(НормыРасходов.Элемент) = ТИП(Справочник.ТехОперации)
	|	И НормыРасходовСрезПоследних.Норма > 0";
Запрос.УстановитьПараметр("НаДату", Отчет.Период.ДатаОкончания);
Запрос.УстановитьПараметр("Владелец", Номенклатура);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокТО.Добавить(ВыборкаДетальныеЗаписи.Элемент,ВыборкаДетальныеЗаписи.Норма);		
	КонецЦикла;
Возврат(СписокТО);
КонецФункции

&НаСервере
Функция ПолучитьСписокТОПоОборудованию(Номенклатура,Оборудование)
Запрос = Новый Запрос;
СписокТО = Новый СписокЗначений;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходов.Элемент,
	|	НормыРасходовСрезПоследних.Норма
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(&НаДату, ) КАК НормыРасходовСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НормыРасходов КАК НормыРасходов
	|		ПО НормыРасходовСрезПоследних.НормаРасходов = НормыРасходов.Ссылка
	|ГДЕ
	|	НормыРасходов.ПометкаУдаления = ЛОЖЬ
	|	И НормыРасходов.Владелец = &Владелец
	|	И ТИПЗНАЧЕНИЯ(НормыРасходов.Элемент) = ТИП(Справочник.ТехОперации)
	|	И НормыРасходовСрезПоследних.Норма > 0";
Запрос.УстановитьПараметр("НаДату", Отчет.Период.ДатаОкончания);
Запрос.УстановитьПараметр("Владелец", Номенклатура);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Элемент.Оборудование.Найти(Оборудование,"Оборудование") <> Неопределено Тогда
		СписокТО.Добавить(ВыборкаДетальныеЗаписи.Элемент,ВыборкаДетальныеЗаписи.Норма);		
		КонецЕсли;
	КонецЦикла;
Возврат(СписокТО);
КонецФункции

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();
Запрос = Новый Запрос;
ТаблицаТО = Новый ТаблицаЗначений;

ТаблицаТО.Колонки.Добавить("ПЗ",Новый ОписаниеТипов("ДокументСсылка.ПроизводственноеЗадание")); 
ТаблицаТО.Колонки.Добавить("ДатаВыпуска",Новый ОписаниеТипов("Дата"));
ТаблицаТО.Колонки.Добавить("Исполнитель",Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
ТаблицаТО.Колонки.Добавить("ТехОперация",Новый ОписаниеТипов("СправочникСсылка.ТехОперации"));
ТаблицаТО.Колонки.Добавить("Оборудование",Новый ОписаниеТипов("СправочникСсылка.ТехОснастка"));
ТаблицаТО.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(7,3)));

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблИсполнитель = Макет.ПолучитьОбласть("Исполнитель");
ОблИсполнительИтого = Макет.ПолучитьОбласть("ИсполнительИтого");
ОблМТК = Макет.ПолучитьОбласть("МТК");
ОблТО = Макет.ПолучитьОбласть("ТО");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.ДатаНач = Формат(Отчет.Период.ДатаНачала,"ДФ=dd.MM.yyyy");
ОблШапка.Параметры.ДатаКон = Формат(Отчет.Период.ДатаОкончания,"ДФ=dd.MM.yyyy");
ОблШапка.Параметры.ВидОтчёта = ?(БезУчётаВыходныхДней,"Без учёта выходных дней: "+СписокВыходныхДней,"");
ТабДок.Вывести(ОблШапка);

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииКанбан.ДокументОснование КАК ПЗ,
	|	ВыпускПродукцииКанбан.Дата,
	|	ВыпускПродукцииКанбан.Количество,
	|	ВыпускПродукцииКанбан.Изделие
	|ИЗ
	|	Документ.ВыпускПродукцииКанбан КАК ВыпускПродукцииКанбан
	|ГДЕ
	|	ВыпускПродукцииКанбан.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииКанбан.ДокументОснование.Линейка В ИЕРАРХИИ(&СписокЛинеек)"; 
	Если ОтобратьПо = 1 Тогда
	Запрос.Текст = Запрос.Текст + " И ВыпускПродукцииКанбан.Изделие.Канбан.Служебный = &Служебный";
	Запрос.УстановитьПараметр("Служебный", Ложь);
	ИначеЕсли ОтобратьПо = 2 Тогда	
	Запрос.Текст = Запрос.Текст + " И ВыпускПродукцииКанбан.Изделие.Канбан.Служебный = &Служебный";
	Запрос.УстановитьПараметр("Служебный", Истина);	
	КонецЕсли; 
		Если БезУчётаВыходныхДней Тогда	
		Запрос.Текст = Запрос.Текст + " И НЕ НАЧАЛОПЕРИОДА(ВыпускПродукцииКанбан.Дата, ДЕНЬ) В (&СписокВыходныхДней)";
        Запрос.УстановитьПараметр("СписокВыходныхДней", СписокВыходныхДней);
		КонецЕсли;
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Отчет.Период.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Отчет.Период.ДатаОкончания));
Запрос.УстановитьПараметр("СписокЛинеек", СписокЛинеек);  
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныхЗаписей = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныхЗаписей.Следующий() Цикл
		Для каждого ТЧ Из ВыборкаДетальныхЗаписей.ПЗ.Оборудование Цикл
			Если Не Исполнитель.Пустая() Тогда
				Если ТЧ.Исполнитель <> Исполнитель Тогда
				Продолжить;
				КонецЕсли; 	
			КонецЕсли;
		ТЧ_ТО = ТаблицаТО.Добавить();
		ТЧ_ТО.ПЗ = ВыборкаДетальныхЗаписей.ПЗ; 
		ТЧ_ТО.ДатаВыпуска = ВыборкаДетальныхЗаписей.Дата;
		ТЧ_ТО.Исполнитель = ТЧ.Исполнитель;
		ТЧ_ТО.ТехОперация = ТЧ.ТехОперация;
		ТЧ_ТО.Оборудование = ТЧ.Оборудование;
		ТЧ_ТО.Количество = ТЧ.Количество;			
		КонецЦикла;
	КонецЦикла;
ТаблицаТО.Сортировать("Исполнитель,ПЗ,ТехОперация");
КоличествоВсего = 0;
КоличествоТОВсего = 0;
СуммаВсего = 0;
КоличествоИтого = 0;
КоличествоТОИтого = 0;
СуммаИтого = 0;
ТекИсполнитель = Неопределено;
ТекПЗ = Неопределено;
	Для каждого ТЧ Из ТаблицаТО Цикл
		Если ТекПЗ <> ТЧ.ПЗ Тогда
			Если ТекПЗ <> Неопределено Тогда
			ТабДок.ЗакончитьГруппуСтрок();
			КонецЕсли;
		КонецЕсли;	
			Если ТекИсполнитель <> ТЧ.Исполнитель Тогда
				Если ТекИсполнитель <> Неопределено Тогда
				ТабДок.ЗакончитьГруппуСтрок();
				ОблИсполнительИтого.Параметры.КоличествоИтого = КоличествоИтого;
				ОблИсполнительИтого.Параметры.КоличествоТОИтого = КоличествоТОИтого;
				ОблИсполнительИтого.Параметры.СуммаИтого = СуммаИтого;
				ТабДок.Вывести(ОблИсполнительИтого);
				КонецЕсли; 
			ОблИсполнитель.Параметры.Исполнитель = ТЧ.Исполнитель;
			ТабДок.Вывести(ОблИсполнитель);
			ТабДок.НачатьГруппуСтрок("Исполнитель",Истина);		
			КоличествоИтого = 0;
			КоличествоТОИтого = 0;
			СуммаИтого = 0;			
			ТекИсполнитель = ТЧ.Исполнитель;
			КонецЕсли;
				Если ТекПЗ <> ТЧ.ПЗ Тогда
				МТК = ТЧ.ПЗ.ДокументОснование;
				ОблМТК.Параметры.НомерМТК = МТК.Номер;
				ОблМТК.Параметры.МТК = МТК;
				ОблМТК.Параметры.ДатаОкончания = ТЧ.ДатаВыпуска;
				ОблМТК.Параметры.Наименование = СокрЛП(МТК.Номенклатура.Наименование);
				ОблМТК.Параметры.Номенклатура = МТК.Номенклатура;
				ОблМТК.Параметры.Количество = МТК.Количество;
				ТабДок.Вывести(ОблМТК);
				ТабДок.НачатьГруппуСтрок("ТО",Истина);
				ТекПЗ = ТЧ.ПЗ;
				КонецЕсли;
	ОблТО.Параметры.НаименованиеТО = СокрЛП(ТЧ.ТехОперация.Наименование);
	ОблТО.Параметры.ТО = ТЧ.ТехОперация;
	ОблТО.Параметры.ВидРабот = ТЧ.ТехОперация.ВидРабот;
	ОблТО.Параметры.Оборудование = ТЧ.Оборудование;
	КоличествоТО = ТЧ.ПЗ.Количество*ТЧ.Количество;
	ОблТО.Параметры.КоличествоТО = КоличествоТО;
	НормыТО = РегистрыСведений.НормыТО.ПолучитьПоследнее(Отчет.Период.ДатаНачала,Новый Структура("ТехОперация",ТЧ.ТехОперация));
	Стоимость = Окр(НормыТО.Норма/60*НормыТО.Стоимость,2,РежимОкругления.Окр15как20);
	ОблТО.Параметры.МашинноеВремя = НормыТО.МашинноеВремя;
	ОблТО.Параметры.НВ = НормыТО.Норма;
	ОблТО.Параметры.Стоимость = Стоимость;
	КС = 1;
	ОблТО.Параметры.КС = КС;			
	Сумма = Стоимость*КоличествоТО*КС;
	ОблТО.Параметры.Сумма = Сумма;
	ТабДок.Вывести(ОблТО);
	КоличествоТОИтого = КоличествоТОИтого + КоличествоТО;
	СуммаИтого = СуммаИтого + Сумма;
	КоличествоТОВсего = КоличествоТОВсего + КоличествоТО;
	СуммаВсего = СуммаВсего + Сумма;	
	КонецЦикла;
		Если ТекПЗ <> Неопределено Тогда
		ТабДок.ЗакончитьГруппуСтрок();
		КонецЕсли;
			Если ТекИсполнитель <> Неопределено Тогда
			ТабДок.ЗакончитьГруппуСтрок();
			ОблИсполнительИтого.Параметры.КоличествоИтого = КоличествоИтого;
			ОблИсполнительИтого.Параметры.КоличествоТОИтого = КоличествоТОИтого;
			ОблИсполнительИтого.Параметры.СуммаИтого = СуммаИтого;
			ТабДок.Вывести(ОблИсполнительИтого);
			КонецЕсли;
ОблКонец.Параметры.КоличествоВсего = КоличествоВсего;
ОблКонец.Параметры.КоличествоТОВсего = КоличествоТОВсего;
ОблКонец.Параметры.СуммаВсего = СуммаВсего;
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 3;
КонецПроцедуры

&НаСервере
Процедура СформироватьПоМТКНаСервере()
ТабДок.Очистить();
Запрос = Новый Запрос;

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("МакетПоМТК");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблМТК = Макет.ПолучитьОбласть("МТК");
ОблТО = Макет.ПолучитьОбласть("ТО");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.ДатаНач = Формат(Отчет.Период.ДатаНачала,"ДФ=dd.MM.yyyy");
ОблШапка.Параметры.ДатаКон = Формат(Отчет.Период.ДатаОкончания,"ДФ=dd.MM.yyyy");
ОблШапка.Параметры.ВидОтчёта = ?(БезУчётаВыходныхДней,"Без учёта выходных дней: "+СписокВыходныхДней,"");
ТабДок.Вывести(ОблШапка);

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииКанбан.Дата,
	|	ВыпускПродукцииКанбан.ДокументОснование КАК ПЗ,
	|	ВыпускПродукцииКанбан.Изделие
	|ИЗ
	|	Документ.ВыпускПродукцииКанбан КАК ВыпускПродукцииКанбан
	|ГДЕ
	|	ВыпускПродукцииКанбан.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииКанбан.ДокументОснование.Линейка В ИЕРАРХИИ(&СписокЛинеек)";
	Если ОтобратьПо = 1 Тогда
	Запрос.Текст = Запрос.Текст + " И ВыпускПродукцииКанбан.Изделие.Канбан.Служебный = &Служебный";
	Запрос.УстановитьПараметр("Служебный", Ложь);
	ИначеЕсли ОтобратьПо = 2 Тогда	
	Запрос.Текст = Запрос.Текст + " И ВыпускПродукцииКанбан.Изделие.Канбан.Служебный = &Служебный";
	Запрос.УстановитьПараметр("Служебный", Истина);	
	КонецЕсли; 
		Если БезУчётаВыходныхДней Тогда	
		Запрос.Текст = Запрос.Текст + " И НЕ НАЧАЛОПЕРИОДА(ВыпускПродукцииКанбан.Дата, ДЕНЬ) В (&СписокВыходныхДней)";
        Запрос.УстановитьПараметр("СписокВыходныхДней", СписокВыходныхДней);
		КонецЕсли;
Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО
								|	ВыпускПродукцииКанбан.ДокументОснование.Номер"; 
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Отчет.Период.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Отчет.Период.ДатаОкончания));
Запрос.УстановитьПараметр("СписокЛинеек", СписокЛинеек);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМТК = РезультатЗапроса.Выбрать();
КоличествоВсего = 0;
КоличествоТОВсего = 0;
СуммаВсего = 0;
	Пока ВыборкаМТК.Следующий() Цикл
	МТК = ВыборкаМТК.ПЗ.ДокументОснование;
	ОблМТК.Параметры.НомерМТК = МТК.Номер;
	ОблМТК.Параметры.МТК = МТК;
	ОблМТК.Параметры.ДатаОкончания = ВыборкаМТК.Дата;
	ОблМТК.Параметры.Наименование = СокрЛП(МТК.Номенклатура.Наименование);
	ОблМТК.Параметры.Номенклатура = МТК.Номенклатура;
	ОблМТК.Параметры.Количество = МТК.Количество;
	ТабДок.Вывести(ОблМТК);
	ТабДок.НачатьГруппуСтрок("ТО",Истина);
	КоличествоВсего = КоличествоВсего + МТК.Количество;
		Для каждого ТЧ Из ВыборкаМТК.ПЗ.Оборудование Цикл
		ОблТО.Параметры.Исполнитель = ТЧ.Исполнитель;
		ОблТО.Параметры.НаименованиеТО = СокрЛП(ТЧ.ТехОперация.Наименование);
		ОблТО.Параметры.ДатаОкончания = ВыборкаМТК.Дата;
		ОблТО.Параметры.ТО = ТЧ.ТехОперация;
		ОблТО.Параметры.ВидРабот = ТЧ.ТехОперация.ВидРабот;
		КоличествоТО = МТК.Количество*ТЧ.Количество;
		ОблТО.Параметры.КоличествоТО = КоличествоТО;
		НормыТО = РегистрыСведений.НормыТО.ПолучитьПоследнее(Отчет.Период.ДатаНачала,Новый Структура("ТехОперация",ТЧ.ТехОперация));
		Стоимость = Окр(НормыТО.Норма/60*НормыТО.Стоимость,2,РежимОкругления.Окр15как20);
		ОблТО.Параметры.МашинноеВремя = НормыТО.МашинноеВремя;
		ОблТО.Параметры.НВ = НормыТО.Норма;
		ОблТО.Параметры.Стоимость = Стоимость;
		КС = 1;
		ОблТО.Параметры.КС = КС;			
		Сумма = Стоимость*КоличествоТО*КС;
		ОблТО.Параметры.Сумма = Сумма;
		ТабДок.Вывести(ОблТО);
		КоличествоТОВсего = КоличествоТОВсего + КоличествоТО;
		СуммаВсего = СуммаВсего + Сумма;
		КонецЦикла;
	ТабДок.ЗакончитьГруппуСтрок();	
	КонецЦикла;
ОблКонец.Параметры.КоличествоВсего = КоличествоВсего;
ОблКонец.Параметры.КоличествоТОВсего = КоличествоТОВсего;
ОблКонец.Параметры.СуммаВсего = СуммаВсего;
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 3;
КонецПроцедуры

&НаСервере
Процедура СформироватьПоДатеНаСервере()
ТабДок.Очистить();
Запрос = Новый Запрос;

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("МакетПоДате");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблТО = Макет.ПолучитьОбласть("ТО");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.ДатаНач = Формат(Отчет.Период.ДатаНачала,"ДФ=dd.MM.yyyy");
ОблШапка.Параметры.ДатаКон = Формат(Отчет.Период.ДатаОкончания,"ДФ=dd.MM.yyyy");
ОблШапка.Параметры.ВидОтчёта = ?(БезУчётаВыходныхДней,"Без учёта выходных дней: "+СписокВыходныхДней,"");
ТабДок.Вывести(ОблШапка);

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииКанбан.Дата,
	|	ВыпускПродукцииКанбан.ДокументОснование КАК ПЗ,
	|	ВыпускПродукцииКанбан.Изделие
	|ИЗ
	|	Документ.ВыпускПродукцииКанбан КАК ВыпускПродукцииКанбан
	|ГДЕ
	|	ВыпускПродукцииКанбан.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииКанбан.ДокументОснование.Линейка В ИЕРАРХИИ(&СписокЛинеек)";
	Если ОтобратьПо = 1 Тогда
	Запрос.Текст = Запрос.Текст + " И ВыпускПродукцииКанбан.Изделие.Канбан.Служебный = &Служебный";
	Запрос.УстановитьПараметр("Служебный", Ложь);
	ИначеЕсли ОтобратьПо = 2 Тогда	
	Запрос.Текст = Запрос.Текст + " И ВыпускПродукцииКанбан.Изделие.Канбан.Служебный = &Служебный";
	Запрос.УстановитьПараметр("Служебный", Истина);	
	КонецЕсли; 
		Если БезУчётаВыходныхДней Тогда	
		Запрос.Текст = Запрос.Текст + " И НЕ НАЧАЛОПЕРИОДА(ВыпускПродукцииКанбан.Дата, ДЕНЬ) В (&СписокВыходныхДней)";
        Запрос.УстановитьПараметр("СписокВыходныхДней", СписокВыходныхДней);
		КонецЕсли;
Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО
								|	ВыпускПродукцииКанбан.Дата,
								|	ВыпускПродукцииКанбан.ДокументОснование.Номер"; 
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Отчет.Период.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Отчет.Период.ДатаОкончания));
Запрос.УстановитьПараметр("СписокЛинеек", СписокЛинеек);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМТК = РезультатЗапроса.Выбрать();
КоличествоВсего = 0;
КоличествоТОВсего = 0;
СуммаВсего = 0;
	Пока ВыборкаМТК.Следующий() Цикл
	МТК = ВыборкаМТК.ПЗ.ДокументОснование;
	КоличествоВсего = КоличествоВсего + МТК.Количество;
		Для каждого ТЧ Из ВыборкаМТК.ПЗ.Оборудование Цикл
		ОблТО.Параметры.НомерМТК = МТК.Номер;
		ОблТО.Параметры.МТК = МТК;
		ОблТО.Параметры.ДатаОкончания = ВыборкаМТК.Дата;
		ОблТО.Параметры.Наименование = СокрЛП(МТК.Номенклатура.Наименование);
		ОблТО.Параметры.Номенклатура = МТК.Номенклатура;
		ОблТО.Параметры.Количество = МТК.Количество;	
		ОблТО.Параметры.Исполнитель = ТЧ.Исполнитель;
		ОблТО.Параметры.НаименованиеТО = СокрЛП(ТЧ.ТехОперация.Наименование);
		ОблТО.Параметры.ДатаОкончания = ВыборкаМТК.Дата;
		ОблТО.Параметры.ТО = ТЧ.ТехОперация;
		ОблТО.Параметры.ВидРабот = ТЧ.ТехОперация.ВидРабот;
		КоличествоТО = МТК.Количество*ТЧ.Количество;
		ОблТО.Параметры.КоличествоТО = КоличествоТО;
		НормыТО = РегистрыСведений.НормыТО.ПолучитьПоследнее(Отчет.Период.ДатаНачала,Новый Структура("ТехОперация",ТЧ.ТехОперация));
		Стоимость = Окр(НормыТО.Норма/60*НормыТО.Стоимость,2,РежимОкругления.Окр15как20);
		ОблТО.Параметры.МашинноеВремя = НормыТО.МашинноеВремя;
		ОблТО.Параметры.НВ = НормыТО.Норма;
		ОблТО.Параметры.Стоимость = Стоимость;
		КС = 1;
		ОблТО.Параметры.КС = КС;			
		Сумма = Стоимость*КоличествоТО*КС;
		ОблТО.Параметры.Сумма = Сумма;
		ТабДок.Вывести(ОблТО);
		КоличествоТОВсего = КоличествоТОВсего + КоличествоТО;
		СуммаВсего = СуммаВсего + Сумма;
		КонецЦикла;	
	КонецЦикла;
ОблКонец.Параметры.КоличествоВсего = КоличествоВсего;
ОблКонец.Параметры.КоличествоТОВсего = КоличествоТОВсего;
ОблКонец.Параметры.СуммаВсего = СуммаВсего;
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 3;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		Если ОбщийМодульВызовСервера.РазрешенныйСписокЛинеек(СписокЛинеек) Тогда
			Если ГруппироватьПо = 0 Тогда
			СформироватьПоМТКНаСервере();
			ИначеЕсли ГруппироватьПо = 1 Тогда	
			СформироватьНаСервере();
			Иначе
			СформироватьПоДатеНаСервере();
			КонецЕсли;		
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

