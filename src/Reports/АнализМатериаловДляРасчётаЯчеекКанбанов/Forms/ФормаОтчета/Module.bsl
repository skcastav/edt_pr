
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
ТипСправочника = 1;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ТипСправочникаПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ТипСправочникаПриИзменении(Элемент)
	Если ТипСправочника = 1 Тогда
	СписокМПЗ.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Материалы");	
	Иначе	
	СписокМПЗ.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция НазваниеМесяца(НомерМесяца)
ТекМесяц = Лев(НомерМесяца,2);
ТекГод = Сред(НомерМесяца,4);
	Если ТекМесяц = "01" Тогда
	Возврат("Январь "+ТекГод);	
	ИначеЕсли ТекМесяц = "02" Тогда
	Возврат("Февраль "+ТекГод);
	ИначеЕсли ТекМесяц = "03" Тогда
	Возврат("Март "+ТекГод);
	ИначеЕсли ТекМесяц = "04" Тогда
	Возврат("Апрель "+ТекГод);
	ИначеЕсли ТекМесяц = "05" Тогда
	Возврат("Май "+ТекГод);
	ИначеЕсли ТекМесяц = "06" Тогда
	Возврат("Июнь "+ТекГод);
	ИначеЕсли ТекМесяц = "07" Тогда
	Возврат("Июль "+ТекГод);
	ИначеЕсли ТекМесяц = "08" Тогда
	Возврат("Август "+ТекГод);
	ИначеЕсли ТекМесяц = "09" Тогда
	Возврат("Сентябрь "+ТекГод);
	ИначеЕсли ТекМесяц = "10" Тогда
	Возврат("Октябрь "+ТекГод);
	ИначеЕсли ТекМесяц = "11" Тогда
	Возврат("Ноябрь "+ТекГод);
	ИначеЕсли ТекМесяц = "12" Тогда
	Возврат("Декабрь "+ТекГод);	
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ДобавитьАналоги(МестоХранения,МПЗ,СписокПериодов)
СписокАналогов = ОбщийМодульВызовСервера.ПолучитьСписокВозможныхАналогов(МПЗ,Период.ДатаОкончания);
	Если СписокАналогов.Количество() = 0 Тогда
	Возврат;
	КонецЕсли; 

Запрос = Новый Запрос;

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблМПЗОбщие = Макет.ПолучитьОбласть("Аналог|Общие");	
ОблМПЗПериод = Макет.ПолучитьОбласть("Аналог|Период");
ОблМПЗИтого = Макет.ПолучитьОбласть("Аналог|Итого");

ТабДок.НачатьГруппуСтрок("МПЗ",Истина);

	Если ВидОтчёта = 0 Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МестаХраненияОстаткиИОбороты.МПЗ КАК МПЗ,
		|	МестаХраненияОстаткиИОбороты.ПериодДень КАК Период,
		|	МестаХраненияОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	МестаХраненияОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|	МестаХраненияОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход,
		|	МестаХраненияОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
		|	МестаХраненияОстаткиИОбороты.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.МестаХранения.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Авто, , МестоХранения = &МестоХранения) КАК МестаХраненияОстаткиИОбороты
		|ГДЕ
		|	МестаХраненияОстаткиИОбороты.МПЗ В ИЕРАРХИИ(&СписокМПЗ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	МестаХраненияОстаткиИОбороты.МПЗ.Наименование
		|ИТОГИ
		|	СУММА(КоличествоПриход),
		|	СУММА(КоличествоРасход)
		|ПО
		|	МПЗ,
		|	Период ПЕРИОДАМИ(ДЕНЬ, , )";
	ИначеЕсли ВидОтчёта = 1 Тогда		
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МестаХраненияОстаткиИОбороты.МПЗ КАК МПЗ,
		|	МестаХраненияОстаткиИОбороты.ПериодНеделя КАК Период,
		|	МестаХраненияОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	МестаХраненияОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|	МестаХраненияОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход,
		|	МестаХраненияОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
		|	МестаХраненияОстаткиИОбороты.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.МестаХранения.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Авто, ,  МестоХранения = &МестоХранения) КАК МестаХраненияОстаткиИОбороты
		|ГДЕ
		|	МестаХраненияОстаткиИОбороты.МПЗ В ИЕРАРХИИ(&СписокМПЗ)
		|УПОРЯДОЧИТЬ ПО
		|	МестаХраненияОстаткиИОбороты.МПЗ.Наименование
		|ИТОГИ
		|	СУММА(КоличествоПриход),
		|	СУММА(КоличествоРасход)
		|ПО
		|	МПЗ,
		|	Период ПЕРИОДАМИ(НЕДЕЛЯ, , )"; 
	Иначе
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МестаХраненияОстаткиИОбороты.МПЗ КАК МПЗ,
		|	МестаХраненияОстаткиИОбороты.ПериодМесяц КАК Период,
		|	МестаХраненияОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	МестаХраненияОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|	МестаХраненияОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход,
		|	МестаХраненияОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
		|	МестаХраненияОстаткиИОбороты.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.МестаХранения.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Авто, , МестоХранения = &МестоХранения) КАК МестаХраненияОстаткиИОбороты
		|ГДЕ
		|	МестаХраненияОстаткиИОбороты.МПЗ В ИЕРАРХИИ(&СписокМПЗ)
		|УПОРЯДОЧИТЬ ПО
		|	МестаХраненияОстаткиИОбороты.МПЗ.Наименование
		|ИТОГИ
		|	СУММА(КоличествоПриход),
		|	СУММА(КоличествоРасход)
		|ПО
		|	МПЗ,
		|	Период ПЕРИОДАМИ(МЕСЯЦ, , )";
	КонецЕсли; 
Запрос.УстановитьПараметр("ДатаНач", Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон", Период.ДатаОкончания);
Запрос.УстановитьПараметр("МестоХранения", МестоХранения);
Запрос.УстановитьПараметр("СписокМПЗ", СписокАналогов);
Результат = Запрос.Выполнить();
ВыборкаМПЗ = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для каждого Стр Из СписокАналогов Цикл
	МПЗ = Стр.Значение;
	КоличествоРасходПроизв = 0;
	КоличествоРасходПрочий = 0;
	КоличествоРасходПроизвИтого = 0;
	КоличествоРасходПрочийИтого = 0;
	КоличествоДокПоступление = 0;
	КоличествоДокДвижение = 0;
	КоличествоДокПоступлениеИтого = 0;
	КоличествоДокДвижениеИтого = 0;
	ОблМПЗОбщие.Параметры.Статус = ПолучитьСтатус(МПЗ,Период.ДатаОкончания);
	ОблМПЗОбщие.Параметры.МПЗ = МПЗ;
		Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
		ОблМПЗОбщие.Параметры.ГруппаПоЗакупкам = МПЗ.ГруппаПоЗакупкам;
		ОблМПЗОбщие.Параметры.КратностьУпаковки = МПЗ.КратностьУпаковки;
		ОблМПЗОбщие.Параметры.Цена = ОбщийМодульВызовСервера.ПолучитьПоследнююЦену(МПЗ,Период.ДатаОкончания);
		ОблМПЗОбщие.Параметры.Фасовка = МПЗ.Фасовка;
		ОблМПЗОбщие.Параметры.КратностьИндивидуальнойУпаковки = МПЗ.КратностьИндивидуальнойУпаковки;
		КонецЕсли;
	КоличествоКО = ОбщийМодульВызовСервера.ПолучитьОстатокПоМестуХранения(МестоХранения,МПЗ,Период.ДатаОкончания);
	КоличествоНО = ОбщийМодульВызовСервера.ПолучитьОстатокПоМестуХранения(МестоХранения,МПЗ,Период.ДатаНачала);
	ОблМПЗОбщие.Параметры.КоличествоОстаток = ОбщийМодульВызовСервера.ПолучитьОстатокПоМестуХранения(МестоХранения,МПЗ,ТекущаяДата()); 
	ТабДок.Вывести(ОблМПЗОбщие);
	ВыборкаМПЗ.Сбросить();
		Пока ВыборкаМПЗ.НайтиСледующий(Новый Структура("МПЗ",МПЗ)) Цикл
		ВыборкаПериоды = ВыборкаМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период"); 
			Для каждого Стр Из СписокПериодов Цикл
			ВыборкаПериоды.Сбросить();
			КоличествоРасходПроизв = 0;
			КоличествоРасходПрочий = 0;
			КоличествоДокПоступление = 0;
			КоличествоДокДвижение = 0;
			ЯК = ОбщийМодульРаботаСРегистрами.ПолучитьЯчейкуКомплектацииПоМестуХранения(МестоХранения,МПЗ,Стр.Значение);
			ОблМПЗПериод.Параметры.КоличествоЯчеек = ЯК.КоличествоЯчеек;
			ОблМПЗПериод.Параметры.КоличествоВЯчейке = ЯК.КоличествоВЯчейке;
				Если ВыборкаПериоды.НайтиСледующий(Новый Структура("Период",Стр.Значение)) Тогда
				Выборка = ВыборкаПериоды.Выбрать();
					Пока Выборка.Следующий() Цикл
						Если Выборка.КоличествоПриход > 0 Тогда
							Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПоступлениеНаЛинейку") Тогда
							КоличествоДокПоступление = КоличествоДокПоступление + 1;
							ИначеЕсли ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ДвижениеМПЗ") Тогда	
							КоличествоДокДвижение = КоличествоДокДвижение + 1;
							КонецЕсли;
						КонецЕсли;
							Если Выборка.КоличествоРасход > 0 Тогда
								Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПередачаВПроизводство") Тогда
								КоличествоРасходПроизв = КоличествоРасходПроизв + Выборка.КоличествоРасход;
								ИначеЕсли ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ДвижениеМПЗ") Тогда
								КоличествоРасходПрочий = КоличествоРасходПрочий + Выборка.КоличествоРасход;
								ИначеЕсли ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.СписаниеМПЗПрочее") Тогда
								КоличествоРасходПрочий = КоличествоРасходПрочий + Выборка.КоличествоРасход;	
								КонецЕсли;						
							КонецЕсли; 
					КонецЦикла;
				КоличествоДокПоступлениеИтого = КоличествоДокПоступлениеИтого + КоличествоДокПоступление;
				КоличествоДокДвижениеИтого = КоличествоДокДвижениеИтого + КоличествоДокДвижение;
				КоличествоРасходПрочийИтого = КоличествоРасходПрочийИтого + КоличествоРасходПрочий;
				КоличествоРасходПроизвИтого = КоличествоРасходПроизвИтого + КоличествоРасходПроизв;
				КонецЕсли;
	 		ОблМПЗПериод.Параметры.КоличествоДокПоступление = КоличествоДокПоступление;
			ОблМПЗПериод.Параметры.КоличествоДокДвижение = КоличествоДокДвижение;
			ОблМПЗПериод.Параметры.КоличествоРасходПроизв = КоличествоРасходПроизв;
			ОблМПЗПериод.Параметры.КоличествоРасходПрочий = КоличествоРасходПрочий;
			ТабДок.Присоединить(ОблМПЗПериод);
			КонецЦикла;
		ОблМПЗИтого.Параметры.КоличествоДокПоступление = КоличествоДокПоступлениеИтого;
		ОблМПЗИтого.Параметры.КоличествоДокДвижение = КоличествоДокДвижениеИтого;
		ОблМПЗИтого.Параметры.КоличествоРасходПроизв = КоличествоРасходПроизвИтого;
		ОблМПЗИтого.Параметры.КоличествоРасходПрочий = КоличествоРасходПрочийИтого;
		ТабДок.Присоединить(ОблМПЗИтого);
		КонецЦикла;
	КонецЦикла; 
ТабДок.ЗакончитьГруппуСтрок();
КонецПроцедуры 

&НаСервере
Функция ПолучитьЛО(МПЗ,ДатаНач);
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЛьготнаяОчередь.НормаРасходов.Элемент КАК НормаРасходовЭлемент
	|ИЗ
	|	РегистрСведений.ЛьготнаяОчередь КАК ЛьготнаяОчередь
	|ГДЕ
	|	(ЛьготнаяОчередь.Период МЕЖДУ &ДатаНач И &ДатаКон
	|			ИЛИ ЛьготнаяОчередь.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				И ЛьготнаяОчередь.Период <= &ДатаКон)
	|	И ЛьготнаяОчередь.Линейка.МестоХраненияКанбанов В ИЕРАРХИИ(&СписокМестХранения)
	|	И ЛьготнаяОчередь.НормаРасходов.Элемент = &Элемент";
Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Если ВидОтчёта = 0 Тогда
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаНач));
	ИначеЕсли ВидОтчёта = 1 Тогда
	Запрос.УстановитьПараметр("ДатаКон", КонецНедели(ДатаНач));		
	Иначе
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(ДатаНач));
	КонецЕсли; 
Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения);
Запрос.УстановитьПараметр("Элемент", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
Возврат(Не РезультатЗапроса.Пустой());
КонецФункции 

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();
Запрос = Новый Запрос;
СписокПериодов = Новый СписокЗначений;

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");
ОблШапкаОбщие = Макет.ПолучитьОбласть("Шапка|Общие");	
ОблШапкаПериод = Макет.ПолучитьОбласть("Шапка|Период");
ОблШапкаИтого = Макет.ПолучитьОбласть("Шапка|Итого");
ОблМестаХраненияОбщие = Макет.ПолучитьОбласть("МестаХранения|Общие");	
ОблМестаХраненияПериод = Макет.ПолучитьОбласть("МестаХранения|Период");
ОблМестаХраненияИтого = Макет.ПолучитьОбласть("МестаХранения|Итого");
ОблМПЗОбщие = Макет.ПолучитьОбласть("МПЗ|Общие");	
ОблМПЗПериод = Макет.ПолучитьОбласть("МПЗ|Период");
ОблМПЗИтого = Макет.ПолучитьОбласть("МПЗ|Итого");
ОблКонецОбщие = Макет.ПолучитьОбласть("Конец|Общие");	
ОблКонецПериод = Макет.ПолучитьОбласть("Конец|Период");
ОблКонецИтого = Макет.ПолучитьОбласть("Конец|Итого");

ТекДата = Период.ДатаНачала;
	Пока ТекДата <= Период.ДатаОкончания Цикл
		Если ВидОтчёта = 0 Тогда
		СписокПериодов.Добавить(ТекДата);
		ИначеЕсли ВидОтчёта = 1 Тогда	
			Если СписокПериодов.НайтиПоЗначению(НачалоНедели(ТекДата)) = Неопределено Тогда
			СписокПериодов.Добавить(НачалоНедели(ТекДата));
			КонецЕсли;
		Иначе
			Если СписокПериодов.НайтиПоЗначению(НачалоМесяца(ТекДата)) = Неопределено Тогда
			СписокПериодов.Добавить(НачалоМесяца(ТекДата));
			КонецЕсли;	
		КонецЕсли;
	ТекДата = ТекДата + 86400;
    КонецЦикла;

ОблШапкаОбщие.Параметры.ДатаНач = Период.ДатаНачала;
ОблШапкаОбщие.Параметры.ДатаКон = Период.ДатаОкончания;
ТабДок.Вывести(ОблШапкаОбщие);
	Для каждого Стр Из СписокПериодов Цикл
	ОблШапкаПериод.Параметры.Период = Стр.Значение;
	ТабДок.Присоединить(ОблШапкаПериод);
	КонецЦикла;
ТабДок.Присоединить(ОблШапкаИтого);

	Если ВидОтчёта = 0 Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МестаХраненияОстаткиИОбороты.МестоХранения КАК МестоХранения,
		|	МестаХраненияОстаткиИОбороты.МПЗ КАК МПЗ,
		|	МестаХраненияОстаткиИОбороты.ПериодДень КАК Период,
		|	МестаХраненияОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	МестаХраненияОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|	МестаХраненияОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход,
		|	МестаХраненияОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
		|	МестаХраненияОстаткиИОбороты.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.МестаХранения.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Авто, , МестоХранения В ИЕРАРХИИ (&СписокМестХранения)) КАК МестаХраненияОстаткиИОбороты
		|ГДЕ
		|	МестаХраненияОстаткиИОбороты.ВидМПЗ = &ВидМПЗ";
		Если ТипСправочника = 2 Тогда
			Если СписокВидовКанбанов.Количество() > 0 Тогда
			Запрос.Текст = Запрос.Текст + " И МестаХраненияОстаткиИОбороты.МПЗ.Канбан В(&СписокВидовКанбанов)";
			Запрос.УстановитьПараметр("СписокВидовКанбанов", СписокВидовКанбанов);
			КонецЕсли;
		КонецЕсли; 
			Если СписокМПЗ.Количество() > 0 Тогда
			Запрос.Текст = Запрос.Текст + " И МестаХраненияОстаткиИОбороты.МПЗ В ИЕРАРХИИ(&СписокМПЗ)";
			Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);
			КонецЕсли;  
	Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО
									|	МестаХраненияОстаткиИОбороты.МПЗ.Наименование
									|ИТОГИ
									|	СУММА(КоличествоПриход),
									|	СУММА(КоличествоРасход)
									|ПО
									|	МестоХранения,
									|	МПЗ,
									|	Период ПЕРИОДАМИ(ДЕНЬ, , )";
	ИначеЕсли ВидОтчёта = 1 Тогда		
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МестаХраненияОстаткиИОбороты.МестоХранения КАК МестоХранения,
		|	МестаХраненияОстаткиИОбороты.МПЗ КАК МПЗ,
		|	МестаХраненияОстаткиИОбороты.ПериодНеделя КАК Период,
		|	МестаХраненияОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	МестаХраненияОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|	МестаХраненияОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход,
		|	МестаХраненияОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
		|	МестаХраненияОстаткиИОбороты.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.МестаХранения.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Авто, , МестоХранения В ИЕРАРХИИ (&СписокМестХранения)) КАК МестаХраненияОстаткиИОбороты
		|ГДЕ
		|	МестаХраненияОстаткиИОбороты.ВидМПЗ = &ВидМПЗ";
		Если ТипСправочника = 2 Тогда
			Если СписокВидовКанбанов.Количество() > 0 Тогда
			Запрос.Текст = Запрос.Текст + " И МестаХраненияОстаткиИОбороты.МПЗ.Канбан В(&СписокВидовКанбанов)";
			Запрос.УстановитьПараметр("СписокВидовКанбанов", СписокВидовКанбанов);
			КонецЕсли;
		КонецЕсли;
			Если СписокМПЗ.Количество() > 0 Тогда
			Запрос.Текст = Запрос.Текст + " И МестаХраненияОстаткиИОбороты.МПЗ В ИЕРАРХИИ(&СписокМПЗ)";
			Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);
			КонецЕсли;  
	Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО
									|	МестаХраненияОстаткиИОбороты.МПЗ.Наименование
									|ИТОГИ
									|	СУММА(КоличествоПриход),
									|	СУММА(КоличествоРасход)
									|ПО
									|	МестоХранения,
									|	МПЗ,
									|	Период ПЕРИОДАМИ(НЕДЕЛЯ, , )"; 
	Иначе
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МестаХраненияОстаткиИОбороты.МестоХранения КАК МестоХранения,
		|	МестаХраненияОстаткиИОбороты.МПЗ КАК МПЗ,
		|	МестаХраненияОстаткиИОбороты.ПериодМесяц КАК Период,
		|	МестаХраненияОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	МестаХраненияОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|	МестаХраненияОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход,
		|	МестаХраненияОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
		|	МестаХраненияОстаткиИОбороты.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.МестаХранения.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Авто, , МестоХранения В ИЕРАРХИИ (&СписокМестХранения)) КАК МестаХраненияОстаткиИОбороты
		|ГДЕ
		|	МестаХраненияОстаткиИОбороты.ВидМПЗ = &ВидМПЗ";
		Если ТипСправочника = 2 Тогда
			Если СписокВидовКанбанов.Количество() > 0 Тогда
			Запрос.Текст = Запрос.Текст + " И МестаХраненияОстаткиИОбороты.МПЗ.Канбан В(&СписокВидовКанбанов)";
			Запрос.УстановитьПараметр("СписокВидовКанбанов", СписокВидовКанбанов);
			КонецЕсли;
		КонецЕсли; 
			Если СписокМПЗ.Количество() > 0 Тогда
			Запрос.Текст = Запрос.Текст + " И МестаХраненияОстаткиИОбороты.МПЗ В ИЕРАРХИИ(&СписокМПЗ)";
			Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);
			КонецЕсли; 	
	Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО
									|	МестаХраненияОстаткиИОбороты.МПЗ.Наименование
									|ИТОГИ
									|	СУММА(КоличествоПриход),
									|	СУММА(КоличествоРасход)
									|ПО
									|	МестоХранения,
									|	МПЗ,
									|	Период ПЕРИОДАМИ(МЕСЯЦ, , )";
	КонецЕсли; 
Запрос.УстановитьПараметр("ДатаНач", Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон", Период.ДатаОкончания);
Запрос.УстановитьПараметр("ВидМПЗ", ?(ТипСправочника = 1,Перечисления.ВидыМПЗ.Материалы,Перечисления.ВидыМПЗ.Полуфабрикаты));
Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения);
Результат = Запрос.Выполнить();
ВыборкаМестаХранения = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМестаХранения.Следующий() Цикл
	ОблМестаХраненияОбщие.Параметры.МестоХранения = ВыборкаМестаХранения.МестоХранения;
	ТабДок.Вывести(ОблМестаХраненияОбщие);
		Для каждого Стр Из СписокПериодов Цикл
		ТабДок.Присоединить(ОблМестаХраненияПериод);
		КонецЦикла;
	ТабДок.Присоединить(ОблМестаХраненияИтого);
	ТабДок.НачатьГруппуСтрок("Место хранения",Истина);
	ВыборкаМПЗ = ВыборкаМестаХранения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаМПЗ.Следующий() Цикл
		КоличествоРасходПроизв = 0;
		КоличествоРасходПрочий = 0;
		КоличествоРасходПроизвИтого = 0;
		КоличествоРасходПрочийИтого = 0;
		КоличествоДокПоступление = 0;
		КоличествоДокДвижение = 0;
		КоличествоДокПоступлениеИтого = 0;
		КоличествоДокДвижениеИтого = 0;
		МПЗ = ВыборкаМПЗ.МПЗ;
		ОблМПЗОбщие.Параметры.Статус = ПолучитьСтатус(МПЗ,Период.ДатаОкончания);
		ОблМПЗОбщие.Параметры.МПЗ = МПЗ;
		ЯК = ОбщийМодульРаботаСРегистрами.ПолучитьЯчейкуКомплектацииПоМестуХранения(ВыборкаМестаХранения.МестоХранения,МПЗ,ТекущаяДата());
		ОблМПЗОбщие.Параметры.ГруппаРасчёта = ЯК.ГруппаРасчёта;
			Если ТипСправочника = 1 Тогда
			ОблМПЗОбщие.Параметры.ГруппаПоЗакупкам = МПЗ.ГруппаПоЗакупкам;
			ОблМПЗОбщие.Параметры.КратностьУпаковки = МПЗ.КратностьУпаковки;
			ОблМПЗОбщие.Параметры.Цена = ОбщийМодульВызовСервера.ПолучитьПоследнююЦену(МПЗ,Период.ДатаОкончания);
			ОблМПЗОбщие.Параметры.Фасовка = МПЗ.Фасовка;
			ОблМПЗОбщие.Параметры.КратностьИндивидуальнойУпаковки = МПЗ.КратностьИндивидуальнойУпаковки;			
			КонецЕсли;
		КоличествоКО = ОбщийМодульВызовСервера.ПолучитьОстатокПоМестуХранения(ВыборкаМестаХранения.МестоХранения,МПЗ,Период.ДатаОкончания);
		КоличествоНО = ОбщийМодульВызовСервера.ПолучитьОстатокПоМестуХранения(ВыборкаМестаХранения.МестоХранения,МПЗ,Период.ДатаНачала);
		ОблМПЗОбщие.Параметры.КоличествоОстаток = ОбщийМодульВызовСервера.ПолучитьОстатокПоМестуХранения(ВыборкаМестаХранения.МестоХранения,МПЗ,ТекущаяДата()); 
		ТабДок.Вывести(ОблМПЗОбщие);
		ВыборкаПериоды = ВыборкаМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период"); 
			Для каждого Стр Из СписокПериодов Цикл
			ВыборкаПериоды.Сбросить();
			КоличествоРасходПроизв = 0;
			КоличествоРасходПрочий = 0;
			КоличествоДокПоступление = 0;
			КоличествоДокДвижение = 0;
			ЯК = ОбщийМодульРаботаСРегистрами.ПолучитьЯчейкуКомплектацииПоМестуХранения(ВыборкаМестаХранения.МестоХранения,МПЗ,Стр.Значение);
			ОблМПЗПериод.Параметры.КоличествоЯчеек = ЯК.КоличествоЯчеек;
			ОблМПЗПериод.Параметры.КоличествоВЯчейке = ЯК.КоличествоВЯчейке;
				Если ВыборкаПериоды.НайтиСледующий(Новый Структура("Период",Стр.Значение)) Тогда
				Выборка = ВыборкаПериоды.Выбрать();
					Пока Выборка.Следующий() Цикл
						Если Выборка.КоличествоПриход > 0 Тогда
							Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПоступлениеНаЛинейку") Тогда
							КоличествоДокПоступление = КоличествоДокПоступление + 1;
							ИначеЕсли ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ДвижениеМПЗ") Тогда	
							КоличествоДокДвижение = КоличествоДокДвижение + 1;
							КонецЕсли;
						КонецЕсли;
							Если Выборка.КоличествоРасход > 0 Тогда
								Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ПередачаВПроизводство") Тогда
								КоличествоРасходПроизв = КоличествоРасходПроизв + Выборка.КоличествоРасход;
								ИначеЕсли ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ДвижениеМПЗ") Тогда
								КоличествоРасходПрочий = КоличествоРасходПрочий + Выборка.КоличествоРасход;
								ИначеЕсли ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.СписаниеМПЗПрочее") Тогда
								КоличествоРасходПрочий = КоличествоРасходПрочий + Выборка.КоличествоРасход;	
								КонецЕсли;						
							КонецЕсли; 
					КонецЦикла;
				КоличествоДокПоступлениеИтого = КоличествоДокПоступлениеИтого + КоличествоДокПоступление;
				КоличествоДокДвижениеИтого = КоличествоДокДвижениеИтого + КоличествоДокДвижение;
				КоличествоРасходПрочийИтого = КоличествоРасходПрочийИтого + КоличествоРасходПрочий;
				КоличествоРасходПроизвИтого = КоличествоРасходПроизвИтого + КоличествоРасходПроизв;
				КонецЕсли;
	 		ОблМПЗПериод.Параметры.КоличествоДокПоступление = КоличествоДокПоступление;
			ОблМПЗПериод.Параметры.КоличествоДокДвижение = КоличествоДокДвижение;
			ОблМПЗПериод.Параметры.КоличествоРасходПроизв = КоличествоРасходПроизв;
			ОблМПЗПериод.Параметры.КоличествоРасходПрочий = КоличествоРасходПрочий;
			ОблМПЗПериод.Параметры.ЛО = ПолучитьЛО(МПЗ,Стр.Значение);
			ТабДок.Присоединить(ОблМПЗПериод);
			КонецЦикла;
		ОблМПЗИтого.Параметры.КоличествоДокПоступление = КоличествоДокПоступлениеИтого;
		ОблМПЗИтого.Параметры.КоличествоДокДвижение = КоличествоДокДвижениеИтого;
		ОблМПЗИтого.Параметры.КоличествоРасходПроизв = КоличествоРасходПроизвИтого;
		ОблМПЗИтого.Параметры.КоличествоРасходПрочий = КоличествоРасходПрочийИтого;
		ТабДок.Присоединить(ОблМПЗИтого);
		ДобавитьАналоги(ВыборкаМестаХранения.МестоХранения,МПЗ,СписокПериодов);
		КонецЦикла;
	ТабДок.ЗакончитьГруппуСтрок();
	КонецЦикла;
ТабДок.Вывести(ОблКонецОбщие);
	Для каждого Стр Из СписокПериодов Цикл
	ТабДок.Присоединить(ОблКонецПериод);
	КонецЦикла;
ТабДок.Присоединить(ОблКонецИтого);
ТабДок.ФиксацияСверху = 5;
ТабДок.ФиксацияСлева = 9;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	СформироватьНаСервере();
	КонецЕсли;
КонецПроцедуры

