&НаСервере
Перем оптЗапросНорм, оптСоотРезультатов;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Отчет.Период.ДатаНачала = НачалоМесяца(ТекущаяДата());
Отчет.Период.ДатаОкончания = КонецГода(ТекущаяДата());
ТипСправочника = 1;
ТипИзделий = 1;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ТипСправочника = 1 Тогда
	СписокГруппНоменклатуры.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Материалы");
	Иначе	
	СписокГруппНоменклатуры.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИзФайла(Наименование)
	Если ТипСправочника = 1 Тогда
	Выборка = Справочники.Материалы.НайтиПоНаименованию(Наименование,Истина);
	Иначе	
	Выборка = Справочники.Номенклатура.НайтиПоНаименованию(Наименование,Истина);
	КонецЕсли; 
		Если Не Выборка.Пустая() Тогда
		СписокГруппНоменклатуры.Добавить(Выборка);
		Иначе	
		Сообщить(Наименование+" - не найден в справочнике!");
		КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНоменклатуру(Команда)
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл со списком");
	Если Результат <> Неопределено Тогда
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок;
	    Для к = 2 по КолСтрок Цикл
		Состояние("Обработка...",к*100/КолСтрок,"Загрузка из списка...");
		ЗагрузитьИзФайла(СокрЛП(ExcelЛист.Cells(к,1).Value));
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьМПЗИзФайла(Наименование)
Мат = Справочники.Материалы.НайтиПоНаименованию(Наименование,Истина);
	Если Не Мат.Пустая() Тогда
	СписокГруппМПЗ.Добавить(Мат);
	Иначе	
	Сообщить(Наименование+" - не найден в справочнике материалов!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьМПЗ(Команда)
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл со списком МПЗ");
	Если Результат <> Неопределено Тогда
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок;
	    Для к = 2 по КолСтрок Цикл
		Состояние("Обработка...",к*100/КолСтрок,"Загрузка МПЗ из списка...");
		ЗагрузитьМПЗИзФайла(СокрЛП(ExcelЛист.Cells(к,1).Value));
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
              
&НаСервере       
Процедура ПолучитьАналогиНабора(ЭтапСпецификации,КолУзла,СписокАналогов)
ВыборкаДетальныеЗаписи = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_М(ЭтапСпецификации,ТекущаяДата());
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокАналогов.Добавить(ВыборкаДетальныеЗаписи.Элемент,Строка(ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(ВыборкаДетальныеЗаписи.Норма,ВыборкаДетальныеЗаписи.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла));
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ДобавитьМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,НормРасх,Количество,КолУзла,Знач МПЗ = Неопределено,ДатаС,ДатаПо)
	Если МПЗ = Неопределено Тогда 
	МПЗ = ОбщегоНазначенияПовтИсп.ПолучитьЗначениеРеквизита(НормРасх,"Элемент");
	КонецЕсли;	
		Если ПолучитьСтатус(МПЗ,ТекущаяДата()) = Перечисления.СтатусыМПЗ.Запрещённая Тогда	
		Возврат;
		КонецЕсли;
			Если СписокГруппПоЗакупкам.Количество() > 0 Тогда	
				Если НеПринадлежатВыбраннымГруппамПоЗакупкам Тогда
					Если СписокГруппПоЗакупкам.НайтиПоЗначению(МПЗ.ГруппаПоЗакупкам) <> Неопределено Тогда	
					Возврат;
					КонецЕсли; 
				Иначе	
					Если СписокГруппПоЗакупкам.НайтиПоЗначению(МПЗ.ГруппаПоЗакупкам) = Неопределено Тогда	
					Возврат;
					КонецЕсли; 		
				КонецЕсли; 	
			КонецЕсли;
Запрос = Новый Запрос;
СписокАналогов = Новый СписокЗначений;

Выборка = ТаблицаМПЗ.Найти(МПЗ,"МПЗ");
	Если Выборка = Неопределено Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыСПоставщикамиОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ДоговорыСПоставщиками.Остатки(&НаДату, ) КАК ДоговорыСПоставщикамиОстатки
		|ГДЕ
		|	ДоговорыСПоставщикамиОстатки.МПЗ = &МПЗ";
	Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
	Запрос.УстановитьПараметр("МПЗ", МПЗ);
	РезультатЗапроса = Запрос.Выполнить(); 
	ТЧ = ТаблицаМПЗ.Добавить();
	ТЧ.МПЗ = МПЗ;
	ТЧ.ГруппаМПЗ = МПЗ.Родитель;
	ТЧ.ГруппаПоЗакупкам = МПЗ.ГруппаПоЗакупкам;	
	ТЧ.НаличиеДоговора = ?(Не РезультатЗапроса.Пустой(),"+","");
	ТЧ.КоличествоОстаток = ОбщийМодульВызовСервера.ПолучитьСводныйОстатокПоМестамХранения(СписокМестХранения,МПЗ,ТекущаяДата());
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура");
	ТЧ.ТаблицаНоменклатуры.Индексы.Добавить("Номенклатура");
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("Количество");
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("ДатаС");
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("ДатаПо");
	Иначе
	ТЧ = Выборка;
	КонецЕсли;
Выборка = ТЧ.ТаблицаНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура,ДатаС,ДатаПо",Номенклатура,ДатаС,ДатаПо));
	Если Выборка.Количество() = 0 Тогда
	ТЧ_Ном = ТЧ.ТаблицаНоменклатуры.Добавить();
	ТЧ_Ном.Номенклатура = Номенклатура;
	ТЧ_Ном.Количество = Количество;
	ТЧ_Ном.ДатаС = ДатаС;	
	ТЧ_Ном.ДатаПо = ДатаПо;
	Иначе
	Выборка[0].Количество = Выборка[0].Количество + Количество;
	КонецЕсли;
ТаблицаАналогов = ОбщегоНазначенияПовтИсп.ПолучитьАналогиНормРасходов(НормРасх);
	Для каждого ТЧ_ТА Из ТаблицаАналогов Цикл 
		Если ТЧ_ТА.Ссылка.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Набор Тогда
		ПолучитьАналогиНабора(ТЧ_ТА.Ссылка.Элемент,ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(ТЧ_ТА.Норма,ТЧ_ТА.Ссылка.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла,СписокАналогов);
		ИначеЕсли ТЧ_ТА.Ссылка.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Материал Тогда
		СписокАналогов.Добавить(ТЧ_ТА.Ссылка.Элемент,Строка(ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(ТЧ_ТА.Норма,ТЧ_ТА.Ссылка.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла));
		КонецЕсли; 
	КонецЦикла;	      
		Для каждого Ан Из СписокАналогов Цикл
		Аналог = Ан.Значение;
		КоличествоАналога = Число(АН.Представление);
		Выборка = ТаблицаАналоговМПЗ.НайтиСтроки(Новый Структура("МПЗ,АналогМПЗ",МПЗ,Аналог));
			Если Выборка.Количество() = 0 Тогда
			ТЧ = ТаблицаАналоговМПЗ.Добавить();
			ТЧ.МПЗ = МПЗ;
			ТЧ.АналогМПЗ = Аналог;
			ТЧ.КоличествоОстаток = ОбщийМодульВызовСервера.ПолучитьСводныйОстатокПоМестамХранения(СписокМестХранения,Аналог,ТекущаяДата());
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ДоговорыСПоставщикамиОстатки.КоличествоОстаток КАК КоличествоОстаток
				|ИЗ
				|	РегистрНакопления.ДоговорыСПоставщиками.Остатки(&НаДату, ) КАК ДоговорыСПоставщикамиОстатки
				|ГДЕ
				|	ДоговорыСПоставщикамиОстатки.МПЗ = &МПЗ";
			Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
			Запрос.УстановитьПараметр("МПЗ", Аналог);
			РезультатЗапроса = Запрос.Выполнить();
			ТЧ.НаличиеДоговора = ?(Не РезультатЗапроса.Пустой(),"+","");
			ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура");
			ТЧ.ТаблицаНоменклатуры.Индексы.Добавить("Номенклатура");
			ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("Количество");
			ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("ДатаС");
			ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("ДатаПо");
			Иначе
			ТЧ = Выборка[0];
			КонецЕсли;
		Выборка = ТЧ.ТаблицаНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура,ДатаС,ДатаПо",Номенклатура,ДатаС,ДатаПо));
			Если Выборка.Количество() = 0 Тогда
			ТЧ_Ном = ТЧ.ТаблицаНоменклатуры.Добавить();
			ТЧ_Ном.Номенклатура = Номенклатура;
			ТЧ_Ном.Количество = КоличествоАналога;
			ТЧ_Ном.ДатаС = ДатаС;	
			ТЧ_Ном.ДатаПо = ДатаПо;
			Иначе
			Выборка[0].Количество = Выборка[0].Количество + КоличествоАналога;
			КонецЕсли;				
		КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ДобавитьТНП(ТаблицаМПЗ,ТаблицаАналоговМПЗ,ТаблицаРасходаМПЗ,МПЗ)
	Если СписокГруппПоЗакупкам.Количество() > 0 Тогда	
		Если НеПринадлежатВыбраннымГруппамПоЗакупкам Тогда
			Если СписокГруппПоЗакупкам.НайтиПоЗначению(МПЗ.ГруппаПоЗакупкам) <> Неопределено Тогда	
			Возврат;
			КонецЕсли; 
		Иначе	
			Если СписокГруппПоЗакупкам.НайтиПоЗначению(МПЗ.ГруппаПоЗакупкам) = Неопределено Тогда	
			Возврат;
			КонецЕсли; 		
		КонецЕсли; 	
	КонецЕсли;
Запрос = Новый Запрос;

Выборка = ТаблицаМПЗ.Найти(МПЗ,"МПЗ");
	Если Выборка = Неопределено Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорныеПозицииСрезПоследних.Количество,
		|	ДоговорныеПозицииСрезПоследних.ОстатокПоДоговору,
		|	ДоговорныеПозицииСрезПоследних.ДоговорнаяПозиция.Владелец.Владелец КАК Поставщик
		|ИЗ
		|	РегистрСведений.ДоговорныеПозиции.СрезПоследних КАК ДоговорныеПозицииСрезПоследних
		|ГДЕ
		|	ДоговорныеПозицииСрезПоследних.ДоговорнаяПозиция.МПЗ = &МПЗ"; 
	Запрос.УстановитьПараметр("МПЗ", МПЗ);
	РезультатЗапроса = Запрос.Выполнить(); 
	ТЧ = ТаблицаМПЗ.Добавить();
	ТЧ.МПЗ = МПЗ;
	ТЧ.ГруппаМПЗ = МПЗ.Родитель;
	ТЧ.ГруппаПоЗакупкам = МПЗ.ГруппаПоЗакупкам;
	ТЧ.НаличиеДоговора = ?(Не РезультатЗапроса.Пустой(),"+","");
	ТЧ.КоличествоОстаток = ОбщийМодульВызовСервера.ПолучитьСводныйОстатокПоМестамХранения(СписокМестХранения,МПЗ,ТекущаяДата());
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура");
	ТЧ.ТаблицаНоменклатуры.Индексы.Добавить("Номенклатура");
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("Количество");
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("ДатаС");
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("ДатаПо");
	ТЧ_Р = ТаблицаРасходаМПЗ.Добавить();
	ТЧ_Р.МПЗ = МПЗ;
	ТЧ_Р.КоличествоОжидаемыйРасход = ОбщийМодульРаботаСРегистрами.ПолучитьСводныйОстатокПоДолгам(МПЗ);	
	Иначе
	ТЧ = Выборка;
	КонецЕсли;
Выборка = ТЧ.ТаблицаНоменклатуры.Найти(МПЗ,"Номенклатура");
	Если Выборка = Неопределено Тогда
	ТЧ_Ном = ТЧ.ТаблицаНоменклатуры.Добавить();
	ТЧ_Ном.Номенклатура = МПЗ;
	ТЧ_Ном.Количество = 1;
	ТЧ_Ном.ДатаС = Отчет.Период.ДатаНачала;	
	ТЧ_Ном.ДатаПо = Отчет.Период.ДатаОкончания;
	КонецЕсли;	
КонецПроцедуры
         
&НаСервере
Процедура РаскрытьНаМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,ЭтапСпецификации,КолУзла,ДатаС,ДатаПо)
	Если оптЗапросНорм = Неопределено Тогда
	оптЗапросНорм = ОбщийМодульВызовСервера.ПолучитьЗапросНормРасходовПоВладельцу_Н_М(ТекущаяДата(),СписокГруппМПЗ,НеПринадлежатВыбраннымГруппам);
	КонецЕсли;
		Если оптСоотРезультатов = Неопределено Тогда
		оптСоотРезультатов = Новый Соответствие;
		КонецЕсли;
			Если оптСоотРезультатов.Получить(ЭтапСпецификации) = Неопределено Тогда 
			Запрос = оптЗапросНорм;
			Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
			РезультатЗапроса = Запрос.Выполнить();
			оптСоотРезультатов.Вставить(ЭтапСпецификации, РезультатЗапроса);
			Иначе
			РезультатЗапроса = оптСоотРезультатов[ЭтапСпецификации];
			КонецЕсли;
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл 
	БазовоеКоличество = ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(ВыборкаНР.Норма,ВыборкаНР.ЭлементОЕИ);
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
		ДобавитьМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,ВыборкаНР.Ссылка,БазовоеКоличество*КолУзла,КолУзла,ВыборкаНР.Элемент,ДатаС,ДатаПо);  					
		РаскрытьНаМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,ВыборкаНР.Элемент,БазовоеКоличество*КолУзла,ДатаС,ДатаПо);
		Иначе
		Результат = ОбщийМодульРаботаСРегистрами.ПолучитьПФРедизайна(Номенклатура,ВыборкаНР.Элемент);
			Если Результат <> Неопределено Тогда
			ДатаПоНовая = НачалоМесяца(Результат.ДатаС-1);
			Иначе
			ДатаПоНовая = ДатаПо;
			КонецЕсли;
		РаскрытьНаМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,ВыборкаНР.Элемент,БазовоеКоличество*КолУзла,ДатаС,ДатаПоНовая);
			Если Результат <> Неопределено Тогда
			РаскрытьНаМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,Результат.ЭлементНовый,БазовоеКоличество*КолУзла,Результат.ДатаС,ДатаПо);
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьКонтрагентаВПоследнемЗаказеПоставщику(МПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗаказыПоставщикамОбороты.Контрагент КАК Контрагент,
	|	ЗаказыПоставщикамОбороты.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Обороты(, , Регистратор, ) КАК ЗаказыПоставщикамОбороты
	|ГДЕ
	|	ЗаказыПоставщикамОбороты.МПЗ = &МПЗ
	|	И ЗаказыПоставщикамОбороты.КоличествоПриход > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказыПоставщикамОбороты.ЗаказПоставщику.Дата УБЫВ";
Запрос.УстановитьПараметр("МПЗ", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.Контрагент);
	КонецЦикла;
Возврат(Справочники.Контрагенты.ПустаяСсылка());
КонецФункции 

&НаСервере
Процедура РаскрытьНаМПЗОжидаемыйРасход(ТаблицаРасходаМПЗ,СписокМПЗ,Линейка,Номенклатура,ЭтапСпецификации,КолУзла)
	Если оптСоотРезультатов.Получить(ЭтапСпецификации) = Неопределено Тогда 
	Запрос = оптЗапросНорм;
	Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
	РезультатЗапроса = Запрос.Выполнить();
	оптСоотРезультатов.Вставить(ЭтапСпецификации, РезультатЗапроса);
	Иначе
	РезультатЗапроса = оптСоотРезультатов[ЭтапСпецификации];
	КонецЕсли;	
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл
	Количество = ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(ВыборкаНР.Норма,ВыборкаНР.ЭлементОЕИ)*КолУзла;
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Материалы")Тогда           
		РаскрытьНаМПЗОжидаемыйРасход(ТаблицаРасходаМПЗ,СписокМПЗ,Линейка,Номенклатура,ВыборкаНР.Элемент,Количество);
			Если СписокМПЗ.НайтиПоЗначению(ВыборкаНР.Элемент) = Неопределено Тогда	
			Продолжить;				
			КонецЕсли;  
		Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаНР.Элемент));
			Если Выборка.Количество() = 0 Тогда			
			ТЧ = ТаблицаРасходаМПЗ.Добавить();
			ТЧ.МПЗ = ВыборкаНР.Элемент;
			ТЧ.КоличествоОжидаемыйРасход = Количество;
			ТЧ_Лин = ТаблицаРасходаПоЛинейкам.Добавить();
			ТЧ_Лин.МПЗ = ВыборкаНР.Элемент;
			ТЧ_Лин.Линейка = Линейка;
			ТЧ_Лин.Количество = Количество;
			Иначе
			ВыборкаЛин = ТаблицаРасходаПоЛинейкам.НайтиСтроки(Новый Структура("МПЗ,Линейка",ВыборкаНР.Элемент,Линейка));
				Если ВыборкаЛин.Количество() = 0 Тогда
				ТЧ_Лин = ТаблицаРасходаПоЛинейкам.Добавить();
				ТЧ_Лин.МПЗ = ВыборкаНР.Элемент;
				ТЧ_Лин.Линейка = Линейка;
				ТЧ_Лин.Количество = Количество;					
				Иначе	
				ВыборкаЛин[0].Количество = ВыборкаЛин[0].Количество + Количество;
				КонецЕсли; 
			Выборка[0].КоличествоОжидаемыйРасход = Выборка[0].КоличествоОжидаемыйРасход + Количество;
			КонецЕсли;					
		ИначеЕсли ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Номенклатура")Тогда
			Если ВыборкаНР.Элемент.ПереходНаРедизайн Тогда
			Результат = ОбщийМодульРаботаСРегистрами.ПолучитьПФРедизайна(Номенклатура,ВыборкаНР.Элемент);
				Если Результат <> Неопределено Тогда
				РаскрытьНаМПЗОжидаемыйРасход(ТаблицаРасходаМПЗ,СписокМПЗ,Линейка,Номенклатура,Результат.ЭлементНовый,Количество); 
				Продолжить;
				КонецЕсли;	
			КонецЕсли;
		РаскрытьНаМПЗОжидаемыйРасход(ТаблицаРасходаМПЗ,СписокМПЗ,Линейка,Номенклатура,ВыборкаНР.Элемент,Количество);
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПодсчётОжидаемогоРасхода(ТаблицаРасходаМПЗ,СписокМПЗ)
ТаблицаПродукции = ОбщийМодульВызовСервера.ПолучитьТаблицуПриборовОжидаемогоРасхода(СписокПодразделений,Истина,Истина);
	Для каждого ТЧ Из ТаблицаПродукции Цикл 
	РаскрытьНаМПЗОжидаемыйРасход(ТаблицаРасходаМПЗ,СписокМПЗ,ТЧ.Линейка,ТЧ.Продукция,ТЧ.Продукция,ТЧ.Количество);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоОстатокАналогов(ТаблицаАналоговМПЗ,МПЗ)
КоличествоОстаток = 0;
ВыборкаАналогиМПЗ = ТаблицаАналоговМПЗ.НайтиСтроки(Новый Структура("МПЗ",МПЗ));
	Для к = 0 по ВыборкаАналогиМПЗ.Количество()-1 Цикл
		Если (ВыборкаАналогиМПЗ[к].АналогМПЗ.ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.а)или
			 (ВыборкаАналогиМПЗ[к].АналогМПЗ.ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.ПустаяСсылка()) Тогда	
		КоличествоОстаток = КоличествоОстаток + ВыборкаАналогиМПЗ[к].КоличествоОстаток;		
		КонецЕсли;  
	КонецЦикла;
Возврат(КоличествоОстаток);
КонецФункции

&НаСервере
Функция ПолучитьКоличествоВПутиАналогов(ТаблицаАналоговМПЗ,ВыборкаМПЗВПути,МПЗ,ТекМесяц)
КоличествоВПути = 0;
ВыборкаАналогиМПЗ = ТаблицаАналоговМПЗ.НайтиСтроки(Новый Структура("МПЗ",МПЗ));
	Для к = 0 по ВыборкаАналогиМПЗ.Количество()-1 Цикл
	Аналог = ВыборкаАналогиМПЗ[к].АналогМПЗ;
		Если (Аналог.ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.а)или
			 (Аналог.ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.ПустаяСсылка()) Тогда	
		ВыборкаМПЗВПути.Сбросить();	
			Пока ВыборкаМПЗВПути.НайтиСледующий(Новый Структура("МПЗ",Аналог)) Цикл
			ВыборкаДатаПоставки = ВыборкаМПЗВПути.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаДатаПоставки.Следующий() Цикл
				ДатаПоставки = НачалоМесяца(ВыборкаДатаПоставки.ДатаПоставки);
					Если ДатаПоставки = ТекМесяц Тогда
					КоличествоВПути = КоличествоВПути + ВыборкаДатаПоставки.КоличествоОстаток;
					КонецЕсли; 
				КонецЦикла; 
			КонецЦикла;		
		КонецЕсли;  
	КонецЦикла;
Возврат(КоличествоВПути);
КонецФункции

&НаСервере
Функция ПолучитьКоличествоЗадержкаПоставки(ВыборкаМПЗВПути,МПЗ)
КоличествоВПути = 0;
ВыборкаМПЗВПути.Сбросить();	
	Пока ВыборкаМПЗВПути.НайтиСледующий(Новый Структура("МПЗ",МПЗ)) Цикл
	ВыборкаДатаПоставки = ВыборкаМПЗВПути.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДатаПоставки.Следующий() Цикл
		ДатаПоставки = НачалоМесяца(ВыборкаДатаПоставки.ДатаПоставки);
			Если ДатаПоставки < Отчет.Период.ДатаНачала Тогда
			КоличествоВПути = КоличествоВПути + ВыборкаДатаПоставки.КоличествоОстаток;
			КонецЕсли; 
		КонецЦикла;
	КонецЦикла;
Возврат(КоличествоВПути);
КонецФункции

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();
ТабДок2.Очистить();
ТаблицаРасходаПоЛинейкам.Очистить();

ТаблицаМПЗ = Новый ТаблицаЗначений;

ТаблицаМПЗ.Колонки.Добавить("МПЗ");
ТаблицаМПЗ.Индексы.Добавить("МПЗ");
ТаблицаМПЗ.Колонки.Добавить("ГруппаМПЗ");
ТаблицаМПЗ.Колонки.Добавить("ГруппаПоЗакупкам");
ТаблицаМПЗ.Колонки.Добавить("КоличествоОстаток");
ТаблицаМПЗ.Колонки.Добавить("НаличиеДоговора");
ТаблицаМПЗ.Колонки.Добавить("ТаблицаНоменклатуры",Новый ОписаниеТипов("ТаблицаЗначений"));

ТаблицаАналоговМПЗ = Новый ТаблицаЗначений;

ТаблицаАналоговМПЗ.Колонки.Добавить("МПЗ");
ТаблицаАналоговМПЗ.Индексы.Добавить("МПЗ");
ТаблицаАналоговМПЗ.Колонки.Добавить("АналогМПЗ");
ТаблицаАналоговМПЗ.Колонки.Добавить("КоличествоОстаток");
ТаблицаАналоговМПЗ.Колонки.Добавить("НаличиеДоговора");
ТаблицаАналоговМПЗ.Колонки.Добавить("ТаблицаНоменклатуры",Новый ОписаниеТипов("ТаблицаЗначений"));

ТаблицаРасходаМПЗ = Новый ТаблицаЗначений;

ТаблицаРасходаМПЗ.Колонки.Добавить("МПЗ");
ТаблицаРасходаМПЗ.Индексы.Добавить("МПЗ");
ТаблицаРасходаМПЗ.Колонки.Добавить("КоличествоОжидаемыйРасход", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3)));

ТаблицаНоменклатуры = Новый ТаблицаЗначений;

ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура");
ТаблицаНоменклатуры.Индексы.Добавить("Номенклатура");
ТаблицаНоменклатуры.Колонки.Добавить("ГруппаТоваров");
ТаблицаНоменклатуры.Колонки.Добавить("Товар");
ТаблицаНоменклатуры.Колонки.Добавить("ТаблицаМПЗ",Новый ОписаниеТипов("ТаблицаЗначений"));
НомСтр = 1;
	Для Каждого Стр Из СписокПериодов Цикл
	ТаблицаНоменклатуры.Колонки.Добавить("Д"+НомСтр);
	НомСтр = НомСтр + 1;
	КонецЦикла;

		Если ТипСправочника = 1 Тогда
			Для каждого ТЧ Из ЭтаФорма.Номенклатура Цикл
			ДобавитьТНП(ТаблицаМПЗ,ТаблицаАналоговМПЗ,ТаблицаРасходаМПЗ,ТЧ.Номенклатура);
			КонецЦикла;	
		Иначе	
			Для каждого ТЧ Из ЭтаФорма.Номенклатура Цикл
			РаскрытьНаМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,ТЧ.Номенклатура,ТЧ.Номенклатура,1,Отчет.Период.ДатаНачала,Отчет.Период.ДатаОкончания);
			КонецЦикла;	
		КонецЕсли;

ТаблицаМПЗ.Сортировать("ГруппаМПЗ,МПЗ"); 
ТаблицаАналоговМПЗ.Сортировать("МПЗ,АналогМПЗ");
СписокМПЗ = Новый СписокЗначений;

	Для каждого ТЧ Из ТаблицаМПЗ Цикл
	СписокМПЗ.Добавить(ТЧ.МПЗ);
	КонецЦикла;
		Для каждого ТЧ Из ТаблицаАналоговМПЗ Цикл
			Если СписокМПЗ.НайтиПоЗначению(ТЧ.АналогМПЗ) = Неопределено Тогда
			СписокМПЗ.Добавить(ТЧ.АналогМПЗ);
			КонецЕсли; 
		КонецЦикла;
			Если ТипСправочника = 2 Тогда	
			ПодсчётОжидаемогоРасхода(ТаблицаРасходаМПЗ,СписокМПЗ);
			КонецЕсли;

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыПоставщикамОстатки.МПЗ КАК МПЗ,
	|	ЗаказыПоставщикамОстатки.ДатаИсполнения КАК ДатаПоставки,
	|	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки КАК ЗаказыПоставщикамОстатки
	|ГДЕ
	|	ЗаказыПоставщикамОстатки.МПЗ В(&СписокМПЗ)
//	|	И ЗаказыПоставщикамОстатки.КоличествоОстаток > 0
	| УПОРЯДОЧИТЬ ПО
	|	МПЗ,
	|	ДатаПоставки
	|ИТОГИ
	|	СУММА(КоличествоОстаток)
	|ПО
	|	МПЗ,
	|	ДатаПоставки";
Запрос.УстановитьПараметр("СписокМПЗ",СписокМПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗВПути = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапкаОбщая = Макет.ПолучитьОбласть("Шапка|Общая");
ОблШапкаПериод = Макет.ПолучитьОбласть("Шапка|Период");
ОблГруппаОбщая = Макет.ПолучитьОбласть("Группа|Общая");
ОблГруппаПериод = Макет.ПолучитьОбласть("Группа|Период");
ОблМПЗОбщая = Макет.ПолучитьОбласть("МПЗ|Общая");
ОблМПЗПериод = Макет.ПолучитьОбласть("МПЗ|Период");
ОблАналогОбщая = Макет.ПолучитьОбласть("Аналог|Общая");
ОблАналогПериод = Макет.ПолучитьОбласть("Аналог|Период");
ОблКонецОбщая = Макет.ПолучитьОбласть("Конец|Общая");
ОблКонецПериод = Макет.ПолучитьОбласть("Конец|Период");

ОблШапкаОбщая.Параметры.ДатаВывода = ТекущаяДата();
ТабДок.Вывести(ОблШапкаОбщая);

ЭтаФорма_Номенклатура = РеквизитФормыВЗначение("Номенклатура"); // оптимизация
ЭтаФорма_Номенклатура.Индексы.Добавить("Номенклатура");

	Для Каждого Стр Из СписокПериодов Цикл
	ОблШапкаПериод.Параметры.ММГГ = Формат(Стр.Значение,"ДФ=MM.yy");
	ТабДок.Присоединить(ОблШапкаПериод);
	КонецЦикла;
ТекГруппаМПЗ = Неопределено;
	Для каждого ТЧ Из ТаблицаМПЗ Цикл
		Если ТекГруппаМПЗ <> ТЧ.ГруппаМПЗ Тогда
			Если ТекГруппаМПЗ <> Неопределено Тогда		
			ТабДок.ЗакончитьГруппуСтрок();
			КонецЕсли; 
		ТекГруппаМПЗ = ТЧ.ГруппаМПЗ;
		ОблГруппаОбщая.Параметры.ГруппаМПЗ = ТекГруппаМПЗ;
		ТабДок.Вывести(ОблГруппаОбщая);
			Для Каждого Стр Из СписокПериодов Цикл
			ТабДок.Присоединить(ОблГруппаПериод);
			КонецЦикла;
		ТабДок.НачатьГруппуСтрок("По группам МПЗ", Истина);
		КонецЕсли;
	МПЗ = ТЧ.МПЗ;
	ВыборкаРасход = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",МПЗ)); 
		Если ВыборкаРасход.Количество() > 0 Тогда
		КоличествоОжидаемыйРасход = ВыборкаРасход[0].КоличествоОжидаемыйРасход;
		Иначе	
		КоличествоОжидаемыйРасход = 0;
		КонецЕсли;
	ТаблицаПериодов.Очистить();
	КоличествоОстатокБезПлана = ТЧ.КоличествоОстаток + ПолучитьКоличествоОстатокАналогов(ТаблицаАналоговМПЗ,МПЗ) - КоличествоОжидаемыйРасход;
	флОбеспечен = Истина;
	НомСтр = 1;
		Для Каждого Стр Из СписокПериодов Цикл
		ТЧ_П = ТаблицаПериодов.Добавить();
		ТЧ_П.Месяц = Стр.Значение;
		КоличествоВПути = 0;
		ВыборкаМПЗВПути.Сбросить();	
			Пока ВыборкаМПЗВПути.НайтиСледующий(Новый Структура("МПЗ",МПЗ)) Цикл
			ВыборкаДатаПоставки = ВыборкаМПЗВПути.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаДатаПоставки.Следующий() Цикл
				ДатаПоставки = НачалоМесяца(ВыборкаДатаПоставки.ДатаПоставки);
					Если ДатаПоставки = Стр.Значение Тогда
					КоличествоВПути = КоличествоВПути + ВыборкаДатаПоставки.КоличествоОстаток;
					КонецЕсли; 
				КонецЦикла;
			КонецЦикла;
		КоличествоРасход = 0;
			Для Каждого ТЧ_Ном Из ТЧ.ТаблицаНоменклатуры Цикл			
			Выборка = ЭтаФорма_Номенклатура.НайтиСтроки(Новый Структура("Номенклатура",ТЧ_Ном.Номенклатура));
				Для к = 0 по Выборка.ВГраница() Цикл
					Если (Стр.Значение>=ТЧ_Ном.ДатаС)и(Стр.Значение<=ТЧ_Ном.ДатаПо) Тогда
					КоличествоРасход = КоличествоРасход + Выборка[к]["Д"+НомСтр]*ТЧ_Ном.Количество;										
					КонецЕсли;
				КонецЦикла; 
			КонецЦикла;
		КоличествоОстатокБезПлана = КоличествоОстатокБезПлана - КоличествоРасход + КоличествоВПути + ПолучитьКоличествоВПутиАналогов(ТаблицаАналоговМПЗ,ВыборкаМПЗВПути,МПЗ,Стр.Значение);
		ТЧ_П.КоличествоВПути = КоличествоВПути;
		ТЧ_П.КоличествоРасход = КоличествоРасход;
		ТЧ_П.КоличествоОстатокБезПлана = КоличествоОстатокБезПлана;
			Если КоличествоОстатокБезПлана < 0 Тогда
			флОбеспечен = Ложь;
			КонецЕсли;
		НомСтр = НомСтр + 1;
		КонецЦикла;
			Если ТолькоНеобеспеченные Тогда
				Если флОбеспечен Тогда
				Продолжить;
				КонецЕсли;		
			КонецЕсли;
	ОблМПЗОбщая.Параметры.Статус = ПолучитьСтатус(МПЗ);
	ОблМПЗОбщая.Параметры.Наименование = СокрЛП(МПЗ.Наименование); 
	ОблМПЗОбщая.Параметры.МПЗ = МПЗ;
	ОблМПЗОбщая.Параметры.ГруппаПоЗакупкам = МПЗ.ГруппаПоЗакупкам;
	ОблМПЗОбщая.Параметры.ЕдиницаИзмерения = ОбщегоНазначенияПовтИсп.ПолучитьЗначениеРеквизита(МПЗ,"ЕдиницаИзмерения.Наименование"); 
	ОблМПЗОбщая.Параметры.КоличествоОстаток = ТЧ.КоличествоОстаток;
	ОблМПЗОбщая.Параметры.НаличиеДоговора = ТЧ.НаличиеДоговора;
	ОблМПЗОбщая.Параметры.Контрагент = ПолучитьКонтрагентаВПоследнемЗаказеПоставщику(МПЗ);
	ОблМПЗОбщая.Параметры.КоличествоОжидаемыйРасход = КоличествоОжидаемыйРасход;
	ОблМПЗОбщая.Параметры.КоличествоЗадержкаПоставки = ПолучитьКоличествоЗадержкаПоставки(ВыборкаМПЗВПути,МПЗ);
	ТабДок.Вывести(ОблМПЗОбщая); 
	Н = 1;
		Для Каждого ТЧ_П Из ТаблицаПериодов Цикл
		ОблМПЗПериод.Параметры.КоличествоВПути = ТЧ_П.КоличествоВПути;
		ОблМПЗПериод.Параметры.КоличествоРасход = ТЧ_П.КоличествоРасход;
			//Если ТЧ_П.КоличествоРасход > 0 Тогда
			ОблМПЗПериод.Параметры.КоличествоОстатокБезПлана = ТЧ_П.КоличествоОстатокБезПлана + ОблМПЗОбщая.Параметры.КоличествоЗадержкаПоставки;			
			//Иначе
            //ОблМПЗПериод.Параметры.КоличествоОстатокБезПлана = 0;
			//КонецЕсли; 
		ТабДок.Присоединить(ОблМПЗПериод);
			Если (ТЧ_П.КоличествоОстатокБезПлана < 0)и(ТЧ_П.КоличествоРасход > 0) Тогда
				Для Каждого ТЧ_Ном Из ТЧ.ТаблицаНоменклатуры Цикл			
				Выборка = ЭтаФорма_Номенклатура.НайтиСтроки(Новый Структура("Номенклатура",ТЧ_Ном.Номенклатура));
					Для к = 0 по Выборка.ВГраница() Цикл
					ТЧ_ПП = Выборка[к];
					ТЧ_Н = ТаблицаНоменклатуры.Найти(ТЧ_Ном.Номенклатура,"Номенклатура");
						Если ТЧ_Н = Неопределено Тогда
						ТЧ_Н = ТаблицаНоменклатуры.Добавить();
						ТЧ_Н.ГруппаТоваров = ТЧ_Ном.Номенклатура.Товар.Родитель;
						ТЧ_Н.Товар = ТЧ_Ном.Номенклатура.Товар;
						ТЧ_Н.Номенклатура = ТЧ_Ном.Номенклатура;
						ТЧ_Н["Д"+Н] = ?(ТЧ_ПП["Д"+Н] > 0,Строка(ТЧ_ПП["Д"+Н]),"НД");	
						ТЧ_Н.ТаблицаМПЗ.Колонки.Добавить("МПЗ");
						ТЧ_Н.ТаблицаМПЗ.Индексы.Добавить("МПЗ");
						НомСтр = 1;
							Для Каждого Стр Из СписокПериодов Цикл
							ТЧ_Н.ТаблицаМПЗ.Колонки.Добавить("Д"+НомСтр);
							НомСтр = НомСтр + 1;
							КонецЦикла;
						ТЧ_Н_МПЗ = ТЧ_Н.ТаблицаМПЗ.Добавить();
						ТЧ_Н_МПЗ.МПЗ = МПЗ;
						ТЧ_Н_МПЗ["Д"+Н] = "-";	
						Иначе
						ВыборкаМПЗ = ТЧ_Н.ТаблицаМПЗ.Найти(МПЗ,"МПЗ");
							Если ВыборкаМПЗ = Неопределено Тогда
							ТЧ_Н_МПЗ = ТЧ_Н.ТаблицаМПЗ.Добавить();
							ТЧ_Н_МПЗ.МПЗ = МПЗ;
							ТЧ_Н_МПЗ["Д"+Н] = "-";
							Иначе
							ВыборкаМПЗ["Д"+Н] = "-";
	                        КонецЕсли;
						ТЧ_Н["Д"+Н] = ?(ТЧ_ПП["Д"+Н] > 0,Строка(ТЧ_ПП["Д"+Н]),"НД");
						КонецЕсли;
					КонецЦикла; 
				КонецЦикла;
			КонецЕсли; 
		Н = Н + 1;
		КонецЦикла;
	ВыборкаАналоги = ТаблицаАналоговМПЗ.НайтиСтроки(Новый Структура("МПЗ",МПЗ));
		Если ВыборкаАналоги.Количество() > 0 Тогда
		ТабДок.НачатьГруппуСтрок("По МПЗ", Истина);
			Для м = 0 по ВыборкаАналоги.ВГраница() Цикл	
			Аналог = ВыборкаАналоги[м].АналогМПЗ; 
			ВыборкаРасход = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",Аналог)); 
				Если ВыборкаРасход.Количество() > 0 Тогда
				ОблАналогОбщая.Параметры.КоличествоОжидаемыйРасход = ВыборкаРасход[0].КоличествоОжидаемыйРасход;
				Иначе	
				ОблАналогОбщая.Параметры.КоличествоОжидаемыйРасход = 0;	
				КонецЕсли;
			ОблАналогОбщая.Параметры.Статус = ПолучитьСтатус(Аналог);
			ОблАналогОбщая.Параметры.Наименование = СокрЛП(Аналог.Наименование); 
			ОблАналогОбщая.Параметры.МПЗ = Аналог;
			ОблАналогОбщая.Параметры.ГруппаПоЗакупкам = Аналог.ГруппаПоЗакупкам;
			ОблАналогОбщая.Параметры.ЕдиницаИзмерения = ОбщегоНазначенияПовтИсп.ПолучитьЗначениеРеквизита(Аналог,"ЕдиницаИзмерения.Наименование");
			ОблАналогОбщая.Параметры.КоличествоОстаток = ВыборкаАналоги[м].КоличествоОстаток;
			ОблАналогОбщая.Параметры.НаличиеДоговора = ВыборкаАналоги[м].НаличиеДоговора;
			ОблАналогОбщая.Параметры.Контрагент = ПолучитьКонтрагентаВПоследнемЗаказеПоставщику(Аналог);
			ОблАналогОбщая.Параметры.КоличествоЗадержкаПоставки = ПолучитьКоличествоЗадержкаПоставки(ВыборкаМПЗВПути,Аналог);
			ТабДок.Вывести(ОблАналогОбщая);
				Если (Аналог.ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.а)или
					 (Аналог.ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.ПустаяСсылка()) Тогда
					Для Каждого Стр Из СписокПериодов Цикл
					КоличествоВПути = 0;
					ВыборкаМПЗВПути.Сбросить();	
						Пока ВыборкаМПЗВПути.НайтиСледующий(Новый Структура("МПЗ",Аналог)) Цикл
						ВыборкаДатаПоставки = ВыборкаМПЗВПути.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаДатаПоставки.Следующий() Цикл
							ДатаПоставки = НачалоМесяца(ВыборкаДатаПоставки.ДатаПоставки);
								Если ДатаПоставки = Стр.Значение Тогда
								КоличествоВПути = КоличествоВПути + ВыборкаДатаПоставки.КоличествоОстаток;
								КонецЕсли; 
							КонецЦикла; 
						КонецЦикла;
					ОблАналогПериод.Параметры.КоличествоВПути = КоличествоВПути; 
					ОблАналогПериод.Параметры.КоличествоРасход = 0;
					ОблАналогПериод.Параметры.КоличествоОстатокБезПлана = 0;
					ТабДок.Присоединить(ОблАналогПериод);
					КонецЦикла;
				Продолжить;
				КонецЕсли;
			КоличествоОстатокБезПлана = ОблАналогОбщая.Параметры.КоличествоОстаток - ОблАналогОбщая.Параметры.КоличествоОжидаемыйРасход;
			НомСтр = 1;
				Для Каждого Стр Из СписокПериодов Цикл
				КоличествоВПути = 0;
				ВыборкаМПЗВПути.Сбросить();	
					Пока ВыборкаМПЗВПути.НайтиСледующий(Новый Структура("МПЗ",Аналог)) Цикл
					ВыборкаДатаПоставки = ВыборкаМПЗВПути.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаДатаПоставки.Следующий() Цикл
						ДатаПоставки = НачалоМесяца(ВыборкаДатаПоставки.ДатаПоставки);
							Если ДатаПоставки = Стр.Значение Тогда
							КоличествоВПути = КоличествоВПути + ВыборкаДатаПоставки.КоличествоОстаток;
							КонецЕсли; 
						КонецЦикла; 
					КонецЦикла;
				ОблАналогПериод.Параметры.КоличествоВПути = КоличествоВПути; 
				КоличествоРасход = 0;
					Для Каждого ТЧ_Ном Из ВыборкаАналоги[м].ТаблицаНоменклатуры Цикл	
					Выборка = ЭтаФорма_Номенклатура.НайтиСтроки(Новый Структура("Номенклатура",ТЧ_Ном.Номенклатура));
						Для к = 0 по Выборка.ВГраница() Цикл
							Если (Стр.Значение>=ТЧ_Ном.ДатаС)и(Стр.Значение<=ТЧ_Ном.ДатаПо) Тогда
							КоличествоРасход = КоличествоРасход + Выборка[к]["Д"+НомСтр]*ТЧ_Ном.Количество;										
							КонецЕсли; 
						КонецЦикла; 
					КонецЦикла;
				ОблАналогПериод.Параметры.КоличествоРасход = КоличествоРасход;
				КоличествоОстатокБезПлана = КоличествоОстатокБезПлана - КоличествоРасход + КоличествоВПути;
				ОблАналогПериод.Параметры.КоличествоОстатокБезПлана = КоличествоОстатокБезПлана + ОблАналогОбщая.Параметры.КоличествоЗадержкаПоставки;
				ТабДок.Присоединить(ОблАналогПериод);
				НомСтр = НомСтр + 1;
				КонецЦикла;
			КонецЦикла;
		ТабДок.ЗакончитьГруппуСтрок();
		КонецЕсли; 
	КонецЦикла;
		Если ТекГруппаМПЗ <> Неопределено Тогда		
		ТабДок.ЗакончитьГруппуСтрок();
		КонецЕсли;
ТабДок.Вывести(ОблКонецОбщая);
	Для Каждого Стр Из СписокПериодов Цикл
	ТабДок.Присоединить(ОблКонецПериод);
	КонецЦикла;
ТабДок.ФиксацияСверху = 3;
ТабДок.ФиксацияСлева = 8;

ТаблицаНоменклатуры.Сортировать("ГруппаТоваров,Товар");

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет2");

ОблШапкаОбщая = Макет.ПолучитьОбласть("Шапка|Общая");
ОблШапкаПериод = Макет.ПолучитьОбласть("Шапка|Период");
ОблГруппаОбщая = Макет.ПолучитьОбласть("Группа|Общая");
ОблГруппаПериод = Макет.ПолучитьОбласть("Группа|Период");
ОблНоменклатураОбщая = Макет.ПолучитьОбласть("Номенклатура|Общая");
ОблНоменклатураПериод = Макет.ПолучитьОбласть("Номенклатура|Период");
ОблМПЗОбщая = Макет.ПолучитьОбласть("МПЗ|Общая");
ОблМПЗПериод = Макет.ПолучитьОбласть("МПЗ|Период");
ОблКонецОбщая = Макет.ПолучитьОбласть("Конец|Общая");
ОблКонецПериод = Макет.ПолучитьОбласть("Конец|Период");

ОблШапкаОбщая.Параметры.ДатаВывода = ТекущаяДата();
ТабДок2.Вывести(ОблШапкаОбщая);
	Для Каждого Стр Из СписокПериодов Цикл
	ОблШапкаПериод.Параметры.ММГГ = Формат(Стр.Значение,"ДФ=MM.yy");
	ТабДок2.Присоединить(ОблШапкаПериод);
	КонецЦикла;
ТекГруппаТоваров = Неопределено;
	Для каждого ТЧ Из ТаблицаНоменклатуры Цикл
		Если ТекГруппаТоваров <> ТЧ.ГруппаТоваров Тогда
			Если ТекГруппаТоваров <> Неопределено Тогда		
			ТабДок2.ЗакончитьГруппуСтрок();
			КонецЕсли; 
		ТекГруппаТоваров = ТЧ.ГруппаТоваров;
		ОблГруппаОбщая.Параметры.ГруппаТоваров = ТекГруппаТоваров;
		ТабДок2.Вывести(ОблГруппаОбщая);
			Для Каждого Стр Из СписокПериодов Цикл
			ТабДок2.Присоединить(ОблГруппаПериод);
			КонецЦикла;
		ТабДок2.НачатьГруппуСтрок("По группам товаров", Истина);
		КонецЕсли;
	ОблНоменклатураОбщая.Параметры.НаименованиеТовара = СокрЛП(ТЧ.Товар.Наименование); 
	ОблНоменклатураОбщая.Параметры.Товар = ТЧ.Товар;			
	ОблНоменклатураОбщая.Параметры.Наименование = СокрЛП(ТЧ.Номенклатура.Наименование); 
	ОблНоменклатураОбщая.Параметры.Номенклатура = ТЧ.Номенклатура;
	ОблНоменклатураОбщая.Параметры.ЕдиницаИзмерения = ОбщегоНазначенияПовтИсп.ПолучитьЗначениеРеквизита(ТЧ.Номенклатура,"ЕдиницаИзмерения.Наименование"); 
	ТабДок2.Вывести(ОблНоменклатураОбщая);
 	НомСтр = 1;
		Для Каждого Стр Из СписокПериодов Цикл
		ОблНоменклатураПериод.Параметры.КоличествоНеОбеспечены = ТЧ["Д"+НомСтр]; 
		ТабДок2.Присоединить(ОблНоменклатураПериод);
		НомСтр = НомСтр + 1;
		КонецЦикла;
			Если РаскрытьНеобеспеченныеНаМПЗ Тогда
			ТабДок2.НачатьГруппуСтрок("По МПЗ", Ложь);
			ТЧ.ТаблицаМПЗ.Сортировать("МПЗ");
				Для каждого ТЧ_МПЗ Из ТЧ.ТаблицаМПЗ Цикл
				ОблМПЗОбщая.Параметры.НаименованиеМПЗ = СокрЛП(ТЧ_МПЗ.МПЗ.Наименование); 
				ОблМПЗОбщая.Параметры.МПЗ = ТЧ_МПЗ.МПЗ;
				ТабДок2.Вывести(ОблМПЗОбщая);
				НомСтр = 1;
					Для Каждого Стр Из СписокПериодов Цикл
						Если ТЧ["Д"+НомСтр] <> "0" и ТЧ["Д"+НомСтр] <> "НД" Тогда
						НеОбеспечен = ТЧ_МПЗ["Д"+НомСтр];
						Иначе	
						НеОбеспечен = "";
						КонецЕсли; 
					ОблМПЗПериод.Параметры.НеОбеспечен = НеОбеспечен; 
					ТабДок2.Присоединить(ОблМПЗПериод);
					НомСтр = НомСтр + 1;
					КонецЦикла;				
				КонецЦикла;	
			ТабДок2.ЗакончитьГруппуСтрок();
			КонецЕсли; 
	КонецЦикла;
		Если ТекГруппаТоваров <> Неопределено Тогда		
		ТабДок2.ЗакончитьГруппуСтрок();
		КонецЕсли;
ТабДок2.Вывести(ОблКонецОбщая);
	Для Каждого Стр Из СписокПериодов Цикл
	ТабДок2.Присоединить(ОблКонецПериод);
	КонецЦикла;
ТабДок2.ФиксацияСверху = 3;
ТабДок2.ФиксацияСлева = 3; 
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	Элементы.Настройки.Скрыть();
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах(); 
	Состояние("Обработка...",,"Формирование таблицы отчёта...");
	СформироватьНаСервере();
	ОкончаниеЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Элементы.Настройки.ЗаголовокСвернутогоОтображения = "Сформирован за "+Окр((ОкончаниеЗамера - НачалоЗамера)/1000/60,1)+" мин.";
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоВыпущенных(Продукция)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланыВыпускаОбороты.Номенклатура КАК Номенклатура,
	|	ПланыВыпускаОбороты.КоличествоРасход КАК КоличествоРасход
	|ИЗ
	|	РегистрНакопления.ПланыВыпуска.Обороты(&ДатаНач, &ДатаКон, Регистратор, Номенклатура = &Номенклатура) КАК ПланыВыпускаОбороты
	|ИТОГИ
	|	СУММА(КоличествоРасход)
	|ПО
	|	Номенклатура";
Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ТекущаяДата()));
Запрос.УстановитьПараметр("ДатаКон", ТекущаяДата());
Запрос.УстановитьПараметр("Номенклатура", Продукция);
РезультатЗапроса = Запрос.Выполнить();	
ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
	Возврат(ВыборкаНоменклатура.КоличествоРасход);
	КонецЦикла;
Возврат(0);
КонецФункции 

&НаСервере
Процедура ПолучитьПерспективныйПланНаСервере()
ТЗ = Новый ТаблицаЗначений;

ТЗ.Колонки.Добавить("Статус",Новый ОписаниеТипов("ПеречислениеСсылка.СтатусыСпецификаций"),"Ст.");
ТЗ.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"),"Номенклатура");
ТЗ.Колонки.Добавить("Проект",Новый ОписаниеТипов("СправочникСсылка.Проекты"),"Проект");
СписокПериодов.Очистить();
ТекДата = Отчет.Период.ДатаНачала;
	Пока ТекДата <= Отчет.Период.ДатаОкончания Цикл
		Если День(ТекДата) = 1 Тогда
		СписокПериодов.Добавить(ТекДата);	
		ТЗ.Колонки.Добавить("Д"+СписокПериодов.Количество(),Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)),Формат(ТекДата,"ДФ=MM.yy"));	
		КонецЕсли;			
	ТекДата = ТекДата + 86400;
	КонецЦикла;
	
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПерспективныеПланы.МПЗ КАК МПЗ,
	|	ПерспективныеПланы.Период КАК Период,
	|	ПерспективныеПланы.Проект КАК Проект,
	|	ПерспективныеПланы.Количество КАК Количество
	|ИЗ
	|	РегистрСведений.ПерспективныеПланы КАК ПерспективныеПланы
	|ГДЕ
	|	ПерспективныеПланы.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И ТИПЗНАЧЕНИЯ(ПерспективныеПланы.МПЗ) = ТИП(Справочник.Номенклатура)
	|	И ПерспективныеПланы.Количество > 0";
	Если ВидПП = 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ПерспективныеПланы.Проект = &Проект";
	Запрос.УстановитьПараметр("Проект", Справочники.Проекты.ПустаяСсылка());
	ИначеЕсли ВидПП = 1 Тогда	
	Запрос.Текст = Запрос.Текст + " И ПерспективныеПланы.Проект <> &Проект";
	Запрос.УстановитьПараметр("Проект", Справочники.Проекты.ПустаяСсылка());	
	КонецЕсли; 
		Если СписокГруппНоменклатуры.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И ПерспективныеПланы.МПЗ В ИЕРАРХИИ(&СписокГруппНоменклатуры)";
		Запрос.УстановитьПараметр("СписокГруппНоменклатуры", СписокГруппНоменклатуры);
		КонецЕсли;
Запрос.Текст = Запрос.Текст + " ИТОГИ СУММА(Количество) ПО МПЗ,Проект,Период ПЕРИОДАМИ(МЕСЯЦ, , )";
Запрос.УстановитьПараметр("ДатаНач", Отчет.Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон", Отчет.Период.ДатаОкончания);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМПЗ.Следующий() Цикл
		Если ВыборкаМПЗ.Количество = 0 Тогда
		Продолжить;
		КонецЕсли;
			Если ТипИзделий = 1 Тогда
				Если Найти(ВыборкаМПЗ.МПЗ.Наименование,"_Х") > 0 Тогда
				Продолжить;
				КонецЕсли;	
			ИначеЕсли ТипИзделий = 2 Тогда
				Если Найти(ВыборкаМПЗ.МПЗ.Наименование,"_Х") = 0 Тогда
				Продолжить;
				КонецЕсли;			
			КонецЕсли;
	ВыборкаПроекты = ВыборкаМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПроекты.Следующий() Цикл
		ТЧ = ТЗ.Добавить();
		ТЧ.Статус = ПолучитьСтатус(ВыборкаМПЗ.МПЗ);		
		ТЧ.Номенклатура = ВыборкаМПЗ.МПЗ;
		ТЧ.Проект = ВыборкаПроекты.Проект;
		ВыборкаПериод = ВыборкаПроекты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		НомСтр = 0;
			Для Каждого Стр Из СписокПериодов Цикл
			НомСтр = НомСтр + 1;
		    ВыборкаПериод.Сбросить();
				Если ВыборкаПериод.НайтиСледующий(Новый Структура("Период",Стр.Значение)) Тогда
					Если Стр.Значение = НачалоМесяца(ТекущаяДата()) Тогда
					КоличествоОстаток = ВыборкаПериод.Количество - ПолучитьКоличествоВыпущенных(ВыборкаМПЗ.МПЗ);
					Иначе
					КоличествоОстаток = ВыборкаПериод.Количество;
					КонецЕсли;
						Если КоличествоОстаток > 0 Тогда
						ТЧ["Д"+НомСтр] = КоличествоОстаток;
						Иначе	
						ТЧ["Д"+НомСтр] = 0;
						КонецЕсли; 			
				Иначе
				ТЧ["Д"+НомСтр] = 0;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;	
	КонецЦикла;
МассивРеквизитов = Новый Массив;
МассивУдаляемыхРеквизитов = Новый Массив;
МассивРеквизитов.Добавить(Новый РеквизитФормы("Номенклатура", Новый ОписаниеТипов("ТаблицаЗначений"), "", "Номенклатура"));
	Для Каждого Колонка Из ТЗ.Колонки Цикл
    МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "Номенклатура", Колонка.Заголовок)); 
	КонецЦикла;
МассивУдаляемыхРеквизитов.Добавить("Номенклатура");
	Если Элементы.Найти("Номенклатура") <> Неопределено Тогда
	Элементы.Удалить(Элементы["Номенклатура"]);
	ИзменитьРеквизиты(,МассивУдаляемыхРеквизитов);
	КонецЕсли;
ИзменитьРеквизиты(МассивРеквизитов);
//Помещаем Элементы на форму 
Таблица = Элементы.Добавить("Номенклатура", Тип("ТаблицаФормы"),Элементы.ПерспективныйПлан); 
Таблица.ПутьКДанным = "Номенклатура"; 
Таблица.Отображение = ОтображениеТаблицы.Список;
Таблица.ЧередованиеЦветовСтрок = Истина; 
	Для Каждого Колонка Из ТЗ.Колонки Цикл
    НовыйЭлемент = Элементы.Добавить("Номенклатура_" + Колонка.Имя, Тип("ПолеФормы"), Таблица); 
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
    НовыйЭлемент.ПутьКДанным = "Номенклатура." + Колонка.Имя; 
	КонецЦикла;
//переносим таблицу значений на форму 
ЗначениеВРеквизитФормы(ТЗ,"Номенклатура");
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоПриходНаТранзит(ТНП)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОбороты.МПЗ КАК МПЗ,
	|	МестаХраненияОбороты.КоличествоПриход КАК КоличествоПриход
	|ИЗ
	|	РегистрНакопления.МестаХранения.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			МестоХранения = &МестоХранения
	|				И МПЗ = &МПЗ) КАК МестаХраненияОбороты
	|ИТОГИ
	|	СУММА(КоличествоПриход)
	|ПО
	|	МПЗ";
Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ТекущаяДата()));
Запрос.УстановитьПараметр("ДатаКон", ТекущаяДата());
Запрос.УстановитьПараметр("МПЗ", ТНП);
Запрос.УстановитьПараметр("МестоХранения", Константы.МестоХраненияТранзит.Получить());
РезультатЗапроса = Запрос.Выполнить();	
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМПЗ.Следующий() Цикл
	Возврат(ВыборкаМПЗ.КоличествоПриход);
	КонецЦикла;
Возврат(0);
КонецФункции

&НаСервере
Процедура ПолучитьПерспективныйПланТНПНаСервере()
ТЗ = Новый ТаблицаЗначений;

ТЗ.Колонки.Добавить("Статус",Новый ОписаниеТипов("ПеречислениеСсылка.СтатусыМПЗ"),"Ст.");
ТЗ.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Материалы"),"МПЗ");
ТЗ.Колонки.Добавить("Проект",Новый ОписаниеТипов("СправочникСсылка.Проекты"),"Проект");
ТЗ.Колонки.Добавить("КоличествоВыпущено",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)),"Выпущено");
ТЗ.Колонки.Добавить("КоличествоНеЗапущено",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)),"Не запущено");
ТЗ.Индексы.Добавить("Номенклатура"); // оптимизация
СписокПериодов.Очистить();
ТекДата = Отчет.Период.ДатаНачала;
	Пока ТекДата <= Отчет.Период.ДатаОкончания Цикл
		Если День(ТекДата) = 1 Тогда
		СписокПериодов.Добавить(ТекДата);	
		ТЗ.Колонки.Добавить("Д"+СписокПериодов.Количество(),Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)),Формат(ТекДата,"ДФ=MM.yy"));	
		КонецЕсли;			
	ТекДата = ТекДата + 86400;
	КонецЦикла;
	
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПерспективныеПланы.МПЗ КАК МПЗ,
	|	ПерспективныеПланы.Период КАК Период,
	|	ПерспективныеПланы.Проект КАК Проект,
	|	ПерспективныеПланы.Количество КАК Количество
	|ИЗ
	|	РегистрСведений.ПерспективныеПланы КАК ПерспективныеПланы
	|ГДЕ
	|	ПерспективныеПланы.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И ТИПЗНАЧЕНИЯ(ПерспективныеПланы.МПЗ) = ТИП(Справочник.Материалы)
	|	И ПерспективныеПланы.Количество > 0";
	Если ВидПП = 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ПерспективныеПланы.Проект = &Проект";
	Запрос.УстановитьПараметр("Проект", Справочники.Проекты.ПустаяСсылка());
	ИначеЕсли ВидПП = 1 Тогда	
	Запрос.Текст = Запрос.Текст + " И ПерспективныеПланы.Проект <> &Проект";
	Запрос.УстановитьПараметр("Проект", Справочники.Проекты.ПустаяСсылка());	
	КонецЕсли;
Запрос.УстановитьПараметр("ДатаНач", Отчет.Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон", Отчет.Период.ДатаОкончания);
Запрос.УстановитьПараметр("Проект", Справочники.Проекты.ПустаяСсылка());
	Если СписокГруппНоменклатуры.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ПерспективныеПланы.МПЗ В ИЕРАРХИИ(&СписокГруппНоменклатуры)";
	Запрос.УстановитьПараметр("СписокГруппНоменклатуры", СписокГруппНоменклатуры);
	КонецЕсли;
Запрос.Текст = Запрос.Текст + " ИТОГИ СУММА(Количество) ПО МПЗ,Проект,Период ПЕРИОДАМИ(МЕСЯЦ, , )";
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМПЗ.Следующий() Цикл
		Если ВыборкаМПЗ.Количество = 0 Тогда
		Продолжить;
		КонецЕсли;
	ВыборкаПроекты = ВыборкаМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПроекты.Следующий() Цикл
		ТЧ = ТЗ.Добавить();
		ТЧ.Статус = ПолучитьСтатус(ВыборкаМПЗ.МПЗ);		
		ТЧ.Номенклатура = ВыборкаМПЗ.МПЗ;
		ТЧ.Проект = ВыборкаПроекты.Проект;
		ВыборкаПериод = ВыборкаПроекты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		НомСтр = 0;
			Для Каждого Стр Из СписокПериодов Цикл
			НомСтр = НомСтр + 1;
		    ВыборкаПериод.Сбросить();
				Если ВыборкаПериод.НайтиСледующий(Новый Структура("Период",Стр.Значение)) Тогда
					Если Стр.Значение = НачалоМесяца(ТекущаяДата()) Тогда
					КоличествоОстаток = ВыборкаПериод.Количество - ПолучитьКоличествоПриходНаТранзит(ВыборкаМПЗ.МПЗ);
					Иначе
					КоличествоОстаток = ВыборкаПериод.Количество;
					КонецЕсли;
						Если КоличествоОстаток > 0 Тогда
						ТЧ["Д"+НомСтр] = КоличествоОстаток;
						Иначе	
						ТЧ["Д"+НомСтр] = 0;
						КонецЕсли;			
				Иначе
				ТЧ["Д"+НомСтр] = 0;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;	
	КонецЦикла;
МассивРеквизитов = Новый Массив;
МассивУдаляемыхРеквизитов = Новый Массив;
МассивРеквизитов.Добавить(Новый РеквизитФормы("Номенклатура", Новый ОписаниеТипов("ТаблицаЗначений"), "", "Номенклатура"));
	Для Каждого Колонка Из ТЗ.Колонки Цикл
    МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "Номенклатура", Колонка.Заголовок)); 
	КонецЦикла;
МассивУдаляемыхРеквизитов.Добавить("Номенклатура");
	Если Элементы.Найти("Номенклатура") <> Неопределено Тогда
	Элементы.Удалить(Элементы["Номенклатура"]);
	ИзменитьРеквизиты(,МассивУдаляемыхРеквизитов);
	КонецЕсли;
ИзменитьРеквизиты(МассивРеквизитов);
//Помещаем Элементы на форму 
Таблица = Элементы.Добавить("Номенклатура", Тип("ТаблицаФормы"),Элементы.ПерспективныйПлан); 
Таблица.ПутьКДанным = "Номенклатура"; 
Таблица.Отображение = ОтображениеТаблицы.Список;
Таблица.ЧередованиеЦветовСтрок = Истина; 
	Для Каждого Колонка Из ТЗ.Колонки Цикл
    НовыйЭлемент = Элементы.Добавить("Номенклатура_" + Колонка.Имя, Тип("ПолеФормы"), Таблица); 
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
    НовыйЭлемент.ПутьКДанным = "Номенклатура." + Колонка.Имя; 
	КонецЦикла;
//переносим таблицу значений на форму 
ЗначениеВРеквизитФормы(ТЗ,"Номенклатура");
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПерспективныйПлан(Команда)
	Если ТипСправочника = 1 Тогда
	ПолучитьПерспективныйПланТНПНаСервере();
	Иначе
	ПолучитьПерспективныйПланНаСервере();
	КонецЕсли;
Элементы.Сформировать.Доступность = Истина;
КонецПроцедуры

&НаСервере
Функция ВывестиОжидаемыйРасходПоЛинейкам(Расшифровка)
ТД = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("ОжидаемыйРасходПоЛинейкам");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблЛинейка = Макет.ПолучитьОбласть("Линейка");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ТД.Вывести(ОблШапка);
КоличествоВсего = 0;
Выборка = ТаблицаРасходаПоЛинейкам.НайтиСтроки(Новый Структура("МПЗ",Расшифровка));
	Для к = 0 По Выборка.ВГраница() Цикл	
	ОблЛинейка.Параметры.Линейка = Выборка[к].Линейка;
	ОблЛинейка.Параметры.Количество = Выборка[к].Количество;
	ТД.Вывести(ОблЛинейка);
	КоличествоВсего = КоличествоВсего + Выборка[к].Количество;
	КонецЦикла;
ОблКонец.Параметры.КоличествоВсего = КоличествоВсего;
ТД.Вывести(ОблКонец);
ТД.Защита = Истина;
ТД.ФиксацияСверху = 3; 
Возврат(ТД);
КонецФункции

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
ИмяКолонки = СокрЛП(Сред(Элемент.ТекущаяОбласть.Имя,Найти(Элемент.ТекущаяОбласть.Имя,"C")));
НомерКолонки = Число(Сред(ИмяКолонки,2));
	Если НомерКолонки = 7 Тогда
	СтандартнаяОбработка = Ложь;
	ТД = ВывестиОжидаемыйРасходПоЛинейкам(Расшифровка);
	ТД.Показать("Ожидаемый расход по линейкам");
	ИначеЕсли НомерКолонки = 8 Тогда
	СтандартнаяОбработка = Ложь;
	Отбор = Новый Структура("МПЗ",Расшифровка);
		Если СписокМестХранения.Количество() > 0 Тогда	
		Отбор.Вставить("МестоХранения",СписокМестХранения);
		КонецЕсли;
	ИмяОтчета = "ОтчётПоРегиструМестаХранения";
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
	ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьПользовательскиеНастройкиОтчетаСКД(ИмяОтчета,ТекущаяДата(),ТекущаяДата(),Отбор,"ОстаткиПоСкладам"));
	ПараметрыФормы.Вставить("КлючВарианта","ОстаткиПоСкладам"); 
	ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТипСправочникаПриИзменении(Элемент)
СписокГруппНоменклатуры.Очистить();
Элементы.Сформировать.Доступность = Ложь;
	Если ТипСправочника = 1 Тогда
	СписокГруппНоменклатуры.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Материалы");	
	Иначе	
	СписокГруппНоменклатуры.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
Элементы.Сформировать.Доступность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура СписокГруппНоменклатурыПриИзменении(Элемент)
Элементы.Сформировать.Доступность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ВидПППриИзменении(Элемент)
Элементы.Сформировать.Доступность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ТипИзделийПриИзменении(Элемент)
Элементы.Сформировать.Доступность = Ложь;
КонецПроцедуры
