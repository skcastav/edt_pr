
&НаСервере
Перем оптМВТ, оптЗапросНорм, оптСоотРезультатов;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
НаДату = ТекущаяДата();
	Если Параметры.Свойство("СписокНоменклатуры") Тогда
		Для каждого МПЗ Из Параметры.СписокНоменклатуры Цикл
			Если ТипЗнч(МПЗ.Значение) = Тип("СправочникСсылка.Номенклатура") Тогда
			СписокНоменклатуры.Добавить(МПЗ.Значение,СокрЛП(МПЗ.Значение.Наименование));			
			Иначе
			СписокМатериалов.Добавить(МПЗ.Значение,СокрЛП(МПЗ.Значение.Наименование));
			КонецЕсли;		
		КонецЦикла;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИзФайла(Наименование)
Номен = Справочники.Номенклатура.НайтиПоНаименованию(Наименование,Истина);
	Если Не Номен.Пустая() Тогда
		Если СписокНоменклатуры.НайтиПоЗначению(Номен) = Неопределено Тогда
		СписокНоменклатуры.Добавить(Номен);
		КонецЕсли;
	Иначе	
	Сообщить(Наименование+" - не найден в справочнике!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНоменклатуру(Команда)
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл со списком номенклатуры");
	Если Результат <> Неопределено Тогда
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок;
	    Для к = 2 по КолСтрок Цикл
		Состояние("Обработка...",к*100/КолСтрок,"Загрузка из списка...");
		ЗагрузитьИзФайла(СокрЛП(ExcelЛист.Cells(к,1).Value));
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПроверитьУникальность(ТЧ)
ТЧ.Проверен = Истина;
Запрос = Новый Запрос;
СписокЗапрещенныхСтатусов = Новый СписокЗначений;

СписокЗапрещенныхСтатусов.Добавить(Перечисления.СтатусыСпецификаций.Запрещённая);
СписокЗапрещенныхСтатусов.Добавить(Перечисления.СтатусыМПЗ.Запрещённая);

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходов.Владелец
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(&НаДату, ) КАК НормыРасходовСрезПоследних
	|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.НормыРасходов КАК НормыРасходов
	|			ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыМПЗ.СрезПоследних(&НаДату, ) КАК СтатусыМПЗСрезПоследних
	|			ПО (СтатусыМПЗСрезПоследних.МПЗ = НормыРасходов.Владелец)
	|		ПО НормыРасходовСрезПоследних.НормаРасходов = НормыРасходов.Ссылка
	|ГДЕ
	|	НормыРасходов.Элемент = &Элемент
	|	И НормыРасходовСрезПоследних.Норма > 0
	|	И Не СтатусыМПЗСрезПоследних.Статус В(&СписокСтатусов)";
Запрос.УстановитьПараметр("Элемент", ТЧ.МПЗ);
Запрос.УстановитьПараметр("НаДату", НаДату);
Запрос.УстановитьПараметр("СписокСтатусов", СписокЗапрещенныхСтатусов);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ТипЗнч(ВыборкаДетальныеЗаписи.Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда
		Выборка = ТаблицаПФ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.Владелец));
			Если Выборка.Количество() > 0 Тогда
				Если Выборка[0].Проверен Тогда
					Если Не Выборка[0].Уникальный Тогда
					ТЧ_ПФ = ТЧ.ТаблицаПФ.Добавить();
					ТЧ_ПФ.ПФ = Выборка[0].МПЗ;
					Возврат(Ложь);
					КонецЕсли;
				Иначе
				Выборка[0].Уникальный = ПроверитьУникальность(Выборка[0]);		
					Если Выборка[0].Уникальный Тогда
					Выборка[0].Уникальный = ПроверитьУникальностьВАналогах(Выборка[0]);
						Если Не Выборка[0].Уникальный Тогда 
						ТЧ_ПФ = ТЧ.ТаблицаПФ.Добавить();
						ТЧ_ПФ.ПФ = Выборка[0].МПЗ;
						Возврат(Ложь);
						КонецЕсли;
					КонецЕсли; 
				КонецЕсли; 	
			Иначе
			ТЧ_ПФ = ТЧ.ТаблицаПФ.Добавить();
			ТЧ_ПФ.ПФ = ВыборкаДетальныеЗаписи.Владелец;
			ТЧ_ПФ.НеВСписке = Истина;
			Возврат(Ложь); 
			КонецЕсли; 
		Иначе
		Выборка = ТаблицаМатериалов.НайтиСтроки(Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.Владелец));
			Если Выборка.Количество() > 0 Тогда
				Если Выборка[0].Проверен Тогда
					Если Не Выборка[0].Уникальный Тогда
					ТЧ_ПФ = ТЧ.ТаблицаПФ.Добавить();
					ТЧ_ПФ.ПФ = Выборка[0].МПЗ;
					Возврат(Ложь);
					КонецЕсли;
				Иначе
				Выборка[0].Уникальный = ПроверитьУникальность(Выборка[0]);		
					Если Выборка[0].Уникальный Тогда
					Выборка[0].Уникальный = ПроверитьУникальностьВАналогах(Выборка[0]);
						Если Не Выборка[0].Уникальный Тогда 
						ТЧ_ПФ = ТЧ.ТаблицаПФ.Добавить();
						ТЧ_ПФ.ПФ = Выборка[0].МПЗ;
						Возврат(Ложь);
						КонецЕсли;
					КонецЕсли; 
				КонецЕсли; 	
			Иначе
			ТЧ_ПФ = ТЧ.ТаблицаПФ.Добавить();
			ТЧ_ПФ.ПФ = ВыборкаДетальныеЗаписи.Владелец;
			ТЧ_ПФ.НеВСписке = Истина;
			Возврат(Ложь); 
			КонецЕсли;		
		КонецЕсли;
	КонецЦикла;
Возврат(Истина);
КонецФункции

&НаСервере
Функция ПроверитьУникальностьВАналогах(ТЧ)
Запрос = Новый Запрос;
СписокЗапрещенныхСтатусов = Новый СписокЗначений;

СписокЗапрещенныхСтатусов.Добавить(Перечисления.СтатусыСпецификаций.Запрещённая);
СписокЗапрещенныхСтатусов.Добавить(Перечисления.СтатусыМПЗ.Запрещённая);

Запрос.Текст = 
	"ВЫБРАТЬ
	|	АналогиНормРасходов.Владелец.Владелец КАК Владелец
	|ИЗ
	|	РегистрСведений.АналогиНормРасходов.СрезПоследних(&НаДату, ) КАК АналогиНормРасходовСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АналогиНормРасходов КАК АналогиНормРасходов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыМПЗ.СрезПоследних(&НаДату, ) КАК СтатусыМПЗСрезПоследних
	|			ПО (СтатусыМПЗСрезПоследних.МПЗ = АналогиНормРасходов.Владелец.Владелец)
	|		ПО АналогиНормРасходовСрезПоследних.АналогНормыРасходов = АналогиНормРасходов.Ссылка
	|ГДЕ
	|	АналогиНормРасходов.Элемент = &Элемент
	|	И АналогиНормРасходовСрезПоследних.Норма > 0
	|	И НЕ СтатусыМПЗСрезПоследних.Статус В (&СписокСтатусов)";
Запрос.УстановитьПараметр("Элемент", ТЧ.МПЗ);
Запрос.УстановитьПараметр("НаДату", НаДату);
Запрос.УстановитьПараметр("СписокСтатусов", СписокЗапрещенныхСтатусов);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Выборка = ТаблицаПФ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.Владелец));
		Если Выборка.Количество() = 0 Тогда
		ТЧ_ПФ = ТЧ.ТаблицаПФ.Добавить();
		ТЧ_ПФ.ПФ = ВыборкаДетальныеЗаписи.Владелец;
		ТЧ_ПФ.НеВСписке = Истина;
		ТЧ_ПФ.Аналог = Истина;			
		Возврат(Ложь);
		ИначеЕсли Выборка[0].Проверен Тогда
			Если Не Выборка[0].Уникальный Тогда
			ТЧ_ПФ = ТЧ.ТаблицаПФ.Добавить();
			ТЧ_ПФ.ПФ = Выборка[0].МПЗ;
			ТЧ_ПФ.Аналог = Истина;
			Возврат(Ложь);
			КонецЕсли;
		Иначе
		Выборка[0].Уникальный = ПроверитьУникальность(Выборка[0]);		
			Если Выборка[0].Уникальный Тогда
			Выборка[0].Уникальный = ПроверитьУникальностьВАналогах(Выборка[0]);
				Если Не Выборка[0].Уникальный Тогда
				ТЧ_ПФ = ТЧ.ТаблицаПФ.Добавить();
				ТЧ_ПФ.ПФ = Выборка[0].МПЗ;
				ТЧ_ПФ.Аналог = Истина;
				Возврат(Ложь);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
Возврат(Истина);
КонецФункции

&НаСервере
Процедура РаскрытьНаМПЗ(ЭтапСпецификации)
	Если оптМВТ = Неопределено Тогда
	оптМВТ = Новый МенеджерВременныхТаблиц;
	оптЗапрос = Новый Запрос;
	оптЗапрос.УстановитьПараметр("НаДату", ?(НаДату = НачалоДня(ТекущаяДата()),ТекущаяДата(),НаДату));
	оптЗапрос.МенеджерВременныхТаблиц = оптМВТ;	
		Если СписокДляПроверки.Количество() > 0 Тогда
			оптЗапрос.Текст = 			
			"ВЫБРАТЬ
			|	Т.НормаРасходов КАК НормаРасходов,
			|	Т.Норма КАК Норма
			|ПОМЕСТИТЬ втНРСрезПоследних
			|ИЗ
			|	РегистрСведений.НормыРасходов.СрезПоследних(
			|			&НаДату,
			|			ТИПЗНАЧЕНИЯ(НормаРасходов) = ТИП(Справочник.НормыРасходов)
			|				И (ТИПЗНАЧЕНИЯ(НормаРасходов.Элемент) = ТИП(Справочник.Номенклатура)
			|					ИЛИ ТИПЗНАЧЕНИЯ(НормаРасходов.Элемент) = ТИП(Справочник.Материалы)
			|						И НормаРасходов.Элемент В ИЕРАРХИИ (&СписокМПЗ))) КАК Т
			|ГДЕ
			|	Т.НормаРасходов.ПометкаУдаления = ЛОЖЬ
			|	И Т.Норма > 0
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	НормаРасходов";				
		оптЗапрос.УстановитьПараметр("СписокМПЗ", СписокДляПроверки);	
		Иначе
		оптЗапрос.Текст = 			
		"ВЫБРАТЬ
		|	Т.НормаРасходов КАК НормаРасходов,
		|	Т.Норма КАК Норма
		|ПОМЕСТИТЬ втНРСрезПоследних
		|ИЗ
		|	РегистрСведений.НормыРасходов.СрезПоследних(
		|			&НаДату,
		|			ТИПЗНАЧЕНИЯ(НормаРасходов) = ТИП(Справочник.НормыРасходов)
		|				И (ТИПЗНАЧЕНИЯ(НормаРасходов.Элемент) = ТИП(Справочник.Номенклатура)
		|					ИЛИ ТИПЗНАЧЕНИЯ(НормаРасходов.Элемент) = ТИП(Справочник.Материалы))) КАК Т
		|ГДЕ
		|	Т.НормаРасходов.ПометкаУдаления = ЛОЖЬ
		|	И Т.Норма > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НормаРасходов";	
		КонецЕсли;
	оптЗапрос.Выполнить();
	КонецЕсли;
		Если оптЗапросНорм = Неопределено Тогда
		оптЗапросНорм = Новый Запрос;
		оптЗапросНорм.МенеджерВременныхТаблиц = оптМВТ;
		оптЗапросНорм.Текст = 
			"ВЫБРАТЬ
			|	НормыРасходов.Ссылка КАК Ссылка,
			|	НормыРасходов.Элемент КАК Элемент,
			|	НормыРасходов.ВидЭлемента КАК ВидЭлемента,
			|	НормыРасходов.Элемент.ОсновнаяЕдиницаИзмерения КАК ЭлементОЕИ,
			|	НормыРасходовСрезПоследних.Норма КАК Норма
			|ИЗ
			|	втНРСрезПоследних КАК НормыРасходовСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НормыРасходов КАК НормыРасходов
			|		ПО НормыРасходовСрезПоследних.НормаРасходов = НормыРасходов.Ссылка
			|ГДЕ
			|	НормыРасходов.Владелец = &Владелец";
		КонецЕсли;
			Если оптСоотРезультатов = Неопределено Тогда
			оптСоотРезультатов = Новый Соответствие;
			КонецЕсли;
				Если оптСоотРезультатов.Получить(ЭтапСпецификации) = Неопределено Тогда 
				Запрос = оптЗапросНорм;
				Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
				РезультатЗапроса = Запрос.Выполнить();
				оптСоотРезультатов.Вставить(ЭтапСпецификации, РезультатЗапроса);
				Иначе
				РезультатЗапроса = оптСоотРезультатов[ЭтапСпецификации];
				КонецЕсли;
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Материалы")Тогда
			Если Уникальность <> 2 Тогда
			Выборка = ТаблицаМатериалов.НайтиСтроки(Новый Структура("МПЗ",ВыборкаНР.Элемент));
				Если Выборка.Количество() = 0 Тогда
				ТЧ = ТаблицаМатериалов.Добавить();
				ТЧ.МПЗ = ВыборкаНР.Элемент;
				КонецЕсли;
			ТаблицаАналогов = ОбщегоНазначенияПовтИсп.ПолучитьАналогиНормРасходов(ВыборкаНР.Ссылка);
				Для каждого ТЧ_ТА Из ТаблицаАналогов Цикл                                                                        
				Аналог = ТЧ_ТА.Ссылка.Элемент;
						Если ТипЗнч(Аналог) = Тип("СправочникСсылка.Материалы") Тогда
						Выборка = ТаблицаМатериалов.НайтиСтроки(Новый Структура("МПЗ",Аналог));
							Если Выборка.Количество() = 0 Тогда
							ТЧ = ТаблицаМатериалов.Добавить();
							ТЧ.МПЗ = Аналог;
							КонецЕсли;
						КонецЕсли;
				КонецЦикла; 
			КонецЕсли; 
		Иначе
		Выборка = ТаблицаПФ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаНР.Элемент));
			Если Выборка.Количество() = 0 Тогда
			ТЧ = ТаблицаПФ.Добавить();
			ТЧ.МПЗ = ВыборкаНР.Элемент;
			КонецЕсли; 
	    РаскрытьНаМПЗ(ВыборкаНР.Элемент);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СформироватьТаблицы()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	РегистрСведений.СтатусыМПЗ.СрезПоследних(&НаДату, ) КАК СтатусыМПЗСрезПоследних
	|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО СтатусыМПЗСрезПоследних.МПЗ = Номенклатура.Ссылка
	|ГДЕ
	|	Номенклатура.Ссылка В ИЕРАРХИИ(&СписокГрупп)
	|	И Номенклатура.ЭтоГруппа = ЛОЖЬ";
	Если СписокСтатусов.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И СтатусыМПЗСрезПоследних.Статус В(&СписокСтатусов)";
	Запрос.УстановитьПараметр("СписокСтатусов", СписокСтатусов);
	//Иначе
	//Запрос.Текст = Запрос.Текст + " И СтатусыМПЗСрезПоследних.Статус <> &Статус";
	//Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыСпецификаций.Запрещённая);	
	КонецЕсли; 
Запрос.УстановитьПараметр("НаДату", НаДату);
Запрос.УстановитьПараметр("СписокГрупп", СписокНоменклатуры);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаПФ.Добавить();
	ТЧ.МПЗ = ВыборкаДетальныеЗаписи.Ссылка;
	РаскрытьНаМПЗ(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
		Если СписокМатериалов.Количество() > 0 Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Материалы.Ссылка
			|ИЗ
			|	РегистрСведений.СтатусыМПЗ.СрезПоследних(&НаДату, ) КАК СтатусыМПЗСрезПоследних
			|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Материалы КАК Материалы
			|		ПО СтатусыМПЗСрезПоследних.МПЗ = Материалы.Ссылка
			|ГДЕ
			|	Материалы.Ссылка В ИЕРАРХИИ(&СписокГрупп)
			|	И Материалы.ЭтоГруппа = ЛОЖЬ";
			Если СписокСтатусов.Количество() > 0 Тогда
			Запрос.Текст = Запрос.Текст + " И СтатусыМПЗСрезПоследних.Статус В(&СписокСтатусов)";
			Запрос.УстановитьПараметр("СписокСтатусов", СписокСтатусов);
			//Иначе
			//Запрос.Текст = Запрос.Текст + " И СтатусыМПЗСрезПоследних.Статус <> &Статус";
			//Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыМПЗ.Запрещённая);	
			КонецЕсли; 
		Запрос.УстановитьПараметр("НаДату", НаДату);
		Запрос.УстановитьПараметр("СписокГрупп", СписокМатериалов);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Выборка = ТаблицаМатериалов.НайтиСтроки(Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.Ссылка));
				Если Выборка.Количество() = 0 Тогда
				ТЧ = ТаблицаМатериалов.Добавить();
				ТЧ.МПЗ = ВыборкаДетальныеЗаписи.Ссылка;
				КонецЕсли;
			РаскрытьНаМПЗ(ВыборкаДетальныеЗаписи.Ссылка);
			КонецЦикла;
		КонецЕсли;
КонецПроцедуры
     
&НаСервере
Функция ПолучитьОстатокПоЗаказамПоставщикам(МПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыПоставщикамОстатки.МПЗ КАК МПЗ,
	|	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&НаДату, ) КАК ЗаказыПоставщикамОстатки
	|ГДЕ
	|	ЗаказыПоставщикамОстатки.МПЗ = &МПЗ
	|ИТОГИ
	|	СУММА(КоличествоОстаток)
	|ПО
	|	МПЗ"; 
Запрос.УстановитьПараметр("НаДату", НаДату);
Запрос.УстановитьПараметр("МПЗ", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаЗаказыПоставщикамМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЗаказыПоставщикамМПЗ.Следующий() Цикл
	Возврат(ВыборкаЗаказыПоставщикамМПЗ.КоличествоОстаток);	
	КонецЦикла;
Возврат(0);
КонецФункции

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();
Запрос = Новый Запрос;

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет"); 
ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблВидМПЗ = Макет.ПолучитьОбласть("ВидМПЗ");	
ОблМПЗ = Макет.ПолучитьОбласть("МПЗ");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ТабДок.Вывести(ОблШапка);
	Если Уникальность <> 2 Тогда
	ОблВидМПЗ.Параметры.ВидМПЗ = "Материалы";
	ТабДок.Вывести(ОблВидМПЗ);
	ТаблицаМатериалов.Сортировать("МПЗ");
		Для каждого ТЧ Из ТаблицаМатериалов Цикл
			Если ТЧ.Уникальный Тогда
			ОблМПЗ.Параметры.Статус = ПолучитьСтатус(ТЧ.МПЗ);
			ОблМПЗ.Параметры.Наименование = СокрЛП(ТЧ.МПЗ.Наименование);
			ОблМПЗ.Параметры.МПЗ = ТЧ.МПЗ;
			ОблМПЗ.Параметры.КоличествоНаСкладе = ОбщийМодульРаботаСРегистрами.ПолучитьСводныйОстаток(ТЧ.МПЗ);
			ОблМПЗ.Параметры.КоличествоВПути = ПолучитьОстатокПоЗаказамПоставщикам(ТЧ.МПЗ);
			ТабДок.Вывести(ОблМПЗ);
			КонецЕсли;		
		КонецЦикла;
	КонецЕсли;
		Если Уникальность <> 1 Тогда
		ОблВидМПЗ.Параметры.ВидМПЗ = "Полуфабрикаты";
		ТабДок.Вывести(ОблВидМПЗ);
		ТаблицаПФ.Сортировать("МПЗ");
			Для каждого ТЧ Из ТаблицаПФ Цикл
				Если ТЧ.Уникальный Тогда
				ОблМПЗ.Параметры.Статус = ПолучитьСтатус(ТЧ.МПЗ);
				ОблМПЗ.Параметры.Наименование = СокрЛП(ТЧ.МПЗ.Наименование);
				ОблМПЗ.Параметры.МПЗ = ТЧ.МПЗ;
				ОблМПЗ.Параметры.КоличествоНаСкладе = ОбщийМодульРаботаСРегистрами.ПолучитьСводныйОстаток(ТЧ.МПЗ);
				ОблМПЗ.Параметры.КоличествоВПути = 0;
				ТабДок.Вывести(ОблМПЗ);
				КонецЕсли;		
			КонецЦикла;
		КонецЕсли;  
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 2;
КонецПроцедуры
          
&НаСервере
Процедура ПроверитьУникальностьПФ()
	Для каждого ТЧ Из ТаблицаПФ Цикл
		Если Не ТЧ.Проверен Тогда
		ТЧ.Уникальный = ПроверитьУникальность(ТЧ);
			Если ТЧ.Уникальный Тогда
			ТЧ.Уникальный = ПроверитьУникальностьВАналогах(ТЧ);
			КонецЕсли;           
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 

&НаСервере
Процедура ПроверитьУникальностьМатериалов()
	Для каждого ТЧ Из ТаблицаМатериалов Цикл
		Если Не ТЧ.Проверен Тогда
		ТЧ.Уникальный = ПроверитьУникальность(ТЧ);
			Если ТЧ.Уникальный Тогда
			ТЧ.Уникальный = ПроверитьУникальностьВАналогах(ТЧ);
			КонецЕсли;           
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	ТаблицаМатериалов.Очистить();
	ТаблицаПФ.Очистить();
	Состояние("Обработка...",,"Создание таблиц материалов и полуфабрикатов...");
	СформироватьТаблицы();
	Состояние("Обработка...",,"Проверка уникальности полуфабрикатов...");
	ПроверитьУникальностьПФ();
			Если Уникальность <> 2 Тогда
			Состояние("Обработка...",,"Проверка уникальности материалов...");
	       	ПроверитьУникальностьМатериалов();
			КонецЕсли;
	Состояние("Обработка...",,"Формирование отчёта...");
	СформироватьНаСервере();	
	КонецЕсли; 
КонецПроцедуры
          
&НаСервере
Процедура ВхождениеВСпецификации(Проект,Элемент)
спНомен = ОбщийМодульВызовСервера.ПолучитьСписокВхождений(Элемент,НаДату);
	Для каждого Строка Из спНомен Цикл
		Если Не Строка.Значение.Товар.Пустая() Тогда
			Если ТипЗнч(Строка.Значение) = Тип("СправочникСсылка.Номенклатура") Тогда
			флИсключение = Ложь;
				Для каждого ТЧ Из Проект.ИсключенияРедизайна Цикл
					Если ТЧ.Товар.ЭтоГруппа Тогда
						Если Строка.Значение.Товар.ПринадлежитЭлементу(ТЧ.Товар) Тогда
						флИсключение = Истина;
						Прервать;
						КонецЕсли;	
					Иначе	
						Если ТЧ.Товар = Строка.Значение.Товар Тогда
						флИсключение = Истина;
						Прервать;
						КонецЕсли;
					КонецЕсли;		
				КонецЦикла;
					Если Не флИсключение Тогда
						Если СписокНоменклатуры.НайтиПоЗначению(Строка.Значение) = Неопределено Тогда
						СписокНоменклатуры.Добавить(Строка.Значение,СокрЛП(Строка.Значение.Наименование));
						КонецЕсли;
					КонецЕсли;
			Иначе
				Если СписокМатериалов.НайтиПоЗначению(Строка.Значение) = Неопределено Тогда
				СписокМатериалов.Добавить(Строка.Значение,СокрЛП(Строка.Значение.Наименование));
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;
	ВхождениеВСпецификации(Проект,Строка.Значение);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьПоПроектуНаСервере(Проект)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ                                    
	|	Редизайн.Проект КАК Проект,
	|	Редизайн.ЭлементЗамены КАК ЭлементЗамены
	|ИЗ
	|	РегистрСведений.Редизайн КАК Редизайн
	|ГДЕ
	|	Редизайн.Проект = &Проект";
Запрос.УстановитьПараметр("Проект", Проект);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаПроекты = РезультатЗапроса.Выбрать();
	Пока ВыборкаПроекты.Следующий() Цикл 
	ВхождениеВСпецификации(ВыборкаПроекты.Проект,ВыборкаПроекты.ЭлементЗамены);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоПроекту(Команда)
Проект = Неопределено;
	Если ВвестиЗначение(Проект,"Выберите проект редизайна",Тип("СправочникСсылка.Проекты")) Тогда
	ДобавитьПоПроектуНаСервере(Проект);		
	КонецЕсли;
КонецПроцедуры
