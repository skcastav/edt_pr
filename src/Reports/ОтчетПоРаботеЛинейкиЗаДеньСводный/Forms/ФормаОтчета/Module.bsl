
&НаСервере
Функция ПодсчётПроцентаБрака(Линейка,НаДату,флСредний)	
СписокБрак = Новый Структура("БракРМ,БракИтого","",0);

ТаблицаРемонта = Новый ТаблицаЗначений;

ТаблицаРемонта.Колонки.Добавить("Изделие",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
ТаблицаРемонта.Колонки.Добавить("Наименование",Новый ОписаниеТипов("Строка",Новый КвалификаторыСтроки(100)));
ТаблицаРемонта.Колонки.Добавить("РМ",Новый ОписаниеТипов("СправочникСсылка.РабочиеМестаЛинеек"));
ТаблицаРемонта.Колонки.Добавить("Отправлено",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(7,3)));
ТаблицаРемонта.Колонки.Добавить("Отремонтировано",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(7,3)));

	Если флСредний Тогда
	ДатаНач = ДобавитьМесяц(НаДату,-3);
	Иначе
	ДатаНач = НаДату;
	КонецЕсли;

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РемонтнаяКарта.Ссылка,
	|	РемонтнаяКарта.ДатаНачала,
	|	РемонтнаяКарта.ДатаОкончания,
	|	РемонтнаяКарта.ДокументОснование,
	|	РемонтнаяКарта.РабочееМесто,
	|	РемонтнаяКарта.Изделие
	|ИЗ
	|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
	|ГДЕ
	|	РемонтнаяКарта.Линейка = &Линейка
	|	И РемонтнаяКарта.ВидРемонта <> &ВидРемонта
	|	И РемонтнаяКарта.ДатаНачала <= &ДатаКон";			
Запрос.УстановитьПараметр("Линейка",Линейка);
Запрос.УстановитьПараметр("ВидРемонта",Перечисления.ВидыРемонта.Дилерский);
Запрос.УстановитьПараметр("ДатаКон",КонецДня(НаДату));		
РезультатЗапросаРемонт = Запрос.Выполнить();			
ВыборкаДетальныеЗаписи = РезультатЗапросаРемонт.Выбрать();			
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Отправлено = 0;
	Отремонтировано = 0;
		Если ВыборкаДетальныеЗаписи.ДатаНачала >= НачалоДня(ДатаНач) Тогда
		Отправлено = 1;			
		КонецЕсли;
			Если ВыборкаДетальныеЗаписи.ДатаОкончания <> Дата(1,1,1) Тогда
				Если ВыборкаДетальныеЗаписи.ДатаОкончания < НачалоДня(ДатаНач) Тогда				
				Продолжить;
				КонецЕсли; 
					Если (ВыборкаДетальныеЗаписи.ДатаОкончания >=НачалоДня(ДатаНач))и(ВыборкаДетальныеЗаписи.ДатаОкончания <= КонецДня(НаДату)) Тогда
					Отремонтировано = 1;
					КонецЕсли;			
			КонецЕсли; 
	ТЧ = ТаблицаРемонта.Добавить();
	ТЧ.Изделие = ВыборкаДетальныеЗаписи.Изделие;
	ТЧ.Наименование = глНаименованиеВСкобкахБезЭтапа(ВыборкаДетальныеЗаписи.Изделие.Наименование);
	ТЧ.РМ = ВыборкаДетальныеЗаписи.РабочееМесто;
	ТЧ.Отправлено = Отправлено;
	ТЧ.Отремонтировано = Отремонтировано;
	КонецЦикла;
ТаблицаРемонта.Свернуть("РМ,Изделие,Наименование","Отправлено,Отремонтировано");
ТаблицаРемонта.Сортировать("РМ,Наименование");

СписокИзделий = Новый СписокЗначений;
СписокРМ = Новый СписокЗначений;
СписокРМ = ТаблицаРемонта.ВыгрузитьКолонку("РМ");

ЗапросПоступило = Новый Запрос;

ЗапросПоступило.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданий.Изделие,
	|	ЭтапыПроизводственныхЗаданий.РабочееМесто
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданий.РабочееМесто В(&СписокРМ)
	|	И ЭтапыПроизводственныхЗаданий.ДатаНачала МЕЖДУ &ДатаНач И &ДатаКон";	
ЗапросПоступило.УстановитьПараметр("СписокРМ",СписокРМ);
ЗапросПоступило.УстановитьПараметр("ДатаНач",НачалоДня(ДатаНач));
ЗапросПоступило.УстановитьПараметр("ДатаКон",КонецДня(НаДату));
РезультатПЗ = ЗапросПоступило.Выполнить();
ВыборкаПоступило = РезультатПЗ.Выбрать();

ЗапросВыпуск = Новый Запрос;
ЗапросВыпуск.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОбороты.МПЗ КАК МПЗ,
	|	МестаХраненияОбороты.КоличествоПриход КАК КоличествоПриход
	|ИЗ
	|	РегистрНакопления.МестаХранения.Обороты(&ДатаНач, &ДатаКон, , ) КАК МестаХраненияОбороты
	|ГДЕ
	|	МестаХраненияОбороты.МПЗ.Линейка = &Линейка";	
ЗапросВыпуск.УстановитьПараметр("Линейка",Линейка);
ЗапросВыпуск.УстановитьПараметр("ДатаНач",НачалоДня(ДатаНач));
ЗапросВыпуск.УстановитьПараметр("ДатаКон",КонецДня(НаДату));
РезультатВыпуск = ЗапросВыпуск.Выполнить();
ВыборкаВыпуск = РезультатВыпуск.Выбрать();

ОтправленоИтого = 0;
ОтремонтированоИтого = 0; 
ОтправленоВсего = 0;
ОтремонтированоВсего = 0;
ВыпущеноВсего = 0;
КолПоступилоИтого  = 0; 
КолПоступилоВсего  = 0; 
ТекРМ = Неопределено;
	Для каждого ТЧ Из ТаблицаРемонта Цикл
		Если ТЧ.РМ <> ТекРМ Тогда
			Если ТекРМ <> Неопределено Тогда
			ПоступилоИтогоВсех = 0;
			ВыборкаПоступило.Сбросить();
				Пока ВыборкаПоступило.НайтиСледующий(Новый Структура("РабочееМесто",ТекРМ)) Цикл
				ПоступилоИтогоВсех = ПоступилоИтогоВсех + 1;
				КонецЦикла;
			ПроцентБракаОтПоступившихИтого = ?(ПоступилоИтогоВсех+ОтремонтированоИтого > 0,Окр(ОтправленоИтого*100/(ПоступилоИтогоВсех+ОтремонтированоИтого),2,1),0); 
			СписокБрак.БракРМ = СписокБрак.БракРМ + СокрЛП(ТекРМ.Наименование) + " - " + ПроцентБракаОтПоступившихИтого + "%;"+Символы.ПС;				
			КонецЕсли;
		ТекРМ = ТЧ.РМ;
		ОтправленоИтого = 0;
		ОтремонтированоИтого = 0; 			
		КолПоступилоИтого = 0;
		КонецЕсли; 
	КолПоступило = 0;
	ВыборкаПоступило.Сбросить();
		Пока ВыборкаПоступило.НайтиСледующий(Новый Структура("Изделие,РабочееМесто",ТЧ.Изделие,ТЧ.РМ)) Цикл
		КолПоступило = КолПоступило + 1;
		КонецЦикла;
	КолПоступило = КолПоступило + ТЧ.Отремонтировано;
	ПроцентБракаОтПоступивших = ?(КолПоступило > 0,Окр(ТЧ.Отправлено*100/КолПоступило,2,1),0);	
	ОтправленоИтого = ОтправленоИтого + ТЧ.Отправлено;
	ОтправленоВсего = ОтправленоВсего + ТЧ.Отправлено;
	ОтремонтированоИтого = ОтремонтированоИтого + ТЧ.Отремонтировано; 
	ОтремонтированоВсего = ОтремонтированоВсего + ТЧ.Отремонтировано;	
	КолПоступилоИтого  = КолПоступилоИтого + КолПоступило; 
	КолПоступилоВсего  = КолПоступилоВсего + КолПоступило;
	КонецЦикла; 
ПоступилоИтогоВсех = 0;
ВыборкаПоступило.Сбросить();
	Пока ВыборкаПоступило.НайтиСледующий(Новый Структура("РабочееМесто",ТекРМ)) Цикл
	ПоступилоИтогоВсех = ПоступилоИтогоВсех + 1; 
	КонецЦикла;
ПроцентБракаОтПоступившихИтого = ?(ПоступилоИтогоВсех+ОтремонтированоИтого > 0,Окр(ОтправленоИтого*100/(ПоступилоИтогоВсех+ОтремонтированоИтого),2,1),0); 
	Если ТекРМ <> Неопределено Тогда
	СписокБрак.БракРМ = СписокБрак.БракРМ + СокрЛП(ТекРМ.Наименование) + " - " + ПроцентБракаОтПоступившихИтого + "%;"+Символы.ПС;
	КонецЕсли;
ВыпущеноВсего = 0;
ВыборкаВыпуск.Сбросить();
	Пока ВыборкаВыпуск.Следующий() Цикл
	ВыпущеноВсего = ВыпущеноВсего + ВыборкаВыпуск.КоличествоПриход; 			
	КонецЦикла;
ПроцентБракаВсего = ?(ВыпущеноВсего > 0,Окр(ОтправленоВсего*100/ВыпущеноВсего,2,1),0);
СписокБрак.БракИтого = ПроцентБракаВсего;
Возврат(СписокБрак);
КонецФункции

&НаСервере
Функция ПолучитьДолгЛинейки(Линейка)//ПолучитьПланЛинейки(Линейка)
Рез = Новый Структура("ДолгГП,Заказано",0,0);
Отбор = Новый Структура("Линейка",Линейка); 
ОтставаниеОтПланаПроизводства = РегистрыСведений.ОтставаниеОтПланаПроизводства.Получить(НачалоМесяца(Отчет.НаДату),Отбор);
КолОтставание = ОтставаниеОтПланаПроизводства.Количество;
ВыбДата = НачалоДня(НачалоМесяца(Отчет.НаДату));
	Пока ВыбДата <= НачалоДня(Отчет.НаДату) Цикл
	КолПриход = 0;
	Отбор = Новый Структура("ПроизводственныйКалендарь,Дата,Год",Константы.ОсновнойПроизводственныйКалендарь.Получить(),ВыбДата,Год(ВыбДата));
	Выборка = РегистрыСведений.ДанныеПроизводственногоКалендаря.Получить(Отбор);
		//Если Выборка.ВидДня <> Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий Тогда
		//ВыбДата = ВыбДата + 86400;
		//Продолжить;
		//КонецЕсли; 
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланыВыпускаОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход,
		|	ПланыВыпускаОстаткиИОбороты.КоличествоПриход * ПланыВыпускаОстаткиИОбороты.Номенклатура.УсловныеПриборы КАК ПрихУсл
		|ИЗ
		|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , ) КАК ПланыВыпускаОстаткиИОбороты
		|ГДЕ
		|	ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Линейка = &Линейка
		|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Ремонт = ЛОЖЬ
		|ИТОГИ
		|	СУММА(КоличествоПриход),
		|	СУММА(ПрихУсл)
		|ПО
		|	ОБЩИЕ";	
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ВыбДата));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ВыбДата));
	Запрос.УстановитьПараметр("Линейка",Линейка);
	Результат = Запрос.Выполнить();
	ВыборкаИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаИтоги.Следующий() Цикл
		КолПриход = ВыборкаИтоги.КоличествоПриход;	
		КонецЦикла;	
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланыВыпускаОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	ПланыВыпускаОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
		|	ПланыВыпускаОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|	ПланыВыпускаОстаткиИОбороты.КоличествоНачальныйОстаток * ПланыВыпускаОстаткиИОбороты.Номенклатура.УсловныеПриборы КАК НОУсл,
		|	ПланыВыпускаОстаткиИОбороты.КоличествоРасход * ПланыВыпускаОстаткиИОбороты.Номенклатура.УсловныеПриборы КАК РасхУсл,
		|	ПланыВыпускаОстаткиИОбороты.КоличествоКонечныйОстаток * ПланыВыпускаОстаткиИОбороты.Номенклатура.УсловныеПриборы КАК КОУсл
		|ИЗ
		|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , ) КАК ПланыВыпускаОстаткиИОбороты
		|ГДЕ
		|	(ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|				И ПланыВыпускаОстаткиИОбороты.КоличествоРасход > 0
		|			ИЛИ ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Дата < &ДатаНач)
		|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Линейка = &Линейка
		|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Ремонт = ЛОЖЬ
		|ИТОГИ
		|	СУММА(КоличествоНачальныйОстаток),
		|	СУММА(КоличествоРасход),
		|	СУММА(КоличествоКонечныйОстаток),
		|	СУММА(НОУсл),
		|	СУММА(РасхУсл),
		|	СУММА(КОУсл)
		|ПО
		|	ОБЩИЕ";  	
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ВыбДата));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ВыбДата));
	Запрос.УстановитьПараметр("Линейка",Линейка);
	КолРасход = 0;
	Результат = Запрос.Выполнить();
	ВыборкаИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаИтоги.Следующий() Цикл
		КолРасход = ВыборкаИтоги.КоличествоРасход;
		КонецЦикла;	
	//Отбор = Новый Структура("Линейка",Линейка);
	//ПаспортЛинейки = РегистрыСведений.ПаспортЛинейки.ПолучитьПоследнее(ВыбДата,Отбор);
	//	Если КолОтставание < ПаспортЛинейки.ВыпускЗаДеньРасчётный Тогда
	//	КолПлан = КолОтставание;
	//	Иначе
	//	КолПлан = ПаспортЛинейки.ВыпускЗаДеньРасчётный;
	//	КонецЕсли; 
	КолДолг = КолОтставание + КолПриход;
	Рез.ДолгГП = КолОтставание;
	Рез.Заказано = КолПриход;
	КолОтставание = КолОтставание + КолПриход - КолРасход;
	ВыбДата = ВыбДата + 86400;
	КонецЦикла;
Возврат(Рез);
КонецФункции

&НаСервере
Функция ПолучитьСписокПроектовПоВыпускам(Линейка)
СписокПроектов = Новый СписокЗначений;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта,
	|	ПланыВыпускаОстаткиИОбороты.КоличествоРасход
	|ИЗ
	|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , ) КАК ПланыВыпускаОстаткиИОбороты
	|ГДЕ
	|	ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Линейка = &Линейка
	|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Ремонт = ЛОЖЬ";	
Запрос.УстановитьПараметр("ДатаНач",НачалоДня(Отчет.НаДату));
Запрос.УстановитьПараметр("ДатаКон",КонецДня(Отчет.НаДату));
Запрос.УстановитьПараметр("Линейка",Линейка);
Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если СписокПроектов.НайтиПоЗначению(Выборка.МаршрутнаяКарта.Проект) = Неопределено Тогда
		СписокПроектов.Добавить(Выборка.МаршрутнаяКарта.Проект);
		КонецЕсли;	
	КонецЦикла;
Проекты = "";
	Для каждого Стр Из СписокПроектов Цикл
	Проекты = Проекты + СокрЛП(Стр.Значение.Наименование) + " (" + Стр.Значение.Код + ")" + "; ";	
	КонецЦикла; 
Возврат(Проекты);
КонецФункции

&НаСервере
Процедура СформироватьНаСервере(Линейка)
	Если Линейка.Проектная Тогда	
	Проекты = ПолучитьСписокПроектовПоВыпускам(Линейка);
	Иначе
	Проекты = "";
	КонецЕсли; 

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблОтчёт = Макет.ПолучитьОбласть("Отчёт");
ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблПричина = Макет.ПолучитьОбласть("Причина");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблОтчёт.Параметры.Линейка = Линейка;
ОблОтчёт.Параметры.ЛинейкаКомментарий = Линейка.Комментарий;
ОблОтчёт.Параметры.НаДату = Отчет.НаДату;
ОблОтчёт.Параметры.Проекты = Проекты;

#Область СохраненныеПараметрыЛинейки //Паспорт, Простои, Оставание на начало месяца
Отбор = Новый Структура("Линейка",Линейка);
ПаспортЛинейки = РегистрыСведений.ПаспортЛинейки.ПолучитьПоследнее(Отчет.НаДату,Отбор);
ПростойЛинейки = РегистрыСведений.ПростойЛинейки.Выбрать(НачалоДня(Отчет.НаДату),КонецДня(Отчет.НаДату),Отбор);
ОтставаниеОтПланаПроизводства = РегистрыСведений.ОтставаниеОтПланаПроизводства.Получить(НачалоМесяца(Отчет.НаДату),Отбор);
ОблОтчёт.Параметры.ВремяТактаРасч = Формат(ПаспортЛинейки.ВремяТактаРасчётное,"ЧЦ=5; ЧДЦ=2");
ОблОтчёт.Параметры.ВремяТактаМин = Формат(ПаспортЛинейки.ВремяТактаМинимальное,"ЧЦ=5; ЧДЦ=2");
ОблОтчёт.Параметры.ВремяТактаМакс = Формат(ПаспортЛинейки.ВремяТактаМаксимальное,"ЧЦ=5; ЧДЦ=2");
ОблОтчёт.Параметры.ВыпускЗаДеньРасчётный = ПаспортЛинейки.ВыпускЗаДеньРасчётный;
ПланРасч = ПолучитьДолгЛинейки(Линейка);
ВремяПростоя = 0;
	Пока ПростойЛинейки.Следующий() Цикл
	ВремяПростоя =  ВремяПростоя + (ПростойЛинейки.Окончание - ПростойЛинейки.Период)/60;
	КонецЦикла;
ОблОтчёт.Параметры.Смена = ПаспортЛинейки.Смена;
	Если НачалоДня(Отчет.НаДату) = НачалоДня(ТекущаяДата()) Тогда
		Если ТекущаяДата() < НачалоДня(ТекущаяДата()) + 60000 Тогда //меньше 16:40
			Если ТекущаяДата() - НачалоДня(ТекущаяДата()) > 43200 Тогда //больше 12:00
				Если ТекущаяДата() - НачалоДня(ТекущаяДата()) > 45600 Тогда //больше 12:40
				Смена = Окр((ТекущаяДата() - НачалоДня(ТекущаяДата()) - 28800 - 2400)/60*0.9375,0,1);
				Иначе
				Смена = Окр((ТекущаяДата() - НачалоДня(ТекущаяДата()) - 28800)/60*0.9375,0,1);
				КонецЕсли; 
			Иначе
			Смена = Окр((ТекущаяДата() - НачалоДня(ТекущаяДата()) - 28800)/60*0.9375,0,1);
			КонецЕсли; 
		Иначе
		Смена = ПаспортЛинейки.Смена;
		КонецЕсли; 
	Иначе
	Смена = ПаспортЛинейки.Смена;
	КонецЕсли;
ВремяРаботыФакт = ?(Смена - ВремяПростоя > 0,Смена - ВремяПростоя,0); 
ОблОтчёт.Параметры.ВремяРаботыФакт = Формат(ВремяРаботыФакт,"ЧДЦ=2");
КолОтставание = ОтставаниеОтПланаПроизводства.Количество;
#КонецОбласти

#Область ВычислениеОтставания //Вычисление отставания на дату
ПредшествующаяДата = НачалоДня(Отчет.НаДату) - 86400;
МассивДат = Новый Массив;

МассивДат.Добавить(ПредшествующаяДата);
БлижайшиеРабДаты = КалендарныеГрафики.ПолучитьДатыРабочихДней(Константы.ОсновнойПроизводственныйКалендарь.Получить(),МассивДат,Истина);
ПредшествующаяДата = БлижайшиеРабДаты.Получить(ПредшествующаяДата);
	Если ПредшествующаяДата >= НачалоМесяца(Отчет.НаДату) Тогда
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланыВыпускаОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход
		|ИЗ
		|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , ) КАК ПланыВыпускаОстаткиИОбороты
		|ГДЕ
		|	ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Линейка = &Линейка
		|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Ремонт = ЛОЖЬ
		|ИТОГИ
		|	СУММА(КоличествоПриход)
		|ПО
		|	ОБЩИЕ";	
	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Отчет.НаДату));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ПредшествующаяДата));
	Запрос.УстановитьПараметр("Линейка",Линейка);
	Результат = Запрос.Выполнить();
	КолЗагруженоВсего = 0;
	ВыборкаИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаИтоги.Следующий() Цикл
		КолЗагруженоВсего = ВыборкаИтоги.КоличествоПриход;	
		КонецЦикла;

	ЗапросВыпуск = Новый Запрос;

	ЗапросВыпуск.Текст = 
		"ВЫБРАТЬ
		|	ПланыВыпускаОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход
		|ИЗ
		|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , ) КАК ПланыВыпускаОстаткиИОбороты
		|ГДЕ
		|	(ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|				И ПланыВыпускаОстаткиИОбороты.КоличествоРасход > 0
		|			ИЛИ ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Дата < &ДатаНач)
		|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Линейка = &Линейка
		|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Ремонт = ЛОЖЬ
		|ИТОГИ
		|	СУММА(КоличествоРасход)
		|ПО
		|	ОБЩИЕ";	
	ЗапросВыпуск.УстановитьПараметр("Линейка",Линейка);
	ЗапросВыпуск.УстановитьПараметр("ДатаНач",НачалоМесяца(Отчет.НаДату));
	ЗапросВыпуск.УстановитьПараметр("ДатаКон",КонецДня(ПредшествующаяДата));
	РезультатВыпуск = ЗапросВыпуск.Выполнить();
	КолВыпущеноВсего = 0;
	ВыборкаВыпуск = РезультатВыпуск.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаВыпуск.Следующий() Цикл
		КолВыпущеноВсего = ВыборкаВыпуск.КоличествоРасход;
		КонецЦикла;
	КолОтставание = КолОтставание + КолЗагруженоВсего - КолВыпущеноВсего;	
	КонецЕсли;
#КонецОбласти

#Область ПланПЭО //Вычисление плана ПЭО на дату
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланыВыпускаОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход
	|ИЗ
	|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , ) КАК ПланыВыпускаОстаткиИОбороты
	|ГДЕ
	|	ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Линейка = &Линейка
	|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Ремонт = ЛОЖЬ
	|ИТОГИ
	|	СУММА(КоличествоПриход)
	|ПО
	|	ОБЩИЕ";	
Запрос.УстановитьПараметр("ДатаНач",НачалоДня(Отчет.НаДату));
Запрос.УстановитьПараметр("ДатаКон",КонецДня(Отчет.НаДату));
Запрос.УстановитьПараметр("Линейка",Линейка);
Результат = Запрос.Выполнить();
КолЗагружено = 0;
ВыборкаИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИтоги.Следующий() Цикл
	КолЗагружено = ВыборкаИтоги.КоличествоПриход;	
	КонецЦикла;
#КонецОбласти

#Область Выпущено //Вычисление выпуска на дату
ЗапросВыпуск = Новый Запрос;

ЗапросВыпуск.Текст = 
	"ВЫБРАТЬ
	|	ПланыВыпускаОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход
	|ИЗ
	|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , ) КАК ПланыВыпускаОстаткиИОбороты
	|ГДЕ
	|	(ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|				И ПланыВыпускаОстаткиИОбороты.КоличествоРасход > 0
	|			ИЛИ ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Дата < &ДатаНач)
	|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Линейка = &Линейка
	|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Ремонт = ЛОЖЬ
	|ИТОГИ
	|	СУММА(КоличествоРасход)
	|ПО
	|	ОБЩИЕ";	
ЗапросВыпуск.УстановитьПараметр("Линейка",Линейка);
ЗапросВыпуск.УстановитьПараметр("ДатаНач",НачалоДня(Отчет.НаДату));
ЗапросВыпуск.УстановитьПараметр("ДатаКон",КонецДня(Отчет.НаДату));
РезультатВыпуск = ЗапросВыпуск.Выполнить();
КолВыпущено = 0;
ВыборкаВыпуск = РезультатВыпуск.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаВыпуск.Следующий() Цикл
	КолВыпущено = ВыборкаВыпуск.КоличествоРасход;
	КонецЦикла;
ОблОтчёт.Параметры.КолВыпФакт = КолВыпущено;
#КонецОбласти


#Область ОстатокПланаВыпуска //Вычисление остатка плана выпуска на дату

//ОблОтчёт.Параметры.КолВыпРасч = ПланРасч.ДолгГП+ПланРасч.Заказано-КолВыпущено;

ЗапросОстаток = Новый Запрос;

ЗапросОстаток.Текст = 
	"ВЫБРАТЬ
	|	ПланыВыпускаОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ПланыВыпуска.Остатки(&НаДату, Линейка = &Линейка) КАК ПланыВыпускаОстатки";	
ЗапросОстаток.УстановитьПараметр("Линейка",Линейка);
ЗапросОстаток.УстановитьПараметр("НаДату",КонецДня(Отчет.НаДату));
РезультатОстаток = ЗапросОстаток.Выполнить();
КолОстаток = 0;
ВыборкаОстаток = РезультатОстаток.Выбрать();
	Пока ВыборкаОстаток.Следующий() Цикл
	КолОстаток = КолОстаток + ВыборкаОстаток.КоличествоОстаток;
	КонецЦикла;
ОблОтчёт.Параметры.КолВыпРасч = КолОстаток;
#КонецОбласти
 
#Область ВремяТакта //Вычисление максимального и минимального времени такта на дату
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Линейка = &Линейка
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания МЕЖДУ &ДатаНач И &ДатаКон
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОкончания";	
Запрос.УстановитьПараметр("Линейка",Линейка);
Запрос.УстановитьПараметр("ДатаНач",НачалоДня(Отчет.НаДату));
Запрос.УстановитьПараметр("ДатаКон",КонецДня(Отчет.НаДату));
НомСтр = 0;
ВремяТакта = 0;
ДатаПред = Дата(1,1,1);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	НомСтр = НомСтр + 1;
		Если НомСтр = 1 Тогда
		ВремяТакта = 0;
		Иначе
		КолСекундВсего = Окр((КонецДня(ВыборкаДетальныеЗаписи.ДатаОкончания) - НачалоДня(ДатаПред))/86400,0,1);
		КолСекундРаб = (КалендарныеГрафики.ПолучитьРазностьДатПоКалендарю(Константы.ОсновнойПроизводственныйКалендарь.Получить(),ДатаПред,ВыборкаДетальныеЗаписи.ДатаОкончания));
		КолСекундПраздн = (КолСекундВсего - КолСекундРаб)*86400;
		ВремяТакта = (ВыборкаДетальныеЗаписи.ДатаОкончания - ДатаПред - КолСекундПраздн)/60;
		КонецЕсли;
	ДатаПред = ВыборкаДетальныеЗаписи.ДатаОкончания;				
	КонецЦикла; 
#КонецОбласти

ОблОтчёт.Параметры.ВремяРаботыРасч = Окр(ОблОтчёт.Параметры.КолВыпРасч*((ПаспортЛинейки.ВремяТактаМаксимальное+ПаспортЛинейки.ВремяТактаМинимальное)/2),0,1);
ВремяТактаФакт = Окр(?(КолВыпущено > 0,ВремяРаботыФакт/КолВыпущено,0),2,1);
ОблОтчёт.Параметры.ВремяТактаФакт = ВремяТактаФакт;	
ОблОтчёт.Параметры.ПроцентВТ = Окр(?(ПаспортЛинейки.ВремяТактаРасчётное > 0,ВремяТактаФакт/ПаспортЛинейки.ВремяТактаРасчётное*100,0),2,1);	
		//Если ПланРасч.ДолгГП > ПаспортЛинейки.ВыпускЗаДеньРасчётный Тогда
		//ПроцентВып = ?(ПаспортЛинейки.ВыпускЗаДеньРасчётный > 0,Окр(КолВыпущено/ПаспортЛинейки.ВыпускЗаДеньРасчётный*100,2,1),0);
		//Иначе
		//ПроцентВып = ?(ПланРасч.ДолгГП > 0,Окр(КолВыпущено/ПланРасч.ДолгГП*100,2,1),0);
		//КонецЕсли; 
//ОблОтчёт.Параметры.ПроцентВып = ПроцентВып;
	Если КолОтставание + КолЗагружено < ПаспортЛинейки.ВыпускЗаДеньРасчётный Тогда
	КолПлан = КолОтставание + КолЗагружено;
	Иначе
	КолПлан = ПаспортЛинейки.ВыпускЗаДеньРасчётный;
	КонецЕсли;
ОблОтчёт.Параметры.ПроцентВып = ?(КолПлан > 0,Окр(КолВыпущено/КолПлан*100,2,1),0);
СписокБрак = ПодсчётПроцентаБрака(Линейка,ПредшествующаяДата,Истина);
ОблОтчёт.Параметры.ПроцентБракаСредний = СписокБрак.БракИтого;
ОблОтчёт.Параметры.ПроцентБракаРМСредний = СписокБрак.БракРМ;
СписокБрак = ПодсчётПроцентаБрака(Линейка,Отчет.НаДату,Ложь);
ОблОтчёт.Параметры.ПроцентБрака = СписокБрак.БракИтого;
ОблОтчёт.Параметры.ПроцентБракаРМ = СписокБрак.БракРМ;
ТабДок.Вывести(ОблОтчёт);
ТабДок.Вывести(ОблШапка);
МинутВсего = 0;
ЧасовВсего = 0;
Отбор = Новый Структура("Линейка",Линейка);
ПростойЛинейки = РегистрыСведений.ПростойЛинейки.Выбрать(НачалоДня(Отчет.НаДату),КонецДня(Отчет.НаДату),Отбор);
	Пока ПростойЛинейки.Следующий() Цикл
	ОблПричина.Параметры.Начало = Формат(ПростойЛинейки.Период,"ДЛФ=T");
	ОблПричина.Параметры.Конец = Формат(ПростойЛинейки.Окончание,"ДЛФ=T");
	ОблПричина.Параметры.Причина = СокрЛП(ПростойЛинейки.Причина);
	ОблПричина.Параметры.Примечание = СокрЛП(ПростойЛинейки.Примечание);
	Минут = 0;
	Часов = 0;
		Если ЗначениеЗаполнено(ПростойЛинейки.Окончание) Тогда  		
		Минут = Окр((ПростойЛинейки.Окончание - ПростойЛинейки.Период)/60,0,1);
		Часов = Окр((ПростойЛинейки.Окончание - ПростойЛинейки.Период)/3600,2,1);	
		КонецЕсли;
	ОблПричина.Параметры.Минут = Окр(Минут,2,1);
	ОблПричина.Параметры.Часов = Окр(Часов,2,1);
	ТабДок.Вывести(ОблПричина);
	МинутВсего = МинутВсего + Минут;
	ЧасовВсего = ЧасовВсего + Часов;
	КонецЦикла;
ОблКонец.Параметры.МинутВсего = Окр(МинутВсего,0,1);
ОблКонец.Параметры.ЧасовВсего = Окр(ЧасовВсего,2,1);
ОблКонец.Параметры.Мастер = ПаспортЛинейки.Мастер;
ТабДок.Вывести(ОблКонец); 
КонецПроцедуры

&НаСервере
Процедура ОчиститьОтчёт()
ТабДок.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
ОчиститьОтчёт();
	Для каждого Строка Из СписокЛинеек Цикл
	СформироватьНаСервере(Строка.Значение);	
	КонецЦикла;
Элементы.ПочтоваяРассылка.Доступность = Истина; 
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Отчет.НаДату = ТекущаяДата();
КонецПроцедуры

&НаСервере
Функция ПолучитьEmailСотрудника()
Возврат(ПараметрыСеанса.Пользователь.Email);
КонецФункции

&НаСервере
Функция ПолучитьEmailПолучателя(Сотрудник)
Возврат(Сотрудник.Email);
КонецФункции

&НаКлиенте
Процедура ПочтоваяРассылка(Команда)
EmailСотрудника = ПолучитьEmailСотрудника();
Сообщение = Новый ИнтернетПочтовоеСообщение;
ИПП = Новый ИнтернетПочтовыйПрофиль; 

НастройкиПочты = ОбщийМодульВызовСервера.ПолучитьНастройкиПочты();
ИПП.АдресСервераSMTP = НастройкиПочты.АдресСервераSMTP; 
ИПП.ПортSMTP = НастройкиПочты.ПортSMTP;
ИПП.ВремяОжидания = 60; 
ИПП.Пароль = НастройкиПочты.ПарольПочтовогоСервера; 
ИПП.Пользователь = EmailСотрудника;
	Если СписокПочтовойРассылки.Количество() = 0 Тогда
	Сообщить("Нет списка почтовой рассылки!");
	Возврат;
	КонецЕсли;
Сообщение = Новый ИнтернетПочтовоеСообщение;
	 
	Для каждого Стр Из СписокПочтовойРассылки Цикл
    Сообщение.Получатели.Добавить(ПолучитьEmailПолучателя(Стр.Значение));
	КонецЦикла; 
Сообщение.Отправитель.Адрес = EmailСотрудника;
Сообщение.Тема = "Отчёт по работе линеек за день "+Отчет.НаДату; 
Текст = "Здравствуйте!";
Текст = Текст + Символы.ПС+ "";
Текст = Текст + Символы.ПС+ "В производственной базе сформирован Отчёт по работе линеек (см. прикрепленный файл)";	
Текст = Текст + Символы.ПС+ "";
Текст = Текст + Символы.ПС+ "С уважением, email: "+EmailСотрудника;
Сообщение.Тексты.Добавить(Текст);	
ИмяФайла = ПолучитьИмяВременногоФайла("xls");
ТабДок.Записать(ИмяФайла,ТипФайлаТабличногоДокумента.XLS);
Сообщение.Вложения.Добавить(ИмяФайла,"Отчёт по работе линеек");
// Подключиться и отправить. 
Почта = Новый ИнтернетПочта; 
Почта.Подключиться(ИПП);
Почта.Послать(Сообщение); 
Почта.Отключиться();
ПоказатьОповещениеПользователя("Сообщение отправлено!");
//УдалитьФайлы(ИмяФайла);	
КонецПроцедуры

&НаКлиенте
Процедура СписокПочтовойРассылкиПриИзменении(Элемент)
СписокПочтовойРассылкиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СписокПочтовойРассылкиПриИзмененииНаСервере()
ХранилищеОбщихНастроек.Сохранить("СписокРассылкиРаботаЛинеекЗаДень", "СписокПочтовойРассылки", СписокПочтовойРассылки);
КонецПроцедуры
