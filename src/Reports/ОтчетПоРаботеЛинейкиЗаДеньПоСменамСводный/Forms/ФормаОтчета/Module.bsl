
&НаСервере
Функция ПолучитьДолгЛинейки(Линейка)
Рез = Новый Структура("ДолгГП,Заказано",0,0);
 
ОтставаниеОтПланаПроизводства = РегистрыСведений.ОтставаниеОтПланаПроизводства.Получить(НачалоМесяца(Отчет.НаДату),Новый Структура("Линейка",Линейка));
КолОтставание = ОтставаниеОтПланаПроизводства.Количество;
ВыбДата = НачалоДня(НачалоМесяца(ДатаНач1));
	Пока ВыбДата <= НачалоДня(ДатаНач1) Цикл
	КолПриход = 0;
	Выборка = РегистрыСведений.ДанныеПроизводственногоКалендаря.Получить(Новый Структура("ПроизводственныйКалендарь,Дата,Год",Константы.ОсновнойПроизводственныйКалендарь.Получить(),ВыбДата,Год(ВыбДата))); 
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланыВыпускаОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход
		|ИЗ
		|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , ) КАК ПланыВыпускаОстаткиИОбороты
		|ГДЕ
		|	ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Линейка = &Линейка
		|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Ремонт = ЛОЖЬ
		|ИТОГИ
		|	СУММА(КоличествоПриход)
		|ПО
		|	ОБЩИЕ";	
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ВыбДата));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ВыбДата));
	Запрос.УстановитьПараметр("Линейка",Линейка);
	Результат = Запрос.Выполнить();
	ВыборкаИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаИтоги.Следующий() Цикл
		КолПриход = ВыборкаИтоги.КоличествоПриход;	
		КонецЦикла;	
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланыВыпускаОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход
		|ИЗ
		|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , ) КАК ПланыВыпускаОстаткиИОбороты
		|ГДЕ
		|	ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Линейка = &Линейка
		|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Ремонт = ЛОЖЬ
		|ИТОГИ
		|	СУММА(КоличествоРасход)
		|ПО
		|	ОБЩИЕ";  	
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ВыбДата));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ВыбДата));
	Запрос.УстановитьПараметр("Линейка",Линейка);
	КолРасход = 0;
	Результат = Запрос.Выполнить();
	ВыборкаИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаИтоги.Следующий() Цикл
		КолРасход = ВыборкаИтоги.КоличествоРасход;
		КонецЦикла; 
	КолДолг = КолОтставание + КолПриход;
	Рез.ДолгГП = КолОтставание;
	Рез.Заказано = КолПриход;
	КолОтставание = КолОтставание + КолПриход - КолРасход;
	ВыбДата = ВыбДата + 86400;
	КонецЦикла;
//Запрос.Текст = 
//	"ВЫБРАТЬ
//	|	ПланыВыпускаОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход
//	|ИЗ
//	|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , ) КАК ПланыВыпускаОстаткиИОбороты
//	|ГДЕ
//	|	ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Линейка = &Линейка
//	|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Ремонт = ЛОЖЬ
//	|ИТОГИ
//	|	СУММА(КоличествоРасход)
//	|ПО
//	|	ОБЩИЕ";  	
//Запрос.УстановитьПараметр("ДатаНач",ДатаНач2);
//Запрос.УстановитьПараметр("ДатаКон",ДатаКон2);
//Запрос.УстановитьПараметр("Линейка",Линейка);
//КолРасход = 0;
//Результат = Запрос.Выполнить();
//ВыборкаИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
//	Пока ВыборкаИтоги.Следующий() Цикл
//	КолРасход = ВыборкаИтоги.КоличествоРасход;
//	КонецЦикла;
//КолОтставание = КолОтставание - КолРасход;
Возврат(Рез);
КонецФункции

&НаСервере
Функция ПолучитьСписокПроектовПоВыпускам(Линейка)
СписокПроектов = Новый СписокЗначений;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта,
	|	ПланыВыпускаОстаткиИОбороты.КоличествоРасход
	|ИЗ
	|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , ) КАК ПланыВыпускаОстаткиИОбороты
	|ГДЕ
	|	ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Линейка = &Линейка
	|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Ремонт = ЛОЖЬ";	
Запрос.УстановитьПараметр("ДатаНач",НачалоДня(Отчет.НаДату));
Запрос.УстановитьПараметр("ДатаКон",КонецДня(Отчет.НаДату));
Запрос.УстановитьПараметр("Линейка",Линейка);
Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если СписокПроектов.НайтиПоЗначению(Выборка.МаршрутнаяКарта.Проект) = Неопределено Тогда
		СписокПроектов.Добавить(Выборка.МаршрутнаяКарта.Проект);
		КонецЕсли;	
	КонецЦикла;
Проекты = "";
	Для каждого Стр Из СписокПроектов Цикл
	Проекты = Проекты + СокрЛП(Стр.Значение.Наименование) + " (" + Стр.Значение.Код + ")" + "; ";	
	КонецЦикла; 
Возврат(Проекты);
КонецФункции

&НаСервере
Процедура СформироватьНаСервере(Линейка)
	Если Линейка.Проектная Тогда	
	Проекты = ПолучитьСписокПроектовПоВыпускам(Линейка);
	Иначе
	Проекты = "";
	КонецЕсли; 

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблОтчёт = Макет.ПолучитьОбласть("Отчёт");
ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблПричина = Макет.ПолучитьОбласть("Причина");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблОтчёт.Параметры.Линейка = Линейка;
ОблОтчёт.Параметры.ЛинейкаКомментарий = Линейка.Комментарий;
ОблОтчёт.Параметры.НаДату = Отчет.НаДату;
ОблОтчёт.Параметры.Проекты = Проекты;

#Область СохраненныеПараметрыЛинейки //Паспорт, Простои, Оставание на начало месяца
Отбор = Новый Структура("Линейка",Линейка);
ПаспортЛинейки = РегистрыСведений.ПаспортЛинейки.ПолучитьПоследнее(НачалоДня(ДатаНач1),Отбор);
ОтставаниеОтПланаПроизводства = РегистрыСведений.ОтставаниеОтПланаПроизводства.Получить(НачалоМесяца(ДатаНач1),Отбор);
ОблОтчёт.Параметры.ВремяТактаРасч = Формат(ПаспортЛинейки.ВремяТактаРасчётное,"ЧЦ=5; ЧДЦ=2");
ОблОтчёт.Параметры.ВремяТактаМин = Формат(ПаспортЛинейки.ВремяТактаМинимальное,"ЧЦ=5; ЧДЦ=2");
ОблОтчёт.Параметры.ВремяТактаМакс = Формат(ПаспортЛинейки.ВремяТактаМаксимальное,"ЧЦ=5; ЧДЦ=2");
ОблОтчёт.Параметры.ВыпускЗаДеньРасчётный = ПаспортЛинейки.ВыпускЗаДеньРасчётный;
ОблОтчёт.Параметры.Смена = ПаспортЛинейки.Смена;
Смена = (ДатаКон1 - ДатаНач1)/60-Перерыв1; 
Выборка = РегистрыСведений.ПростойЛинейки.Выбрать(ДатаНач1,ДатаКон1,Отбор); 
ВремяПростоя = 0;
	Пока Выборка.Следующий() Цикл
	ВремяПростоя =  ВремяПростоя + (Выборка.Окончание - Выборка.Период)/60;
	КонецЦикла;
ВремяРаботыФакт1 = ?(Смена - ВремяПростоя > 0,Смена - ВремяПростоя,0);
ОблОтчёт.Параметры.ВремяРаботыФакт1 = Формат(ВремяРаботыФакт1,"ЧДЦ=2");
Смена = (ДатаКон2 - ДатаНач2)/60-Перерыв2; 
Выборка = РегистрыСведений.ПростойЛинейки.Выбрать(ДатаНач2,ДатаКон2,Отбор); 
ВремяПростоя = 0;
	Пока Выборка.Следующий() Цикл
	ВремяПростоя =  ВремяПростоя + (Выборка.Окончание - Выборка.Период)/60;
	КонецЦикла;
ВремяРаботыФакт2 = ?(Смена - ВремяПростоя > 0,Смена - ВремяПростоя,0);
ОблОтчёт.Параметры.ВремяРаботыФакт2 = Формат(ВремяРаботыФакт2,"ЧДЦ=2");
ОблОтчёт.Параметры.ВремяРаботыФакт = Формат(ВремяРаботыФакт1 + ВремяРаботыФакт2,"ЧДЦ=2");
КолОтставание = ОтставаниеОтПланаПроизводства.Количество;
#КонецОбласти

#Область ВычислениеОтставания //Вычисление отставания на текущую дату
ПредшествующаяДата = НачалоДня(ДатаНач1) - 86400;
МассивДат = Новый Массив;

МассивДат.Добавить(ПредшествующаяДата);
БлижайшиеРабДаты = КалендарныеГрафики.ПолучитьДатыРабочихДней(Константы.ОсновнойПроизводственныйКалендарь.Получить(),МассивДат,Истина);
ПредшествующаяДата = БлижайшиеРабДаты.Получить(ПредшествующаяДата);
	Если ПредшествующаяДата >= НачалоМесяца(ДатаНач1) Тогда
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланыВыпускаОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход
		|ИЗ
		|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , ) КАК ПланыВыпускаОстаткиИОбороты
		|ГДЕ
		|	ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Линейка = &Линейка
		|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Ремонт = ЛОЖЬ
		|ИТОГИ
		|	СУММА(КоличествоПриход)
		|ПО
		|	ОБЩИЕ";	
	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(ДатаНач1));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ПредшествующаяДата));
	Запрос.УстановитьПараметр("Линейка",Линейка);
	Результат = Запрос.Выполнить();
	КолЗагруженоВсего = 0;
	ВыборкаИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаИтоги.Следующий() Цикл
		КолЗагруженоВсего = ВыборкаИтоги.КоличествоПриход;	
		КонецЦикла;

	ЗапросВыпуск = Новый Запрос;

	ЗапросВыпуск.Текст = 
		"ВЫБРАТЬ
		|	ПланыВыпускаОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход
		|ИЗ
		|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , ) КАК ПланыВыпускаОстаткиИОбороты
		|ГДЕ
		|	(ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|				И ПланыВыпускаОстаткиИОбороты.КоличествоРасход > 0
		|			ИЛИ ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Дата < &ДатаНач)
		|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Линейка = &Линейка
		|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Ремонт = ЛОЖЬ
		|ИТОГИ
		|	СУММА(КоличествоРасход)
		|ПО
		|	ОБЩИЕ";	
	ЗапросВыпуск.УстановитьПараметр("Линейка",Линейка);
	ЗапросВыпуск.УстановитьПараметр("ДатаНач",НачалоМесяца(ДатаНач1));
	ЗапросВыпуск.УстановитьПараметр("ДатаКон",КонецДня(ПредшествующаяДата));
	РезультатВыпуск = ЗапросВыпуск.Выполнить();
	КолВыпущеноВсего = 0;
	ВыборкаВыпуск = РезультатВыпуск.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаВыпуск.Следующий() Цикл
		КолВыпущеноВсего = ВыборкаВыпуск.КоличествоРасход;
		КонецЦикла;
	КолОтставание = КолОтставание + КолЗагруженоВсего - КолВыпущеноВсего;	
	КонецЕсли;
#КонецОбласти

#Область ПланПЭО //Вычисление плана ПЭО на текущую дату
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланыВыпускаОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход
	|ИЗ
	|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , ) КАК ПланыВыпускаОстаткиИОбороты
	|ГДЕ
	|	ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Линейка = &Линейка
	|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Ремонт = ЛОЖЬ
	|ИТОГИ
	|	СУММА(КоличествоПриход)
	|ПО
	|	ОБЩИЕ";	
Запрос.УстановитьПараметр("ДатаНач",ДатаНач1);
Запрос.УстановитьПараметр("ДатаКон",ДатаКон1);
Запрос.УстановитьПараметр("Линейка",Линейка);
Результат = Запрос.Выполнить();
КолЗагружено = 0;
ВыборкаИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИтоги.Следующий() Цикл
	КолЗагружено = ВыборкаИтоги.КоличествоПриход;	
	КонецЦикла;
#КонецОбласти

#Область Выпущено //Вычисление выпуска на текущую дату
ЗапросВыпуск = Новый Запрос;

ЗапросВыпуск.Текст = 
	"ВЫБРАТЬ
	|	ПланыВыпускаОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход
	|ИЗ
	|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , ) КАК ПланыВыпускаОстаткиИОбороты
	|ГДЕ
	|	ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Линейка = &Линейка
	|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Ремонт = ЛОЖЬ
	|ИТОГИ
	|	СУММА(КоличествоРасход)
	|ПО
	|	ОБЩИЕ";	
ЗапросВыпуск.УстановитьПараметр("Линейка",Линейка);
ЗапросВыпуск.УстановитьПараметр("ДатаНач",ДатаНач1);
ЗапросВыпуск.УстановитьПараметр("ДатаКон",ДатаКон1);
РезультатВыпуск = ЗапросВыпуск.Выполнить();
КолВыпущено1 = 0;
ВыборкаВыпуск = РезультатВыпуск.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаВыпуск.Следующий() Цикл
	КолВыпущено1 = ВыборкаВыпуск.КоличествоРасход;
	КонецЦикла;
ОблОтчёт.Параметры.КолВыпФакт1 = КолВыпущено1;
ЗапросВыпуск.УстановитьПараметр("ДатаНач",ДатаНач2);
ЗапросВыпуск.УстановитьПараметр("ДатаКон",ДатаКон2);
РезультатВыпуск = ЗапросВыпуск.Выполнить();
КолВыпущено2 = 0;
ВыборкаВыпуск = РезультатВыпуск.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаВыпуск.Следующий() Цикл
	КолВыпущено2 = ВыборкаВыпуск.КоличествоРасход;
	КонецЦикла;
ОблОтчёт.Параметры.КолВыпФакт2 = КолВыпущено2;
КолВыпущено = КолВыпущено1 + КолВыпущено2;
ОблОтчёт.Параметры.КолВыпФакт = КолВыпущено;
#КонецОбласти

ПланРасч = ПолучитьДолгЛинейки(Линейка);
ЗапросВыпуск.УстановитьПараметр("ДатаНач",ДатаНач1);
ЗапросВыпуск.УстановитьПараметр("ДатаКон",ДатаКон2);
РезультатВыпуск = ЗапросВыпуск.Выполнить();
КолВыпущеноЗаДень = 0;
ВыборкаВыпуск = РезультатВыпуск.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаВыпуск.Следующий() Цикл
	КолВыпущеноЗаДень = ВыборкаВыпуск.КоличествоРасход;
	КонецЦикла;
ОблОтчёт.Параметры.КолВыпРасч = ПланРасч.ДолгГП+ПланРасч.Заказано-КолВыпущеноЗаДень;
ОблОтчёт.Параметры.ВремяРаботыРасч = Окр(ОблОтчёт.Параметры.КолВыпРасч*((ПаспортЛинейки.ВремяТактаМаксимальное+ПаспортЛинейки.ВремяТактаМинимальное)/2),0,1);
ВремяТактаФакт1 = Окр(?(КолВыпущено1 > 0,ВремяРаботыФакт1/КолВыпущено1,0),2,1);
ОблОтчёт.Параметры.ВремяТактаФакт1 = ВремяТактаФакт1;
ВремяТактаФакт2 = Окр(?(КолВыпущено2 > 0,ВремяРаботыФакт2/КолВыпущено2,0),2,1);
ОблОтчёт.Параметры.ВремяТактаФакт2 = ВремяТактаФакт2;
ВремяТактаФакт = Окр(?(КолВыпущено > 0,ОблОтчёт.Параметры.ВремяРаботыФакт/КолВыпущено,0),2,1);
ОблОтчёт.Параметры.ВремяТактаФакт = ВремяТактаФакт;	
ОблОтчёт.Параметры.ПроцентВТ = Окр(?(ПаспортЛинейки.ВремяТактаРасчётное > 0,ВремяТактаФакт/ПаспортЛинейки.ВремяТактаРасчётное*100,0),2,1);
	Если КолОтставание + КолЗагружено < ПаспортЛинейки.ВыпускЗаДеньРасчётный Тогда
	КолПлан = КолОтставание + КолЗагружено;
	Иначе
	КолПлан = ПаспортЛинейки.ВыпускЗаДеньРасчётный;
	КонецЕсли;
ОблОтчёт.Параметры.ПроцентВып = ?(КолПлан > 0,Окр(КолВыпущено/КолПлан*100,2,1),0);
ТабДок.Вывести(ОблОтчёт);
ТабДок.Вывести(ОблШапка);
МинутВсего = 0;
ЧасовВсего = 0;
Отбор = Новый Структура("Линейка",Линейка);
Выборка = РегистрыСведений.ПростойЛинейки.Выбрать(ДатаНач1,ДатаКон1,Отбор);
	Пока Выборка.Следующий() Цикл
	ОблПричина.Параметры.Начало = Формат(Выборка.Период,"ДЛФ=T");
	ОблПричина.Параметры.Конец = Формат(Выборка.Окончание,"ДЛФ=T");
	ОблПричина.Параметры.Причина = СокрЛП(Выборка.Причина);
	ОблПричина.Параметры.Примечание = СокрЛП(Выборка.Примечание);
	Минут = 0;
	Часов = 0;
		Если ЗначениеЗаполнено(Выборка.Окончание) Тогда  		
		Минут = Окр((Выборка.Окончание - Выборка.Период)/60,0,1);
		Часов = Окр((Выборка.Окончание - Выборка.Период)/3600,2,1);	
		КонецЕсли;
	ОблПричина.Параметры.Минут = Окр(Минут,2,1);
	ОблПричина.Параметры.Часов = Окр(Часов,2,1);
	ОблПричина.Параметры.Смена = "1-я смена";
	ТабДок.Вывести(ОблПричина);
	МинутВсего = МинутВсего + Минут;
	ЧасовВсего = ЧасовВсего + Часов;
	КонецЦикла;
Выборка = РегистрыСведений.ПростойЛинейки.Выбрать(ДатаНач2,ДатаКон2,Отбор);
	Пока Выборка.Следующий() Цикл
	ОблПричина.Параметры.Начало = Формат(Выборка.Период,"ДЛФ=T");
	ОблПричина.Параметры.Конец = Формат(Выборка.Окончание,"ДЛФ=T");
	ОблПричина.Параметры.Причина = СокрЛП(Выборка.Причина);
	ОблПричина.Параметры.Примечание = СокрЛП(Выборка.Примечание);
	Минут = 0;
	Часов = 0;
		Если ЗначениеЗаполнено(Выборка.Окончание) Тогда  		
		Минут = Окр((Выборка.Окончание - Выборка.Период)/60,0,1);
		Часов = Окр((Выборка.Окончание - Выборка.Период)/3600,2,1);	
		КонецЕсли;
	ОблПричина.Параметры.Минут = Окр(Минут,2,1);
	ОблПричина.Параметры.Часов = Окр(Часов,2,1);
	ОблПричина.Параметры.Смена = "2-я смена";
	ТабДок.Вывести(ОблПричина);
	МинутВсего = МинутВсего + Минут;
	ЧасовВсего = ЧасовВсего + Часов;
	КонецЦикла;
ОблКонец.Параметры.МинутВсего = Окр(МинутВсего,0,1);
ОблКонец.Параметры.ЧасовВсего = Окр(ЧасовВсего,2,1);
ОблКонец.Параметры.Мастер = ПаспортЛинейки.Мастер;
ТабДок.Вывести(ОблКонец); 
КонецПроцедуры

&НаСервере
Процедура ОчиститьОтчёт()
ТабДок.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
ОчиститьОтчёт();
	Для каждого Строка Из СписокЛинеек Цикл
	СформироватьНаСервере(Строка.Значение);	
	КонецЦикла;
Элементы.ПочтоваяРассылка.Доступность = Истина; 
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Отчет.НаДату = ТекущаяДата();
КонецПроцедуры

&НаСервере
Функция ПолучитьEmailСотрудника()
Возврат(ПараметрыСеанса.Пользователь.Email);
КонецФункции

&НаСервере
Функция ПолучитьEmailПолучателя(Сотрудник)
Возврат(Сотрудник.Email);
КонецФункции

&НаКлиенте
Процедура ПочтоваяРассылка(Команда)
EmailСотрудника = ПолучитьEmailСотрудника();
Сообщение = Новый ИнтернетПочтовоеСообщение;
ИПП = Новый ИнтернетПочтовыйПрофиль; 

НастройкиПочты = ОбщийМодульВызовСервера.ПолучитьНастройкиПочты();
ИПП.АдресСервераSMTP = НастройкиПочты.АдресСервераSMTP; 
ИПП.ПортSMTP = НастройкиПочты.ПортSMTP;
ИПП.ВремяОжидания = 60; 
ИПП.Пароль = НастройкиПочты.ПарольПочтовогоСервера; 
ИПП.Пользователь = EmailСотрудника;
	Если СписокПочтовойРассылки.Количество() = 0 Тогда
	Сообщить("Нет списка почтовой рассылки!");
	Возврат;
	КонецЕсли;
Сообщение = Новый ИнтернетПочтовоеСообщение;
	 
	Для каждого Стр Из СписокПочтовойРассылки Цикл
    Сообщение.Получатели.Добавить(ПолучитьEmailПолучателя(Стр.Значение));
	КонецЦикла; 
Сообщение.Отправитель.Адрес = EmailСотрудника;
Сообщение.Тема = "Отчёт по работе линеек за день "+Отчет.НаДату; 
Текст = "Здравствуйте!";
Текст = Текст + Символы.ПС+ "";
Текст = Текст + Символы.ПС+ "В производственной базе сформирован Отчёт по работе линеек (см. прикрепленный файл)";	
Текст = Текст + Символы.ПС+ "";
Текст = Текст + Символы.ПС+ "С уважением, email: "+EmailСотрудника;
Сообщение.Тексты.Добавить(Текст);	
ИмяФайла = ПолучитьИмяВременногоФайла("xls");
ТабДок.Записать(ИмяФайла,ТипФайлаТабличногоДокумента.XLS);
Сообщение.Вложения.Добавить(ИмяФайла,"Отчёт по работе линеек");
// Подключиться и отправить. 
Почта = Новый ИнтернетПочта; 
Почта.Подключиться(ИПП);
Почта.Послать(Сообщение); 
Почта.Отключиться();
ПоказатьОповещениеПользователя("Сообщение отправлено!");
//УдалитьФайлы(ИмяФайла);	
КонецПроцедуры

&НаКлиенте
Процедура СписокПочтовойРассылкиПриИзменении(Элемент)
СписокПочтовойРассылкиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СписокПочтовойРассылкиПриИзмененииНаСервере()
ХранилищеОбщихНастроек.Сохранить("СписокРассылкиРаботаЛинеекЗаДень", "СписокПочтовойРассылки", СписокПочтовойРассылки);
КонецПроцедуры
