
&НаСервере
Процедура ДобавитьНоменклатуру(НаименованиеТовара)
Товар = Справочники.Товары.НайтиПоНаименованию(НаименованиеТовара,Истина);
	Если Не Товар.Пустая() Тогда
		Если Не Товар.ЭтоГруппа Тогда
		СписокТоваров.Добавить(Товар);
		КонецЕсли; 
	Иначе
	Сообщить(НаименованиеТовара +" - товар не найден!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
СписокТоваров.Очистить();
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл c товарами");
	Если Результат <> Неопределено Тогда
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок;
	    Для к = 2 по КолСтрок Цикл
		Состояние("Обработка...",к*100/КолСтрок,"Загрузка товаров из файла..."); 
		ДобавитьНоменклатуру(СокрЛП(ExcelЛист.Cells(к,1).Value));
	    КонецЦикла;
	Результат.Excel.Quit();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура РаскрытьНаМПЗ(ЭтапСпецификации,Товар)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходов.Ссылка КАК Ссылка,
	|	НормыРасходов.ВидЭлемента КАК ВидЭлемента,
	|	НормыРасходов.Элемент КАК Элемент,
	|	НормыРасходовСрезПоследних.Норма КАК Норма
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(&НаДату, ) КАК НормыРасходовСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НормыРасходов КАК НормыРасходов
	|		ПО НормыРасходовСрезПоследних.НормаРасходов = НормыРасходов.Ссылка
	|ГДЕ
	|	НормыРасходов.Владелец = &Владелец
	|	И (ТИПЗНАЧЕНИЯ(НормыРасходов.Элемент) = ТИП(Справочник.Номенклатура)
	|			ИЛИ ТИПЗНАЧЕНИЯ(НормыРасходов.Элемент) = ТИП(Справочник.Материалы))
	|	И НормыРасходов.ПометкаУдаления = ЛОЖЬ
	|	И НормыРасходовСрезПоследних.Норма > 0";
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
		флПринадлежит = Ложь;
			Для каждого ГруппаМПЗ Из СписокМатериалов Цикл
				Если ВыборкаНР.Элемент.ПринадлежитЭлементу(ГруппаМПЗ.Значение) Тогда	
				флПринадлежит = Истина;
				КонецЕсли;					
			КонецЦикла;	
				Если  флПринадлежит Тогда
				Выборка = ТаблицаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаНР.Элемент));
					Если Выборка.Количество() = 0 Тогда
					ТЧ = ТаблицаМПЗ.Добавить();
					ТЧ.ГруппаМПЗ = ПолучитьВерхнегоРодителя(ВыборкаНР.Элемент);
					ТЧ.МПЗ = ВыборкаНР.Элемент;
					ТЧ_Н = ТЧ.ТаблицаНоменклатуры.Добавить();
					ТЧ_Н.Товар = Товар;
					Иначе	
						Если Выборка[0].ТаблицаНоменклатуры.НайтиСтроки(Новый Структура("Товар",Товар)).Количество() = 0 Тогда
						ТЧ_Н = Выборка[0].ТаблицаНоменклатуры.Добавить();
						ТЧ_Н.Товар = Товар;
						КонецЕсли; 
					КонецЕсли;						
				КонецЕсли; 	
		ТаблицаАналогов = ОбщегоНазначенияПовтИсп.ПолучитьАналогиНормРасходов(ВыборкаНР.Ссылка,ТекущаяДата(),Истина);
			Для каждого ТЧ_ТА Из ТаблицаАналогов Цикл
			флПринадлежит = Ложь;
				Для каждого ГруппаМПЗ Из СписокМатериалов Цикл
					Если ТЧ_ТА.Элемент.ПринадлежитЭлементу(ГруппаМПЗ.Значение) Тогда	
					флПринадлежит = Истина;
					КонецЕсли;					
				КонецЦикла;	
					Если флПринадлежит Тогда
					Выборка = ТаблицаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ТЧ_ТА.Элемент));
						Если Выборка.Количество() = 0 Тогда
						ТЧ = ТаблицаМПЗ.Добавить();
						ТЧ.ГруппаМПЗ = ПолучитьВерхнегоРодителя(ТЧ_ТА.Элемент);
						ТЧ.МПЗ = ТЧ_ТА.Элемент;
						ТЧ_Н = ТЧ.ТаблицаНоменклатуры.Добавить();
						ТЧ_Н.Товар = Товар;
						Иначе	
							Если Выборка[0].ТаблицаНоменклатуры.НайтиСтроки(Новый Структура("Товар",Товар)).Количество() = 0 Тогда
							ТЧ_Н = Выборка[0].ТаблицаНоменклатуры.Добавить();
							ТЧ_Н.Товар = Товар;
							КонецЕсли; 
						КонецЕсли;						
					КонецЕсли;
			КонецЦикла;  					
		Иначе				
		РаскрытьНаМПЗ(ВыборкаНР.Элемент,Товар);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
ТаблицаМПЗ.Очистить();
ТабДок.Очистить();

Запрос = Новый Запрос;

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");
ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблСтрока = Макет.ПолучитьОбласть("Строка");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.НаДату = ТекущаяДата();
ТабДок.Вывести(ОблШапка);

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка,
	|	СтатусыМПЗСрезПоследних.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.СтатусыМПЗ.СрезПоследних КАК СтатусыМПЗСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО СтатусыМПЗСрезПоследних.МПЗ = Номенклатура.Ссылка
	|ГДЕ
	|	Номенклатура.Товар В ИЕРАРХИИ(&СписокТоваров)
	|	И СтатусыМПЗСрезПоследних.Статус <> &Статус
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура.Товар.Наименование";
Запрос.УстановитьПараметр("СписокТоваров",СписокТоваров);
Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыСпецификаций.Запрещённая); 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаНоменклатура = РезультатЗапроса.Выбрать();
	Пока ВыборкаНоменклатура.Следующий() Цикл
	РаскрытьНаМПЗ(ВыборкаНоменклатура.Ссылка,ВыборкаНоменклатура.Ссылка.Товар);
	КонецЦикла;
ТаблицаМПЗ.Сортировать("ГруппаМПЗ,МПЗ");
	Для каждого ТЧ Из ТаблицаМПЗ Цикл
	ОблСтрока.Параметры.НаименованиеМПЗ = СокрЛП(ТЧ.МПЗ.Наименование);
	ОблСтрока.Параметры.МПЗ = ТЧ.МПЗ;
	ОблСтрока.Параметры.Статус = ПолучитьСтатус(ТЧ.МПЗ);
	ОблСтрока.Параметры.Группа = ТЧ.ГруппаМПЗ;
	ОблСтрока.Параметры.ГруппаПоЗакупкам = ТЧ.МПЗ.ГруппаПоЗакупкам;
	ОблСтрока.Параметры.Производитель = ТЧ.МПЗ.Производитель;	
	ОблСтрока.Параметры.Цена = ОбщийМодульВызовСервера.ПолучитьСтоимостьМПЗ(ТЧ.МПЗ,1,ТекущаяДата());
	Товары = "";	
		Для каждого ТЧ_Н Из ТЧ.ТаблицаНоменклатуры Цикл
		Товары = Товары + ТЧ_Н.Товар + "; ";	
		КонецЦикла;
	ОблСтрока.Параметры.Товары = Товары;
	ТабДок.Вывести(ОблСтрока);
	КонецЦикла;
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 2;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	СформироватьНаСервере();
	КонецЕсли;
КонецПроцедуры
