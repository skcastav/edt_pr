
&НаСервере
Процедура ПолучитьАналоги(МПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	АналогиНормРасходов.Ссылка КАК Ссылка,
	|	АналогиНормРасходов.Элемент КАК Элемент
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(&НаДату, ) КАК НормыРасходовСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АналогиНормРасходов КАК АналогиНормРасходов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыМПЗ.СрезПоследних(&НаДату, ) КАК СтатусыМПЗСрезПоследних
	|			ПО (СтатусыМПЗСрезПоследних.МПЗ = АналогиНормРасходов.Владелец.Владелец)
	|		ПО НормыРасходовСрезПоследних.НормаРасходов = АналогиНормРасходов.Владелец
	|ГДЕ
	|	АналогиНормРасходов.Владелец.Элемент = &Элемент
	|	И НормыРасходовСрезПоследних.Норма > 0
	|	И СтатусыМПЗСрезПоследних.Статус <> &Статус";
Запрос.УстановитьПараметр("Элемент", МПЗ);
Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыСпецификаций.Запрещённая);
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	НормыАНР = ОбщегоНазначенияПовтИсп.АналогиНормРасходов_ПолучитьПоследнее(ВыборкаДетальныеЗаписи.Ссылка,ТекущаяДата());
		Если НормыАНР.Норма > 0 Тогда
			Если ТипЗнч(ВыборкаДетальныеЗаписи.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
				Если ТаблицаАналогов.НайтиСтроки(Новый Структура("МПЗ,Аналог",МПЗ,ВыборкаДетальныеЗаписи.Элемент)).Количество() = 0 Тогда	
				ТЧ = ТаблицаАналогов.Добавить();
				ТЧ.МПЗ = МПЗ;
				ТЧ.Аналог = ВыборкаДетальныеЗаписи.Элемент;					
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
		Для каждого ТЧ Из МПЗ.Аналоги Цикл
			Если ТаблицаАналогов.НайтиСтроки(Новый Структура("МПЗ,Аналог",МПЗ,ТЧ.Аналог)).Количество() = 0 Тогда	
			ТЧ_ТАМ = ТаблицаАналогов.Добавить();
			ТЧ_ТАМ.МПЗ = МПЗ;
			ТЧ_ТАМ.Аналог = ТЧ.Аналог;					
			КонецЕсли;
		КонецЦикла;
КонецПроцедуры 

&НаСервере
Функция ЭтоАналог(МПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	АналогиНормРасходов.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.АналогиНормРасходов.СрезПоследних КАК АналогиНормРасходовСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АналогиНормРасходов КАК АналогиНормРасходов
	|		ПО АналогиНормРасходовСрезПоследних.АналогНормыРасходов = АналогиНормРасходов.Ссылка
	|ГДЕ
	|	АналогиНормРасходов.Элемент = &Элемент
	|	И АналогиНормРасходовСрезПоследних.Норма > 0";
Запрос.УстановитьПараметр("Элемент", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
Возврат(Не РезультатЗапроса.Пустой());	
КонецФункции

&НаСервере
Функция ЭтоОсновной(МПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НормыРасходов.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних КАК НормыРасходовСрезПоследних
	|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.НормыРасходов КАК НормыРасходов
	|		ПО НормыРасходовСрезПоследних.НормаРасходов = НормыРасходов.Ссылка
	|ГДЕ
	|	НормыРасходов.Элемент = &Элемент
	|	И НормыРасходовСрезПоследних.Норма > 0";
Запрос.УстановитьПараметр("Элемент", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
Возврат(Не РезультатЗапроса.Пустой());	
КонецФункции

&НаСервере
Процедура СоздатьСписокМПЗ()
СписокМПЗ.Очистить();
ТаблицаАналогов.Очистить();
	Для каждого ГруппаМПЗ Из СписокГруппМПЗ Цикл
		Если ГруппаМПЗ.Значение.ЭтоГруппа Тогда
		Выборка = Справочники.Материалы.ВыбратьИерархически(ГруппаМПЗ.Значение);
			Пока Выборка.Следующий() Цикл	
				Если Не Выборка.ЭтоГруппа Тогда
					Если Не Выборка.ПометкаУдаления Тогда
						Если ЭтоАналог(Выборка.Ссылка) Тогда
							Если Не ЭтоОсновной(Выборка.Ссылка) Тогда
							Продолжить;
							КонецЕсли;
						КонецЕсли;
					СписокМПЗ.Добавить(Выборка.Ссылка);
					ПолучитьАналоги(Выборка.Ссылка);
					КонецЕсли;
				КонецЕсли; 
			КонецЦикла;		
		Иначе	
		СписокМПЗ.Добавить(ГруппаМПЗ.Значение);
		ПолучитьАналоги(ГруппаМПЗ.Значение);		
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьКолЗаказовАналогов(МПЗ,Период,ВыборкаМПЗ)
КолЗаказов = 0;
Выборка = ТаблицаАналогов.НайтиСтроки(Новый Структура("МПЗ",МПЗ));
	Если Выборка.Количество() > 0 Тогда
		Для к = 0 По Выборка.ВГраница() Цикл
		ВыборкаМПЗ.Сбросить();
			Если ВыборкаМПЗ.НайтиСледующий(Новый Структура("МПЗ",Выборка[к].Аналог)) Тогда
			ВыборкаПериод = ВыборкаМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПериод.НайтиСледующий(Новый Структура("Период",Период)) Цикл
				ВыборкаДетальныеЗаписи = ВыборкаПериод.Выбрать();
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					КолЗаказов = КолЗаказов + 1;
					КонецЦикла;				
				КонецЦикла; 	
			КонецЕсли;			
		КонецЦикла;
	КонецЕсли;
Возврат(КолЗаказов);   
КонецФункции 

&НаСервере
Функция ПолучитьКолОстатокАналогов(МПЗ,Период,ВыборкаМПЗ_МХ_Остаток)
Результат = Новый Структура("КолНО,КолКО",0,0);

Выборка = ТаблицаАналогов.НайтиСтроки(Новый Структура("МПЗ",МПЗ));
	Если Выборка.Количество() > 0 Тогда
		Для к = 0 По Выборка.ВГраница() Цикл
		ВыборкаМПЗ_МХ_Остаток.Сбросить();
			Если ВыборкаМПЗ_МХ_Остаток.НайтиСледующий(Новый Структура("МПЗ",МПЗ)) Тогда
			ВыборкаПериод = ВыборкаМПЗ_МХ_Остаток.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПериод.НайтиСледующий(Новый Структура("Период",Период)) Цикл
				ВыборкаДетальныеЗаписи = ВыборкаПериод.Выбрать();
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Результат.КолНО = Результат.КолНО + ВыборкаДетальныеЗаписи.КоличествоНачальныйОстаток;
					Результат.КолКО = Результат.КолКО + ВыборкаДетальныеЗаписи.КоличествоКонечныйОстаток;					
					КонецЦикла;				
				КонецЦикла; 	
			КонецЕсли;			
		КонецЦикла;
	КонецЕсли;
Возврат(Результат);   
КонецФункции

&НаСервере
Функция ПолучитьКолРасходАналогов(МПЗ,Период,ВыборкаМПЗ_МХ_Расход)
КолРасход = 0;
Выборка = ТаблицаАналогов.НайтиСтроки(Новый Структура("МПЗ",МПЗ));
	Если Выборка.Количество() > 0 Тогда
		Для к = 0 По Выборка.ВГраница() Цикл
		ВыборкаМПЗ_МХ_Расход.Сбросить();
			Если ВыборкаМПЗ_МХ_Расход.НайтиСледующий(Новый Структура("МПЗ",МПЗ)) Тогда
			ВыборкаПериод = ВыборкаМПЗ_МХ_Расход.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПериод.НайтиСледующий(Новый Структура("Период",Период)) Цикл
				ВыборкаДетальныеЗаписи = ВыборкаПериод.Выбрать();
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					КолРасход = КолРасход + ВыборкаДетальныеЗаписи.КоличествоРасход;					
					КонецЦикла;				
				КонецЦикла; 	
			КонецЕсли;			
		КонецЦикла;
	КонецЕсли;
Возврат(КолРасход);   
КонецФункции

&НаСервере
Процедура ВывестиАналоги(МПЗ)
ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");
ОблАналогОбщая = Макет.ПолучитьОбласть("Аналог|Общая");

Выборка = ТаблицаАналогов.НайтиСтроки(Новый Структура("МПЗ",МПЗ));
	Если Выборка.Количество() > 0 Тогда
	ТабДок.НачатьГруппуСтрок("Аналог",Ложь);
		Для к = 0 По Выборка.ВГраница() Цикл
		ОблАналогОбщая.Параметры.Статус = ПолучитьСтатус(Выборка[к].Аналог);
		ОблАналогОбщая.Параметры.ГруппаПоЗакупкам = Выборка[к].Аналог.ГруппаПоЗакупкам;
		ОблАналогОбщая.Параметры.Наименование = СокрЛП(Выборка[к].Аналог.Наименование);
		ОблАналогОбщая.Параметры.МПЗ = Выборка[к].Аналог;
		ОблАналогОбщая.Параметры.ЕдиницаИзмерения = СокрЛП(Выборка[к].Аналог.ЕдиницаИзмерения.Наименование);
		ТабДок.Вывести(ОблАналогОбщая);			
		КонецЦикла;
	ТабДок.ЗакончитьГруппуСтрок();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();

СписокПериодов = Новый СписокЗначений;
Запрос = Новый Запрос;
ТаблицаЧастот = Новый ТаблицаЗначений;
ТаблицаНО = Новый ТаблицаЗначений;
ТаблицаКО = Новый ТаблицаЗначений;
ТаблицаРасход = Новый ТаблицаЗначений;

ТаблицаЧастот.Колонки.Добавить("ГруппаМПЗ");
ТаблицаНО.Колонки.Добавить("ГруппаМПЗ");
ТаблицаКО.Колонки.Добавить("ГруппаМПЗ");
ТаблицаРасход.Колонки.Добавить("ГруппаМПЗ");

	Если ВидОтчёта = 1 Тогда
	ТекДата = Отчет.Период.ДатаНачала;
		Пока ТекДата <= Отчет.Период.ДатаОкончания Цикл
			Если ДеньНедели(ТекДата) = 1 Тогда
			СписокПериодов.Добавить(ТекДата);
			ТаблицаЧастот.Колонки.Добавить("Ч"+Строка(СписокПериодов.Количество()-1),Новый ОписаниеТипов("Число"));
			ТаблицаНО.Колонки.Добавить("НО"+Строка(СписокПериодов.Количество()-1),Новый ОписаниеТипов("Число"));
			ТаблицаКО.Колонки.Добавить("КО"+Строка(СписокПериодов.Количество()-1),Новый ОписаниеТипов("Число"));
			ТаблицаРасход.Колонки.Добавить("Р"+Строка(СписокПериодов.Количество()-1),Новый ОписаниеТипов("Число"));
			КонецЕсли;			
		ТекДата = ТекДата + 86400;
		КонецЦикла;
	Иначе
	ТекДата = Отчет.Период.ДатаНачала;
		Пока ТекДата <= Отчет.Период.ДатаОкончания Цикл
			Если День(ТекДата) = 1 Тогда
			СписокПериодов.Добавить(ТекДата);
			ТаблицаЧастот.Колонки.Добавить("Ч"+Строка(СписокПериодов.Количество()-1),Новый ОписаниеТипов("Число"));
			ТаблицаНО.Колонки.Добавить("НО"+Строка(СписокПериодов.Количество()-1),Новый ОписаниеТипов("Число"));
			ТаблицаКО.Колонки.Добавить("КО"+Строка(СписокПериодов.Количество()-1),Новый ОписаниеТипов("Число"));
			ТаблицаРасход.Колонки.Добавить("Р"+Строка(СписокПериодов.Количество()-1),Новый ОписаниеТипов("Число"));			
			КонецЕсли;			
		ТекДата = ТекДата + 86400;
		КонецЦикла;
	КонецЕсли;
	
ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");
 
ОблШапкаОбщая = Макет.ПолучитьОбласть("Шапка|Общая");
ОблШапкаПериод = Макет.ПолучитьОбласть("Шапка|Период");
ОблГруппаМПЗОбщая = Макет.ПолучитьОбласть("ГруппаМПЗ|Общая");
ОблГруппаМПЗПериод = Макет.ПолучитьОбласть("ГруппаМПЗ|Период");
ОблГруппаМПЗИтогоОбщая = Макет.ПолучитьОбласть("ГруппаМПЗИтого|Общая");
ОблГруппаМПЗИтогоПериод = Макет.ПолучитьОбласть("ГруппаМПЗИтого|Период");
ОблМПЗОбщая = Макет.ПолучитьОбласть("МПЗ|Общая");
ОблМПЗПериод = Макет.ПолучитьОбласть("МПЗ|Период");
ОблКонецОбщая = Макет.ПолучитьОбласть("Конец|Общая");
ОблКонецПериод = Макет.ПолучитьОбласть("Конец|Период");

ОблШапкаОбщая.Параметры.ДатаНач = Формат(Отчет.Период.ДатаНачала,"ДФ=dd.MM.yyyy");
ОблШапкаОбщая.Параметры.ДатаКон = Формат(Отчет.Период.ДатаОкончания,"ДФ=dd.MM.yyyy");
ТабДок.Вывести(ОблШапкаОбщая);
	Для каждого Период Из СписокПериодов Цикл
		Если ВидОтчёта = 1 Тогда
		ОблШапкаПериод.Параметры.Период = Формат(Период.Значение,"ДФ=dd.MM.yyyy");		
		Иначе	
		ОблШапкаПериод.Параметры.Период = Формат(Период.Значение,"ДФ=MM.yyyy");		
		КонецЕсли; 	
	ТабДок.Присоединить(ОблШапкаПериод);		
	КонецЦикла;
 		
	Если ВидОтчёта = 1 Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказыПоставщикамОбороты.МПЗ КАК МПЗ,
		|	ЗаказыПоставщикамОбороты.Период КАК Период,
		|	ЗаказыПоставщикамОбороты.ЗаказПоставщику КАК ЗаказПоставщику,
		|	ЗаказыПоставщикамОбороты.КоличествоПриход КАК КоличествоПриход
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Обороты(&ДатаНач, &ДатаКон, Неделя, ) КАК ЗаказыПоставщикамОбороты
		|ГДЕ
		|	ЗаказыПоставщикамОбороты.МПЗ В(&СписокМПЗ)
		|ИТОГИ ПО
		|	МПЗ,
		|	Период";	
	Иначе	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказыПоставщикамОбороты.МПЗ КАК МПЗ,
		|	ЗаказыПоставщикамОбороты.Период КАК Период,
		|	ЗаказыПоставщикамОбороты.ЗаказПоставщику КАК ЗаказПоставщику,
		|	ЗаказыПоставщикамОбороты.КоличествоПриход КАК КоличествоПриход
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Обороты(&ДатаНач, &ДатаКон, Месяц, ) КАК ЗаказыПоставщикамОбороты
		|ГДЕ
		|	ЗаказыПоставщикамОбороты.МПЗ В(&СписокМПЗ)
		|ИТОГИ ПО
		|	МПЗ,
		|	Период";	
	КонецЕсли; 
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Отчет.Период.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Отчет.Период.ДатаОкончания));
Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Если ВидОтчёта = 1 Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МестаХраненияОстаткиИОбороты.МПЗ КАК МПЗ,
		|	МестаХраненияОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	МестаХраненияОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|	МестаХраненияОстаткиИОбороты.Период КАК Период
		|ИЗ
		|	РегистрНакопления.МестаХранения.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Неделя, , ) КАК МестаХраненияОстаткиИОбороты
		|ГДЕ
		|	МестаХраненияОстаткиИОбороты.МПЗ В(&СписокМПЗ)
		|	И МестаХраненияОстаткиИОбороты.МестоХранения В ИЕРАРХИИ(&СписокМестХранения)
		|ИТОГИ
		|	СУММА(КоличествоНачальныйОстаток),
		|	СУММА(КоличествоКонечныйОстаток)
		|ПО
		|	МПЗ,
		|	Период";	
	Иначе	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МестаХраненияОстаткиИОбороты.МПЗ КАК МПЗ,
		|	МестаХраненияОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	МестаХраненияОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|	МестаХраненияОстаткиИОбороты.Период КАК Период
		|ИЗ
		|	РегистрНакопления.МестаХранения.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Месяц, , ) КАК МестаХраненияОстаткиИОбороты
		|ГДЕ
		|	МестаХраненияОстаткиИОбороты.МПЗ В(&СписокМПЗ)
		|	И МестаХраненияОстаткиИОбороты.МестоХранения В ИЕРАРХИИ(&СписокМестХранения)
		|ИТОГИ
		|	СУММА(КоличествоНачальныйОстаток),
		|	СУММА(КоличествоКонечныйОстаток)
		|ПО
		|	МПЗ,
		|	Период";	
	КонецЕсли;	
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Отчет.Период.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Отчет.Период.ДатаОкончания));
Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);
Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ_МХ_Остаток = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Если ВидОтчёта = 1 Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МестаХраненияОстаткиИОбороты.МПЗ КАК МПЗ,
		|	МестаХраненияОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
		|	МестаХраненияОстаткиИОбороты.Период КАК Период
		|ИЗ
		|	РегистрНакопления.МестаХранения.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Неделя, , ) КАК МестаХраненияОстаткиИОбороты
		|ГДЕ
		|	МестаХраненияОстаткиИОбороты.МПЗ В(&СписокМПЗ)
		|	И МестаХраненияОстаткиИОбороты.МестоХранения В ИЕРАРХИИ(&СписокМестХранения)
		|ИТОГИ
		|	СУММА(КоличествоРасход)
		|ПО
		|	МПЗ,
		|	Период";	
	Иначе	
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МестаХраненияОстаткиИОбороты.МПЗ КАК МПЗ,
		|	МестаХраненияОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
		|	МестаХраненияОстаткиИОбороты.Период КАК Период
		|ИЗ
		|	РегистрНакопления.МестаХранения.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Месяц, , ) КАК МестаХраненияОстаткиИОбороты
		|ГДЕ
		|	МестаХраненияОстаткиИОбороты.МПЗ В(&СписокМПЗ)
		|	И МестаХраненияОстаткиИОбороты.МестоХранения В ИЕРАРХИИ(&СписокМестХранения)
		|ИТОГИ
		|	СУММА(КоличествоРасход)
		|ПО
		|	МПЗ,
		|	Период";	
	КонецЕсли;
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Отчет.Период.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Отчет.Период.ДатаОкончания));
Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);
Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХраненияРасход);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ_МХ_Расход = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

ТекГруппаМПЗ = Неопределено;
ТЧ_ТЧ = Неопределено;
ТЧ_НО = Неопределено;
ТЧ_КО = Неопределено;
ТЧ_Р = Неопределено;
	Для каждого МПЗ Из СписокМПЗ Цикл
		Если ТекГруппаМПЗ <> МПЗ.Значение.Родитель Тогда 
			Если ТекГруппаМПЗ <> Неопределено Тогда
			ТабДок.ЗакончитьГруппуСтрок();
			ТабДок.Вывести(ОблГруппаМПЗИтогоОбщая);
				Для каждого Период Из СписокПериодов Цикл
					Если ВидОтчёта = 1 Тогда
					КолДней = 7;
					Иначе	
					КолДней = Окр((КонецДня(КонецМесяца(Период.Значение)) - НачалоДня(Период.Значение))/86400,0,1);
					КонецЕсли;
				ОблГруппаМПЗИтогоПериод.Параметры.Частота = ТЧ_ТЧ.Получить(Период.ПолучитьИдентификатор()+1);
				КолНО = ТЧ_НО.Получить(Период.ПолучитьИдентификатор()+1);
				КолКО = ТЧ_КО.Получить(Период.ПолучитьИдентификатор()+1);
				КолРасход = ТЧ_Р.Получить(Период.ПолучитьИдентификатор()+1);
					Если (КолРасход > 0)и(КолНО+КолКО > 0) Тогда
					ОблГруппаМПЗИтогоПериод.Параметры.КоэффОборачиваемости = Формат(2*КолРасход/(КолНО+КолКО),"ЧДЦ=3");	
					ИначеЕсли (КолРасход = 0)и(КолНО+КолКО = 0) Тогда
					ОблГруппаМПЗИтогоПериод.Параметры.КоэффОборачиваемости = 0;
					ИначеЕсли КолРасход = 0 Тогда
					ОблГруппаМПЗИтогоПериод.Параметры.КоэффОборачиваемости = "Р0";
					Иначе
					ОблГруппаМПЗИтогоПериод.Параметры.КоэффОборачиваемости = "С0";
					КонецЕсли;
				ТабДок.Присоединить(ОблГруппаМПЗИтогоПериод);	
				КонецЦикла;
			КонецЕсли;
		ТЧ_ТЧ = ТаблицаЧастот.Добавить();
		ТЧ_ТЧ.ГруппаМПЗ = МПЗ.Значение.Родитель;
		ТЧ_НО = ТаблицаНО.Добавить();
		ТЧ_НО.ГруппаМПЗ = МПЗ.Значение.Родитель;
		ТЧ_КО = ТаблицаКО.Добавить();
		ТЧ_КО.ГруппаМПЗ = МПЗ.Значение.Родитель;		
		ТЧ_Р = ТаблицаРасход.Добавить();
		ТЧ_Р.ГруппаМПЗ = МПЗ.Значение.Родитель;
		ОблГруппаМПЗОбщая.Параметры.Наименование = МПЗ.Значение.Родитель;
		ТабДок.Вывести(ОблГруппаМПЗОбщая);
			Для каждого Период Из СписокПериодов Цикл
			ТабДок.Присоединить(ОблГруппаМПЗПериод);		
			КонецЦикла;
		ТабДок.НачатьГруппуСтрок("ГруппаМПЗ",Истина);
		ТекГруппаМПЗ = МПЗ.Значение.Родитель;
		ЧастотаИтого = 0;
		КонецЕсли; 
	ОблМПЗОбщая.Параметры.Статус = ПолучитьСтатус(МПЗ.Значение);
	ОблМПЗОбщая.Параметры.ГруппаПоЗакупкам = МПЗ.Значение.ГруппаПоЗакупкам;
	ОблМПЗОбщая.Параметры.Наименование = СокрЛП(МПЗ.Значение.Наименование);
	ОблМПЗОбщая.Параметры.МПЗ = МПЗ.Значение;
	ОблМПЗОбщая.Параметры.ЕдиницаИзмерения = СокрЛП(МПЗ.Значение.ЕдиницаИзмерения.Наименование);
	ТабДок.Вывести(ОблМПЗОбщая);
	Ном = 0;
		Для каждого Период Из СписокПериодов Цикл
		ВыборкаМПЗ.Сбросить();
		КолЗаказов = 0;
			Если ВыборкаМПЗ.НайтиСледующий(Новый Структура("МПЗ",МПЗ.Значение)) Тогда
			ВыборкаПериод = ВыборкаМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПериод.НайтиСледующий(Новый Структура("Период",Период.Значение)) Цикл
				ВыборкаДетальныеЗаписи = ВыборкаПериод.Выбрать();
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					КолЗаказов = КолЗаказов + 1;
					КонецЦикла;				
				КонецЦикла; 	
			КонецЕсли;
		КолЗаказов = КолЗаказов + ПолучитьКолЗаказовАналогов(МПЗ.Значение,Период.Значение,ВыборкаМПЗ);
		ОблМПЗПериод.Параметры.Частота = КолЗаказов;
		ТЧ_ТЧ.Установить(Период.ПолучитьИдентификатор()+1,ТЧ_ТЧ.Получить(Период.ПолучитьИдентификатор()+1)+КолЗаказов);

		ВыборкаМПЗ_МХ_Остаток.Сбросить();
		КолНО = 0;
		КолКО = 0;
			Если ВыборкаМПЗ_МХ_Остаток.НайтиСледующий(Новый Структура("МПЗ",МПЗ.Значение)) Тогда
			ВыборкаПериод = ВыборкаМПЗ_МХ_Остаток.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПериод.НайтиСледующий(Новый Структура("Период",Период.Значение)) Цикл
				ВыборкаДетальныеЗаписи = ВыборкаПериод.Выбрать();
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					КолНО = КолНО + ВыборкаДетальныеЗаписи.КоличествоНачальныйОстаток;
					КолКО = КолКО + ВыборкаДетальныеЗаписи.КоличествоКонечныйОстаток;					
					КонецЦикла;				
				КонецЦикла; 	
			КонецЕсли;
		Результат = ПолучитьКолОстатокАналогов(МПЗ.Значение,Период.Значение,ВыборкаМПЗ_МХ_Остаток);
		КолНО = КолНО + Результат.КолНО;
		КолКО = КолКО + Результат.КолКО;
		ТЧ_НО.Установить(Период.ПолучитьИдентификатор()+1,ТЧ_НО.Получить(Период.ПолучитьИдентификатор()+1)+КолНО);
		ТЧ_КО.Установить(Период.ПолучитьИдентификатор()+1,ТЧ_КО.Получить(Период.ПолучитьИдентификатор()+1)+КолКО);

		КолРасход = 0;
		ВыборкаМПЗ_МХ_Расход.Сбросить();
			Если ВыборкаМПЗ_МХ_Расход.НайтиСледующий(Новый Структура("МПЗ",МПЗ.Значение)) Тогда
			ВыборкаПериод = ВыборкаМПЗ_МХ_Расход.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПериод.НайтиСледующий(Новый Структура("Период",Период.Значение)) Цикл
				ВыборкаДетальныеЗаписи = ВыборкаПериод.Выбрать();
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					КолРасход = КолРасход + ВыборкаДетальныеЗаписи.КоличествоРасход;					
					КонецЦикла;				
				КонецЦикла; 	
			КонецЕсли;
		КолРасход = КолРасход + ПолучитьКолРасходАналогов(МПЗ.Значение,Период.Значение,ВыборкаМПЗ_МХ_Расход);
		ТЧ_Р.Установить(Период.ПолучитьИдентификатор()+1,ТЧ_Р.Получить(Период.ПолучитьИдентификатор()+1)+КолРасход);
			Если (КолРасход > 0)и(КолНО+КолКО > 0) Тогда
			ОблМПЗПериод.Параметры.КоэффОборачиваемости = Формат(2*КолРасход/(КолНО+КолКО),"ЧДЦ=3");	
			ИначеЕсли (КолРасход = 0)и(КолНО+КолКО = 0) Тогда
			ОблМПЗПериод.Параметры.КоэффОборачиваемости = 0;
			ИначеЕсли КолРасход = 0 Тогда
			ОблМПЗПериод.Параметры.КоэффОборачиваемости = "Р0";
			Иначе
			ОблМПЗПериод.Параметры.КоэффОборачиваемости = "С0";
			КонецЕсли;	
		ТабДок.Присоединить(ОблМПЗПериод);		
		КонецЦикла;	
	ВывестиАналоги(МПЗ.Значение);
	КонецЦикла;
		Если ТекГруппаМПЗ <> Неопределено Тогда
		ТабДок.ЗакончитьГруппуСтрок();
		ТабДок.Вывести(ОблГруппаМПЗИтогоОбщая);
			Для каждого Период Из СписокПериодов Цикл
				Если ВидОтчёта = 1 Тогда
				КолДней = 7;
				Иначе	
				КолДней = Окр((КонецДня(КонецМесяца(Период.Значение)) - НачалоДня(Период.Значение))/86400,0,1);
				КонецЕсли;
			ОблГруппаМПЗИтогоПериод.Параметры.Частота = ТЧ_ТЧ.Получить(Период.ПолучитьИдентификатор()+1);
			КолНО = ТЧ_НО.Получить(Период.ПолучитьИдентификатор()+1);
			КолКО = ТЧ_КО.Получить(Период.ПолучитьИдентификатор()+1);
			КолРасход = ТЧ_Р.Получить(Период.ПолучитьИдентификатор()+1);
				Если (КолРасход > 0)и(КолНО+КолКО > 0) Тогда
				ОблГруппаМПЗИтогоПериод.Параметры.КоэффОборачиваемости = Формат(2*КолРасход/(КолНО+КолКО),"ЧДЦ=3");	
				ИначеЕсли (КолРасход = 0)и(КолНО+КолКО = 0) Тогда
				ОблГруппаМПЗИтогоПериод.Параметры.КоэффОборачиваемости = 0;
				ИначеЕсли КолРасход = 0 Тогда
				ОблГруппаМПЗИтогоПериод.Параметры.КоэффОборачиваемости = "Р0";
				Иначе
				ОблГруппаМПЗИтогоПериод.Параметры.КоэффОборачиваемости = "С0";
				КонецЕсли;
			ТабДок.Присоединить(ОблГруппаМПЗИтогоПериод);	
			КонецЦикла;
		КонецЕсли;
ТабДок.Вывести(ОблКонецОбщая);
	Для каждого Период Из СписокПериодов Цикл
		Если ВидОтчёта = 1 Тогда
		КолДней = 7;
		Иначе	
		КолДней = Окр((КонецДня(КонецМесяца(Период.Значение)) - НачалоДня(Период.Значение))/86400,0,1);
		КонецЕсли;
	ОблКонецПериод.Параметры.Частота = ТаблицаЧастот.Итог("Ч"+Период.ПолучитьИдентификатор());
	КолНО = ТаблицаНО.Итог("НО"+Период.ПолучитьИдентификатор());
	КолКО = ТаблицаКО.Итог("КО"+Период.ПолучитьИдентификатор());
	КолРасход = ТаблицаРасход.Итог("Р"+Период.ПолучитьИдентификатор());
		Если (КолРасход > 0)и(КолНО+КолКО > 0) Тогда
		ОблКонецПериод.Параметры.КоэффОборачиваемости = Формат(2*КолРасход/(КолНО+КолКО),"ЧДЦ=3");	
		ИначеЕсли (КолРасход = 0)и(КолНО+КолКО = 0) Тогда
		ОблКонецПериод.Параметры.КоэффОборачиваемости = 0;
		ИначеЕсли КолРасход = 0 Тогда
		ОблКонецПериод.Параметры.КоэффОборачиваемости = "Р0";
		Иначе
		ОблКонецПериод.Параметры.КоэффОборачиваемости = "С0";
		КонецЕсли;
	ТабДок.Присоединить(ОблКонецПериод);		
	КонецЦикла;
ТабДок.ФиксацияСверху = 3;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
Состояние("Обработка...",,"Создание списка МПЗ и их аналогов...");
СоздатьСписокМПЗ();
Состояние("Обработка...",,"Создание таблицы отчёта...");
СформироватьНаСервере();
КонецПроцедуры
