&НаСервере
Перем оптЗапросНорм, оптСоотРезультатов;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Отчет.Период.ДатаНачала = НачалоМесяца(ТекущаяДата());
Отчет.Период.ДатаОкончания = КонецГода(ТекущаяДата());
ТипСправочника = 1;
ТипИзделий = 1;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ТипСправочника = 1 Тогда
	СписокГруппНоменклатуры.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Материалы");
	Элементы.СписокГруппМПЗ.Видимость = Ложь;
	Элементы.ТипИзделий.Видимость = Ложь;
	Иначе	
	СписокГруппНоменклатуры.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	Элементы.СписокГруппМПЗ.Видимость = Истина;
	Элементы.ТипИзделий.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТипСправочникаПриИзменении(Элемент)
СписокГруппНоменклатуры.Очистить();
Элементы.Сформировать.Доступность = Ложь;
	Если ТипСправочника = 1 Тогда
	СписокГруппНоменклатуры.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Материалы");
	Элементы.СписокГруппМПЗ.Видимость = Ложь;
	Элементы.ТипИзделий.Видимость = Ложь;
	Иначе	
	СписокГруппНоменклатуры.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	Элементы.СписокГруппМПЗ.Видимость = Истина;
	Элементы.ТипИзделий.Видимость = Истина;
	КонецЕсли;  
КонецПроцедуры
              
&НаСервере       
Процедура ПолучитьАналогиНабора(ЭтапСпецификации,КолУзла,СписокАналогов)
ВыборкаДетальныеЗаписи = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_М(ЭтапСпецификации,ТекущаяДата());
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокАналогов.Добавить(ВыборкаДетальныеЗаписи.Элемент,Строка(ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(ВыборкаДетальныеЗаписи.Норма,ВыборкаДетальныеЗаписи.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла));
	КонецЦикла; 
КонецПроцедуры
        
&НаСервере
Процедура ДобавитьМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,НормРасх,Количество,КолУзла,Знач МПЗ = Неопределено,ДатаС,ДатаПо)
	Если Мпз = Неопределено Тогда 
	МПЗ = ОбщегоНазначенияПовтИсп.ПолучитьЗначениеРеквизита(НормРасх,"Элемент");
	КонецЕсли;	
		Если СписокГруппПоЗакупкам.Количество() > 0 Тогда	
			Если НеПринадлежатВыбраннымГруппам Тогда
				Если СписокГруппПоЗакупкам.НайтиПоЗначению(МПЗ.ГруппаПоЗакупкам) <> Неопределено Тогда	
				Возврат;
				КонецЕсли; 
			Иначе	
				Если СписокГруппПоЗакупкам.НайтиПоЗначению(МПЗ.ГруппаПоЗакупкам) = Неопределено Тогда	
				Возврат;
				КонецЕсли; 		
			КонецЕсли; 	
		КонецЕсли;
Запрос = Новый Запрос;
СписокАналогов = Новый СписокЗначений;

Выборка = ТаблицаМПЗ.Найти(МПЗ,"МПЗ");
	Если Выборка = Неопределено Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыСПоставщикамиОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|	ДоговорыСПоставщикамиОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход,
		|	ДоговорыСПоставщикамиОстаткиИОбороты.МПЗ КАК МПЗ
		|ИЗ
		|	РегистрНакопления.ДоговорыСПоставщиками.ОстаткиИОбороты КАК ДоговорыСПоставщикамиОстаткиИОбороты
		|ГДЕ
		|	ДоговорыСПоставщикамиОстаткиИОбороты.МПЗ = &МПЗ
		|	И ДоговорыСПоставщикамиОстаткиИОбороты.СпецификацияКДоговору.ДействуетДо >= &ДействуетДо";
		Если Не Договор.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И ДоговорыСПоставщикамиОстаткиИОбороты.Договор = &Договор"; 
		Запрос.УстановитьПараметр("Договор", Договор);
		ИначеЕсли Не Поставщик.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И ДоговорыСПоставщикамиОстаткиИОбороты.Контрагент = &Контрагент"; 
		Запрос.УстановитьПараметр("Контрагент", Поставщик);
		КонецЕсли;
	Запрос.Текст = Запрос.Текст + " ИТОГИ
									|	СУММА(КоличествоКонечныйОстаток),
									|	СУММА(КоличествоПриход)
									|ПО
									|	МПЗ";
	Запрос.УстановитьПараметр("ДействуетДо", ТекущаяДата()); 
	Запрос.УстановитьПараметр("МПЗ", МПЗ);
	РезультатЗапроса = Запрос.Выполнить();
		Если (Не Поставщик.Пустая())или(Не Договор.Пустая()) Тогда
			Если РезультатЗапроса.Пустой() Тогда
			Возврат;
			КонецЕсли; 
		КонецЕсли; 
	ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КоличествоКонечныйОстаток = 0;
		Пока ВыборкаМПЗ.Следующий() Цикл
		КоличествоКонечныйОстаток = КоличествоКонечныйОстаток + ВыборкаМПЗ.КоличествоКонечныйОстаток;
		КонецЦикла;
	ТЧ = ТаблицаМПЗ.Добавить();
	ТЧ.МПЗ = МПЗ;
	ТЧ.ГруппаМПЗ = МПЗ.Родитель;
	ТЧ.ГруппаПоЗакупкам = МПЗ.ГруппаПоЗакупкам;	
	//ТЧ.НаличиеДоговора = ?(Не РезультатЗапроса.Пустой(),"+","");
	ТЧ.КоличествоОстатокПоДоговорам = КоличествоКонечныйОстаток;
	ТЧ.КоличествоОстаток = ОбщийМодульВызовСервера.ПолучитьСводныйОстатокПоМестамХранения(СписокМестХранения,МПЗ,ТекущаяДата());
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура");
	ТЧ.ТаблицаНоменклатуры.Индексы.Добавить("Номенклатура");
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("Количество");
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("ДатаС");
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("ДатаПо");
	Иначе
	ТЧ = Выборка;
	КонецЕсли;
Выборка = ТЧ.ТаблицаНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура,ДатаС,ДатаПо",Номенклатура,ДатаС,ДатаПо));
	Если Выборка.Количество() = 0 Тогда
	ТЧ_Ном = ТЧ.ТаблицаНоменклатуры.Добавить();
	ТЧ_Ном.Номенклатура = Номенклатура;
	ТЧ_Ном.Количество = Количество;
	ТЧ_Ном.ДатаС = ДатаС;	
	ТЧ_Ном.ДатаПо = ДатаПо;
	Иначе
	Выборка[0].Количество = Выборка[0].Количество + Количество;
	КонецЕсли;
ТаблицаАналогов = ОбщегоНазначенияПовтИсп.ПолучитьАналогиНормРасходов(НормРасх);
	Для каждого ТЧ_ТА Из ТаблицаАналогов Цикл 
		Если ТипЗнч(ТЧ_ТА.Ссылка.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
		СписокАналогов.Добавить(ТЧ_ТА.Ссылка.Элемент,Строка(ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(ТЧ_ТА.Норма,ТЧ_ТА.Ссылка.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла));
		ИначеЕсли ТЧ_ТА.Ссылка.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Набор Тогда
		ПолучитьАналогиНабора(ТЧ_ТА.Ссылка.Элемент,ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(ТЧ_ТА.Норма,ТЧ_ТА.Ссылка.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла,СписокАналогов);
		КонецЕсли; 
	КонецЦикла;	      
		Для каждого Ан Из СписокАналогов Цикл
		Аналог = Ан.Значение;
		Выборка = ТаблицаАналоговМПЗ.НайтиСтроки(Новый Структура("МПЗ,АналогМПЗ",МПЗ,Аналог));
			Если Выборка.Количество() = 0 Тогда
			ТЧ = ТаблицаАналоговМПЗ.Добавить();
			ТЧ.МПЗ = МПЗ;
			ТЧ.АналогМПЗ = Аналог;
			ТЧ.КоличествоОстаток = ОбщийМодульВызовСервера.ПолучитьСводныйОстатокПоМестамХранения(СписокМестХранения,Аналог,ТекущаяДата());
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ДоговорыСПоставщикамиОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
				|	ДоговорыСПоставщикамиОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход,
				|	ДоговорыСПоставщикамиОстаткиИОбороты.МПЗ КАК МПЗ
				|ИЗ
				|	РегистрНакопления.ДоговорыСПоставщиками.ОстаткиИОбороты КАК ДоговорыСПоставщикамиОстаткиИОбороты
				|ГДЕ
				|	ДоговорыСПоставщикамиОстаткиИОбороты.МПЗ = &МПЗ
				|	И ДоговорыСПоставщикамиОстаткиИОбороты.СпецификацияКДоговору.ДействуетДо >= &ДействуетДо";
				Если Не Договор.Пустая() Тогда
				Запрос.Текст = Запрос.Текст + " И ДоговорыСПоставщикамиОстаткиИОбороты.Договор = &Договор"; 
				Запрос.УстановитьПараметр("Договор", Договор);
				ИначеЕсли Не Поставщик.Пустая() Тогда
				Запрос.Текст = Запрос.Текст + " И ДоговорыСПоставщикамиОстаткиИОбороты.Контрагент = &Контрагент"; 
				Запрос.УстановитьПараметр("Контрагент", Поставщик);
				КонецЕсли;
			Запрос.Текст = Запрос.Текст + " ИТОГИ
											|	СУММА(КоличествоКонечныйОстаток),
											|	СУММА(КоличествоПриход)
											|ПО
											|	МПЗ";
			Запрос.УстановитьПараметр("ДействуетДо", ТекущаяДата()); 
			Запрос.УстановитьПараметр("МПЗ", Аналог);
			РезультатЗапроса = Запрос.Выполнить();
			ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			КоличествоКонечныйОстаток = 0;
				Пока ВыборкаМПЗ.Следующий() Цикл
				КоличествоКонечныйОстаток = КоличествоКонечныйОстаток + ВыборкаМПЗ.КоличествоКонечныйОстаток;
				КонецЦикла;
			ТЧ.КоличествоОстатокПоДоговорам = КоличествоКонечныйОстаток;
			ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура");
			ТЧ.ТаблицаНоменклатуры.Индексы.Добавить("Номенклатура");
			ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("Количество");
			ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("ДатаС");
			ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("ДатаПо");
			Иначе
			ТЧ = Выборка[0];
			КонецЕсли;
		Выборка = ТЧ.ТаблицаНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура,ДатаС,ДатаПо",Номенклатура,ДатаС,ДатаПо));
			Если Выборка.Количество() = 0 Тогда
			ТЧ_Ном = ТЧ.ТаблицаНоменклатуры.Добавить();
			ТЧ_Ном.Номенклатура = Номенклатура;
			ТЧ_Ном.Количество = ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(Число(Ан.Представление),Аналог.ОсновнаяЕдиницаИзмерения)*КолУзла;
			ТЧ_Ном.ДатаС = ДатаС;	
			ТЧ_Ном.ДатаПо = ДатаПо;
			Иначе
			Выборка[0].Количество = Выборка[0].Количество + ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(Число(Ан.Представление),Аналог.ОсновнаяЕдиницаИзмерения)*КолУзла;
			КонецЕсли;
		КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ДобавитьТНП(ТаблицаМПЗ,ТаблицаАналоговМПЗ,МПЗ)
	Если СписокГруппПоЗакупкам.Количество() > 0 Тогда	
		Если НеПринадлежатВыбраннымГруппам Тогда
			Если СписокГруппПоЗакупкам.НайтиПоЗначению(МПЗ.ГруппаПоЗакупкам) <> Неопределено Тогда	
			Возврат;
			КонецЕсли; 
		Иначе	
			Если СписокГруппПоЗакупкам.НайтиПоЗначению(МПЗ.ГруппаПоЗакупкам) = Неопределено Тогда	
			Возврат;
			КонецЕсли; 		
		КонецЕсли; 	
	КонецЕсли;
Запрос = Новый Запрос;

Выборка = ТаблицаМПЗ.Найти(МПЗ,"МПЗ");
	Если Выборка = Неопределено Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыСПоставщикамиОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|	ДоговорыСПоставщикамиОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход,
		|	ДоговорыСПоставщикамиОстаткиИОбороты.МПЗ КАК МПЗ
		|ИЗ
		|	РегистрНакопления.ДоговорыСПоставщиками.ОстаткиИОбороты КАК ДоговорыСПоставщикамиОстаткиИОбороты
		|ГДЕ
		|	ДоговорыСПоставщикамиОстаткиИОбороты.МПЗ = &МПЗ
		|	И ДоговорыСПоставщикамиОстаткиИОбороты.СпецификацияКДоговору.ДействуетДо >= &ДействуетДо";
		Если Не Договор.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И ДоговорыСПоставщикамиОстаткиИОбороты.Договор = &Договор"; 
		Запрос.УстановитьПараметр("Договор", Договор);
		ИначеЕсли Не Поставщик.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И ДоговорыСПоставщикамиОстаткиИОбороты.Контрагент = &Контрагент"; 
		Запрос.УстановитьПараметр("Контрагент", Поставщик);
		КонецЕсли;
	Запрос.Текст = Запрос.Текст + " ИТОГИ
									|	СУММА(КоличествоКонечныйОстаток),
									|	СУММА(КоличествоПриход)
									|ПО
									|	МПЗ";
	Запрос.УстановитьПараметр("ДействуетДо", ТекущаяДата()); 
	Запрос.УстановитьПараметр("МПЗ", МПЗ);
	РезультатЗапроса = Запрос.Выполнить();
		Если (Не Поставщик.Пустая())или(Не Договор.Пустая()) Тогда
			Если РезультатЗапроса.Пустой() Тогда
			Возврат;
			КонецЕсли; 
		КонецЕсли;
	ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КоличествоКонечныйОстаток = 0;
		Пока ВыборкаМПЗ.Следующий() Цикл
		КоличествоКонечныйОстаток = КоличествоКонечныйОстаток + ВыборкаМПЗ.КоличествоКонечныйОстаток;
		КонецЦикла;  
	ТЧ = ТаблицаМПЗ.Добавить();
	ТЧ.МПЗ = МПЗ;
	ТЧ.ГруппаМПЗ = МПЗ.Родитель;
	ТЧ.ГруппаПоЗакупкам = МПЗ.ГруппаПоЗакупкам;
	//ТЧ.НаличиеДоговора = ?(Не РезультатЗапроса.Пустой(),"+","");
	ТЧ.КоличествоОстатокПоДоговорам = КоличествоКонечныйОстаток;
	ТЧ.КоличествоОстаток = ОбщийМодульВызовСервера.ПолучитьСводныйОстатокПоМестамХранения(СписокМестХранения,МПЗ,ТекущаяДата());
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура");
	ТЧ.ТаблицаНоменклатуры.Индексы.Добавить("Номенклатура");
	ТЧ.ТаблицаНоменклатуры.Колонки.Добавить("Количество");	
	Иначе
	ТЧ = Выборка;
	КонецЕсли;
//Выборка = ТЧ.ТаблицаНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура",МПЗ));
Выборка = ТЧ.ТаблицаНоменклатуры.Найти(МПЗ,"Номенклатура");
	Если Выборка = Неопределено Тогда
	ТЧ_Ном = ТЧ.ТаблицаНоменклатуры.Добавить();
	ТЧ_Ном.Номенклатура = МПЗ;
	ТЧ_Ном.Количество = 1;	
	//Иначе
	//Выборка.Количество = Выборка.Количество + 1;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура РаскрытьНаМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,ЭтапСпецификации,КолУзла,ДатаС,ДатаПо)
	Если оптЗапросНорм = Неопределено Тогда
	оптЗапросНорм = ОбщийМодульВызовСервера.ПолучитьЗапросНормРасходовПоВладельцу_Н_М(ТекущаяДата(),СписокГруппМПЗ);
	КонецЕсли;
		Если оптСоотРезультатов = Неопределено Тогда
		оптСоотРезультатов = Новый Соответствие;
		КонецЕсли;
			Если оптСоотРезультатов.Получить(ЭтапСпецификации) = Неопределено Тогда 
			Запрос = оптЗапросНорм;
			Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
			РезультатЗапроса = Запрос.Выполнить();
			оптСоотРезультатов.Вставить(ЭтапСпецификации, РезультатЗапроса);
			Иначе
			РезультатЗапроса = оптСоотРезультатов[ЭтапСпецификации];
			КонецЕсли;
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл                                             
	БазовоеКоличество = ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(ВыборкаНР.Норма,ВыборкаНР.ЭлементОЕИ);
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
		ДобавитьМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,ВыборкаНР.Ссылка,БазовоеКоличество*КолУзла,КолУзла, ВыборкаНР.Элемент,ДатаС,ДатаПо);  					
		Иначе
		Результат = ОбщийМодульРаботаСРегистрами.ПолучитьПФРедизайна(Номенклатура,ВыборкаНР.Элемент);
			Если Результат <> Неопределено Тогда
			ДатаПоНовая = НачалоМесяца(Результат.ДатаС-1);
			Иначе
			ДатаПоНовая = ДатаПо;
			КонецЕсли;
		РаскрытьНаМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,ВыборкаНР.Элемент,БазовоеКоличество*КолУзла,ДатаС,ДатаПоНовая);
			Если Результат <> Неопределено Тогда
			РаскрытьНаМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,Номенклатура,Результат.ЭлементНовый,БазовоеКоличество*КолУзла,Результат.ДатаС,ДатаПо);
			КонецЕсли;
		КонецЕсли;  
	КонецЦикла;
КонецПроцедуры
                      
&НаСервере
Процедура РаскрытьНаМПЗОжидаемыйРасход(ТаблицаРасходаМПЗ,Номенклатура,ЭтапСпецификации,КолУзла,СписокМПЗ)
	Если оптСоотРезультатов.Получить(ЭтапСпецификации) = Неопределено Тогда 
	Запрос = оптЗапросНорм;
	Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
	РезультатЗапроса = Запрос.Выполнить();
	оптСоотРезультатов.Вставить(ЭтапСпецификации, РезультатЗапроса);
	Иначе
	РезультатЗапроса = оптСоотРезультатов[ЭтапСпецификации];
	КонецЕсли;
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл
	Количество = ОбщегоНазначенияПовтИсп.ПолучитьБазовоеКоличествоБезОкругленияПИ(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла;
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Материалы")Тогда
		РаскрытьНаМПЗОжидаемыйРасход(ТаблицаРасходаМПЗ,Номенклатура,ВыборкаНР.Элемент,Количество,СписокМПЗ);
			Если СписокМПЗ.НайтиПоЗначению(ВыборкаНР.Элемент) = Неопределено Тогда	
			Продолжить;				
			КонецЕсли;
		Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаНР.Элемент));
			Если Выборка.Количество() = 0 Тогда			
			ТЧ = ТаблицаРасходаМПЗ.Добавить();
			ТЧ.МПЗ = ВыборкаНР.Элемент;
			ТЧ.КоличествоОжидаемыйРасход = Количество;	
			Иначе 
			Выборка[0].КоличествоОжидаемыйРасход = Выборка[0].КоличествоОжидаемыйРасход + Количество;
			КонецЕсли;					
		Иначе 
			Если ВыборкаНР.Элемент.ПереходНаРедизайн Тогда
			Результат = ОбщийМодульРаботаСРегистрами.ПолучитьПФРедизайна(Номенклатура,ВыборкаНР.Элемент);
				Если Результат <> Неопределено Тогда
				РаскрытьНаМПЗОжидаемыйРасход(ТаблицаРасходаМПЗ,Номенклатура,Результат.ЭлементНовый,Количество,СписокМПЗ);
				Продолжить;
				КонецЕсли;	
			КонецЕсли;
		РаскрытьНаМПЗОжидаемыйРасход(ТаблицаРасходаМПЗ,Номенклатура,ВыборкаНР.Элемент,Количество,СписокМПЗ);
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры
                   
&НаСервере
Процедура ПодсчётОжидаемогоРасхода(ТаблицаРасходаМПЗ,СписокМПЗ)
Запрос = Новый Запрос;
ТаблицаПродукции = Новый ТаблицаЗначений;

ТаблицаПродукции.Колонки.Добавить("Продукция");
ТаблицаПродукции.Колонки.Добавить("Количество");

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Линейка,
	|	ПроизводственноеЗадание.Изделие,
	|	ПроизводственноеЗадание.Количество КАК Количество
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДатаЗапуска = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ПроизводственноеЗадание.Подразделение В(&СписокПодразделений)
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	ПроизводственноеЗадание.Линейка,
	|	ПроизводственноеЗадание.Изделие";
Запрос.УстановитьПараметр("СписокПодразделений", СписокПодразделений);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаЛинейка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЛинейка.Следующий() Цикл
	ВыборкаИзделие = ВыборкаЛинейка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаИзделие.Следующий() Цикл 
		ТЧ = ТаблицаПродукции.Добавить();
        ТЧ.Продукция = ВыборкаИзделие.Изделие;
        ТЧ.Количество = ВыборкаИзделие.Количество;		
		КонецЦикла;
	КонецЦикла;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	КрупныеЗаказы.Продукция КАК Продукция,
	|	КрупныеЗаказы.Количество КАК Количество
	|ИЗ
	|	РегистрСведений.КрупныеЗаказы КАК КрупныеЗаказы
	|ГДЕ
	|	КрупныеЗаказы.Обработан = ЛОЖЬ
	|	И КрупныеЗаказы.ДатаРезерва <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	//Если СписокГруппНоменклатуры.Количество()> 0 Тогда
	//Запрос.Текст = Запрос.Текст + " И КрупныеЗаказы.Продукция В ИЕРАРХИИ(&СписокГруппНоменклатуры)";
	//Запрос.УстановитьПараметр("СписокГруппНоменклатуры", СписокГруппНоменклатуры);
	//КонецЕсли; 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаПродукции.Добавить();
    ТЧ.Продукция = ВыборкаДетальныеЗаписи.Продукция;
    ТЧ.Количество = ВыборкаДетальныеЗаписи.Количество;
	КонецЦикла;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыНаПроизводствоОстатки.Документ КАК Документ,
	|	ЗаказыНаПроизводствоОстатки.Продукция КАК Продукция,
	|	ЗаказыНаПроизводствоОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПроизводство.Остатки КАК ЗаказыНаПроизводствоОстатки
	|ГДЕ
	|	ЗаказыНаПроизводствоОстатки.Документ.Закрыт = ЛОЖЬ";
	//Если СписокГруппНоменклатуры.Количество()> 0 Тогда
	//Запрос.Текст = Запрос.Текст + " ГДЕ ЗаказыНаПроизводствоОстатки.Продукция В ИЕРАРХИИ(&СписокГруппНоменклатуры)";
	//Запрос.УстановитьПараметр("СписокГруппНоменклатуры", СписокГруппНоменклатуры);
	//КонецЕсли;	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Продукция = ВыборкаДетальныеЗаписи.Продукция;
		Для каждого ТЧ_Заказ Из ВыборкаДетальныеЗаписи.Документ.Заказ Цикл	
			Если ТЧ_Заказ.Продукция = Продукция Тогда
				Если ТЧ_Заказ.РучнойЗапуск = 0 Тогда
					Если ТЧ_Заказ.КрупныйЗаказ Тогда
					КоличествоНеСоздано = ТЧ_Заказ.Количество - ПолучитьКоличествоСозданых(ВыборкаДетальныеЗаписи.Документ,Продукция);
						Если КоличествоНеСоздано > 0 Тогда
						ТЧ = ТаблицаПродукции.Добавить();
					    ТЧ.Продукция = Продукция;
					    ТЧ.Количество = КоличествоНеСоздано;
						КонецЕсли;	
					КонецЕсли;  
				КонецЕсли; 	
			Прервать;
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла; 
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоЗаказ.Продукция КАК Продукция,
	|	ЗаказНаПроизводствоЗаказ.Количество КАК Количество
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Заказ КАК ЗаказНаПроизводствоЗаказ
	|ГДЕ                                         
	|	ЗаказНаПроизводствоЗаказ.Ссылка.Закрыт = ЛОЖЬ
	|	И ЗаказНаПроизводствоЗаказ.РучнойЗапуск = 1
	|	И ЗаказНаПроизводствоЗаказ.Количество > 0
	|	И ЗаказНаПроизводствоЗаказ.Продукция <> НЕОПРЕДЕЛЕНО";	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаПродукции.Добавить();
    ТЧ.Продукция = ВыборкаДетальныеЗаписи.Продукция;
    ТЧ.Количество = ВыборкаДетальныеЗаписи.Количество;
	КонецЦикла;                                                                                                                   
ТаблицаПродукции.Свернуть("Продукция","Количество");
	Для каждого ТЧ Из ТаблицаПродукции Цикл
	РаскрытьНаМПЗОжидаемыйРасход(ТаблицаРасходаМПЗ,ТЧ.Продукция,ТЧ.Продукция,ТЧ.Количество,СписокМПЗ);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();

ТаблицаМПЗ = Новый ТаблицаЗначений;

ТаблицаМПЗ.Колонки.Добавить("МПЗ");
ТаблицаМПЗ.Индексы.Добавить("МПЗ");
ТаблицаМПЗ.Колонки.Добавить("ГруппаМПЗ");
ТаблицаМПЗ.Колонки.Добавить("ГруппаПоЗакупкам");
ТаблицаМПЗ.Колонки.Добавить("КоличествоОстаток");
ТаблицаМПЗ.Колонки.Добавить("КоличествоОстатокПоДоговорам");
ТаблицаМПЗ.Колонки.Добавить("ТаблицаНоменклатуры",Новый ОписаниеТипов("ТаблицаЗначений"));

ТаблицаАналоговМПЗ = Новый ТаблицаЗначений;

ТаблицаАналоговМПЗ.Колонки.Добавить("МПЗ");
ТаблицаАналоговМПЗ.Индексы.Добавить("МПЗ");
ТаблицаАналоговМПЗ.Колонки.Добавить("АналогМПЗ");
ТаблицаАналоговМПЗ.Колонки.Добавить("КоличествоОстаток");
ТаблицаАналоговМПЗ.Колонки.Добавить("КоличествоОстатокПоДоговорам");
ТаблицаАналоговМПЗ.Колонки.Добавить("ТаблицаНоменклатуры",Новый ОписаниеТипов("ТаблицаЗначений")); 

ТаблицаРасходаМПЗ = Новый ТаблицаЗначений;

ТаблицаРасходаМПЗ.Колонки.Добавить("МПЗ");
ТаблицаРасходаМПЗ.Индексы.Добавить("МПЗ");
ТаблицаРасходаМПЗ.Колонки.Добавить("КоличествоОжидаемыйРасход", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3))); 

	Если ТипСправочника = 1 Тогда
		Для каждого ТЧ Из ЭтаФорма.Номенклатура Цикл
		ДобавитьТНП(ТаблицаМПЗ,ТаблицаАналоговМПЗ,ТЧ.Номенклатура);
		КонецЦикла;	
	Иначе	
		Для каждого ТЧ Из ЭтаФорма.Номенклатура Цикл
		РаскрытьНаМПЗ(ТаблицаМПЗ,ТаблицаАналоговМПЗ,ТЧ.Номенклатура,ТЧ.Номенклатура,1,Отчет.Период.ДатаНачала,Отчет.Период.ДатаОкончания);
		КонецЦикла;	
	КонецЕсли;

ТаблицаМПЗ.Сортировать("ГруппаМПЗ,МПЗ"); 
ТаблицаАналоговМПЗ.Сортировать("МПЗ,АналогМПЗ");
СписокМПЗ = Новый СписокЗначений;

	Для каждого ТЧ Из ТаблицаМПЗ Цикл
	СписокМПЗ.Добавить(ТЧ.МПЗ);
	КонецЦикла;
		Для каждого ТЧ Из ТаблицаАналоговМПЗ Цикл
			Если СписокМПЗ.НайтиПоЗначению(ТЧ.АналогМПЗ) = Неопределено Тогда
			СписокМПЗ.Добавить(ТЧ.АналогМПЗ);
			КонецЕсли; 
		КонецЦикла;
ПодсчётОжидаемогоРасхода(ТаблицаРасходаМПЗ,СписокМПЗ); 

Запрос = Новый Запрос;

// Запрос по заказам поставщикам
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыПоставщикамОстаткиИОбороты.МПЗ КАК МПЗ,
	|	ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику,
	|	ЗаказыПоставщикамОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
	|	ЗаказыПоставщикамОстаткиИОбороты.КоличествоРасход
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Регистратор, , ) КАК ЗаказыПоставщикамОстаткиИОбороты
	|ГДЕ
	|	ЗаказыПоставщикамОстаткиИОбороты.МПЗ В(&СписокМПЗ)";
Запрос.УстановитьПараметр("ДатаНач", НачалоГода(ТекущаяДата()));
Запрос.УстановитьПараметр("ДатаКон", ТекущаяДата());
Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);
	Если Не Поставщик.Пустая() Тогда
	Запрос.Текст = Запрос.Текст + " И ЗаказыПоставщикамОстаткиИОбороты.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("Контрагент", Поставщик);	
	КонецЕсли;
		Если Не Договор.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И ЗаказыПоставщикамОстаткиИОбороты.Договор = &Договор";
		Запрос.УстановитьПараметр("Договор", Договор);	
		КонецЕсли;
Запрос.Текст = Запрос.Текст + " ИТОГИ СУММА(КоличествоКонечныйОстаток),СУММА(КоличествоРасход) ПО МПЗ,ЗаказПоставщику";
РезультатЗапроса = Запрос.Выполнить();
ВыборкаЗаказыПоставщикамМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Если ПоказатьРасходПоДокументам Тогда
	// Запрос по передачам в производство
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МестаХраненияОбороты.МПЗ КАК МПЗ,               
		|	МестаХраненияОбороты.ПериодМесяц КАК Период,
		|	МестаХраненияОбороты.КоличествоРасход КАК КоличествоРасход,
		|	МестаХраненияОбороты.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.МестаХранения.Обороты(&ДатаНач, &ДатаКон, Авто, ) КАК МестаХраненияОбороты
		|ГДЕ
		|	МестаХраненияОбороты.МПЗ В(&СписокМПЗ)
		|	И ТИПЗНАЧЕНИЯ(МестаХраненияОбороты.Регистратор) = ТИП(Документ.ПередачаВПроизводство)
		|ИТОГИ
		|	СУММА(КоличествоРасход)
		|ПО
		|	МПЗ,
		|	Период ПЕРИОДАМИ(МЕСЯЦ, , )";
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(Отчет.Период.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(Отчет.Период.ДатаОкончания));
	Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаПП = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	// Запрос по передачам на линейки
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МестаХраненияОбороты.МПЗ КАК МПЗ,
		|	МестаХраненияОбороты.ПериодМесяц КАК Период,
		|	МестаХраненияОбороты.КоличествоРасход КАК КоличествоРасход,
		|	МестаХраненияОбороты.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.МестаХранения.Обороты(&ДатаНач, &ДатаКон, Авто, ) КАК МестаХраненияОбороты
		|ГДЕ
		|	МестаХраненияОбороты.МПЗ В(&СписокМПЗ)
		|	И (ТИПЗНАЧЕНИЯ(МестаХраненияОбороты.Регистратор) = ТИП(Документ.ПередачаНаЛинейку)
		|			ИЛИ ТИПЗНАЧЕНИЯ(МестаХраненияОбороты.Регистратор) = ТИП(Документ.ПередачаВПереработку))
		|ИТОГИ
		|	СУММА(КоличествоРасход)
		|ПО
		|	МПЗ,
		|	Период ПЕРИОДАМИ(МЕСЯЦ, , )";
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(Отчет.Период.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(Отчет.Период.ДатаОкончания));
	Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаПЛ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	// Запрос по списаниям прочим
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МестаХраненияОбороты.МПЗ КАК МПЗ,
		|	МестаХраненияОбороты.ПериодМесяц КАК Период,
		|	МестаХраненияОбороты.КоличествоРасход КАК КоличествоРасход,
		|	МестаХраненияОбороты.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.МестаХранения.Обороты(&ДатаНач, &ДатаКон, Авто, ) КАК МестаХраненияОбороты
		|ГДЕ
		|	МестаХраненияОбороты.МПЗ В(&СписокМПЗ)
		|	И ТИПЗНАЧЕНИЯ(МестаХраненияОбороты.Регистратор) = ТИП(Документ.СписаниеМПЗПрочее)
		|ИТОГИ
		|	СУММА(КоличествоРасход)
		|ПО
		|	МПЗ,
		|	Период ПЕРИОДАМИ(МЕСЯЦ, , )";
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(Отчет.Период.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(Отчет.Период.ДатаОкончания));
	Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаСП = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КонецЕсли;

ОбъектЗн = РеквизитФормыВЗначение("Отчет");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапкаОбщая = Макет.ПолучитьОбласть("Шапка|Общая");
ОблШапкаПериод = Макет.ПолучитьОбласть("Шапка|Период");
ОблШапкаПериодДок = Макет.ПолучитьОбласть("Шапка|ПериодДок");
ОблШапкаМинОстаток = Макет.ПолучитьОбласть("Шапка|МинОстаток");
ОблГруппаОбщая = Макет.ПолучитьОбласть("Группа|Общая");
ОблГруппаПериод = Макет.ПолучитьОбласть("Группа|Период");
ОблГруппаПериодДок = Макет.ПолучитьОбласть("Группа|ПериодДок");
ОблГруппаМинОстаток = Макет.ПолучитьОбласть("Группа|МинОстаток");
ОблМПЗОбщая = Макет.ПолучитьОбласть("МПЗ|Общая");
ОблМПЗПериод = Макет.ПолучитьОбласть("МПЗ|Период");
ОблМПЗПериодДок = Макет.ПолучитьОбласть("МПЗ|ПериодДок");
ОблМПЗМинОстаток = Макет.ПолучитьОбласть("МПЗ|МинОстаток");
ОблАналогОбщая = Макет.ПолучитьОбласть("Аналог|Общая");
ОблАналогПериод = Макет.ПолучитьОбласть("Аналог|Период");
ОблАналогПериодДок = Макет.ПолучитьОбласть("Аналог|ПериодДок");
ОблАналогМинОстаток = Макет.ПолучитьОбласть("Аналог|МинОстаток");
ОблКонецОбщая = Макет.ПолучитьОбласть("Конец|Общая");
ОблКонецПериод = Макет.ПолучитьОбласть("Конец|Период");
ОблКонецПериодДок = Макет.ПолучитьОбласть("Конец|ПериодДок");
ОблКонецМинОстаток = Макет.ПолучитьОбласть("Конец|МинОстаток");

ОблШапкаОбщая.Параметры.ДатаВывода = ТекущаяДата();
ТабДок.Вывести(ОблШапкаОбщая);

ЭтаФорма_Номенклатура = РеквизитФормыВЗначение("Номенклатура"); // оптимизация
ЭтаФорма_Номенклатура.Индексы.Добавить("Номенклатура");

	Для Каждого Стр Из СписокПериодов Цикл
	ОблШапкаПериод.Параметры.ММГГ = Формат(Стр.Значение,"ДФ=MM.yy");
	ТабДок.Присоединить(ОблШапкаПериод);
		Если ПоказатьРасходПоДокументам Тогда
		ОблШапкаПериодДок.Параметры.ММГГ = Формат(Стр.Значение,"ДФ=MM.yy");
		ТабДок.Присоединить(ОблШапкаПериодДок);
		КонецЕсли;
	КонецЦикла; 	
ТабДок.Присоединить(ОблШапкаМинОстаток);
ТекГруппаМПЗ = Неопределено;
	Для каждого ТЧ Из ТаблицаМПЗ Цикл
		Если ТекГруппаМПЗ <> ТЧ.ГруппаМПЗ Тогда
			Если ТекГруппаМПЗ <> Неопределено Тогда		
			ТабДок.ЗакончитьГруппуСтрок();
			КонецЕсли; 
		ТекГруппаМПЗ = ТЧ.ГруппаМПЗ;
		ОблГруппаОбщая.Параметры.ГруппаМПЗ = ТекГруппаМПЗ;
		ТабДок.Вывести(ОблГруппаОбщая);
			Для Каждого Стр Из СписокПериодов Цикл
			ТабДок.Присоединить(ОблГруппаПериод);
				Если ПоказатьРасходПоДокументам Тогда
				ТабДок.Присоединить(ОблГруппаПериодДок);
				КонецЕсли;
			КонецЦикла;	
		ТабДок.Присоединить(ОблГруппаМинОстаток);
		ТабДок.НачатьГруппуСтрок("По группам МПЗ", Истина);
		КонецЕсли;
	СтатусыМПЗ = РегистрыСведений.СтатусыМПЗ.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("МПЗ",ТЧ.МПЗ));
	ОблМПЗОбщая.Параметры.Статус =Строка(СтатусыМПЗ.Статус);
	ОблМПЗОбщая.Параметры.Наименование = СокрЛП(ТЧ.МПЗ.Наименование); 
	ОблМПЗОбщая.Параметры.МПЗ = ТЧ.МПЗ;
	ОблМПЗОбщая.Параметры.ГруппаПоЗакупкам = ТЧ.МПЗ.ГруппаПоЗакупкам;
	ОблМПЗОбщая.Параметры.ЕдиницаИзмерения = ОбщегоНазначенияПовтИсп.ПолучитьЗначениеРеквизита(ТЧ.МПЗ,"ЕдиницаИзмерения.Наименование");
	ОблМПЗОбщая.Параметры.МинОстаток = ТЧ.МПЗ.МинОстаток;
	ОблМПЗОбщая.Параметры.Цена = ОбщийМодульВызовСервера.ПолучитьПоследнююЦену(ТЧ.МПЗ,Отчет.Период.ДатаОкончания);
	ОблМПЗОбщая.Параметры.СрокПоставки = ТЧ.МПЗ.СрокПоставки; 
	ОблМПЗОбщая.Параметры.КоличествоОстаток = ТЧ.КоличествоОстаток;
	ОблМПЗОбщая.Параметры.КоличествоОстатокПоДоговорам = ТЧ.КоличествоОстатокПоДоговорам;
	Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",ТЧ.МПЗ));
		Если Выборка.Количество() > 0 Тогда
		ОблМПЗОбщая.Параметры.КоличествоОжидаемыйРасход = Выборка[0].КоличествоОжидаемыйРасход;
		Иначе	
		ОблМПЗОбщая.Параметры.КоличествоОжидаемыйРасход = 0;		
		КонецЕсли;
	ВыборкаЗаказыПоставщикамМПЗ.Сбросить();
		Если ВыборкаЗаказыПоставщикамМПЗ.НайтиСледующий(Новый Структура("МПЗ",ТЧ.МПЗ)) Тогда
		ОблМПЗОбщая.Параметры.Долг = ВыборкаЗаказыПоставщикамМПЗ.КоличествоКонечныйОстаток;
		Иначе	
		ОблМПЗОбщая.Параметры.Долг = 0; 
		КонецЕсли;
	КоличествоОстатокПоДоговору = 0;
	ТабДок.Вывести(ОблМПЗОбщая);
	НомСтр = 1;
		Для Каждого Стр Из СписокПериодов Цикл 
		КоличествоРасход = 0;
			Для Каждого ТЧ_Ном Из ТЧ.ТаблицаНоменклатуры Цикл			
			Выборка = ЭтаФорма_Номенклатура.НайтиСтроки(Новый Структура("Номенклатура",ТЧ_Ном.Номенклатура));
				Для к = 0 по Выборка.ВГраница() Цикл
					Если (Стр.Значение>=ТЧ_Ном.ДатаС)и(Стр.Значение<=ТЧ_Ном.ДатаПо) Тогда
					КоличествоРасход = КоличествоРасход + Выборка[к]["Д"+НомСтр]*ТЧ_Ном.Количество;										
					КонецЕсли;
				КонецЦикла; 
			КонецЦикла;
		ОблМПЗПериод.Параметры.КоличествоРасход = КоличествоРасход;
		ТабДок.Присоединить(ОблМПЗПериод);
			Если ПоказатьРасходПоДокументам Тогда
			КоличествоПП = 0;
			КоличествоПЛ = 0;
			КоличествоСП = 0;
			ВыборкаПП.Сбросить();
				Если ВыборкаПП.НайтиСледующий(Новый Структура("МПЗ",ТЧ.МПЗ)) Тогда						
				ВыборкаПериодов = ВыборкаПП.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период","ВСЕ");
					Если ВыборкаПериодов.НайтиСледующий(Новый Структура("Период",Стр.Значение)) Тогда
					КоличествоПП = ВыборкаПериодов.КоличествоРасход;
					КонецЕсли; 
				КонецЕсли; 
			ВыборкаПЛ.Сбросить();
				Если ВыборкаПЛ.НайтиСледующий(Новый Структура("МПЗ",ТЧ.МПЗ)) Тогда						
				ВыборкаПериодов = ВыборкаПЛ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период","ВСЕ");
					Если ВыборкаПериодов.НайтиСледующий(Новый Структура("Период",Стр.Значение)) Тогда
					КоличествоПЛ = ВыборкаПериодов.КоличествоРасход;
					КонецЕсли; 
				КонецЕсли;
			ВыборкаСП.Сбросить();
				Если ВыборкаСП.НайтиСледующий(Новый Структура("МПЗ",ТЧ.МПЗ)) Тогда						
				ВыборкаПериодов = ВыборкаСП.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период","ВСЕ");
					Если ВыборкаПериодов.НайтиСледующий(Новый Структура("Период",Стр.Значение)) Тогда
					КоличествоСП = ВыборкаПериодов.КоличествоРасход;
					КонецЕсли; 
				КонецЕсли;
			ОблМПЗПериодДок.Параметры.КоличествоПП = КоличествоПП;
			ОблМПЗПериодДок.Параметры.КоличествоПЛ = КоличествоПЛ;
			ОблМПЗПериодДок.Параметры.КоличествоСП = КоличествоСП;
			ТабДок.Присоединить(ОблМПЗПериодДок);
			КонецЕсли;
		НомСтр = НомСтр + 1;
		КонецЦикла;
	ОблМПЗМинОстаток.Параметры.МинОстаток = ТЧ.МПЗ.МинОстаток;
	ТабДок.Присоединить(ОблМПЗМинОстаток);
	ВыборкаАналоги = ТаблицаАналоговМПЗ.НайтиСтроки(Новый Структура("МПЗ",ТЧ.МПЗ));
		Если ВыборкаАналоги.Количество() > 0 Тогда
		ТабДок.НачатьГруппуСтрок("По МПЗ", Истина);
			Для м = 0 по ВыборкаАналоги.ВГраница() Цикл	
			Аналог = ВыборкаАналоги[м].АналогМПЗ;
			СтатусыМПЗ = РегистрыСведений.СтатусыМПЗ.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("МПЗ",Аналог));
			ОблАналогОбщая.Параметры.Статус = Строка(СтатусыМПЗ.Статус);
			ОблАналогОбщая.Параметры.Наименование = СокрЛП(Аналог.Наименование); 
			ОблАналогОбщая.Параметры.МПЗ = Аналог;
			ОблАналогОбщая.Параметры.ГруппаПоЗакупкам = Аналог.ГруппаПоЗакупкам;
			ОблАналогОбщая.Параметры.ЕдиницаИзмерения = ОбщегоНазначенияПовтИсп.ПолучитьЗначениеРеквизита(Аналог,"ЕдиницаИзмерения.Наименование");
			ОблАналогОбщая.Параметры.МинОстаток = Аналог.МинОстаток;
			ОблАналогОбщая.Параметры.Цена = ОбщийМодульВызовСервера.ПолучитьПоследнююЦену(Аналог,Отчет.Период.ДатаОкончания);
			ОблАналогОбщая.Параметры.СрокПоставки = Аналог.СрокПоставки; 
			ОблАналогОбщая.Параметры.КоличествоОстаток = ВыборкаАналоги[м].КоличествоОстаток;
			ОблАналогОбщая.Параметры.КоличествоОстатокПоДоговорам = ВыборкаАналоги[м].КоличествоОстатокПоДоговорам;
			Выборка = ТаблицаРасходаМПЗ.НайтиСтроки(Новый Структура("МПЗ",Аналог));
				Если Выборка.Количество() > 0 Тогда
				ОблАналогОбщая.Параметры.КоличествоОжидаемыйРасход = Выборка[0].КоличествоОжидаемыйРасход;
				Иначе	
				ОблАналогОбщая.Параметры.КоличествоОжидаемыйРасход = 0;		
				КонецЕсли;
			ВыборкаЗаказыПоставщикамМПЗ.Сбросить();
				Если ВыборкаЗаказыПоставщикамМПЗ.НайтиСледующий(Новый Структура("МПЗ",Аналог)) Тогда
				ОблАналогОбщая.Параметры.Долг = ВыборкаЗаказыПоставщикамМПЗ.КоличествоКонечныйОстаток;
				Иначе	
				ОблАналогОбщая.Параметры.Долг = 0; 
				КонецЕсли;
			ТабДок.Вывести(ОблАналогОбщая);
			НомСтр = 1;
				Для Каждого Стр Из СписокПериодов Цикл 
				КоличествоРасход = 0;
					Для Каждого ТЧ_Ном Из ВыборкаАналоги[м].ТаблицаНоменклатуры Цикл	
					Выборка = ЭтаФорма_Номенклатура.НайтиСтроки(Новый Структура("Номенклатура",ТЧ_Ном.Номенклатура));
						Для к = 0 по Выборка.ВГраница() Цикл
							Если (Стр.Значение>=ТЧ_Ном.ДатаС)и(Стр.Значение<=ТЧ_Ном.ДатаПо) Тогда
							КоличествоРасход = КоличествоРасход + Выборка[к]["Д"+НомСтр]*ТЧ_Ном.Количество;										
							КонецЕсли; 
						КонецЦикла; 
					КонецЦикла;
				ОблАналогПериод.Параметры.КоличествоРасход = КоличествоРасход;
				ТабДок.Присоединить(ОблАналогПериод);
					Если ПоказатьРасходПоДокументам Тогда
					КоличествоПП = 0;
					КоличествоПЛ = 0;
					КоличествоСП = 0;
					ВыборкаПП.Сбросить();
						Если ВыборкаПП.НайтиСледующий(Новый Структура("МПЗ",Аналог)) Тогда						
						ВыборкаПериодов = ВыборкаПП.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период","ВСЕ");
							Если ВыборкаПериодов.НайтиСледующий(Новый Структура("Период",Стр.Значение)) Тогда
							КоличествоПП = ВыборкаПериодов.КоличествоРасход;
							КонецЕсли; 
						КонецЕсли; 
					ВыборкаПЛ.Сбросить();
						Если ВыборкаПЛ.НайтиСледующий(Новый Структура("МПЗ",Аналог)) Тогда						
						ВыборкаПериодов = ВыборкаПЛ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период","ВСЕ");
							Если ВыборкаПериодов.НайтиСледующий(Новый Структура("Период",Стр.Значение)) Тогда
							КоличествоПЛ = ВыборкаПериодов.КоличествоРасход;
							КонецЕсли; 
						КонецЕсли;
					ВыборкаСП.Сбросить();
						Если ВыборкаСП.НайтиСледующий(Новый Структура("МПЗ",Аналог)) Тогда						
						ВыборкаПериодов = ВыборкаСП.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период","ВСЕ");
							Если ВыборкаПериодов.НайтиСледующий(Новый Структура("Период",Стр.Значение)) Тогда
							КоличествоСП = ВыборкаПериодов.КоличествоРасход;
							КонецЕсли; 
						КонецЕсли;
					ОблАналогПериодДок.Параметры.КоличествоПП = КоличествоПП;
					ОблАналогПериодДок.Параметры.КоличествоПЛ = КоличествоПЛ;
					ОблАналогПериодДок.Параметры.КоличествоСП = КоличествоСП;
					ТабДок.Присоединить(ОблАналогПериодДок);
					КонецЕсли;
				НомСтр = НомСтр + 1;
				КонецЦикла;
			ОблАналогМинОстаток.Параметры.МинОстаток = Аналог.МинОстаток;
			ТабДок.Присоединить(ОблАналогМинОстаток);
			КонецЦикла;
		ТабДок.ЗакончитьГруппуСтрок();
		КонецЕсли; 
	КонецЦикла;
		Если ТекГруппаМПЗ <> Неопределено Тогда		
		ТабДок.ЗакончитьГруппуСтрок();
		КонецЕсли;
ТабДок.Вывести(ОблКонецОбщая);
	Для Каждого Стр Из СписокПериодов Цикл
	ТабДок.Присоединить(ОблКонецПериод);
		Если ПоказатьРасходПоДокументам Тогда
		ТабДок.Присоединить(ОблКонецПериодДок);
		КонецЕсли;	
	КонецЦикла;
ТабДок.Присоединить(ОблКонецМинОстаток);
ТабДок.ФиксацияСверху = 3;
ТабДок.ФиксацияСлева = 4;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
Элементы.Настройки.Скрыть();
НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах(); 
Состояние("Обработка...",,"Формирование таблицы отчёта...");
СформироватьНаСервере();
ОкончаниеЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
Элементы.Настройки.ЗаголовокСвернутогоОтображения = "Сформирован за "+Окр((ОкончаниеЗамера - НачалоЗамера)/1000/60,1)+" мин.";
КонецПроцедуры

&НаСервере
Процедура ПолучитьПерспективныйПланНаСервере()
ТЗ = Новый ТаблицаЗначений;

ТЗ.Колонки.Добавить("Статус",Новый ОписаниеТипов("ПеречислениеСсылка.СтатусыСпецификаций"),"Ст.");
ТЗ.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"),"Номенклатура");
СписокПериодов.Очистить();
ТекДата = Отчет.Период.ДатаНачала;
	Пока ТекДата <= Отчет.Период.ДатаОкончания Цикл
		Если День(ТекДата) = 1 Тогда
		СписокПериодов.Добавить(ТекДата);	
		ТЗ.Колонки.Добавить("Д"+СписокПериодов.Количество(),Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)),Формат(ТекДата,"ДФ=MM.yy"));	
		КонецЕсли;			
	ТекДата = ТекДата + 86400;
	КонецЦикла;
	
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПерспективныеПланы.МПЗ КАК МПЗ,
	|	ПерспективныеПланы.Количество КАК Количество,
	|	ПерспективныеПланы.Период КАК Период
	|ИЗ
	|	РегистрСведений.ПерспективныеПланы КАК ПерспективныеПланы
	|ГДЕ
	|	ПерспективныеПланы.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И ТИПЗНАЧЕНИЯ(ПерспективныеПланы.МПЗ) = ТИП(Справочник.Номенклатура)
	|	И ПерспективныеПланы.Проект = &Проект";
	Если СписокГруппНоменклатуры.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ПерспективныеПланы.МПЗ В ИЕРАРХИИ(&СписокГруппНоменклатуры)";
	Запрос.УстановитьПараметр("СписокГруппНоменклатуры", СписокГруппНоменклатуры);
	КонецЕсли;
Запрос.Текст = Запрос.Текст + " ИТОГИ СУММА(Количество) ПО МПЗ,Период ПЕРИОДАМИ(МЕСЯЦ, , )";
Запрос.УстановитьПараметр("ДатаНач", Отчет.Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон", Отчет.Период.ДатаОкончания);
Запрос.УстановитьПараметр("Проект", Справочники.Проекты.ПустаяСсылка());
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМПЗ.Следующий() Цикл
		Если ВыборкаМПЗ.Количество = 0 Тогда
		Продолжить;
		КонецЕсли;
			Если ТипИзделий = 1 Тогда
				Если Найти(ВыборкаМПЗ.МПЗ.Наименование,"_Х") > 0 Тогда
				Продолжить;
				КонецЕсли;	
			ИначеЕсли ТипИзделий = 2 Тогда
				Если Найти(ВыборкаМПЗ.МПЗ.Наименование,"_Х") = 0 Тогда
				Продолжить;
				КонецЕсли;			
			КонецЕсли;
	ТЧ = ТЗ.Добавить();
	ТЧ.Статус = ПолучитьСтатус(ВыборкаМПЗ.МПЗ);		
	ТЧ.Номенклатура = ВыборкаМПЗ.МПЗ;
	ВыборкаПериод = ВыборкаМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	НомСтр = 0;
		Для Каждого Стр Из СписокПериодов Цикл
		НомСтр = НомСтр + 1;
	    ВыборкаПериод.Сбросить();
			Если ВыборкаПериод.НайтиСледующий(Новый Структура("Период",Стр.Значение)) Тогда
			ТЧ["Д"+НомСтр] = ВыборкаПериод.Количество;			
			Иначе
			ТЧ["Д"+НомСтр] = 0;
			КонецЕсли;
		КонецЦикла;	
	КонецЦикла;
МассивРеквизитов = Новый Массив;
МассивУдаляемыхРеквизитов = Новый Массив;
МассивРеквизитов.Добавить(Новый РеквизитФормы("Номенклатура", Новый ОписаниеТипов("ТаблицаЗначений"), "", "Номенклатура"));
	Для Каждого Колонка Из ТЗ.Колонки Цикл
    МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "Номенклатура", Колонка.Заголовок)); 
	КонецЦикла;
МассивУдаляемыхРеквизитов.Добавить("Номенклатура");
	Если Элементы.Найти("Номенклатура") <> Неопределено Тогда
	Элементы.Удалить(Элементы["Номенклатура"]);
	ИзменитьРеквизиты(,МассивУдаляемыхРеквизитов);
	КонецЕсли;
ИзменитьРеквизиты(МассивРеквизитов);
//Помещаем Элементы на форму 
Таблица = Элементы.Добавить("Номенклатура", Тип("ТаблицаФормы"),Элементы.ПерспективныйПлан); 
Таблица.ПутьКДанным = "Номенклатура"; 
Таблица.Отображение = ОтображениеТаблицы.Список;
Таблица.ЧередованиеЦветовСтрок = Истина; 
	Для Каждого Колонка Из ТЗ.Колонки Цикл
    НовыйЭлемент = Элементы.Добавить("Номенклатура_" + Колонка.Имя, Тип("ПолеФормы"), Таблица); 
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
    НовыйЭлемент.ПутьКДанным = "Номенклатура." + Колонка.Имя; 
	КонецЦикла;
//переносим таблицу значений на форму 
ЗначениеВРеквизитФормы(ТЗ,"Номенклатура");
КонецПроцедуры

&НаСервере
Процедура ПолучитьПерспективныйПланТНПНаСервере()
ТЗ = Новый ТаблицаЗначений;

ТЗ.Колонки.Добавить("Статус",Новый ОписаниеТипов("ПеречислениеСсылка.СтатусыМПЗ"),"Ст.");
ТЗ.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Материалы"),"МПЗ");
ТЗ.Колонки.Добавить("КоличествоВыпущено",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)),"Выпущено");
ТЗ.Колонки.Добавить("КоличествоНеЗапущено",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)),"Не запущено");
ТЗ.Индексы.Добавить("Номенклатура"); // оптимизация
СписокПериодов.Очистить();
ТекДата = Отчет.Период.ДатаНачала;
	Пока ТекДата <= Отчет.Период.ДатаОкончания Цикл
		Если День(ТекДата) = 1 Тогда
		СписокПериодов.Добавить(ТекДата);	
		ТЗ.Колонки.Добавить("Д"+СписокПериодов.Количество(),Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)),Формат(ТекДата,"ДФ=MM.yy"));	
		КонецЕсли;			
	ТекДата = ТекДата + 86400;
	КонецЦикла;
	
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПерспективныеПланы.МПЗ КАК МПЗ,
	|	ПерспективныеПланы.Количество КАК Количество,
	|	ПерспективныеПланы.Период КАК Период
	|ИЗ
	|	РегистрСведений.ПерспективныеПланы КАК ПерспективныеПланы
	|ГДЕ
	|	ПерспективныеПланы.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И ТИПЗНАЧЕНИЯ(ПерспективныеПланы.МПЗ) = ТИП(Справочник.Материалы)
	|	И ПерспективныеПланы.Проект = &Проект";
Запрос.УстановитьПараметр("ДатаНач", Отчет.Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон", Отчет.Период.ДатаОкончания);
Запрос.УстановитьПараметр("Проект", Справочники.Проекты.ПустаяСсылка());
	Если СписокГруппНоменклатуры.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ПерспективныеПланы.МПЗ В ИЕРАРХИИ(&СписокГруппНоменклатуры)";
	Запрос.УстановитьПараметр("СписокГруппНоменклатуры", СписокГруппНоменклатуры);
	КонецЕсли;
Запрос.Текст = Запрос.Текст + " ИТОГИ СУММА(Количество) ПО МПЗ,Период ПЕРИОДАМИ(МЕСЯЦ, , )";
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМПЗ.Следующий() Цикл
		Если ВыборкаМПЗ.Количество = 0 Тогда
		Продолжить;
		КонецЕсли;
	ТЧ = ТЗ.Добавить();
	ТЧ.Статус = ПолучитьСтатус(ВыборкаМПЗ.МПЗ);		
	ТЧ.Номенклатура = ВыборкаМПЗ.МПЗ;
	ВыборкаПериод = ВыборкаМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	НомСтр = 0;
		Для Каждого Стр Из СписокПериодов Цикл
		НомСтр = НомСтр + 1;
	    ВыборкаПериод.Сбросить();
			Если ВыборкаПериод.НайтиСледующий(Новый Структура("Период",Стр.Значение)) Тогда
			ТЧ["Д"+НомСтр] = ВыборкаПериод.Количество;			
			Иначе
			ТЧ["Д"+НомСтр] = 0;
			КонецЕсли;
		КонецЦикла;	
	КонецЦикла;
МассивРеквизитов = Новый Массив;
МассивУдаляемыхРеквизитов = Новый Массив;
МассивРеквизитов.Добавить(Новый РеквизитФормы("Номенклатура", Новый ОписаниеТипов("ТаблицаЗначений"), "", "Номенклатура"));
	Для Каждого Колонка Из ТЗ.Колонки Цикл
    МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "Номенклатура", Колонка.Заголовок)); 
	КонецЦикла;
МассивУдаляемыхРеквизитов.Добавить("Номенклатура");
	Если Элементы.Найти("Номенклатура") <> Неопределено Тогда
	Элементы.Удалить(Элементы["Номенклатура"]);
	ИзменитьРеквизиты(,МассивУдаляемыхРеквизитов);
	КонецЕсли;
ИзменитьРеквизиты(МассивРеквизитов);
//Помещаем Элементы на форму 
Таблица = Элементы.Добавить("Номенклатура", Тип("ТаблицаФормы"),Элементы.ПерспективныйПлан); 
Таблица.ПутьКДанным = "Номенклатура"; 
Таблица.Отображение = ОтображениеТаблицы.Список;
Таблица.ЧередованиеЦветовСтрок = Истина; 
	Для Каждого Колонка Из ТЗ.Колонки Цикл
    НовыйЭлемент = Элементы.Добавить("Номенклатура_" + Колонка.Имя, Тип("ПолеФормы"), Таблица); 
    НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода; 
    НовыйЭлемент.ПутьКДанным = "Номенклатура." + Колонка.Имя; 
	КонецЦикла;
//переносим таблицу значений на форму 
ЗначениеВРеквизитФормы(ТЗ,"Номенклатура");
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПерспективныйПлан(Команда)
	Если ТипСправочника = 1 Тогда
	ПолучитьПерспективныйПланТНПНаСервере();
	Иначе
	ПолучитьПерспективныйПланНаСервере();
	КонецЕсли;
Элементы.Сформировать.Доступность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикПриИзменении(Элемент)
ПоставщикПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПоставщикПриИзмененииНаСервере()
Договор = Поставщик.ОсновнойДоговор;
КонецПроцедуры

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
ИмяКолонки = СокрЛП(Сред(Элемент.ТекущаяОбласть.Имя,Найти(Элемент.ТекущаяОбласть.Имя,"C")));
НомерКолонки = Число(Сред(ИмяКолонки,2));
	Если НомерКолонки = 7 Тогда
	СтандартнаяОбработка = Ложь;
	Отбор = Новый Структура("МПЗ",Расшифровка);
		Если СписокМестХранения.Количество() > 0 Тогда	
		Отбор.Вставить("МестоХранения",СписокМестХранения);
		КонецЕсли;
	ИмяОтчета = "ОтчётПоРегиструМестаХранения";
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
	ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьПользовательскиеНастройкиОтчетаСКД(ИмяОтчета,ТекущаяДата(),ТекущаяДата(),Отбор,"ОстаткиПоСкладам"));
	ПараметрыФормы.Вставить("КлючВарианта","ОстаткиПоСкладам"); 
	ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);	
	ИначеЕсли НомерКолонки = 8 Тогда
	СтандартнаяОбработка = Ложь;
	Отбор = Новый Структура("МПЗ",Расшифровка);
		Если Не Поставщик.Пустая() Тогда	
		Отбор.Вставить("Контрагент",Поставщик);
		КонецЕсли;
			Если Не Договор.Пустая() Тогда	
			Отбор.Вставить("Договор",Договор);
			КонецЕсли; 
	ИмяОтчета = "ОтчётПоРегиструЗаказыПоставщикам";
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
	ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьПользовательскиеНастройкиОтчетаСКД(ИмяОтчета,НачалоГода(ТекущаяДата()),ТекущаяДата(),Отбор,"ПоПоставщикамВРазрезеЗаказов"));
	ПараметрыФормы.Вставить("КлючВарианта","ПоПоставщикамВРазрезеЗаказов"); 
	ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);	
	ИначеЕсли НомерКолонки = 9 Тогда
	СтандартнаяОбработка = Ложь;
	Отбор = Новый Структура("МПЗ",Расшифровка);
		Если Не Поставщик.Пустая() Тогда	
		Отбор.Вставить("Контрагент",Поставщик);
		КонецЕсли;
			Если Не Договор.Пустая() Тогда	
			Отбор.Вставить("Договор",Договор);
			КонецЕсли; 
	ИмяОтчета = "ОтчетПоРегиструДоговорныхПозиций";
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
	ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьПользовательскиеНастройкиОтчетаСКД(ИмяОтчета,ТекущаяДата(),ТекущаяДата(),Отбор,"ПоМПЗ"));
	ПараметрыФормы.Вставить("КлючВарианта","ПоМПЗ"); 
	ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);
	КонецЕсли;
КонецПроцедуры
