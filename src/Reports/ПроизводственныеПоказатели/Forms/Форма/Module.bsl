
&НаСервере
Процедура РасчитатьПланДня()
ОтставаниеОтПланаПроизводства = РегистрыСведений.ОтставаниеОтПланаПроизводства.Получить(НачалоМесяца(Объект.НаДату),Новый Структура("Линейка",Объект.Линейка));
КолОтставание = ОтставаниеОтПланаПроизводства.Количество;
ВыбДата = НачалоДня(НачалоМесяца(Объект.НаДату));
	Пока ВыбДата <= НачалоДня(Объект.НаДату) Цикл
	Отбор = Новый Структура("ПроизводственныйКалендарь,Дата,Год",Константы.ОсновнойПроизводственныйКалендарь.Получить(),ВыбДата,Год(ВыбДата));
	Выборка = РегистрыСведений.ДанныеПроизводственногоКалендаря.Получить(Отбор);
		Если Выборка.ВидДня <> Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий Тогда
		ВыбДата = ВыбДата + 86400;
		Продолжить;
		КонецЕсли; 
	ДолгСкладуГП = КолОтставание;
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланыВыпускаОстаткиИОбороты.КоличествоПриход КАК КоличествоПриход
		|ИЗ
		|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , ) КАК ПланыВыпускаОстаткиИОбороты
		|ГДЕ
		|	ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Линейка = &Линейка
		|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Ремонт = ЛОЖЬ
		|ИТОГИ
		|	СУММА(КоличествоПриход)
		|ПО
		|	ОБЩИЕ";	
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ВыбДата));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ВыбДата));
	Запрос.УстановитьПараметр("Линейка",Объект.Линейка);
	Результат = Запрос.Выполнить();
	ВыборкаИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КолПриход = 0;
		Пока ВыборкаИтоги.Следующий() Цикл
		КолПриход = ВыборкаИтоги.КоличествоПриход;	
		КонецЦикла;		
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланыВыпускаОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	ПланыВыпускаОстаткиИОбороты.КоличествоРасход КАК КоличествоРасход,
		|	ПланыВыпускаОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток
		|ИЗ
		|	РегистрНакопления.ПланыВыпуска.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , ) КАК ПланыВыпускаОстаткиИОбороты
		|ГДЕ
		|	(ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|				И ПланыВыпускаОстаткиИОбороты.КоличествоРасход > 0
		|			ИЛИ ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Дата < &ДатаНач)
		|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Линейка = &Линейка
		|	И ПланыВыпускаОстаткиИОбороты.МаршрутнаяКарта.Ремонт = ЛОЖЬ
		|ИТОГИ
		|	СУММА(КоличествоНачальныйОстаток),
		|	СУММА(КоличествоРасход),
		|	СУММА(КоличествоКонечныйОстаток)
		|ПО
		|	ОБЩИЕ";  	
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ВыбДата));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ВыбДата));
	Запрос.УстановитьПараметр("Линейка",Объект.Линейка);
	Результат = Запрос.Выполнить();
	ВыборкаИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КолРасход = 0;
	КолПлан = 0;
		Пока ВыборкаИтоги.Следующий() Цикл
		КолРасход = ВыборкаИтоги.КоличествоРасход;
		КонецЦикла;	
	Отбор = Новый Структура("Линейка",Объект.Линейка);
	ПаспортЛинейки = РегистрыСведений.ПаспортЛинейки.ПолучитьПоследнее(ВыбДата,Отбор);
		Если КолОтставание < ПаспортЛинейки.ВыпускЗаДеньРасчётный Тогда
		КолПлан = КолОтставание;
		Иначе
		КолПлан = ПаспортЛинейки.ВыпускЗаДеньРасчётный;
		КонецЕсли; 
	КолОтставание = КолОтставание + КолПриход - КолРасход;
	ВыбДата = ВыбДата + 86400;
	КонецЦикла;
ПланДня = КолПлан;
ПаспортЛинейки = РегистрыСведений.ПаспортЛинейки.ПолучитьПоследнее(Объект.НаДату,Новый Структура("Линейка",Объект.Линейка));
ВремяТактаМаксимальное = ПаспортЛинейки.ВремяТактаМаксимальное;
ВремяТактаМинимальное = ПаспортЛинейки.ВремяТактаМинимальное;
ВремяТактаРасчётное = ПаспортЛинейки.ВремяТактаРасчётное;
КонецПроцедуры

&НаКлиенте
Процедура ЛинейкаПриИзменении(Элемент)
СписокРабочихМест.Очистить();
РасчитатьПланДня();
КонецПроцедуры

&НаСервере
Процедура НастроитьСерии()
ГСЧ = Новый ГенераторСлучайныхЧисел(255);

ТабДок.Очистить();
СерияПлан = ТабДок.УстановитьСерию("План");
ЦветСерии = Новый Цвет(ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255));
СерияПлан.Цвет = ЦветСерии;
ЛинияСерии = Новый Линия(ТипЛинииДиаграммы.Пунктир,2);
СерияПлан.Линия = ЛинияСерии;
СерияПлан.Маркер = ТипМаркераДиаграммы.Нет;	
СерияПлан.Текст = "План = "+ПланДня;

//СерияПлан = ТабДок.УстановитьСерию("Долг");
//ЦветСерии = Новый Цвет(ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255));
//СерияПлан.Цвет = ЦветСерии;
//ЛинияСерии = Новый Линия(ТипЛинииДиаграммы.Пунктир,2);
//СерияПлан.Линия = ЛинияСерии;
//СерияПлан.Маркер = ТипМаркераДиаграммы.Нет;	
//СерияПлан.Текст = "Долг = "+ДолгСкладуГП;

СерияПлан = ТабДок.УстановитьСерию("ПланМакс");
ЦветСерии = Новый Цвет(ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255));
СерияПлан.Цвет = ЦветСерии;
ЛинияСерии = Новый Линия(ТипЛинииДиаграммы.Пунктир,2);
СерияПлан.Линия = ЛинияСерии;
СерияПлан.Маркер = ТипМаркераДиаграммы.Нет;	
СерияПлан.Текст = "Время такта max = "+ВремяТактаМаксимальное;

СерияПлан = ТабДок.УстановитьСерию("ПланМин");
ЦветСерии = Новый Цвет(ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255));
СерияПлан.Цвет = ЦветСерии;
ЛинияСерии = Новый Линия(ТипЛинииДиаграммы.Пунктир,2);
СерияПлан.Линия = ЛинияСерии;
СерияПлан.Маркер = ТипМаркераДиаграммы.Нет;	
СерияПлан.Текст = "Время такта min = "+ВремяТактаМинимальное;
	Для каждого Стр Из СписокРабочихМест Цикл
	СерияФакт = ТабДок.УстановитьСерию(Стр.Значение.Наименование);
	ЦветСерии = Новый Цвет(ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255), ГСЧ.СлучайноеЧисло(0,255));
	СерияФакт.Цвет = ЦветСерии;
	ЛинияСерии = Новый Линия(ТипЛинииДиаграммы.Сплошная,4);
	СерияФакт.Линия = ЛинияСерии;
	СерияФакт.Маркер = ТипМаркераДиаграммы.Нет;	
	КонецЦикла;
КонецПроцедуры

&НаСервере 
Процедура РасчитатьПроцентБрака()
СписокРМ = Новый СписокЗначений;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РемонтнаяКарта.Ссылка,
	|	РемонтнаяКарта.ДатаНачала,
	|	РемонтнаяКарта.ДатаОкончания,
	|	РемонтнаяКарта.ДокументОснование,
	|	РемонтнаяКарта.РабочееМесто,
	|	РемонтнаяКарта.Изделие
	|ИЗ
	|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
	|ГДЕ
	|	РемонтнаяКарта.Линейка = &Линейка
	|	И РемонтнаяКарта.ДатаНачала <= &ДатаКон";
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.НаДату));
Запрос.УстановитьПараметр("Линейка", Объект.Линейка);
РезультатЗапроса = Запрос.Выполнить();
Отправлено = 0;
Отремонтировано = 0;
ВыборкаРМ = РезультатЗапроса.Выбрать();
	Пока ВыборкаРМ.Следующий() Цикл
		Если ВыборкаРМ.ДатаНачала >= НачалоДня(Объект.НаДату) Тогда
		Отправлено = Отправлено + 1;			
		КонецЕсли;
			Если ЗначениеЗаполнено(ВыборкаРМ.ДатаОкончания) Тогда
				Если ВыборкаРМ.ДатаОкончания < НачалоДня(Объект.НаДату) Тогда				
				Продолжить;
				КонецЕсли; 
					Если (ВыборкаРМ.ДатаОкончания >= НачалоДня(Объект.НаДату))и(ВыборкаРМ.ДатаОкончания <= КонецДня(Объект.НаДату)) Тогда
					Отремонтировано = Отремонтировано + 1;
					КонецЕсли;			
			КонецЕсли;	
				Если СписокРМ.НайтиПоЗначению(ВыборкаРМ.РабочееМесто) = Неопределено Тогда
				СписокРМ.Добавить(ВыборкаРМ.РабочееМесто);
				КонецЕсли;
	КонецЦикла;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданий.Изделие,
	|	ЭтапыПроизводственныхЗаданий.РабочееМесто
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданий.ДатаНачала МЕЖДУ &ДатаНач И &ДатаКон
	|	И ЭтапыПроизводственныхЗаданий.РабочееМесто В(&СписокРабочихМест)";
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.НаДату));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.НаДату));
Запрос.УстановитьПараметр("СписокРабочихМест", СписокРМ);
РезультатЗапроса = Запрос.Выполнить();
КолПоступило = 0;
ВыборкаРМ = РезультатЗапроса.Выбрать();
	Пока ВыборкаРМ.Следующий() Цикл
	КолПоступило = КолПоступило + 1;	
	КонецЦикла;

Элементы.ПроцентБрака.Заголовок = "Процент брака на линейке = "+?(КолПоступило+Отремонтировано > 0,Окр(Отправлено*100/(КолПоступило+Отремонтировано),2,1),0)+"%";
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	Если СписокРабочихМест.Количество() = 0 Тогда
	Возврат;
	КонецЕсли;
ТабДок.ОбластьЗаголовка.Текст = "Линейка "+СокрЛП(Объект.Линейка.Наименование)+" ("+СокрЛП(Объект.Линейка.Комментарий)+")";	
ТабДок.КоличествоТочек = 0;
ТабДок.АвтоТранспонирование = Ложь;
ДатаНач = НачалоДня(Объект.НаДату)+28800;
	Если Объект.НаДату = НачалоДня(ТекущаяДата()) Тогда		
	ДатаКон = ТекущаяДата();
		Если (ДатаКон-ПериодВремени*3600) >= ДатаНач Тогда
		ДатаНачОтображения = ДатаКон-ПериодВремени*3600;
		Иначе
		ДатаНачОтображения = ДатаНач;
		КонецЕсли;
	Иначе
	ДатаКон = НачалоДня(Объект.НаДату)+61200;
	ДатаНачОтображения = ДатаНач;
	КонецЕсли; 
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданий.ПЗ КАК ПЗ,
	|	ЭтапыПроизводственныхЗаданий.ДатаОкончания,
	|	ЭтапыПроизводственныхЗаданий.РабочееМесто КАК РабочееМесто
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданий.РабочееМесто В(&СписокРабочихМест)
	|	И ЭтапыПроизводственныхЗаданий.ДатаОкончания МЕЖДУ &ДатаНач И &ДатаКон
	|ИТОГИ ПО
	|	РабочееМесто";
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.НаДату));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.НаДату));
Запрос.УстановитьПараметр("СписокРабочихМест", СписокРабочихМест);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаРМ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для каждого Стр Из СписокРабочихМест Цикл	
	КолРасход = 0;
	ВыборкаРМ.Сбросить();
		Пока ВыборкаРМ.НайтиСледующий(Новый Структура("РабочееМесто",Стр.Значение)) Цикл
		ВыборкаДетальныеЗаписи = ВыборкаРМ.Выбрать();
		КолРасход = ВыборкаДетальныеЗаписи.Количество();
		СерияФакт = ТабДок.УстановитьСерию(Стр.Значение.Наименование);		
		СерияФакт.Текст = СокрЛП(Стр.Значение.Наименование)+" - "+КолРасход;
		КонецЦикла;		
	КонецЦикла;	
КолПлан = 0;
Итерация = 0;
ДатаВремя = ДатаНач;	
	Пока ДатаВремя < ДатаКон Цикл
		Если (ДатаВремя-НачалоДня(Объект.НаДату) < 43200)или(ДатаВремя-НачалоДня(Объект.НаДату) > 45600) Тогда
		Итерация = Итерация + 1;			
		КонецЕсли;
			Если ДатаВремя >= ДатаНачОтображения Тогда
			Точка = ТабДок.Точки.Добавить(Сред(ДатаВремя,12));

			СерияПлан = ТабДок.УстановитьСерию("План");
			ТабДок.УстановитьЗначение(Точка,СерияПлан,ПланДня,ПланДня);

			//СерияДолг = ТабДок.УстановитьСерию("Долг");
			//ТабДок.УстановитьЗначение(Точка,СерияДолг,ДолгСкладуГП,ДолгСкладуГП);

			КолПлан = Мин(ПланДня,?(ВремяТактаМинимальное > 0,Окр(Итерация/ВремяТактаМинимальное,0,1),0));
			СерияПлан = ТабДок.УстановитьСерию("ПланМин");
			ТабДок.УстановитьЗначение(Точка,СерияПлан,КолПлан,КолПлан);

			КолПлан = Мин(ПланДня,?(ВремяТактаМаксимальное > 0,Окр(Итерация/ВремяТактаМаксимальное,0,1),0));
			СерияПлан = ТабДок.УстановитьСерию("ПланМакс");
			ТабДок.УстановитьЗначение(Точка,СерияПлан,КолПлан,КолПлан);	
				Для каждого Стр Из СписокРабочихМест Цикл				
				КолФакт = 0;
				ВыборкаРМ.Сбросить();
					Пока ВыборкаРМ.НайтиСледующий(Новый Структура("РабочееМесто",Стр.Значение)) Цикл
					ВыборкаДетальныеЗаписи = ВыборкаРМ.Выбрать();
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			 				Если (ВыборкаДетальныеЗаписи.ДатаОкончания < ДатаНач)или(ВыборкаДетальныеЗаписи.ДатаОкончания > ДатаВремя)Тогда
							Продолжить;
							КонецЕсли;
						КолФакт = КолФакт+1;
						КонецЦикла;				
					КонецЦикла;			
				СерияФакт = ТабДок.УстановитьСерию(Стр.Значение.Наименование);
				ТабДок.УстановитьЗначение(Точка,СерияФакт,КолФакт,КолФакт);					
				КонецЦикла;		
			КонецЕсли;
	ДатаВремя = ДатаВремя+60;	
	КонецЦикла;
Элементы.ПроцентВыполненияПлана.Заголовок = "План выполнен на "+?(ПланДня > 0,Окр(КолФакт*100/ПланДня,0,1),0)+"%";
Элементы.План.Заголовок = "План = "+ПланДня;
Элементы.Долг.Заголовок = "Долг = "+ДолгСкладуГП;
РасчитатьПроцентБрака();
ТабДок.АвтоТранспонирование = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет()
СформироватьНаСервере();	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	НастроитьСерии();	
	СформироватьНаСервере();
		Если НачалоДня(ТекущаяДата()) = НачалоДня(Объект.НаДату) Тогда
		ОтключитьОбработчикОжидания("СформироватьОтчет");
			Если ИнтервалОбновления > 0 Тогда
			ПодключитьОбработчикОжидания("СформироватьОтчет", ИнтервалОбновления*60);
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры
 
&НаКлиенте
Процедура ПриОткрытии(Отказ)
ЭтаФорма.Заголовок = "Производственные показатели на "+Формат(Объект.НаДату,"ДФ=dd.MM.yyyy");
РасчитатьПланДня();	
	Если ЗапускатьПриВходе Тогда
	Сформировать(Неопределено);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура СписокРабочихМестПриИзменении(Элемент)
НастроитьСерии();	
СформироватьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Объект.НаДату = ТекущаяДата();
КонецПроцедуры

&НаКлиенте
Процедура НаДатуПриИзменении(Элемент)
ЭтаФорма.Заголовок = "Производственные показатели на "+Формат(Объект.НаДату,"ДФ=dd.MM.yyyy");
	Если НачалоДня(ТекущаяДата()) = НачалоДня(Объект.НаДату) Тогда
	ОтключитьОбработчикОжидания("СформироватьОтчет");
	КонецЕсли;
РасчитатьПланДня();
КонецПроцедуры

&НаКлиенте
Процедура ЗапускатьПриВходеПриИзменении(Элемент)
ЗапускатьПриВходеПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗапускатьПриВходеПриИзмененииНаСервере()
	Если ЗапускатьПриВходе Тогда
	Объект.НаДату = ТекущаяДата();
	РасчитатьПланДня();		
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеПриИзменении(Элемент)
	Если НачалоДня(ТекущаяДата()) = НачалоДня(Объект.НаДату) Тогда
	ОтключитьОбработчикОжидания("СформироватьОтчет");
		Если ИнтервалОбновления > 0 Тогда
		ПодключитьОбработчикОжидания("СформироватьОтчет", ИнтервалОбновления*60);
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры
