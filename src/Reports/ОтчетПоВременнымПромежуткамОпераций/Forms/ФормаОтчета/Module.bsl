
&НаСервере
Процедура ПостроитьГрафик()
График.Очистить();
	Для каждого ТЧ Из ТаблицаТочек Цикл
	Серия = График.УстановитьСерию(ТЧ.ПолучитьИдентификатор());
	Серия.Текст = ""+ТЧ.РМОт+"-"+ТЧ.РМДо;
	Серия.Линия = Новый Линия(ТипЛинииДиаграммы.Сплошная,2);
	Серия.Маркер = ТипМаркераДиаграммы.Круг;
	КонецЦикла; 
График.ОбластьЗаголовка.Текст = "Временные промежутки операций за период с "+Формат(Отчет.Период.ДатаНачала,"ДФ=dd.MM.yyyy")+" по "+Формат(Отчет.Период.ДатаОкончания,"ДФ=dd.MM.yyyy");
График.АвтоТранспонирование = Ложь;
НомСтр = 1;
ТекПЗ = Документы.ПроизводственноеЗадание.ПустаяСсылка();
	Для каждого ТЧ Из ТаблицаПЗ Цикл
	Серия = График.УстановитьСерию(ТЧ.Параметр);
		Если ТекПЗ <> ТЧ.ПЗ Тогда
		Точка = График.УстановитьТочку(НомСтр);
		Точка.Текст = НомСтр;
			Если Не ТекПЗ.Пустая() Тогда
		    НомСтр = НомСтр + 1;
			КонецЕсли; 
		ТекПЗ = ТЧ.ПЗ;
		КонецЕсли;
			Если НомСтр < ТочкаОт Тогда
			Продолжить;
			КонецЕсли; 
				Если НомСтр > ТочкаДо Тогда
				Прервать;
				КонецЕсли;
	График.УстановитьЗначение(Точка,Серия,ТЧ.ВремяПараметра,ТЧ.ВремяПараметра);
	КонецЦикла;
График.АвтоТранспонирование = Истина;
КонецПроцедуры

&НаСервере
Процедура ПостроитьГистограмму(МаксВремя)
Гистограмма.Очистить();
ТаблицаЧастота = Новый ТаблицаЗначений;

ТаблицаЧастота.Колонки.Добавить("Параметр",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(6,0)));
ТаблицаЧастота.Колонки.Добавить("Значение",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(7,0)));
ТаблицаЧастота.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(7,0)));

	Для к = 0 По МаксВремя + 1 Цикл
		Для каждого ТЧ Из ТаблицаТочек Цикл
		ТЧ_Ч = ТаблицаЧастота.Добавить();
		ТЧ_Ч.Параметр = ТЧ.ПолучитьИдентификатор();
		ТЧ_Ч.Значение = к;
		КонецЦикла; 
	КонецЦикла; 
		Для каждого ТЧ Из ТаблицаТочек Цикл
		Серия = Гистограмма.УстановитьСерию(ТЧ.ПолучитьИдентификатор());
		Серия.Текст = ""+ТЧ.РМОт+"-"+ТЧ.РМДо;
		Серия.Линия = Новый Линия(ТипЛинииДиаграммы.Сплошная,3);
		Серия.Маркер = ТипМаркераДиаграммы.Нет;
		КонецЦикла;
Гистограмма.ОбластьЗаголовка.Текст = "Частота повторений за период с "+Формат(Отчет.Период.ДатаНачала,"ДФ=dd.MM.yyyy")+" по "+Формат(Отчет.Период.ДатаОкончания,"ДФ=dd.MM.yyyy");	
Гистограмма.КоличествоТочек = 0;
Гистограмма.АвтоТранспонирование = Ложь;
	Для каждого ТЧ Из ТаблицаПЗ Цикл
	Вр = Цел(ТЧ.ВремяПараметра);
		Если Вр = ТЧ.ВремяПараметра Тогда
		ТЧ_Ч = ТаблицаЧастота.НайтиСтроки(Новый Структура("Параметр,Значение",ТЧ.Параметр,Вр));		
		Иначе
		ТЧ_Ч = ТаблицаЧастота.НайтиСтроки(Новый Структура("Параметр,Значение",ТЧ.Параметр,Вр+1));	
		КонецЕсли; 
	ТЧ_Ч[0].Количество = ТЧ_Ч[0].Количество + 1;		
	КонецЦикла;
		Для каждого ТЧ Из ТаблицаЧастота Цикл
		Точка = Гистограмма.УстановитьТочку(Строка(ТЧ.Значение));
		СерияЧастота = Гистограмма.УстановитьСерию(ТЧ.Параметр);
		Гистограмма.УстановитьЗначение(Точка,СерияЧастота,ТЧ.Количество,ТЧ.Количество);
		КонецЦикла;
Гистограмма.АвтоТранспонирование = Истина;
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
ТабДок.Очистить();
СписокРМ.Очистить();
ТаблицаПЗ.Очистить();

Макет = Отчеты.ОтчетПоВременнымПромежуткамОпераций.ПолучитьМакет("Макет");
ОблШапкаОбщие = Макет.ПолучитьОбласть("Шапка|Общие");
ОблШапкаПараметр = Макет.ПолучитьОбласть("Шапка|Параметр");
ОблШапкаРемонт = Макет.ПолучитьОбласть("Шапка|Ремонт");	
ОблПЗОбщие = Макет.ПолучитьОбласть("ПЗ|Общие");
ОблПЗПараметр = Макет.ПолучитьОбласть("ПЗ|Параметр");
ОблПЗРемонт = Макет.ПолучитьОбласть("ПЗ|Ремонт");
ОблКонецОбщие = Макет.ПолучитьОбласть("Конец|Общие");
ОблКонецПараметр = Макет.ПолучитьОбласть("Конец|Параметр");
ОблКонецРемонт = Макет.ПолучитьОбласть("Конец|Ремонт");

ОблШапкаОбщие.Параметры.ДатаНач = Формат(Отчет.Период.ДатаНачала,"ДФ=dd.MM.yyyy");
ОблШапкаОбщие.Параметры.ДатаКон = Формат(Отчет.Период.ДатаОкончания,"ДФ=dd.MM.yyyy");
ОблШапкаОбщие.Параметры.Линейка = ""+Отчет.Линейка+" ("+Отчет.Линейка.Комментарий+")";
ТабДок.Вывести(ОблШапкаОбщие);
	Для каждого ТЧ Из ТаблицаТочек Цикл
	ОблШапкаПараметр.Параметры.Параметр = СокрЛП(ТЧ.РМОт.Наименование)+" ("+ТЧ.НКОт+") - "+СокрЛП(ТЧ.РМДо.Наименование)+" ("+ТЧ.НКДо+")";
	ТабДок.Присоединить(ОблШапкаПараметр);	
		Если СписокРМ.НайтиПоЗначению(ТЧ.РМОт) = Неопределено Тогда
		СписокРМ.Добавить(ТЧ.РМОт);
		КонецЕсли; 
			Если СписокРМ.НайтиПоЗначению(ТЧ.РМДо) = Неопределено Тогда
			СписокРМ.Добавить(ТЧ.РМДо);
			КонецЕсли;
	КонецЦикла;
ТабДок.Присоединить(ОблШапкаРемонт);

ЗапросПЗ = Новый Запрос;
Запрос = Новый Запрос;
ЗапросРемонт = Новый Запрос;

ЗапросПЗ.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Изделие КАК Изделие,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ КАК ПЗ
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних(, ) КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Линейка = &Линейка
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания МЕЖДУ &ДатаНач И &ДатаКон";	
	Если СписокНоменклатуры.Количество() > 0 Тогда
	ЗапросПЗ.Текст = ЗапросПЗ.Текст + " И ЭтапыПроизводственныхЗаданийСрезПоследних.Изделие В ИЕРАРХИИ(&СписокНоменклатуры)";
	ЗапросПЗ.УстановитьПараметр("СписокНоменклатуры",СписокНоменклатуры);
	КонецЕсли;
ЗапросПЗ.Текст = ЗапросПЗ.Текст + " УПОРЯДОЧИТЬ ПО Изделие,ПЗ";
ЗапросПЗ.УстановитьПараметр("ДатаНач",НачалоДня(Отчет.Период.ДатаНачала));
ЗапросПЗ.УстановитьПараметр("ДатаКон",КонецДня(Отчет.Период.ДатаОкончания));
ЗапросПЗ.УстановитьПараметр("Линейка",Отчет.Линейка);
РезультатПЗ = ЗапросПЗ.Выполнить();
НомСтр = 0;
МаксВремя = 0;
ВремяПараметраВсего = 0;
ВремяПараметраСреднее = 0;
ВремяРемонтаВсего = 0;
ВремяРемонтаЗаПериодВсего = 0;
ВремяРемонтаЧистоеВсего = 0;
ВремяРемонтаЧистоеЗаПериодВсего = 0;
ВыборкаПЗ = РезультатПЗ.Выбрать();
	Пока ВыборкаПЗ.Следующий() Цикл
	НомСтр = НомСтр + 1;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭтапыПроизводственныхЗаданий.РабочееМесто,
		|	ЭтапыПроизводственныхЗаданий.ДатаНачала,
		|	ЭтапыПроизводственныхЗаданий.ДатаОкончания
		|ИЗ
		|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
		|ГДЕ
		|	ЭтапыПроизводственныхЗаданий.ПЗ = &ПЗ
		|	И ЭтапыПроизводственныхЗаданий.РабочееМесто В(&СписокРМ)";
	Запрос.УстановитьПараметр("ПЗ",ВыборкаПЗ.ПЗ);
	Запрос.УстановитьПараметр("СписокРМ",СписокРМ);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
		Если Выборка.Количество() = 0 Тогда
		Продолжить;
		КонецЕсли; 
	ОблПЗОбщие.Параметры.НомСтр = НомСтр;
	ОблПЗОбщие.Параметры.НомерПЗ = ВыборкаПЗ.ПЗ.Номер;
	ОблПЗОбщие.Параметры.ПЗ = ВыборкаПЗ.ПЗ;
	ОблПЗОбщие.Параметры.Наименование = СокрЛП(ВыборкаПЗ.Изделие.Наименование);
	ОблПЗОбщие.Параметры.Номен = ВыборкаПЗ.Изделие;		
	ТабДок.Вывести(ОблПЗОбщие);
		Для каждого ТЧ Из ТаблицаТочек Цикл	
		Выборка.Сбросить();
		Отбор = Новый Структура("РабочееМесто",ТЧ.РМОт);
			Если Выборка.НайтиСледующий(Отбор) Тогда
				Если ТЧ.НКОт = "Начало" Тогда	
					Если Выборка.ДатаНачала <> Дата(1,1,1) Тогда
					ДатаОт = Выборка.ДатаНачала;
					КонецЕсли;
				ИначеЕсли ТЧ.НКОт = "Окончание" Тогда
					Если Выборка.ДатаОкончания <> Дата(1,1,1) Тогда
					ДатаОт = Выборка.ДатаОкончания;
					КонецЕсли;
				ИначеЕсли ТЧ.НКОт = "Поступление" Тогда
				Отбор = Новый Структура("ПЗ",ВыборкаПЗ.ПЗ);
				СП = РегистрыСведений.СтендовыйПрогон.ПолучитьПервое(,Отбор);
				ДатаОт = СП.ДатаПоступления;
				ИначеЕсли ТЧ.НКОт = "Постановка" Тогда
				Отбор = Новый Структура("ПЗ",ВыборкаПЗ.ПЗ);
				СП = РегистрыСведений.СтендовыйПрогон.ПолучитьПервое(,Отбор);
				ДатаОт = СП.ДатаПостановки;	
				ИначеЕсли ТЧ.НКОт = "Снятие" Тогда
				Отбор = Новый Структура("ПЗ",ВыборкаПЗ.ПЗ);
				СП = РегистрыСведений.СтендовыйПрогон.ПолучитьПоследнее(,Отбор);
				ДатаОт = СП.ДатаСнятия;					
				КонецЕсли; 							
			КонецЕсли;
		Выборка.Сбросить();	
		Отбор = Новый Структура("РабочееМесто",ТЧ.РМДо);
			Если Выборка.НайтиСледующий(Отбор) Тогда
				Если ТЧ.НКДо = "Начало" Тогда	
					Если Выборка.ДатаНачала <> Дата(1,1,1) Тогда
					ДатаДо = Выборка.ДатаНачала;
					КонецЕсли;
				ИначеЕсли ТЧ.НКДо = "Окончание" Тогда
					Если Выборка.ДатаОкончания <> Дата(1,1,1) Тогда
					ДатаДо = Выборка.ДатаОкончания;
					КонецЕсли;
				ИначеЕсли ТЧ.НКДо = "Поступление" Тогда
				Отбор = Новый Структура("ПЗ",ВыборкаПЗ.ПЗ);
				СП = РегистрыСведений.СтендовыйПрогон.ПолучитьПервое(,Отбор);
				ДатаДо = СП.ДатаПоступления;
				ИначеЕсли ТЧ.НКДо = "Постановка" Тогда
				Отбор = Новый Структура("ПЗ",ВыборкаПЗ.ПЗ);
				СП = РегистрыСведений.СтендовыйПрогон.ПолучитьПервое(,Отбор);
				ДатаДо = СП.ДатаПостановки;	
				ИначеЕсли ТЧ.НКДо = "Снятие" Тогда
				Отбор = Новый Структура("ПЗ",ВыборкаПЗ.ПЗ);
				СП = РегистрыСведений.СтендовыйПрогон.ПолучитьПоследнее(,Отбор);
				ДатаДо = СП.ДатаСнятия;				
				КонецЕсли; 							
			КонецЕсли;
		ВремяПараметра = ОбщийМодульВызовСервера.ПолучитьВремяМеждуДатами(ДатаОт,ДатаДо,2,Отчет.ВычестьНерабочееВремя,Отчет.КолНерабочихЧасов,Отчет.БезВыходных);
		ВремяПараметраВсего = ВремяПараметраВсего + ВремяПараметра;
		ОблПЗПараметр.Параметры.ДатаОт = ДатаОт;
		ОблПЗПараметр.Параметры.ДатаДо = ДатаДо;
		ОблПЗПараметр.Параметры.ВремяПараметра = Формат(ВремяПараметра,"ЧЦ=9; ЧДЦ=3");
		ТабДок.Присоединить(ОблПЗПараметр);
		ТЧ_ПЗ = ТаблицаПЗ.Добавить();
		ТЧ_ПЗ.ПЗ = ВыборкаПЗ.ПЗ;
		ТЧ_ПЗ.ДатаОкончания = ДатаДо;
		ТЧ_ПЗ.Параметр = ТЧ.ПолучитьИдентификатор();
		ТЧ_ПЗ.ВремяПараметра = ВремяПараметра;
		МаксВремя = Макс(ВремяПараметра,МаксВремя);
		КонецЦикла;
	ЗапросРемонт.Текст = 
		"ВЫБРАТЬ
		|	РемонтнаяКарта.Ссылка,
		|	РемонтнаяКарта.ДатаНачала,
		|	РемонтнаяКарта.ДатаОтложен,
		|	РемонтнаяКарта.ДатаОкончания
		|ИЗ
		|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
		|ГДЕ
		|	РемонтнаяКарта.ДокументОснование = &ДокументОснование";	
	ЗапросРемонт.УстановитьПараметр("ДокументОснование",ВыборкаПЗ.ПЗ);
	РезультатРемонт = ЗапросРемонт.Выполнить();
	ВыборкаРемонт = РезультатРемонт.Выбрать();
	флПервыйРемонт = Ложь;
	ВремяОстановки = 0;
	ВремяРемонта = 0;
		Пока ВыборкаРемонт.Следующий() Цикл
			Если Не флПервыйРемонт Тогда
			ДатаОт = ВыборкаРемонт.ДатаНачала;
			флПервыйРемонт = Истина;
			Иначе
			ДатаДо = ВыборкаРемонт.ДатаОкончания;
			КонецЕсли; 
		    	Если ЗначениеЗаполнено(ВыборкаРемонт.ДатаОтложен) Тогда
				ВремяОстановки = ВремяОстановки + ОбщийМодульВызовСервера.ПолучитьВремяМеждуДатами(ВыборкаРемонт.ДатаОтложен,ВыборкаРемонт.ДатаОкончания,2,Отчет.ВычестьНерабочееВремя,Отчет.КолНерабочихЧасов,Отчет.БезВыходных);
				КонецЕсли; 
		ВремяРемонта = ВремяРемонта + ОбщийМодульВызовСервера.ПолучитьВремяМеждуДатами(ВыборкаРемонт.ДатаНачала,ВыборкаРемонт.ДатаОкончания,2,Отчет.ВычестьНерабочееВремя,Отчет.КолНерабочихЧасов,Отчет.БезВыходных);
		КонецЦикла;
			Если флПервыйРемонт Тогда
			ОблПЗРемонт.Параметры.ДатаОт = ДатаОт;
			ОблПЗРемонт.Параметры.ДатаДо = ДатаДо;
			ОблПЗРемонт.Параметры.ВремяРемонта = Формат(ВремяРемонта,"ЧЦ=9; ЧДЦ=3");			
			ОблПЗРемонт.Параметры.ВремяРемонтаЧистое = Формат(ВремяРемонта - ВремяОстановки,"ЧЦ=9; ЧДЦ=3");
			ВремяРемонтаВсего = ВремяРемонтаВсего + ВремяРемонта;
			ВремяРемонтаЧистоеВсего = ВремяРемонтаЧистоеВсего + (ВремяРемонта - ВремяОстановки);			
			Иначе
			ОблПЗРемонт.Параметры.ДатаОт = "";
			ОблПЗРемонт.Параметры.ДатаДо = "";			
			ОблПЗРемонт.Параметры.ВремяРемонта = 0;
			ОблПЗРемонт.Параметры.ВремяРемонтаЧистое = 0;			
			КонецЕсли; 				
	ТабДок.Присоединить(ОблПЗРемонт);		
	КонецЦикла; 
ТабДок.Вывести(ОблКонецОбщие);
	Для каждого ТЧ Из ТаблицаТочек Цикл
	ОблКонецПараметр.Параметры.ВремяПараметраСреднее = ?(НомСтр > 0,Формат(ВремяПараметраВсего/НомСтр,"ЧЦ=9; ЧДЦ=3"),0);
	ТабДок.Присоединить(ОблКонецПараметр);
	КонецЦикла;
ОблКонецРемонт.Параметры.ВремяРемонтаВсего = Формат(ВремяРемонтаВсего,"ЧЦ=9; ЧДЦ=3");
ОблКонецРемонт.Параметры.ВремяРемонтаЧистоеВсего = Формат(ВремяРемонтаЧистоеВсего,"ЧЦ=9; ЧДЦ=3");
ТабДок.Присоединить(ОблКонецРемонт);
ТабДок.ФиксацияСверху = 4;
ТабДок.ФиксацияСлева = 3;
ТочкаОт = 1;
ТочкаДо = ?(ТаблицаТочек.Количество() > 0,ТаблицаПЗ.Количество()/ТаблицаТочек.Количество(),0);
ПостроитьГрафик();
ПостроитьГистограмму(Окр(МаксВремя,0,1));
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
СформироватьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ГрафикВыбор(Элемент, ЗначениеДиаграммы, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
	Если Не ВыборКонТочки Тогда
	ТочкаОт = ЗначениеДиаграммы.Точка.Значение;
	ВыборКонТочки = Истина;
	Элементы.Выбрано.Заголовок = "Выбран период с "+ЗначениеДиаграммы.Точка.Текст;
	Иначе
		Если ЗначениеДиаграммы.Точка.Значение > ТочкаОт Тогда
		ТочкаДо = ЗначениеДиаграммы.Точка.Значение;
		ВыборКонТочки = Ложь;
		Элементы.Выбрано.Заголовок = Элементы.Выбрано.Заголовок+" по "+ЗначениеДиаграммы.Точка.Текст;
		ПостроитьГрафик();
		Иначе
		Сообщить("Конечная точка не может быть меньше начальной!");
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
ТочкаОт = 0;
ТочкаДо = ?(ТаблицаТочек.Количество() > 0,ТаблицаПЗ.Количество()/ТаблицаТочек.Количество(),0);
Элементы.Выбрано.Заголовок = "";
ПостроитьГрафик();
ВыборКонТочки = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ЛинейкаПриИзменении(Элемент)
ТаблицаТочек.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыРМОтНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
Ф = ПолучитьФорму("Справочник.РабочиеМестаЛинеек.Форма.ФормаВыбораПоЛинейке");
ЭлементОтбора = Ф.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Линейка");
ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
ЭлементОтбора.Использование = Истина;
ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
ЭлементОтбора.ПравоеЗначение = Отчет.Линейка;
Элементы.Параметры.ТекущиеДанные.РМОт = Ф.ОткрытьМодально();
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыРМДоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
Ф = ПолучитьФорму("Справочник.РабочиеМестаЛинеек.Форма.ФормаВыбораПоЛинейке");
ЭлементОтбора = Ф.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Линейка");
ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
ЭлементОтбора.Использование = Истина;
ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
ЭлементОтбора.ПравоеЗначение = Отчет.Линейка;
Элементы.Параметры.ТекущиеДанные.РМДо = Ф.ОткрытьМодально();
КонецПроцедуры
