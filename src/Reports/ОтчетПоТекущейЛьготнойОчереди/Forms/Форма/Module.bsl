
&НаСервере
Процедура ПолучитьДанныеПоЛОНаСервере()
ТабДок.Очистить();
Объект.ЛьготнаяОчередь.Очистить();
	
Макет = Отчеты.ОтчетПоТекущейЛьготнойОчереди.ПолучитьМакет("Макет"); 
ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблМТК = Макет.ПолучитьОбласть("МТК");
ОблМПЗ = Макет.ПолучитьОбласть("МПЗ");
ОблАналог = Макет.ПолучитьОбласть("Аналог");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.ТекДата = ТекущаяДата();
ТабДок.Вывести(ОблШапка);
	
Запрос = Новый Запрос;
ТаблицаМПЗ = Новый ТаблицаЗначений;

ТаблицаМПЗ.Колонки.Добавить("МПЗ");
ТаблицаМПЗ.Колонки.Добавить("Количество");
ТаблицаМПЗ.Колонки.Добавить("КоличествоСклад");

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛьготнаяОчередь.Период,
	|	ЛьготнаяОчередь.ПЗ КАК ПЗ,
	|	ЛьготнаяОчередь.Линейка,
	|	ЛьготнаяОчередь.Изделие,
	|	ЛьготнаяОчередь.НормаРасходов.Элемент КАК МПЗ
	|ИЗ
	|	РегистрСведений.ЛьготнаяОчередь КАК ЛьготнаяОчередь
	|ГДЕ
	|	ЛьготнаяОчередь.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	И ЛьготнаяОчередь.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	Если Не ВидКанбана.Пустая() Тогда
	Запрос.Текст = Запрос.Текст + " И ЛьготнаяОчередь.НормаРасходов.Элемент.Канбан = &Канбан";
	Запрос.УстановитьПараметр("Канбан",ВидКанбана);
	КонецЕсли;
Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ЛьготнаяОчередь.ПЗ.ДокументОснование.НомерОчереди
								|	
								|ИТОГИ ПО ПЗ,МПЗ"; 
Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМТК = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМТК.Следующий() Цикл
	флВыведена = Ложь;	
	ВыборкаМПЗ = ВыборкаМТК.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаМПЗ.Следующий() Цикл
			Если ТипЗнч(ВыборкаМПЗ.МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
			Подразделение = ВыборкаМПЗ.МПЗ.Канбан.Подразделение;
			Иначе
			Подразделение = ВыборкаМТК.ПЗ.Линейка.Подразделение;
			КонецЕсли; 
				Если Не ВыбПодразделение.Пустая() Тогда
					Если Подразделение <> ВыбПодразделение Тогда
					Продолжить;
					КонецЕсли; 
				КонецЕсли; 
					Если Не флВыведена Тогда
					ОблМТК.Параметры.Линейка = ВыборкаМТК.ПЗ.Линейка;
					ОблМТК.Параметры.Очередь = ВыборкаМТК.ПЗ.НомерОчереди;
					ОблМТК.Параметры.НомерМТК = ВыборкаМТК.ПЗ.ДокументОснование.Номер;
					ОблМТК.Параметры.МТК = ВыборкаМТК.ПЗ.ДокументОснование;
					ОблМТК.Параметры.Наименование = СокрЛП(ВыборкаМТК.ПЗ.Изделие.Наименование);
					ОблМТК.Параметры.Изделие = ВыборкаМТК.ПЗ.Изделие;
					ОблМТК.Параметры.Кол = ОбщийМодульВызовСервера.ПолучитьНезапущенноеКоличество(ВыборкаМТК.ПЗ.ДокументОснование);
					ОблМТК.Параметры.НомерПЗ = ВыборкаМТК.ПЗ.Номер;
					ОблМТК.Параметры.ПЗ = ВыборкаМТК.ПЗ;	
					ТабДок.Вывести(ОблМТК);
					ТабДок.НачатьГруппуСтрок("По МТК", Истина);
					флВыведена = Истина;
					КонецЕсли;
		ТаблицаМПЗ.Очистить();
		ОбщийМодульВызовСервера.ПолучитьТаблицуМПЗиАналогов(ТаблицаМПЗ,ВыборкаМТК.ПЗ.Изделие,ВыборкаМПЗ.МПЗ,ВыборкаМТК.ПЗ.Количество);
		ТаблицаМПЗ.Свернуть("МПЗ","Количество,КоличествоСклад");
		флПервый = Истина;
			Для каждого ТЧ_МПЗ Из ТаблицаМПЗ Цикл
			КолСклад = ОбщийМодульВызовСервера.ПолучитьОстатокПоМестуХранения(ВыборкаМТК.ПЗ.Линейка.Подразделение.МестоХраненияПоУмолчанию,ТЧ_МПЗ.МПЗ);
			КолСкладЛинейки = ОбщийМодульВызовСервера.ПолучитьОстатокПоМестуХранения(ВыборкаМТК.ПЗ.Линейка.МестоХраненияКанбанов,ТЧ_МПЗ.МПЗ);
				Если Подразделение.ОформлятьПустыеКанбаны > 0 Тогда
				ЯчейкиКомплектации = ОбщийМодульРаботаСРегистрами.ПолучитьЯчейкуКомплектации(ВыборкаМТК.ПЗ.Линейка,ТЧ_МПЗ.МПЗ);
				КолЯчеек = ЯчейкиКомплектации.КоличествоЯчеек;
				КолЯчеекОст = КолЯчеек - ОбщийМодульВызовСервера.ПолучитьКоличествоПустыхКанбанов(ВыборкаМТК.ПЗ.Линейка,ТЧ_МПЗ.МПЗ);
				ОстатокЯчеек = ""+КолЯчеекОст+"/"+КолЯчеек;			
				Иначе
				КолЯчеекОст = 0;	
				ОстатокЯчеек = "не учит.";
				КонецЕсли;
			ДатаЛО = ТекущаяДата();
			ВыборкаДетальныеЗаписи = ВыборкаМПЗ.Выбрать();
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ДатаЛО = Мин(ДатаЛО,ВыборкаДетальныеЗаписи.Период);
				КонецЦикла;
					Если флПервый Тогда
					ТекОблМПЗ = ОблМПЗ;
					Иначе
					ТекОблМПЗ = ОблАналог;				
					КонецЕсли;   
			ТекОблМПЗ.Параметры.Подразделение = Подразделение;
			ТекОблМПЗ.Параметры.Наимен = СокрЛП(ТЧ_МПЗ.МПЗ.Наименование);
			ТекОблМПЗ.Параметры.МПЗ = ТЧ_МПЗ.МПЗ;
			ТекОблМПЗ.Параметры.КолСклад = КолСклад;
			ТекОблМПЗ.Параметры.КолСкладЛинейки = КолСкладЛинейки;
			ТекОблМПЗ.Параметры.ЕИ = ТЧ_МПЗ.МПЗ.ЕдиницаИзмерения;
			ТекОблМПЗ.Параметры.ДатаЛО = ДатаЛО;
			ТекОблМПЗ.Параметры.Кол = ТЧ_МПЗ.Количество;
			ТекОблМПЗ.Параметры.ОстатокЯчеек = ОстатокЯчеек;
			ТекОбл = ТабДок.Вывести(ТекОблМПЗ);
				Если КолСклад = 0 Тогда
					Если КолЯчеекОст > 0 Тогда
					ТабДок.Область(ТекОбл.Верх, 13, ТекОбл.Низ, 13).ЦветТекста = WebЦвета.Красный;			
					КонецЕсли; 
				Иначе	
					Если ТЧ_МПЗ.Количество - КолСклад < 0 Тогда
				    ТабДок.Область(ТекОбл.Верх, 13, ТекОбл.Низ, 13).ЦветТекста = WebЦвета.Красный;
					КонецЕсли;			
				КонецЕсли;
					Если флПервый Тогда	
					ТабДок.НачатьГруппуСтрок("Аналоги",Истина);
					КонецЕсли; 
			флПервый = Ложь;
			КонецЦикла;
				Если Не флПервый Тогда
				ТабДок.ЗакончитьГруппуСтрок();
				КонецЕсли;
		Выбор = Объект.ЛьготнаяОчередь.НайтиСтроки(Новый Структура("МПЗ",ВыборкаМПЗ.МПЗ));
			Если Выбор.Количество() = 0 Тогда
			ТЧ = Объект.ЛьготнаяОчередь.Добавить();
			ТЧ.МПЗ = ВыборкаМПЗ.МПЗ;
			ТЧ.Подразделение = Подразделение;
			КонецЕсли;
		КонецЦикла;
			Если флВыведена Тогда
			ТабДок.ЗакончитьГруппуСтрок();
			КонецЕсли;
	КонецЦикла;
Объект.ЛьготнаяОчередь.Сортировать("Подразделение,МПЗ");	
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 2;	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
ПолучитьДанныеПоЛОНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеПоЛО()
ПолучитьДанныеПоЛОНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалОбновленияПриИзменении(Элемент)
ОтключитьОбработчикОжидания("ПолучитьДанныеПоЛО");
	Если Объект.ИнтервалОбновления > 0 Тогда
	ПодключитьОбработчикОжидания("ПолучитьДанныеПоЛО", Объект.ИнтервалОбновления*60);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
ПолучитьДанныеПоЛОНаСервере();	
	Если Объект.ИнтервалОбновления > 0 Тогда
	ПодключитьОбработчикОжидания("ПолучитьДанныеПоЛО", Объект.ИнтервалОбновления*60);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьEmailСотрудника()
Возврат(ПараметрыСеанса.Пользователь.Email);
КонецФункции

&НаСервере
Функция ПолучитьСписокПочтовойРассылкиНаСервере(Подразделение)
СписокПочтовойРассылки = Новый СписокЗначений;

	Для каждого ТЧ Из Подразделение.ПочтоваяРассылка Цикл
		Если СокрЛП(ТЧ.Сотрудник.Email) <> "" Тогда
		СписокПочтовойРассылки.Добавить(ТЧ.Сотрудник.Email);
		КонецЕсли; 
	КонецЦикла; 
Возврат(СписокПочтовойРассылки);
КонецФункции

&НаСервере
Функция ПолучитьПустоеПодразделение()
Возврат(Справочники.Подразделения.ПустаяСсылка());
КонецФункции

&НаКлиенте
Процедура ПочтоваяРассылка(Команда)
//ПочтоваяРассылкаНаСервере();
Объект.ЛьготнаяОчередь.Сортировать("Подразделение,МПЗ");
EmailСотрудника = ПолучитьEmailСотрудника();
СписокПочтовойРассылки = Новый СписокЗначений;
Сообщение = Новый ИнтернетПочтовоеСообщение;
ИПП = Новый ИнтернетПочтовыйПрофиль; 

НастройкиПочты = ОбщийМодульВызовСервера.ПолучитьНастройкиПочты();
ИПП.АдресСервераSMTP = НастройкиПочты.АдресСервераSMTP; 
ИПП.ПортSMTP = НастройкиПочты.ПортSMTP;
ИПП.ВремяОжидания = 60; 
ИПП.Пароль = НастройкиПочты.ПарольПочтовогоСервера; 
ИПП.Пользователь = EmailСотрудника;
флНетСПР =Истина;
ТекПодразделение = ПолучитьПустоеПодразделение();
	Для каждого ТЧ Из Объект.ЛьготнаяОчередь Цикл
		Если ТЧ.Пометка Тогда
			Если ТЧ.Подразделение <> ТекПодразделение Тогда
				Если Не ТекПодразделение.Пустая() Тогда
					Если Не флНетСПР Тогда
					Текст = Текст + Символы.ПС+ "";
					Текст = Текст + Символы.ПС+ "С уважением, email: "+EmailСотрудника;
					Сообщение.Тексты.Добавить(Текст);	
					// Подключиться и отправить. 
					Почта = Новый ИнтернетПочта; 
					Почта.Подключиться(ИПП); 
					Почта.Послать(Сообщение); 
					Почта.Отключиться();
					ПоказатьОповещениеПользователя("Сообщение отправлено!");					
					КонецЕсли; 				
				КонецЕсли; 
			ТекПодразделение = ТЧ.Подразделение;
			флНетСПР = Ложь;
			СписокПочтовойРассылки = ПолучитьСписокПочтовойРассылкиНаСервере(ТЧ.Подразделение); 
				Если СписокПочтовойРассылки.Количество() = 0 Тогда
				флНетСПР = Истина;
				Сообщить("Нет списка почтовой рассылки для подразделения "+ТЧ.Подразделение);
				Продолжить;
				КонецЕсли;
			Сообщение = Новый ИнтернетПочтовоеСообщение;
	 
				Для каждого СПР Из СписокПочтовойРассылки Цикл
			    Сообщение.Получатели.Добавить(СПР.Значение);
				КонецЦикла; 
			Сообщение.Отправитель.Адрес = EmailСотрудника;
			Сообщение.Тема = "Список МПЗ в льготной очереди на "+ТекущаяДата(); 
			Текст = "Здравствуйте!";
			Текст = Текст + Символы.ПС+ "";
			Текст = Текст + Символы.ПС+ "В производственной базе сформирован список МПЗ в льготной очереди:";
			Иначе
				Если флНетСПР Тогда
				Продолжить;
				КонецЕсли; 
			КонецЕсли; 
		Текст = Текст + Символы.ПС+ ТЧ.МПЗ;		
		КонецЕсли;
	КонецЦикла; 
		Если Не флНетСПР Тогда
		Текст = Текст + Символы.ПС+ "";
		Текст = Текст + Символы.ПС+ "С уважением, email: "+EmailСотрудника;
		Сообщение.Тексты.Добавить(Текст);	
		// Подключиться и отправить. 
		Почта = Новый ИнтернетПочта; 
		Почта.Подключиться(ИПП); 
		Почта.Послать(Сообщение); 
		Почта.Отключиться();
		ПоказатьОповещениеПользователя("Сообщение отправлено!");		
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	Для каждого ТЧ Из Объект.ЛьготнаяОчередь Цикл
	ТЧ.Пометка = Не ТЧ.Подразделение.Пустая();
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПодразделение(Команда)
Перем ВыбПодразд;
СписокПодразелений = Новый СписокЗначений;

	Для каждого ТЧ Из Объект.ЛьготнаяОчередь Цикл
		Если Не ТЧ.Подразделение.Пустая() Тогда
			Если СписокПодразелений.НайтиПоЗначению(ТЧ.Подразделение) = Неопределено Тогда
			СписокПодразелений.Добавить(ТЧ.Подразделение);
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла; 
ВыбПодразд = СписокПодразелений.ВыбратьЭлемент("Выберите подразделение",ВыбПодразд);
		Если ВыбПодразд <> Неопределено Тогда
			Для каждого ТЧ Из Объект.ЛьготнаяОчередь Цикл
			ТЧ.Пометка = ?(ТЧ.Подразделение = ВыбПодразд.Значение,Истина,Ложь);
			КонецЦикла;	
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсе(Команда)
	Для каждого ТЧ Из Объект.ЛьготнаяОчередь Цикл
	ТЧ.Пометка = Ложь;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ЛьготнаяОчередьПометкаПриИзменении(Элемент)
	Если Элементы.ЛьготнаяОчередь.ТекущиеДанные.Подразделение.Пустая() Тогда
	Элементы.ЛьготнаяОчередь.ТекущиеДанные.Пометка = Ложь;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ЭтаФорма.Параметры.Линейка.Пустая() Тогда	
	СписокЛинеек.Очистить();
	СписокЛинеек.Добавить(ЭтаФорма.Параметры.Линейка);
	Сформировать(Неопределено);
	КонецЕсли; 
КонецПроцедуры
