
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаписьРС = ДанныеФормыВЗначение(Запись,Тип("РегистрСведенийМенеджерЗаписи.ДокументыДляОбменаВебСервис"));
	СписокИзЗаписи = ЗаписьРС.СписокДокументов.Получить();
	СписокИзЗаписи2 = ЗаписьРС.СписокСправочников.Получить();
	СписокИзЗаписи3 = ЗаписьРС.СписокРегистров.Получить();
	Если СписокИзЗаписи = Неопределено тогда
		Для каждого Док Из Метаданные.Документы цикл
			НоваяСтрока = СписокДокументов.Добавить();
			НоваяСтрока.Документ = Док.Синоним;
			НоваяСтрока.Имя = Док.Имя;
		КонецЦикла;	
	иначе
		СписокДокументов.Загрузить(СписокИзЗаписи);
	КонецЕсли;
	Если СписокИзЗаписи2 = Неопределено тогда
		Для каждого Спр Из Метаданные.Справочники цикл
			НоваяСтрока = СписокСправочников.Добавить();
			НоваяСтрока.Справочник = Спр.Синоним;
			НоваяСтрока.Имя = Спр.Имя;
		КонецЦикла;	
	иначе
		СписокСправочников.Загрузить(СписокИзЗаписи2);
	КонецЕсли;
	Если СписокИзЗаписи3 = Неопределено тогда
		Для каждого Регистр Из Метаданные.РегистрыСведений цикл
			НоваяСтрока = СписокРегистров.Добавить();
			НоваяСтрока.Регистр = Регистр.Синоним;
			НоваяСтрока.Имя = Регистр.Имя;
		КонецЦикла;	
	иначе
		СписокРегистров.Загрузить(СписокИзЗаписи3);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере()
	//Вставить содержимое обработчика   
	ЗаписьРС = ДанныеФормыВЗначение(Запись,Тип("РегистрСведенийМенеджерЗаписи.ДокументыДляОбменаВебСервис"));
	ЗаписьРС.СписокДокументов = Новый ХранилищеЗначения(ДанныеФормыВЗначение(СписокДокументов,Тип("ТаблицаЗначений")));
	ЗаписьРС.СписокСправочников = Новый ХранилищеЗначения(ДанныеФормыВЗначение(СписокСправочников,Тип("ТаблицаЗначений")));
	ЗаписьРС.СписокРегистров = Новый ХранилищеЗначения(ДанныеФормыВЗначение(СписокРегистров,Тип("ТаблицаЗначений")));
	ЗаписьРС.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ПередЗаписьюНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	// документы
	ДокументыТЗ = ДанныеФормыВЗначение(СписокДокументов,Тип("ТаблицаЗначений"));
	ПромежуточнаяТЗ = ДокументыТЗ.Скопировать(,"Имя, Документ");
	ПромежуточнаяТЗ.Колонки.Добавить("Знак");
	ПромежуточнаяТЗ.ЗаполнитьЗначения(1, "Знак");
	
	Для каждого Док Из Метаданные.Документы цикл
			НоваяСтрока = ПромежуточнаяТЗ.Добавить();
			НоваяСтрока.Документ = Док.Синоним;
			НоваяСтрока.Имя = Док.Имя;
			НоваяСтрока.Знак = 0;
	КонецЦикла;	
	ПромежуточнаяТЗ.Колонки.Добавить("Счёт");
	ПромежуточнаяТЗ.ЗаполнитьЗначения(1, "Счёт");
	ПромежуточнаяТЗ.Свернуть("Имя, Документ", "Счёт, Знак");
	Отбор = Новый Структура();
    Отбор.Вставить("Счёт",1);
	СтрокиНовые = ПромежуточнаяТЗ.НайтиСтроки(Отбор);
	Для каждого СтрокаН из СтрокиНовые цикл
		Если СтрокаН.Знак = 0 тогда
			СтрокаДокументыТЗ = ДокументыТЗ.Добавить();
			СтрокаДокументыТЗ.Имя = СтрокаН.Имя;
			СтрокаДокументыТЗ.Документ = СтрокаН.Документ;
			СтрокаДокументыТЗ.Обмен = Ложь;
		КонецЕсли;
	 КонецЦикла;
	СписокДокументов.Загрузить(ДокументыТЗ);
	//справочники
    СправочникиТЗ = ДанныеФормыВЗначение(СписокСправочников,Тип("ТаблицаЗначений"));
	ПромежуточнаяТЗ = СправочникиТЗ.Скопировать(,"Имя, Справочник");
	ПромежуточнаяТЗ.Колонки.Добавить("Знак");
	ПромежуточнаяТЗ.ЗаполнитьЗначения(1, "Знак");
	
	Для каждого Док Из Метаданные.Справочники цикл
			НоваяСтрока = ПромежуточнаяТЗ.Добавить();
			НоваяСтрока.Справочник = Док.Синоним;
			НоваяСтрока.Имя = Док.Имя;
			НоваяСтрока.Знак = 0;
	КонецЦикла;	
	ПромежуточнаяТЗ.Колонки.Добавить("Счёт");
	ПромежуточнаяТЗ.ЗаполнитьЗначения(1, "Счёт");
	ПромежуточнаяТЗ.Свернуть("Имя, Справочник", "Счёт, Знак");
	Отбор = Новый Структура();
    Отбор.Вставить("Счёт",1);
	СтрокиНовые = ПромежуточнаяТЗ.НайтиСтроки(Отбор);
	Для каждого СтрокаН из СтрокиНовые цикл
		Если СтрокаН.Знак = 0 тогда
			СтрокаДокументыТЗ = СправочникиТЗ.Добавить();
			СтрокаДокументыТЗ.Имя = СтрокаН.Имя;
			СтрокаДокументыТЗ.Справочник = СтрокаН.Справочник;
			СтрокаДокументыТЗ.Обмен = Ложь;
		КонецЕсли;
	 КонецЦикла;
	СписокСправочников.Загрузить(СправочникиТЗ);
    //регистры
    РегистрыТЗ = ДанныеФормыВЗначение(СписокРегистров,Тип("ТаблицаЗначений"));
	ПромежуточнаяТЗ = РегистрыТЗ.Скопировать(,"Имя, Регистр");
	ПромежуточнаяТЗ.Колонки.Добавить("Знак");
	ПромежуточнаяТЗ.ЗаполнитьЗначения(1, "Знак");
	
	Для каждого Док Из Метаданные.РегистрыСведений цикл
			НоваяСтрока = ПромежуточнаяТЗ.Добавить();
			НоваяСтрока.Регистр = Док.Синоним;
			НоваяСтрока.Имя = Док.Имя;
			НоваяСтрока.Знак = 0;
	КонецЦикла;	
	ПромежуточнаяТЗ.Колонки.Добавить("Счёт");
	ПромежуточнаяТЗ.ЗаполнитьЗначения(1, "Счёт");
	ПромежуточнаяТЗ.Свернуть("Имя, Регистр", "Счёт, Знак");
	Отбор = Новый Структура();
    Отбор.Вставить("Счёт",1);
	СтрокиНовые = ПромежуточнаяТЗ.НайтиСтроки(Отбор);
	Для каждого СтрокаН из СтрокиНовые цикл
		Если СтрокаН.Знак = 0 тогда
			СтрокаДокументыТЗ = РегистрыТЗ.Добавить();
			СтрокаДокументыТЗ.Имя = СтрокаН.Имя;
			СтрокаДокументыТЗ.Регистр = СтрокаН.Регистр;
			СтрокаДокументыТЗ.Обмен = Ложь;
		КонецЕсли;
	 КонецЦикла;
	СписокРегистров.Загрузить(РегистрыТЗ);
	 
КонецПроцедуры
