
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
ТипБрака = 1;
ПроизводственноеЗадание = Параметры.ПЗ;
РабочееМесто = Параметры.РабочееМесто;
Линейка = РабочееМесто.Линейка;
	Если Параметры.Свойство("ЭтапСпецификации") Тогда
	ЭтапСпецификации = Параметры.ЭтапСпецификации;	
	Иначе	
	ЭтапСпецификации = ПроизводственноеЗадание.Изделие;
	КонецЕсли;
МПЗ = Параметры.МПЗ;
КоличествоВПЗ = Параметры.Количество;
ЕдиницаИзмерения = МПЗ.ЕдиницаИзмерения;
	Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
	ТекВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
	ИначеЕсли ТипЗнч(МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
	ТекВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КомментарииНеисправностейТабличнаяЧасть.Ссылка
		|ИЗ
		|	Справочник.КомментарииНеисправностей.ТабличнаяЧасть КАК КомментарииНеисправностейТабличнаяЧасть
		|ГДЕ
		|	КомментарииНеисправностейТабличнаяЧасть.РабочееМесто = &РабочееМесто
		|	И КомментарииНеисправностейТабличнаяЧасть.Ссылка.ИспользоватьПоУмолчанию = ИСТИНА";
	Запрос.УстановитьПараметр("РабочееМесто", РабочееМесто);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ВидБрака = ВыборкаДетальныеЗаписи.Ссылка;
		КонецЦикла;
	КонецЕсли;
КоличествоНаСкладе = ОбщийМодульВызовСервера.ПолучитьОстатокПоМестуХранения(Линейка.МестоХраненияКанбанов,МПЗ);                                                                                        
КонецПроцедуры

&НаСервере
Функция ОформитьСписаниеБракаНаСервере(СтатьяСписания)
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
		Если КоличествоБрака > КоличествоНаСкладе Тогда	
			Если Не ОбщийМодульВызовСервера.ОтменаЗапускаПЗ(ПроизводственноеЗадание,Ложь) Тогда
			Сообщить("Запуск производственного задания не отменён!");
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			Возврат(Неопределено);			
			КонецЕсли;
		КонецЕсли; 
	Списание = Документы.СписаниеМПЗПрочее.СоздатьДокумент();
	Списание.Дата = ТекущаяДата();
	Списание.УстановитьНовыйНомер(ПрисвоитьПрефикс(ПроизводственноеЗадание.Подразделение));
	Списание.Автор = ПараметрыСеанса.Пользователь;
	Списание.ДокументОснование = ПроизводственноеЗадание;
	Списание.Подразделение = ПроизводственноеЗадание.Подразделение;
	Списание.МестоХранения = Линейка.МестоХраненияКанбанов;
	Списание.Статья = СтатьяСписания;
	Списание.Утвердил = ПроизводственноеЗадание.Подразделение.Руководитель;
	Списание.РабочееМесто = РабочееМесто;
	Списание.ВидБрака = ВидБрака;
	Списание.ЭтапЖизненногоЦикла = ЭтапЖизненногоЦикла;
	Списание.Комментарий = Комментарий;  
	ТЧ = Списание.ТабличнаяЧасть.Добавить();
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
	ТЧ.МПЗ = МПЗ;
	ТЧ.Количество = КоличествоБрака/МПЗ.ОсновнаяЕдиницаИзмерения.Коэффициент;
	ТЧ.ЕдиницаИзмерения = МПЗ.ОсновнаяЕдиницаИзмерения;
	Списание.Записать(РежимЗаписиДокумента.Проведение);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(Списание.Ссылка);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Неопределено);
	КонецПопытки;
КонецФункции

&НаСервере
Функция ПолучитьЛинейкуКанбана(Линейка,ВидКанбана)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛинейкиЛинейкиПотребители.Ссылка
	|ИЗ
	|	Справочник.Линейки.ЛинейкиПотребители КАК ЛинейкиЛинейкиПотребители
	|ГДЕ
	|	ЛинейкиЛинейкиПотребители.Линейка = &Линейка
	|	И ЛинейкиЛинейкиПотребители.Ссылка.ПометкаУдаления = ЛОЖЬ";
Запрос.УстановитьПараметр("Линейка", Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныхЗаписей = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныхЗаписей.Следующий() Цикл
		Если ВыборкаДетальныхЗаписей.Ссылка.ВидыКанбанов.Найти(ВидКанбана,"ВидКанбана") <> Неопределено Тогда
		Возврат(ВыборкаДетальныхЗаписей.Ссылка);
		КонецЕсли;
	КонецЦикла; 
Возврат(Неопределено);
КонецФункции

&НаСервере
Функция РаскрытьНаМПЗ(МТК,Спецификация,Количество,Уровень,Результат)
ВыборкаНР = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н(Спецификация,ТекущаяДата());
	Пока ВыборкаНР.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаНР.Элемент.Канбан) Тогда
			Если ВыборкаНР.Элемент.Канбан.Служебный Тогда
				Если Уровень = 0 Тогда
					Если ВыборкаНР.Элемент <> МПЗ Тогда
					Продолжить;
					КонецЕсли; 
				КонецЕсли; 
			ЛинейкаКанбана = ПолучитьЛинейкуКанбана(МТК.Линейка,ВыборкаНР.Элемент.Канбан);
				Если ЛинейкаКанбана <> Неопределено Тогда
				ВыбМТК = ОбщийМодульСозданиеДокументов.СоздатьМТККанбан(ЛинейкаКанбана,МТК.Линейка.МестоХраненияКанбанов,1,ВыборкаНР.Элемент,ВыборкаНР.Норма*Количество,Ложь,МТК,"",0);
				Иначе
				Результат = Ложь;
				Сообщить(МТК.Номер+" > "+СокрЛП(ВыборкаНР.Элемент.Наименование)+" - не найдена линейка-поставщик канбана для "+МТК.Линейка);
				Возврат(Результат);
				КонецЕсли;
			Результат = РаскрытьНаМПЗ(ВыбМТК,ВыборкаНР.Элемент,ВыборкаНР.Норма*Количество,Уровень+1,Результат);
			КонецЕсли;
		Иначе
		Результат = РаскрытьНаМПЗ(МТК,ВыборкаНР.Элемент,ВыборкаНР.Норма*Количество,Уровень+1,Результат);		
		КонецЕсли; 
	КонецЦикла;
Возврат(Результат);
КонецФункции

&НаСервере
Функция СоздатьПодчиненныеМТК()
Возврат(РаскрытьНаМПЗ(ПроизводственноеЗадание.ДокументОснование,ПроизводственноеЗадание.Изделие,КоличествоБрака,0,Истина));
КонецФункции

&НаСервере
Функция ОформитьПеремещениеБракаНаСервере(СтатьяСписания)
ПаспортЛинейки = РегистрыСведений.ПаспортЛинейки.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("Линейка",Линейка));
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
		Если КоличествоБрака > КоличествоНаСкладе Тогда	
			Если Не ОбщийМодульВызовСервера.ОтменаЗапускаПЗ(ПроизводственноеЗадание,Ложь) Тогда
			Сообщить("Запуск производственного задания не отменён!");
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			Возврат(Неопределено);			
			КонецЕсли;
		КонецЕсли;
	Перемещение = Документы.ДвижениеМПЗ.СоздатьДокумент();
	Перемещение.Дата = ТекущаяДата();
	Перемещение.УстановитьНовыйНомер(ПрисвоитьПрефикс(Линейка.Подразделение));
	Перемещение.Автор = ПараметрыСеанса.Пользователь;
	Перемещение.ДокументОснование = ПроизводственноеЗадание;
	Перемещение.Подразделение = Линейка.Подразделение;
	Перемещение.Сотрудник = ПаспортЛинейки.Мастер;
	Перемещение.МестоХранения = Линейка.МестоХраненияКанбанов; 
		Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
			Если МПЗ.Возвратный Тогда
			Перемещение.МестоХраненияВ = Справочники.МестаХранения.НайтиПоКоду("100");
			Иначе	
				Если ТипБрака = 1 Тогда
				Перемещение.МестоХраненияВ = МПЗ.Канбан.Подразделение.МестоХраненияБрака; 
				Иначе
				Перемещение.МестоХраненияВ = Линейка.Подразделение.МестоХраненияБрака;
				КонецЕсли;			
			КонецЕсли;	
		Иначе	
			Если ТипБрака = 1 Тогда
			Перемещение.МестоХраненияВ = МПЗ.Канбан.Подразделение.МестоХраненияБрака; 
			Иначе
			Перемещение.МестоХраненияВ = Линейка.Подразделение.МестоХраненияБрака;
			КонецЕсли;		
		КонецЕсли;
	Перемещение.РабочееМесто = РабочееМесто;
	Перемещение.ВидБрака = ВидБрака;
	Перемещение.ЭтапЖизненногоЦикла = ЭтапЖизненногоЦикла;
	Перемещение.Комментарий = СокрЛП(ВидБрака.Наименование)+". "+СокрЛП(СтатьяСписания.Наименование)+" ("+СокрЛП(Комментарий)+")";
	ТЧ = Перемещение.ТабличнаяЧасть.Добавить();
	ТЧ.ВидМПЗ = ?(ТипЗнч(МПЗ) = Тип("СправочникСсылка.Материалы"),Перечисления.ВидыМПЗ.Материалы,Перечисления.ВидыМПЗ.Полуфабрикаты);
	ТЧ.МПЗ = МПЗ;
	ТЧ.Количество = КоличествоБрака/МПЗ.ОсновнаяЕдиницаИзмерения.Коэффициент;
	ТЧ.ЕдиницаИзмерения =  МПЗ.ОсновнаяЕдиницаИзмерения;	
	Перемещение.Записать(РежимЗаписиДокумента.Проведение);
		Если КоличествоБрака = КоличествоНаСкладе Тогда
		ОбщийМодульВызовСервера.ОстановитьМТК(ПроизводственноеЗадание.ДокументОснование,ПараметрыСеанса.Пользователь,"Отсутствие МПЗ в связи со списанием брака",МПЗ,Неопределено,РабочееМесто);
		КонецЕсли;
			Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
				Если МПЗ.Канбан.Служебный Тогда	
					Если Не СоздатьПодчиненныеМТК() Тогда
					Сообщить("Подчиненные МТК не созданы!");	
					ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
					Возврат(Неопределено);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли; 
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(Перемещение.Ссылка);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Неопределено);
	КонецПопытки;
КонецФункции

&НаСервере
Функция ПолучитьСтатьюСписания(Наименование)
Возврат(Справочники.СтатьиПоступленийСписанийПрочих.НайтиПоНаименованию(Наименование,Истина));
КонецФункции

&НаКлиенте
Процедура ОформитьБракПоставщика()
	Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Материалы")Тогда
	СтатьяСписания = ПолучитьСтатьюСписания("Брак материалов от поставщика");
		Если ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(МПЗ,"Возвратный") Тогда
		Результат = ОформитьПеремещениеБракаНаСервере(СтатьяСписания);
		Иначе	
		Результат = ОформитьСписаниеБракаНаСервере(СтатьяСписания);
		КонецЕсли;
	Иначе
	СтатьяСписания = ПолучитьСтатьюСписания("Внешний брак продукции участков");
	Результат = ОформитьПеремещениеБракаНаСервере(СтатьяСписания);
	КонецЕсли; 
		Если Результат <> Неопределено Тогда
		ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Создан документ "+Результат,БиблиотекаКартинок.Пользователь);
		Этаформа.Закрыть(?(КоличествоБрака > КоличествоНаСкладе,Истина,Ложь));
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОформитьБракСобственный()
	Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
	СтатьяСписания = ПолучитьСтатьюСписания("Брак материалов, полученный в процессе производства");
		Если ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(МПЗ,"Возвратный") Тогда
		Результат = ОформитьПеремещениеБракаНаСервере(СтатьяСписания);
		Иначе	
		Результат = ОформитьСписаниеБракаНаСервере(СтатьяСписания);
		КонецЕсли;
	Иначе
		Если ВидБрака.Пустая() Тогда
		Сообщить("Выберите стандартный комментарий!");	
		Возврат;
		КонецЕсли; 
	СтатьяСписания = ПолучитьСтатьюСписания("Брак полуфабрикатов, полученный в процессе производства");
	Результат = ОформитьПеремещениеБракаНаСервере(СтатьяСписания);		
	КонецЕсли;	
		Если Результат <> Неопределено Тогда
		ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Создан документ "+Результат,БиблиотекаКартинок.Пользователь);
		Этаформа.Закрыть(?(КоличествоБрака > КоличествоНаСкладе,Истина,Ложь));
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Оформить(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		Если КоличествоБрака <= (КоличествоНаСкладе+КоличествоВПЗ) Тогда
			Если ТипБрака = 1 Тогда
				Если Вопрос("Вы уверены, что это брак поставщика?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
				Возврат;				
				КонецЕсли;
			КонецЕсли;
				Если ТипБрака = 1 Тогда
				ОформитьБракПоставщика();
				Иначе
				ОформитьБракСобственный();
				КонецЕсли;
		Иначе
		Сообщить("Кол-во брака превышает кол-во на складе и в производственном задании "+МПЗ+"!");				
		КонецЕсли; 
	КонецЕсли;  
КонецПроцедуры

&НаСервере
Функция ПолучитьГруппуРабочихМест()
Возврат(РабочееМесто.ГруппаРабочихМест);
КонецФункции 

&НаСервере
Функция ПолучитьГруппуВидовБрака()
	Если ТипБрака = 1 Тогда
	ТекРодитель = МПЗ.Родитель;
	Иначе
	//ТекРодитель = ПроизводственноеЗадание.Изделие.Родитель;		
    ТекРодитель = ЭтапСпецификации.Родитель;
	КонецЕсли; 
		Пока Не ТекРодитель.Пустая() Цикл		
			Если Не ТекРодитель.ВидБрака.Пустая() Тогда
			Возврат(ТекРодитель.ВидБрака);
			КонецЕсли; 
		ТекРодитель = ТекРодитель.Родитель;	
		КонецЦикла; 
Возврат(Справочники.ВидыБрака.ПустаяСсылка());
КонецФункции

&НаСервере
Процедура ПолучитьЭтапЖизненногоЦикла()
	Если ВидБрака.ЭтапЖизненногоЦикла.Пустая() Тогда
		Если ТипБрака = 1 Тогда
		ЭтапЖизненногоЦикла = ОбщийМодульВызовСервера.ПолучитьЭтапЖизненногоЦикла(МПЗ);
		Иначе	
		ЭтапЖизненногоЦикла = ОбщийМодульВызовСервера.ПолучитьЭтапЖизненногоЦикла(ЭтапСпецификации);
		КонецЕсли;	
	Иначе	
	ЭтапЖизненногоЦикла = ВидБрака.ЭтапЖизненногоЦикла;
	КонецЕсли; 
КонецПроцедуры  

&НаКлиенте
Процедура ВидБракаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
Ф = ПолучитьФорму("Справочник.ВидыБрака.Форма.ФормаВыбораПоГруппе",Новый Структура("Родитель",ПолучитьГруппуВидовБрака()));
Результат = Ф.ОткрытьМодально(); 
	Если Результат <> Неопределено Тогда
	ВидБрака = Результат;
	ПолучитьЭтапЖизненногоЦикла();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
Этаформа.Закрыть(Ложь);
КонецПроцедуры
