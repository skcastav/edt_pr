
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
ПроизводственноеЗадание = Параметры.ПЗ;
РабочееМесто = Параметры.РабочееМесто;
КоличествоВсего = Параметры.КоличествоИзделия; 
	Если Параметры.Свойство("Ремонт") Тогда
	Ремонт = Истина;
	КонецЕсли;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КомментарииНеисправностейТабличнаяЧасть.Ссылка
	|ИЗ
	|	Справочник.КомментарииНеисправностей.ТабличнаяЧасть КАК КомментарииНеисправностейТабличнаяЧасть
	|ГДЕ
	|	КомментарииНеисправностейТабличнаяЧасть.РабочееМесто = &РабочееМесто
	|	И КомментарииНеисправностейТабличнаяЧасть.Ссылка.ИспользоватьПоУмолчанию = ИСТИНА";
Запрос.УстановитьПараметр("РабочееМесто", РабочееМесто);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СтандартныйКомментарий = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;                                                                                         
КонецПроцедуры

&НаСервере
Функция СоздатьПеремещениеВБрак()
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Перемещение = Документы.ДвижениеМПЗ.СоздатьДокумент();
	Перемещение.Дата = ТекущаяДата();
	Перемещение.УстановитьНовыйНомер(ПрисвоитьПрефикс(ПроизводственноеЗадание.Линейка.Подразделение));
	Перемещение.Автор = ПараметрыСеанса.Пользователь;
	Перемещение.ДокументОснование = ПроизводственноеЗадание;
	Перемещение.Подразделение = ПроизводственноеЗадание.Линейка.Подразделение;
	Перемещение.МестоХранения = ПроизводственноеЗадание.Линейка.Подразделение.МестоХраненияРемонта;
	Перемещение.МестоХраненияВ = ПроизводственноеЗадание.Линейка.Подразделение.МестоХраненияБрака;
	Перемещение.РабочееМесто = РабочееМесто;
	Перемещение.ВидБрака = ВидБрака;
	Перемещение.ЭтапЖизненногоЦикла = ЭтапЖизненногоЦикла;
	Перемещение.Комментарий = СокрЛП(ВидБрака.Наименование)+". "+СокрЛП(Комментарий);
	ТЧ = Перемещение.ТабличнаяЧасть.Добавить();
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
	ТЧ.МПЗ = ПроизводственноеЗадание.Изделие;
	ТЧ.Количество = КоличествоБрака/ПроизводственноеЗадание.Изделие.ОсновнаяЕдиницаИзмерения.Коэффициент;
	ТЧ.ЕдиницаИзмерения =  ПроизводственноеЗадание.Изделие.ОсновнаяЕдиницаИзмерения;	
	Перемещение.Записать(РежимЗаписиДокумента.Проведение);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина);	
КонецФункции

&НаСервере
Функция СоздатьВыпускПродукцииКанбанВБрак() Экспорт
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииКанбан.Ссылка
	|ИЗ
	|	Документ.ВыпускПродукцииКанбан КАК ВыпускПродукцииКанбан
	|ГДЕ
	|	ВыпускПродукцииКанбан.ДокументОснование.ДокументОснование = &МТК";
Запрос.УстановитьПараметр("МТК", ПроизводственноеЗадание.ДокументОснование);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
ПП = Документы.ПередачаВПроизводство.НайтиПоНомеру(ПроизводственноеЗадание.ДокументОснование.Номер,ТекущаяДата());
	Если ПП.Пустая() Тогда
	ПП = Документы.ПередачаВПроизводство.НайтиПоНомеру(ПроизводственноеЗадание.ДокументОснование.Номер,НачалоГода(ТекущаяДата())-1);	
		Если ПП.Пустая() Тогда	
		Сообщить("Документ передачи в производство по МТК "+ПроизводственноеЗадание.ДокументОснование.Номер+" не найден!");
		Возврат(Ложь);
		КонецЕсли;			
	КонецЕсли;
		Попытка
		НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;	
		Выпуск = Документы.ВыпускПродукцииКанбан.СоздатьДокумент();
		Выпуск.Автор = ПараметрыСеанса.Пользователь;
		Выпуск.ДокументОснование = ПроизводственноеЗадание;
		Выпуск.Подразделение = ПроизводственноеЗадание.Подразделение;
		Выпуск.Номер = СокрЛП(ПроизводственноеЗадание.ДокументОснование.Номер)+"-"+Формат(ВыборкаДетальныеЗаписи.Количество()+1,"ЧЦ=3; ЧВН=");
		Выпуск.Дата = ТекущаяДата();
		Выпуск.МестоХранения = ПроизводственноеЗадание.Линейка.Подразделение.МестоХраненияБрака; 
		Выпуск.Изделие = ПроизводственноеЗадание.Изделие;
		Выпуск.Количество = КоличествоБрака;
		Выпуск.РабочееМесто = РабочееМесто;
		Выпуск.ВидБрака = ВидБрака;
		Выпуск.ЭтапЖизненногоЦикла = ЭтапЖизненногоЦикла;		
		Выпуск.Комментарий = СокрЛП(ВидБрака.Наименование)+". "+СокрЛП(Комментарий);
			Для каждого ТЧ Из ПП.Спецификация Цикл
			ТЧВыпуск = Выпуск.Списание.Добавить();
				Если ТипЗнч(ТЧ.МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
				ТЧВыпуск.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
				ИначеЕсли ТипЗнч(ТЧ.МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
				ТЧВыпуск.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;			
				КонецЕсли; 
			ТЧВыпуск.МПЗ = ТЧ.МПЗ;
			ТЧВыпуск.Количество = ТЧ.Количество/ПП.Количество*КоличествоБрака;
			ТЧВыпуск.ЕдиницаИзмерения = ТЧ.ЕдиницаИзмерения;                                     
			КонецЦикла; 
		Выпуск.Списание.Свернуть("ВидМПЗ,МПЗ,ЕдиницаИзмерения","Количество");
		Выпуск.Записать(РежимЗаписиДокумента.Проведение);
		ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
		Исключение
		Сообщить(ОписаниеОшибки());
		ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
		Возврат(Ложь);
		КонецПопытки;
Возврат(Истина);
КонецФункции

&НаСервере
Функция ОформитьБракНаСервере()
	Если КоличествоБрака > КоличествоВсего Тогда
	Сообщить("Выбранное количество превышает количество по ПЗ!");
	Возврат(Неопределено);				
	КонецЕсли; 
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
		Если РабочееМесто.Линейка.ПеремещениеВБракВыпуском Тогда
			Если Не СоздатьВыпускПродукцииКанбанВБрак() Тогда
			Сообщить("Документ выпуска по ПЗ "+ПроизводственноеЗадание.Номер+" не создан!");
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			Возврат(Ложь);
			КонецЕсли;	
		НаборЗаписей = РегистрыСведений.ЭтапыПроизводственныхЗаданий.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ПЗ.Установить(ПроизводственноеЗадание);
		НаборЗаписей.Прочитать();
		флНайденоТекущееРМ = Ложь;
		    Для Каждого Запись Из НаборЗаписей Цикл 
				Если Запись.РабочееМесто = РабочееМесто Тогда
				флНайденоТекущееРМ = Истина;
				Продолжить;
				КонецЕсли; 
					Если флНайденоТекущееРМ Тогда
					Запись.Количество = КоличествоВсего - КоличествоБрака;				
					КонецЕсли;
		    КонецЦикла;
		НаборЗаписей.Записать();			
		Иначе	
			Если Не СоздатьПеремещениеВБрак() Тогда
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			Возврат(Ложь);
			КонецЕсли; 
		КонецЕсли;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(Истина);	
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Ложь);
	КонецПопытки;
КонецФункции

&НаКлиенте
Процедура Оформить(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда	
		Если ОформитьБракНаСервере() Тогда
		ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Оформление брака завершено успешно!",БиблиотекаКартинок.Пользователь);
		Этаформа.Закрыть(КоличествоБрака);
		КонецЕсли;
	КонецЕсли;  
КонецПроцедуры

&НаСервере
Функция ПолучитьГруппуВидовБрака()
ТекРодитель = ПроизводственноеЗадание.Изделие.Родитель;		
	Пока Не ТекРодитель.Пустая() Цикл		
		Если Не ТекРодитель.ВидБрака.Пустая() Тогда
		Возврат(ТекРодитель.ВидБрака);
		КонецЕсли; 
	ТекРодитель = ТекРодитель.Родитель;	
	КонецЦикла; 
Возврат(Справочники.ВидыБрака.ПустаяСсылка());
КонецФункции

&НаСервере
Процедура ПолучитьЭтапЖизненногоЦикла()
	Если ВидБрака.ЭтапЖизненногоЦикла.Пустая() Тогда
	ЭтапЖизненногоЦикла = ОбщийМодульВызовСервера.ПолучитьЭтапЖизненногоЦикла(ПроизводственноеЗадание.Изделие);	
	Иначе	
	ЭтапЖизненногоЦикла = ВидБрака.ЭтапЖизненногоЦикла;
	КонецЕсли; 
КонецПроцедуры 

&НаКлиенте
Процедура ВидБракаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
Ф = ПолучитьФорму("Справочник.ВидыБрака.Форма.ФормаВыбораПоГруппе",Новый Структура("Родитель",ПолучитьГруппуВидовБрака()));
Результат = Ф.ОткрытьМодально(); 
	Если Результат <> Неопределено Тогда
	ВидБрака = Результат;
	ПолучитьЭтапЖизненногоЦикла();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
Этаформа.Закрыть(0);
КонецПроцедуры
