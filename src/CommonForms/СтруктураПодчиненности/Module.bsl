
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
ТекущийДокумент = Параметры.Документ;
КонецПроцедуры 
    
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ОбщийМодульВызовСервера.ДоступностьРоли("Администратор") или ОбщийМодульВызовСервера.ДоступностьРоли("ГлавныйДиспетчер") Тогда
	Элементы.ОтменитьЗапускМТК.Доступность = Истина;
	Иначе
 	Элементы.ОтменитьЗапускМТК.Доступность = Ложь;
	КонецЕсли;
Элементы.ОтменитьЗапускПЗ.Доступность = ОбщийМодульВызовСервера.ДоступностьРоли("Администратор");
	Если ПриОткрытииПоказыватьОтТекущего Тогда
	ПостроитьДерево(ТекущийДокумент);
	Иначе
	ПостроитьВсёДерево();
	КонецЕсли;
Развернуть(Неопределено);
КонецПроцедуры
       
&НаСервере
Процедура ПостроитьВсёДерево()
Док = ТекущийДокумент;
	Если ЕстьРеквизитДокумента("ДокументОснование",Док.Метаданные()) Тогда
		Пока ЗначениеЗаполнено(Док.ДокументОснование) Цикл
		Док = Док.ДокументОснование;
			Если Не ЕстьРеквизитДокумента("ДокументОснование",Док.Метаданные()) Тогда
			Прервать;
			КонецЕсли;
		КонецЦикла; 		
	КонецЕсли;
ПостроитьДерево(Док);
КонецПроцедуры 

&НаСервере
Процедура ПостроитьДерево(Док)
тДерево = РеквизитФормыВЗначение("ДеревоПодчиненности");
тДерево.Строки.Очистить(); 
Стр = тДерево.Строки.Добавить();
Стр.Документ = Док;
Стр.ВидДокумента = ТипЗнч(Док);
Стр.СтатусДок = Док.Проведен;
Стр.СтатусДок = ?(Док.ПометкаУдаления,2,Стр.СтатусДок);
Стр.СтатусМТК = -1;
	Если ТипЗнч(Док) = Тип("ДокументСсылка.МаршрутнаяКарта") Тогда
	Элементы.ОтменитьЗапускМТК.Видимость = Истина;
	Стр.СтатусМТК = Док.Статус;
		Если Док.Линейка.ВидЛинейки = Перечисления.ВидыЛинеек.Канбан Тогда	
		Элементы.ДеревоПодчиненностиДатаГУ.Видимость = Ложь;
		КонецЕсли;
	ИначеЕсли ТипЗнч(Док) = Тип("ДокументСсылка.ПроизводственноеЗадание") Тогда
	Элементы.ОтменитьЗапускПЗ.Видимость = Истина;	
	Стр.ДатаЗапуска = Док.ДатаЗапуска;
	Стр.ДатаГУ = Док.ДатаГрупповойУпаковки;
	РМ = РегистрыСведений.ЭтапыПроизводственныхЗаданий.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("ПЗ",Док));
	Стр.РабочееМесто = РМ.РабочееМесто;
	Стр.ДатаНачала = РМ.ДатаНачала;
	Стр.ДатаОкончания = РМ.ДатаОкончания;
		Если Док.Линейка.ВидЛинейки = Перечисления.ВидыЛинеек.Канбан Тогда	
		Элементы.ДеревоПодчиненностиДатаГУ.Видимость = Ложь;
		КонецЕсли;
	Иначе
	Элементы.ДеревоПодчиненностиДатаГУ.Видимость = Ложь;
	Элементы.ДеревоПодчиненностиДатаЗапуска.Видимость = Ложь;
	Элементы.ДеревоПодчиненностиРабочееМесто.Видимость = Ложь;
	Элементы.ДеревоПодчиненностиДатаНачала.Видимость = Ложь;
	Элементы.ДеревоПодчиненностиДатаОкончания.Видимость = Ложь;	
	КонецЕсли; 
		Если Док.Метаданные().Реквизиты.Найти("МестоХранения") <> Неопределено Тогда
		Стр.МестоХранения = Док.МестоХранения;			
		КонецЕсли;
			Если Док.Метаданные().Реквизиты.Найти("МестоХраненияВ") <> Неопределено Тогда
			Стр.МестоХраненияВ = Док.МестоХраненияВ;			
			КонецЕсли;
				Если Док.Метаданные().Реквизиты.Найти("Номенклатура") <> Неопределено Тогда
				Стр.Изделие = Док.Номенклатура;			
				КонецЕсли;
					Если Док.Метаданные().Реквизиты.Найти("Изделие") <> Неопределено Тогда
					Стр.Изделие = Док.Изделие;			
					КонецЕсли;
ПодчинениеДок(Стр,Док);
ЗначениеВРеквизитФормы(тДерево, "ДеревоПодчиненности");
Идентиф = 0;
НайтиВДереве(ДеревоПодчиненности.ПолучитьЭлементы(),Параметры.Документ,Идентиф);
Элементы.ДеревоПодчиненности.ТекущаяСтрока =  Идентиф;
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
ПостроитьВсёДерево();
Развернуть(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ПодчинениеДок(СтрДерево,ДокОсн)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтруктураПодчиненности.Ссылка,
	|	СтруктураПодчиненности.Ссылка.Номер КАК СсылкаНомер
	|ИЗ
	|	КритерийОтбора.ПодчиненныеДокументы(&ЗначениеКритерияОтбора) КАК СтруктураПодчиненности
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтруктураПодчиненности.Ссылка.Дата,
	|	СсылкаНомер";
Запрос.УстановитьПараметр("ЗначениеКритерияОтбора", ДокОсн);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СтрЗнч = СтрДерево.Строки.Добавить();
	СтрЗнч.Документ = ВыборкаДетальныеЗаписи.Ссылка;
	СтрЗнч.ВидДокумента = ТипЗнч(ВыборкаДетальныеЗаписи.Ссылка);
	СтрЗнч.СтатусМТК = -1;
		Если СтрЗнч.ВидДокумента = "ПЗ" Тогда
		Элементы.ОтменитьЗапускПЗ.Видимость = Истина;
		СтрЗнч.ДатаЗапуска = ВыборкаДетальныеЗаписи.Ссылка.ДатаЗапуска;
		СтрЗнч.ДатаГУ = ВыборкаДетальныеЗаписи.Ссылка.ДатаГрупповойУпаковки;
		СтрЗнч.СтатусДок = ?(ВыборкаДетальныеЗаписи.Ссылка.ПометкаУдаления,2,СтрЗнч.СтатусДок);
		РМ = РегистрыСведений.ЭтапыПроизводственныхЗаданий.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("ПЗ",ВыборкаДетальныеЗаписи.Ссылка));
		СтрЗнч.РабочееМесто = РМ.РабочееМесто;
		СтрЗнч.ДатаНачала = РМ.ДатаНачала;
		СтрЗнч.ДатаОкончания = РМ.ДатаОкончания;
		Иначе
		СтрЗнч.СтатусДок = ВыборкаДетальныеЗаписи.Ссылка.Проведен;
		СтрЗнч.СтатусДок = ?(ВыборкаДетальныеЗаписи.Ссылка.ПометкаУдаления,2,СтрЗнч.СтатусДок);
		КонецЕсли; 
			Если ВыборкаДетальныеЗаписи.Ссылка.Метаданные().Реквизиты.Найти("МестоХранения") <> Неопределено Тогда
			СтрЗнч.МестоХранения = ВыборкаДетальныеЗаписи.Ссылка.МестоХранения;			
			КонецЕсли;
				Если ВыборкаДетальныеЗаписи.Ссылка.Метаданные().Реквизиты.Найти("МестоХраненияВ") <> Неопределено Тогда
				СтрЗнч.МестоХраненияВ = ВыборкаДетальныеЗаписи.Ссылка.МестоХраненияВ;			
				КонецЕсли;
					Если ВыборкаДетальныеЗаписи.Ссылка.Метаданные().Реквизиты.Найти("Номенклатура") <> Неопределено Тогда
					СтрЗнч.Изделие = ВыборкаДетальныеЗаписи.Ссылка.Номенклатура;			
					КонецЕсли;
						Если ВыборкаДетальныеЗаписи.Ссылка.Метаданные().Реквизиты.Найти("Изделие") <> Неопределено Тогда
						СтрЗнч.Изделие = ВыборкаДетальныеЗаписи.Ссылка.Изделие;			
						КонецЕсли;  
	ПодчинениеДок(СтрЗнч,ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ИмяДокументаМетаданных(Док)
Возврат(Док.Метаданные().Имя); 
КонецФункции

&НаКлиенте
Процедура ДеревоПодчиненностиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
П = Новый Структура("Ключ",Элементы.ДеревоПодчиненности.ТекущиеДанные.Документ);
ОткрытьФорму("Документ."+ИмяДокументаМетаданных(Элементы.ДеревоПодчиненности.ТекущиеДанные.Документ)+".Форма.ФормаДокумента",П);
КонецПроцедуры

&НаКлиенте
Процедура НайтиВЖурнале(Команда)
ТекФорма = ПолучитьФорму("Документ."+ИмяДокументаМетаданных(Элементы.ДеревоПодчиненности.ТекущиеДанные.Документ)+".ФормаСписка");
ТекФорма.Открыть();
ТекФорма.Элементы.Список.ТекущаяСтрока = Элементы.ДеревоПодчиненности.ТекущиеДанные.Документ;
КонецПроцедуры

&НаСервере
Процедура ОбновитьДеревоПодчиненности()
тДерево = РеквизитФормыВЗначение("ДеревоПодчиненности");
	Для каждого Стр Из тДерево.Строки Цикл
	Док = Стр.Документ;
	Прервать;
	КонецЦикла; 
тДерево.Строки.Очистить();
Стр = тДерево.Строки.Добавить();
Стр.Документ = Док;
Стр.ВидДокумента = ТипЗнч(Док);
Стр.СтатусДок = Док.Проведен;
Стр.СтатусДок = ?(Док.ПометкаУдаления,2,Стр.СтатусДок);
Стр.СтатусМТК = -1;
	Если ТипЗнч(Док) = Тип("ДокументСсылка.МаршрутнаяКарта") Тогда
	Стр.СтатусМТК = Док.Статус;
	ИначеЕсли ТипЗнч(Док) = Тип("ДокументСсылка.ПроизводственноеЗадание") Тогда	
	Стр.ДатаЗапуска = Док.ДатаЗапуска;
	Стр.ДатаГУ = Док.ДатаГрупповойУпаковки;
	РМ = РегистрыСведений.ЭтапыПроизводственныхЗаданий.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("ПЗ",Док));
	Стр.РабочееМесто = РМ.РабочееМесто;
	Стр.ДатаНачала = РМ.ДатаНачала;
	Стр.ДатаОкончания = РМ.ДатаОкончания;
	Иначе
		Если Док.Метаданные().Реквизиты.Найти("МестоХранения") <> Неопределено Тогда
		Стр.МестоХранения = Док.МестоХранения;			
		КонецЕсли;
			Если Док.Метаданные().Реквизиты.Найти("МестоХраненияВ") <> Неопределено Тогда
			Стр.МестоХраненияВ = Док.МестоХраненияВ;			
			КонецЕсли;	
	КонецЕсли; 
ПодчинениеДок(Стр,Док);
ЗначениеВРеквизитФормы(тДерево, "ДеревоПодчиненности");
КонецПроцедуры

&НаСервере
Функция ЭтоЛинейкаКанбан(Док)
Возврат(?(Док.Линейка.ВидЛинейки = Перечисления.ВидыЛинеек.Канбан,Истина,Ложь));
КонецФункции

&НаСервере
Функция ПолучитьЛинейку(ПЗ)
Возврат(ПЗ.Линейка);
КонецФункции

&НаКлиенте
Процедура ОтменитьЗапускПЗ(Команда)
Док = Элементы.ДеревоПодчиненности.ТекущиеДанные.Документ;
	Если ТипЗнч(Док) = Тип("ДокументСсылка.ПроизводственноеЗадание") Тогда
		Если Не ЭтоЛинейкаКанбан(Док) Тогда
			Если ОбщийМодульВызовСервера.МожноВыполнить(ПолучитьЛинейку(Док)) Тогда
			Результат = Вопрос("Все подчиненные документы и дата запуска будут удалены! 
							   |Производственное задание перейдёт на начальный этап производства!
					           |Вы уверены, что хотите отменить запуск?",РежимДиалогаВопрос.ДаНет,,,"Удаление");
				Если Результат = КодВозвратаДиалога.Да Тогда
					Если ОбщийМодульВызовСервера.ОтменаЗапускаПЗ(Док) Тогда
					ОбновитьДеревоПодчиненности();
					Развернуть(Неопределено);
					ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Запуск отменён!");
					КонецЕсли; 
				КонецЕсли;
			Иначе
			Сообщить("Для данной линейки нельзя отменить запуск ПЗ в данной базе!");
			КонецЕсли; 
		Иначе
		Сообщить("Нельзя отменить запуск ПЗ на линейке канбанов!");
		КонецЕсли;
	Иначе
	Сообщить("Выберите производственное задание!");
	КонецЕсли;  
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьЗапускМТК(Команда)
	Если ТипЗнч(Элементы.ДеревоПодчиненности.ТекущиеДанные.Документ) = Тип("ДокументСсылка.МаршрутнаяКарта") Тогда
		Если ЭтоЛинейкаКанбан(Элементы.ДеревоПодчиненности.ТекущиеДанные.Документ) Тогда
		Результат = Вопрос("Все подчиненные документы будут удалены! 
						   |Производственные задания перейдут на начальный этап производства!
				           |Вы уверены, что хотите отменить запуск МТК?",РежимДиалогаВопрос.ДаНет,,,"Удаление");
			Если Результат = КодВозвратаДиалога.Да Тогда
				Если ОбщийМодульВызовСервера.ОтменаЗапускаМТК(Элементы.ДеревоПодчиненности.ТекущиеДанные.Документ) Тогда
				ОбновитьДеревоПодчиненности();
				Развернуть(Неопределено);
				ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Запуск МТК отменён!");
				КонецЕсли; 
			КонецЕсли; 
		Иначе
		Сообщить("Нельзя отменить запуск МТК на приборной линейке!");
		КонецЕсли;
	Иначе
	Сообщить("Выберите маршрутную карту!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
П = Новый Структура("Ключ",Элементы.ДеревоПодчиненности.ТекущиеДанные.Документ);
ОткрытьФорму("Документ."+ИмяДокументаМетаданных(Элементы.ДеревоПодчиненности.ТекущиеДанные.Документ)+".Форма.ФормаДокумента",П);
КонецПроцедуры

&НаКлиенте
Процедура Развернуть(Команда)
тЭлементы = ДеревоПодчиненности.ПолучитьЭлементы();
   Для Каждого тСтр Из тЭлементы Цикл 
   Элементы.ДеревоПодчиненности.Развернуть(тСтр.ПолучитьИдентификатор(), Истина);
   КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СвернутьРекурсия(тЭлементы)
	Для Каждого тСтр Из тЭлементы Цикл
   	тСтрЭлементы = тСтр.ПолучитьЭлементы();
   	СвернутьРекурсия(тСтрЭлементы);
		Если тЭлементы.Количество() > 1 Тогда
		Элементы.ДеревоПодчиненности.Свернуть(тСтр.ПолучитьИдентификатор());		
		КонецЕсли; 
   	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура Свернуть(Команда)
тЭлементы = ДеревоПодчиненности.ПолучитьЭлементы();
СвернутьРекурсия(тЭлементы);
КонецПроцедуры

&НаСервере
Функция ЕстьРеквизитДокумента(ИмяРеквизита, МетаданныеДокумента)
	Если МетаданныеДокумента.Реквизиты.Найти(ИмяРеквизита) = Неопределено Тогда
	Возврат Ложь;
	Иначе
	Возврат Истина;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура НайтиВДереве(КоллекцияСтрокДереваОдногоУровня, Док, Индекс) 
    Для Каждого Стр Из КоллекцияСтрокДереваОдногоУровня Цикл
        Если Стр.Документ = Док Тогда
        Индекс = Стр.ПолучитьИдентификатор();
        Иначе
        НайтиВДереве(Стр.ПолучитьЭлементы(), Док, Индекс);
        КонецЕсли;
    КонецЦикла;   
КонецПроцедуры

&НаСервере
Процедура НайтиТекущийДокументНаСервере()
Идентиф = 0;
НайтиВДереве(ДеревоПодчиненности.ПолучитьЭлементы(),Параметры.Документ,Идентиф);
Элементы.ДеревоПодчиненности.ТекущаяСтрока =  Идентиф;
КонецПроцедуры

&НаКлиенте
Процедура НайтиТекущийДокумент(Команда)
НайтиТекущийДокументНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПодчиненностиПриАктивизацииСтроки(Элемент)
	Если ТипЗнч(Элемент.ТекущиеДанные.Документ) = Тип("ДокументСсылка.ПроизводственноеЗадание") Тогда
	Элементы.ДеревоПодчиненностиДатаГУ.Видимость = Истина;
	Элементы.ДеревоПодчиненностиДатаЗапуска.Видимость = Истина;
	Элементы.ДеревоПодчиненностиРабочееМесто.Видимость = Истина;
	Элементы.ДеревоПодчиненностиДатаНачала.Видимость = Истина;
	Элементы.ДеревоПодчиненностиДатаОкончания.Видимость = Истина;
	Иначе
	Элементы.ДеревоПодчиненностиДатаГУ.Видимость = Ложь;
	Элементы.ДеревоПодчиненностиДатаЗапуска.Видимость = Ложь;
	Элементы.ДеревоПодчиненностиРабочееМесто.Видимость = Ложь;
	Элементы.ДеревоПодчиненностиДатаНачала.Видимость = Ложь;
	Элементы.ДеревоПодчиненностиДатаОкончания.Видимость = Ложь;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтТекущего(Команда)
ПостроитьДерево(Элементы.ДеревоПодчиненности.ТекущиеДанные.Документ);
Развернуть(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ПоказатьОтДокументаОснованияНаСервере(Док)
	Если ЗначениеЗаполнено(Док.ДокументОснование) Тогда
	ПостроитьДерево(Док.ДокументОснование);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтДокументаОснования(Команда)
ПоказатьОтДокументаОснованияНаСервере(Элементы.ДеревоПодчиненности.ТекущиеДанные.Документ);
Развернуть(Неопределено);
КонецПроцедуры
