
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
ПроизводственноеЗадание = Параметры.ПЗ;
РабочееМесто = Параметры.РабочееМесто;
КоличествоВсего = Параметры.КоличествоИзделия;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПричиныРемонта.Ссылка
	|ИЗ
	|	Справочник.ПричиныРемонта КАК ПричиныРемонта
	|ГДЕ
	|	ПричиныРемонта.ПометкаУдаления = ЛОЖЬ
	|	И ПричиныРемонта.ГруппыРабочихМест.ГруппаРабочихМест = &ГруппаРабочихМест";
Запрос.УстановитьПараметр("ГруппаРабочихМест", РабочееМесто.ГруппаРабочихМест);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ПричинаРемонта = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;                                                                                         
КонецПроцедуры

&НаСервере
Функция ПереместитьВРемонтНаСервере()
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Перемещение = Документы.ДвижениеМПЗ.СоздатьДокумент();
	Перемещение.Дата = ТекущаяДата();
	Перемещение.УстановитьНовыйНомер(ПрисвоитьПрефикс(РабочееМесто.Линейка.Подразделение));
	Перемещение.Автор = ПараметрыСеанса.Пользователь;
	Перемещение.Подразделение = РабочееМесто.Линейка.Подразделение;
	Перемещение.ДокументОснование = ПроизводственноеЗадание;
		Если ПроизводственноеЗадание.ДокументОснование.МестоХраненияПотребитель.Пустая() Тогда
		Перемещение.МестоХранения = РабочееМесто.Линейка.МестоХраненияГП;		
		Иначе	
		Перемещение.МестоХранения = ПроизводственноеЗадание.ДокументОснование.МестоХраненияПотребитель;
		КонецЕсли; 
	Перемещение.МестоХраненияВ = РабочееМесто.Линейка.Подразделение.МестоХраненияРемонта;
	Перемещение.Комментарий = "Ремонт выпущенных полуфабрикатов на линейке";
	ТЧ = Перемещение.ТабличнаяЧасть.Добавить();
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
	ТЧ.МПЗ = ПроизводственноеЗадание.Изделие;
	ТЧ.Количество = КоличествоРемонт/ПроизводственноеЗадание.Изделие.ОсновнаяЕдиницаИзмерения.Коэффициент;
	ТЧ.ЕдиницаИзмерения =  ПроизводственноеЗадание.Изделие.ОсновнаяЕдиницаИзмерения;	
	Перемещение.Записать(РежимЗаписиДокумента.Проведение);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(Перемещение.Ссылка);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Неопределено);
	КонецПопытки;
КонецФункции

&НаСервере
Функция ПолучитьНомерРемонтнойКарты(ПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РемонтнаяКарта.Ссылка
	|ИЗ
	|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
	|ГДЕ
	|	РемонтнаяКарта.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", ПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
Возврат(ВыборкаДетальныеЗаписи.Количество()+1); 
КонецФункции

&НаСервере
Функция ОформитьРемонтНаСервере()
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	РемонтнаяКарта = Документы.РемонтнаяКарта.СоздатьДокумент();
	РемонтнаяКарта.Номер = ПроизводственноеЗадание.Номер+"-"+ПолучитьНомерРемонтнойКарты(ПроизводственноеЗадание);
	РемонтнаяКарта.Дата = ТекущаяДата();
	РемонтнаяКарта.ДокументОснование = ПроизводственноеЗадание;
	РемонтнаяКарта.ВидРемонта = Перечисления.ВидыРемонта.Канбан;
	РемонтнаяКарта.Линейка = ПроизводственноеЗадание.Линейка;
	РемонтнаяКарта.Подразделение = ПроизводственноеЗадание.Подразделение;
 	РемонтнаяКарта.РабочееМесто = РабочееМесто;
	РемонтнаяКарта.Изделие = ПроизводственноеЗадание.Изделие;
    РемонтнаяКарта.Количество = КоличествоРемонт;
	РемонтнаяКарта.ПричинаРемонта = ПричинаРемонта;
	РемонтнаяКарта.Комментарий = Комментарий;
	РемонтнаяКарта.Записать(РежимЗаписиДокумента.Запись);	
	НаборЗаписей = РегистрыСведений.ЭтапыПроизводственныхЗаданий.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПЗ.Установить(ПроизводственноеЗадание);
	НаборЗаписей.Прочитать();
	    Для Каждого Запись Из НаборЗаписей Цикл 
			Если Запись.РабочееМесто = РабочееМесто Тогда
				Если ЗначениеЗаполнено(Запись.ДатаОкончания) Тогда
					Если ПереместитьВРемонтНаСервере() = Неопределено Тогда
					ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
					Возврат(Ложь);						
					КонецЕсли;
				Иначе
 				Запись.Ремонт = Истина;
				КонецЕсли; 
			Прервать;
			КонецЕсли; 
	    КонецЦикла;
	НаборЗаписей.Записать();
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(Истина);	
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Ложь);
	КонецПопытки;
КонецФункции

&НаКлиенте
Процедура Оформить(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		Если КоличествоРемонт <= КоличествоВсего Тогда
			Если ОформитьРемонтНаСервере() Тогда
			ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Создана ремонтная карта!",БиблиотекаКартинок.Пользователь);
			Этаформа.Закрыть(КоличествоРемонт);
			КонецЕсли;
		Иначе
		Сообщить("Выбранное количество превышает количество в ПЗ!");				
		КонецЕсли;	
	КонецЕсли;  
КонецПроцедуры

&НаСервере
Функция ПолучитьГруппуПричинРемонта()
Возврат(РабочееМесто.ГруппаРабочихМест.ГруппаПричинРемонта);
КонецФункции

&НаКлиенте
Процедура ПричинаРемонтаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
ОткрытьФорму("Справочник.ПричиныРемонта.Форма.ФормаВыбораПоГруппе",Новый Структура("Родитель",ПолучитьГруппуПричинРемонта()),,,,, Новый ОписаниеОповещения("ПричинаРемонтаНачалоВыбораЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс); 
КонецПроцедуры

&НаКлиенте
Процедура ПричинаРемонтаНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
	ПричинаРемонта = Результат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
Этаформа.Закрыть(0);
КонецПроцедуры
