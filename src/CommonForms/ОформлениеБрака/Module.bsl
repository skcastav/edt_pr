
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
ПроизводственноеЗадание = Параметры.ПЗ;
РабочееМесто = Параметры.РабочееМесто;
Линейка = РабочееМесто.Линейка;
МПЗ = Параметры.МПЗ;
ЕдиницаИзмерения = МПЗ.ЕдиницаИзмерения;
	Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
	ТекВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
	Элементы.СтандартныйКомментарий.Видимость = Ложь;
	Элементы.Комментарий.Видимость = Ложь;
	Элементы.БракПоставщика.Видимость = Ложь;
	ИначеЕсли ТипЗнч(МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
	ТекВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КомментарииНеисправностейТабличнаяЧасть.Ссылка
		|ИЗ
		|	Справочник.КомментарииНеисправностей.ТабличнаяЧасть КАК КомментарииНеисправностейТабличнаяЧасть
		|ГДЕ
		|	КомментарииНеисправностейТабличнаяЧасть.РабочееМесто = &РабочееМесто
		|	И КомментарииНеисправностейТабличнаяЧасть.Ссылка.ИспользоватьПоУмолчанию = ИСТИНА";
	Запрос.УстановитьПараметр("РабочееМесто", РабочееМесто);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтандартныйКомментарий = ВыборкаДетальныеЗаписи.Ссылка;
		КонецЦикла;
	КонецЕсли; 
Фильтр   = Новый Структура;
Фильтр.Вставить("МестоХранения", Линейка.МестоХраненияКанбанов);
Фильтр.Вставить("ВидМПЗ",ТекВидМПЗ);
Фильтр.Вставить("МПЗ",МПЗ);	
Остатки = РегистрыНакопления.МестаХранения.Остатки(ТекущаяДата(),Фильтр);
	Если Остатки.Количество() > 0 Тогда
	КоличествоНаСкладе = Остатки[0].Количество;
	КонецЕсли;                                                                                         
КонецПроцедуры

&НаСервере
Функция ОформитьСписаниеБракаНаСервере(СтатьяСписания)
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Списание = Документы.СписаниеМПЗПрочее.СоздатьДокумент();
	Списание.Дата = ТекущаяДата();
	Списание.УстановитьНовыйНомер(ПрисвоитьПрефикс(ПроизводственноеЗадание.Подразделение));
	Списание.Автор = ПараметрыСеанса.Пользователь;
	Списание.ДокументОснование = ПроизводственноеЗадание;
	Списание.Подразделение = ПроизводственноеЗадание.Подразделение;
	Списание.МестоХранения = Линейка.МестоХраненияКанбанов;
	Списание.Статья = СтатьяСписания;
	Списание.Утвердил = ПараметрыСеанса.Пользователь;
	Списание.Комментарий = Комментарий;  
	ТЧ = Списание.ТабличнаяЧасть.Добавить();
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
	ТЧ.МПЗ = МПЗ;
	ТЧ.Количество = КоличествоБрака/МПЗ.ОсновнаяЕдиницаИзмерения.Коэффициент;
	ТЧ.ЕдиницаИзмерения = МПЗ.ОсновнаяЕдиницаИзмерения;
	Списание.Записать(РежимЗаписиДокумента.Проведение);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(Списание.Ссылка);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Неопределено);
	КонецПопытки;
КонецФункции

&НаСервере
Функция ОформитьПеремещениеБракаНаСервере(СтатьяСписания)
ПаспортЛинейки = РегистрыСведений.ПаспортЛинейки.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("Линейка",Линейка));
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Перемещение = Документы.ДвижениеМПЗ.СоздатьДокумент();
	Перемещение.Дата = ТекущаяДата();
	Перемещение.УстановитьНовыйНомер(ПрисвоитьПрефикс(Линейка.Подразделение));
	Перемещение.Автор = ПараметрыСеанса.Пользователь;
	Перемещение.ДокументОснование = ПроизводственноеЗадание;
	Перемещение.Подразделение = Линейка.Подразделение;
	Перемещение.Сотрудник = ПаспортЛинейки.Мастер;
	Перемещение.МестоХранения = Линейка.МестоХраненияКанбанов;
		Если БракПоставщика Тогда
		Перемещение.МестоХраненияВ = МПЗ.Канбан.Подразделение.МестоХраненияБрака; 
		Иначе
		Перемещение.МестоХраненияВ = Линейка.Подразделение.МестоХраненияБрака;
		КонецЕсли;
	Перемещение.РабочееМесто = РабочееМесто;
	Перемещение.ВидБрака = СтандартныйКомментарий;
	Перемещение.Комментарий = СокрЛП(СтатьяСписания.Наименование)+" ("+СокрЛП(СтандартныйКомментарий.Наименование)+". "+СокрЛП(Комментарий)+")";
	ТЧ = Перемещение.ТабличнаяЧасть.Добавить();
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
	ТЧ.МПЗ = МПЗ;
	ТЧ.Количество = КоличествоБрака/МПЗ.ОсновнаяЕдиницаИзмерения.Коэффициент;
	ТЧ.ЕдиницаИзмерения =  МПЗ.ОсновнаяЕдиницаИзмерения;	
	Перемещение.Записать(РежимЗаписиДокумента.Проведение);
		Если КоличествоБрака = КоличествоНаСкладе Тогда
		ОбщийМодульВызовСервера.ОстановитьМТК(ПроизводственноеЗадание.ДокументОснование,ПараметрыСеанса.Пользователь,"Отсутствие МПЗ в связи со списанием брака",МПЗ,Неопределено,РабочееМесто);
		//МТК = ПроизводственноеЗадание.ДокументОснование.ПолучитьОбъект();
		//МТК.ДатаНачалаОстановки = ТекущаяДата();
		//МТК.ДатаОкончанияОстановки = Дата(1,1,1);
		//МТК.ИнициаторОстановки = ПараметрыСеанса.Пользователь;
		//МТК.ПричинаОстановки = "Отсутствие МПЗ в связи со списанием брака";
		//МТК.Статус = 2;
		//МТК.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(Перемещение.Ссылка);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Неопределено);
	КонецПопытки;
КонецФункции

&НаСервере
Функция ПолучитьСтатьюСписания(Наименование)
Возврат(Справочники.СтатьиПоступленийСписанийПрочих.НайтиПоНаименованию(Наименование,Истина));
КонецФункции

&НаКлиенте
Процедура ОформитьБракПоставщика(Команда)
	Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Материалы")Тогда
	СтатьяСписания = ПолучитьСтатьюСписания("Брак материалов от поставщика");
	Результат = ОформитьСписаниеБракаНаСервере(СтатьяСписания);
	Иначе
	СтатьяСписания = ПолучитьСтатьюСписания("Внешний брак продукции участков");
	Результат = ОформитьПеремещениеБракаНаСервере(СтатьяСписания);
	КонецЕсли; 
		Если Результат <> Неопределено Тогда
		ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Создан документ "+Результат,БиблиотекаКартинок.Пользователь);
		Этаформа.Закрыть();
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОформитьБракСобственный(Команда)
	Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
	СтатьяСписания = ПолучитьСтатьюСписания("Брак материалов, полученный в процессе производства");
	Результат = ОформитьСписаниеБракаНаСервере(СтатьяСписания);
	Иначе
		Если СтандартныйКомментарий.Пустая() Тогда
		Сообщить("Выберите стандартный комментарий!");	
		Возврат;
		КонецЕсли; 
	СтатьяСписания = ПолучитьСтатьюСписания("Брак полуфабрикатов, полученный в процессе производства");
	Результат = ОформитьПеремещениеБракаНаСервере(СтатьяСписания);		
	КонецЕсли;	
		Если Результат <> Неопределено Тогда
		ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Создан документ "+Результат,БиблиотекаКартинок.Пользователь);
		Этаформа.Закрыть();
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Оформить(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		Если КоличествоБрака <= КоличествоНаСкладе Тогда
			Если (Не БракПоставщика)и(Элементы.БракПоставщика.Видимость) Тогда
				Если Вопрос("Вы уверены, что это собственный брак?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
				Возврат;				
				КонецЕсли;
			КонецЕсли;
				Если БракПоставщика Тогда
				ОформитьБракПоставщика(Неопределено);
				Иначе
				ОформитьБракСобственный(Неопределено);
				КонецЕсли;
		Иначе
		Сообщить("Выбранное кол-во брака превышает количество на складе "+МПЗ+"!");				
		КонецЕсли; 
	КонецЕсли;  
КонецПроцедуры

&НаКлиенте
Процедура СтандартныйКомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
Ф = ПолучитьФорму("Справочник.КомментарииНеисправностей.ФормаВыбора");
Ф.Список.Параметры.УстановитьЗначениеПараметра("РабочееМесто",РабочееМесто);
Результат = Ф.ОткрытьМодально();
	Если Результат <> Неопределено Тогда
	СтандартныйКомментарий = Результат;
	КонецЕсли; 
КонецПроцедуры
