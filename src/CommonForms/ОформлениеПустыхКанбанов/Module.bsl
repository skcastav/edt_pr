
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("МестоХраненияОтправитель") Тогда
	МестоХраненияОтправитель = Параметры.МестоХраненияОтправитель;
	Иначе
	Элементы.МестоХраненияОтправитель.Доступность = Истина;
	КонецЕсли;
		Если Параметры.Свойство("МестоХраненияКанбанов") Тогда
		МестоХраненияКанбанов = Параметры.МестоХраненияКанбанов;
		Иначе
		Элементы.МестоХраненияКанбанов.Доступность = Истина;
		КонецЕсли; 
			Если Параметры.Свойство("МПЗ") Тогда
			МПЗ = Параметры.МПЗ;
			Иначе
			Элементы.МПЗ.Доступность = Истина;
			КонецЕсли;
				Если Параметры.Свойство("НомерЯчейки") Тогда
				НомерЯчейки = Параметры.НомерЯчейки;
				Иначе
				Элементы.НомерЯчейки.Доступность = Истина;
				КонецЕсли;
					Если Параметры.Свойство("Сотрудник") Тогда
					Сотрудник = Параметры.Сотрудник;
					Иначе
					Элементы.Сотрудник.Доступность = Истина;
					Сотрудник = ПараметрыСеанса.Пользователь;
					КонецЕсли; 
РассчитатьПараметры();
КонецПроцедуры 
   
&НаСервере
Процедура РассчитатьПараметры()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОборотКанбанов.Период КАК Период,
	|	ОборотКанбанов.НомерЯчейки КАК НомерЯчейки
	|ИЗ
	|	РегистрСведений.ОборотКанбанов КАК ОборотКанбанов
	|ГДЕ
	|	ОборотКанбанов.МестоХраненияОтправитель = &МестоХраненияОтправитель 
	|	И ОборотКанбанов.МестоХранения = &МестоХранения
	|	И ОборотКанбанов.МПЗ = &МПЗ
	|	И ОборотКанбанов.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
Запрос.УстановитьПараметр("МестоХраненияОтправитель", МестоХраненияОтправитель);
Запрос.УстановитьПараметр("МестоХранения", МестоХраненияКанбанов);
Запрос.УстановитьПараметр("МПЗ", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
КоличествоОборотов = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл   
		Если НомерЯчейки = ВыборкаДетальныеЗаписи.НомерЯчейки Тогда
		ДатаПостановки = ВыборкаДетальныеЗаписи.Период;
		Элементы.Оформить.Доступность = Ложь;
		КонецЕсли;
	КоличествоОборотов = КоличествоОборотов + 1;
	КонецЦикла;
ЯчейкиКомплектации = ОбщийМодульРаботаСРегистрами.ПолучитьЯчейкуКомплектацииПоМестуХранения(МестоХраненияКанбанов,МПЗ);
	//Если (ЯчейкиКомплектации.КоличествоЯчеек - КоличествоОборотов) < 2 Тогда
КоличествоНаСкладе = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокПоМестуХранения(МестоХраненияКанбанов,МПЗ);
	//	Если КоличествоНаСкладе > 0 Тогда
	//	Элементы.Оформить.Доступность = Ложь;
	//	КонецЕсли;	
	//КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура МПЗПриИзменении(Элемент)
РассчитатьПараметры();
КонецПроцедуры

&НаКлиенте
Процедура МестоХраненияКанбановПриИзменении(Элемент)
РассчитатьПараметры();
КонецПроцедуры

&НаКлиенте
Процедура МестоХраненияОтправительПриИзменении(Элемент)
РассчитатьПараметры();
КонецПроцедуры
 
&НаСервере    
Функция ПроверитьНомерЯчейки()
ЯчейкиКомплектации = ОбщийМодульРаботаСРегистрами.ПолучитьЯчейкуКомплектацииПоМестуХранения(МестоХраненияКанбанов,МПЗ);
Возврат(?(НомерЯчейки > ЯчейкиКомплектации.КоличествоЯчеек,Ложь,Истина));
КонецФункции

&НаКлиенте
Процедура НомерЯчейкиПриИзменении(Элемент) 
	Если ПроверитьНомерЯчейки() Тогда
	РассчитатьПараметры();
	Иначе
	НомерЯчейки = 0;
	Сообщить("Количество ячеек канбана меньше выбранного номера ячейки!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ОформитьНаСервере()
Возврат(ОбщийМодульРаботаСРегистрами.ОформитьПустойКанбан(МестоХраненияОтправитель,МестоХраненияКанбанов,МПЗ,НомерЯчейки,Сотрудник)); 
КонецФункции

&НаСервере
Функция ПолучитьНаименованиеМПЗ()
Возврат(СокрЛП(МПЗ.Наименование));
КонецФункции

&НаКлиенте
Процедура Оформить(Команда)
	Если Не ЭтаФорма.ПроверитьЗаполнение() Тогда	
	Возврат;
	КонецЕсли;
		Если (МПЗ.Пустая())или(МПЗ = Неопределено) Тогда
		Сообщить("Выберите МПЗ!");	
		Возврат;
		КонецЕсли; 
			//Если КоличествоНаСкладе > 0 Тогда
			//Сообщить("По учёту МПЗ имеется на складе. Сначала необходимо оформить недостачу!");
			//Возврат;						 
			//КонецЕсли;								
				Если ОформитьНаСервере() Тогда	
				ЭтаФорма.Закрыть(Истина);
				КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
ЭтаФорма.Закрыть(Ложь);
КонецПроцедуры
