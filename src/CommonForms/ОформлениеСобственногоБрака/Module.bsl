
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
ПроизводственноеЗадание = Параметры.ПЗ;
Изделие = Параметры.Изделие;
Количество = Параметры.Количество;
	Если Не ПроизводственноеЗадание.Пустая() Тогда
	МестоХранения = ПроизводственноеЗадание.Линейка.МестоХраненияГП;
	КоличествоНаСкладе = ОбщийМодульВызовСервера.ПолучитьОстатокПоМестуХранения(МестоХранения,Изделие);
	Иначе
	КоличествоБрака = Количество;
	КонецЕсли;                                                                                         
КонецПроцедуры

&НаСервере
Процедура МестоХраненияПриИзмененииНаСервере()
КоличествоНаСкладе = ОбщийМодульВызовСервера.ПолучитьОстатокПоМестуХранения(МестоХранения,Изделие); 
КонецПроцедуры

&НаКлиенте
Процедура МестоХраненияПриИзменении(Элемент)
МестоХраненияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Функция ОформитьСписаниеБракаНаСервере()
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Списание = Документы.СписаниеМПЗПрочее.СоздатьДокумент();
	Списание.Дата = ТекущаяДата();
	Списание.УстановитьНовыйНомер(ПрисвоитьПрефикс(МестоХранения.Подразделение));
	Списание.Автор = ПараметрыСеанса.Пользователь;
		Если Не ПроизводственноеЗадание.Пустая() Тогда
		Списание.ДокументОснование = ПроизводственноеЗадание;
		КонецЕсли; 
	Списание.Подразделение = МестоХранения.Подразделение;
	Списание.МестоХранения = МестоХранения;
	Списание.Статья = Статья;
	Списание.РабочееМесто = РабочееМесто;
	Списание.ВидБрака = ВидБрака;
	Списание.ЭтапЖизненногоЦикла = ЭтапЖизненногоЦикла;
	Списание.Утвердил = ПараметрыСеанса.Пользователь;
	Списание.Комментарий = Комментарий;  
	ТЧ = Списание.ТабличнаяЧасть.Добавить();
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
	ТЧ.МПЗ = Изделие;
	ТЧ.Количество = КоличествоБрака/Изделие.ОсновнаяЕдиницаИзмерения.Коэффициент;
	ТЧ.ЕдиницаИзмерения = Изделие.ОсновнаяЕдиницаИзмерения;
	Списание.Записать(РежимЗаписиДокумента.Проведение);
		Если Не ПроизводственноеЗадание.Пустая() Тогда
			Если Изделие.Канбан.Служебный Тогда	
				Если Не СоздатьПодчиненныеМТК() Тогда
				Сообщить("Подчиненные МТК не созданы!");	
				ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
				Возврат(Неопределено);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(Списание.Ссылка);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Неопределено);
	КонецПопытки;
КонецФункции

&НаСервере
Функция ПолучитьЛинейкуКанбана(Линейка,ВидКанбана)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛинейкиЛинейкиПотребители.Ссылка
	|ИЗ
	|	Справочник.Линейки.ЛинейкиПотребители КАК ЛинейкиЛинейкиПотребители
	|ГДЕ
	|	ЛинейкиЛинейкиПотребители.Линейка = &Линейка
	|	И ЛинейкиЛинейкиПотребители.Ссылка.ПометкаУдаления = ЛОЖЬ";
Запрос.УстановитьПараметр("Линейка", Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныхЗаписей = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныхЗаписей.Следующий() Цикл
		Если ВыборкаДетальныхЗаписей.Ссылка.ВидыКанбанов.Найти(ВидКанбана,"ВидКанбана") <> Неопределено Тогда
		Возврат(ВыборкаДетальныхЗаписей.Ссылка);
		КонецЕсли;
	КонецЦикла; 
Возврат(Неопределено);
КонецФункции

&НаСервере
Функция РаскрытьНаМПЗ(МТК,Спецификация,Количество,Результат)
ВыборкаНР = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н(Спецификация,ТекущаяДата());
	Пока ВыборкаНР.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаНР.Элемент.Канбан) Тогда
			Если ВыборкаНР.Элемент.Канбан.Служебный Тогда 
			ЛинейкаКанбана = ПолучитьЛинейкуКанбана(МТК.Линейка,ВыборкаНР.Элемент.Канбан);
				Если ЛинейкаКанбана <> Неопределено Тогда
				ВыбМТК = ОбщийМодульСозданиеДокументов.СоздатьМТККанбан(ЛинейкаКанбана,МТК.Линейка.МестоХраненияКанбанов,1,ВыборкаНР.Элемент,ВыборкаНР.Норма*Количество,Ложь,МТК,"",0);
				Иначе
				Результат = Ложь;
				Сообщить(МТК.Номер+" > "+СокрЛП(ВыборкаНР.Элемент.Наименование)+" - не найдена линейка-поставщик канбана для "+МТК.Линейка);
				Возврат(Результат);
				КонецЕсли;
			Результат = РаскрытьНаМПЗ(ВыбМТК,ВыборкаНР.Элемент,ВыборкаНР.Норма*Количество,Результат);
			КонецЕсли;
		Иначе
		Результат = РаскрытьНаМПЗ(МТК,ВыборкаНР.Элемент,ВыборкаНР.Норма*Количество,Результат);		
		КонецЕсли; 
	КонецЦикла;
Возврат(Результат);
КонецФункции

&НаСервере
Функция СоздатьПодчиненныеМТК()
ВыбМТК = ОбщийМодульСозданиеДокументов.СоздатьМТККанбан(ПроизводственноеЗадание.Линейка,ПроизводственноеЗадание.Линейка.МестоХраненияКанбанов,1,Изделие,КоличествоБрака,Ложь,ПроизводственноеЗадание.ДокументОснование.ДокументОснование,"",0);
Возврат(РаскрытьНаМПЗ(ВыбМТК,Изделие,КоличествоБрака,Истина));
КонецФункции

&НаСервере
Функция ОформитьПеремещениеБракаНаСервере()
ПаспортЛинейки = РегистрыСведений.ПаспортЛинейки.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("Линейка",ПроизводственноеЗадание.Линейка));
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Перемещение = Документы.ДвижениеМПЗ.СоздатьДокумент();
	Перемещение.Дата = ТекущаяДата();
	Перемещение.УстановитьНовыйНомер(ПрисвоитьПрефикс(МестоХранения.Подразделение));
	Перемещение.Автор = ПараметрыСеанса.Пользователь;
		Если Не ПроизводственноеЗадание.Пустая() Тогда
		Перемещение.ДокументОснование = ПроизводственноеЗадание;
		КонецЕсли;
	Перемещение.Подразделение = МестоХранения.Подразделение;
	Перемещение.Сотрудник = ПаспортЛинейки.Мастер;
	Перемещение.МестоХранения = МестоХранения;
	Перемещение.МестоХраненияВ = Изделие.Канбан.Подразделение.МестоХраненияБрака;
	Перемещение.РабочееМесто = РабочееМесто;
	Перемещение.ВидБрака = ВидБрака;
	Перемещение.ЭтапЖизненногоЦикла = ЭтапЖизненногоЦикла;
	Перемещение.Комментарий = СокрЛП(ВидБрака.Наименование)+". "+СокрЛП(Статья.Наименование)+" ("+СокрЛП(Комментарий)+")";
	ТЧ = Перемещение.ТабличнаяЧасть.Добавить();
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
	ТЧ.МПЗ = Изделие;
	ТЧ.Количество = КоличествоБрака/Изделие.ОсновнаяЕдиницаИзмерения.Коэффициент;
	ТЧ.ЕдиницаИзмерения =  Изделие.ОсновнаяЕдиницаИзмерения;	
	Перемещение.Записать(РежимЗаписиДокумента.Проведение);
		Если Не ПроизводственноеЗадание.Пустая() Тогда
			Если Изделие.Канбан.Служебный Тогда	
				Если Не СоздатьПодчиненныеМТК() Тогда
				Сообщить("Подчиненные МТК не созданы!");	
				ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
				Возврат(Неопределено);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли; 
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(Перемещение.Ссылка);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Неопределено);
	КонецПопытки;
КонецФункции

&НаКлиенте
Процедура Списать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		Если КоличествоБрака <= КоличествоНаСкладе Тогда
			Если КоличествоБрака <= Количество Тогда
			Результат = ОформитьСписаниеБракаНаСервере();
				Если Результат <> Неопределено Тогда
				ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Создан документ "+Результат,БиблиотекаКартинок.Пользователь);
				Этаформа.Закрыть(Истина);
				КонецЕсли;		
			Иначе	
			Сообщить("Выбранное кол-во брака превышает исходное кол-во!");
			КонецЕсли;
		Иначе
		Сообщить("Выбранное кол-во брака превышает кол-во на складе!");				
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Переместить(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		Если КоличествоБрака <= КоличествоНаСкладе Тогда
			Если КоличествоБрака <= Количество Тогда
			Результат = ОформитьПеремещениеБракаНаСервере();
				Если Результат <> Неопределено Тогда
				ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Создан документ "+Результат,БиблиотекаКартинок.Пользователь);
				Этаформа.Закрыть(Истина);
				КонецЕсли;		
			Иначе	
			Сообщить("Выбранное кол-во брака превышает исходное кол-во!");
			КонецЕсли;
		Иначе
		Сообщить("Выбранное кол-во брака превышает кол-во на складе!");				
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьГруппуВидовБрака()
ТекРодитель = Изделие.Родитель;
	Пока Не ТекРодитель.Пустая() Цикл		
		Если Не ТекРодитель.ВидБрака.Пустая() Тогда
		Возврат(ТекРодитель.ВидБрака);
		КонецЕсли; 
	ТекРодитель = ТекРодитель.Родитель;	
	КонецЦикла; 
Возврат(Справочники.ВидыБрака.ПустаяСсылка());
КонецФункции

&НаСервере
Процедура ПолучитьЭтапЖизненногоЦикла()
	Если ВидБрака.ЭтапЖизненногоЦикла.Пустая() Тогда
	ЭтапЖизненногоЦикла = ОбщийМодульВызовСервера.ПолучитьЭтапЖизненногоЦикла(Изделие);	
	Иначе	
	ЭтапЖизненногоЦикла = ВидБрака.ЭтапЖизненногоЦикла;
	КонецЕсли; 
КонецПроцедуры 

&НаКлиенте
Процедура ВидБракаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
Ф = ПолучитьФорму("Справочник.ВидыБрака.Форма.ФормаВыбораПоГруппе",Новый Структура("Родитель",ПолучитьГруппуВидовБрака()));
Результат = Ф.ОткрытьМодально(); 
	Если Результат <> Неопределено Тогда
	ВидБрака = Результат;
	ПолучитьЭтапЖизненногоЦикла();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
Этаформа.Закрыть(Ложь);
КонецПроцедуры
