
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
ВидРемонта = Перечисления.ВидыРемонта.Общий;
	Если ЭтаФорма.Параметры.Свойство("Этапы") Тогда
		Для каждого ТЧ_Этап Из ЭтаФорма.Параметры.Этапы Цикл
		ЭтапАРМ = Параметры.РабочееМесто.ТабличнаяЧасть.Найти(ТЧ_Этап.ГруппаНоменклатуры,"ГруппаНоменклатуры");
			Если ЭтапАРМ = Неопределено Тогда
			Продолжить;
			ИначеЕсли ЭтапАРМ.Комплектация Тогда
		    Продолжить;
			КонецЕсли;
				Если ТЧ_Этап.ЭтапСпецификации.Виртуальный Тогда
				Продолжить;
				КонецЕсли;
		ТЧ = ТаблицаИзделий.Добавить();
		ТЧ.Изделие = ТЧ_Этап.ЭтапСпецификации;
		ТЧ.Количество = ТЧ_Этап.Количество;
		КонецЦикла;
	Иначе
	ТЧ = ТаблицаИзделий.Добавить();
	ТЧ.Изделие = ЭтаФорма.Параметры.ПроизводственноеЗадание.Изделие;
	ТЧ.Количество = 1;	
	КонецЕсли;
		Если ТаблицаИзделий.Количество() = 1 Тогда	
		ТаблицаИзделий[0].Пометка = Истина;
		КонецЕсли;  
КонецПроцедуры

&НаСервере
Функция СоздатьРемонтнуюКарту()
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
		Для каждого ТЧ Из ТаблицаИзделий Цикл
			Если ТЧ.Пометка Тогда
			ИзделиеРемонта = Новый Структура("Изделие,Количество",ТЧ.Изделие,ТЧ.Количество);
			ПричиныРемонта = Новый Структура("ПричинаРемонта,Комментарий",ПричинаРемонта,Комментарий);
				Если Не ОбщийМодульСозданиеДокументов.СоздатьРемонтнуюКарту(Параметры.ПроизводственноеЗадание,Параметры.РабочееМесто,ИзделиеРемонта,Параметры.Исполнитель,ВидРемонта,ПричиныРемонта,,ВозвратнаяТара) Тогда
				Сообщить("Ремонтная карта не создана!");
				ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
				Возврат(Ложь);
				КонецЕсли;
			КонецЕсли; 	
		КонецЦикла;			
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());	
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Ложь);
	КонецПопытки; 
Возврат(Истина);
КонецФункции

&НаСервере
Функция ПолучитьГруппуПричинРемонта(РабочееМесто)
Возврат(РабочееМесто.ГруппаРабочихМест.ГруппаПричинРемонта);
КонецФункции

&НаКлиенте
Процедура ПричинаРемонтаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
ОткрытьФорму("Справочник.ПричиныРемонта.Форма.ФормаВыбораПоГруппе",Новый Структура("Родитель",ПолучитьГруппуПричинРемонта(ЭтаФорма.Параметры.РабочееМесто)),,,,, Новый ОписаниеОповещения("ПричинаРемонтаНачалоВыбораЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

&НаКлиенте
Процедура ПричинаРемонтаНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
	ПричинаРемонта = Результат;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ТаблицаИзделийПометкаПриИзмененииНаСервере(Изделие)
	Для каждого ТЧ Из ТаблицаИзделий Цикл
		Если ТЧ.Изделие <> Изделие Тогда
		ТЧ.Пометка = Ложь;
		КонецЕсли; 	
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИзделийПометкаПриИзменении(Элемент)
	Если Элементы.ТаблицаИзделий.ТекущиеДанные.Пометка Тогда
	ТаблицаИзделийПометкаПриИзмененииНаСервере(Элементы.ТаблицаИзделий.ТекущиеДанные.Изделие);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	ИзделиеРемонта = Неопределено;
		Для каждого ТЧ Из ТаблицаИзделий Цикл
			Если ТЧ.Пометка Тогда			
			ИзделиеРемонта = ТЧ.Изделие;		
			КонецЕсли; 
		КонецЦикла;
			Если ИзделиеРемонта = Неопределено Тогда
			Сообщить("Выберите изделие ремонта.");
			Возврат;						
			КонецЕсли;
				Если СоздатьРемонтнуюКарту() Тогда
				ЭтаФорма.Закрыть(Истина);
				КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
ЭтаФорма.Закрыть();
КонецПроцедуры
