
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
ВидОперации = Параметры.ВидОперации;
	Если ВидОперации = 1 Тогда
	Элементы.Оформить.Заголовок = "Оформить недостачу";
	Иначе	
	Элементы.Оформить.Заголовок = "Оформить излишки";	
	КонецЕсли;
		Если Параметры.Свойство("ПЗ") Тогда
		ПроизводственноеЗадание = Параметры.ПЗ;
		КонецЕсли;  
МестоХраненияКанбанов = Параметры.МестоХраненияКанбанов;
МПЗ = Параметры.МПЗ;
ЕдиницаИзмерения = МПЗ.ЕдиницаИзмерения;
	Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
	ТекВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
	ИначеЕсли ТипЗнч(МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
	ТекВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
	КонецЕсли;
КоличествоНаСкладе = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокПоМестуХранения(МестоХраненияКанбанов,МПЗ);
//КоличествоНаСкладе = КоличествоНаСкладе + ОбщийМодульРаботаСРегистрами.ПолучитьОстатокВПроизводстве(Линейка,МПЗ);                                                                                           
КонецПроцедуры

&НаСервере
Функция ОформитьНедостачуНаСервере()
	Если КоличествоФактическое > КоличествоНаСкладе Тогда
	Сообщить("Фактическое количество должно быть меньше количества на складе "+МПЗ+"!");
	Возврат(Неопределено);				
	КонецЕсли; 
		Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
		ТекВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
		МестоХранения = Константы.МестоХраненияНедостачиМатериалов.Получить();
		ИначеЕсли ТипЗнч(МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
		ТекВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
		МестоХранения = МПЗ.Канбан.МестоХраненияСписанияНедостачи;
		КонецЕсли; 
			Попытка
			НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
			Перемещение = Документы.ДвижениеМПЗ.СоздатьДокумент();
			Перемещение.ДокументОснование = ПроизводственноеЗадание;
			Перемещение.Дата = ТекущаяДата();
			Перемещение.УстановитьНовыйНомер(ПрисвоитьПрефикс(МестоХраненияКанбанов.Подразделение));
			Перемещение.Автор = ПараметрыСеанса.Пользователь;
			Перемещение.Подразделение = МестоХраненияКанбанов.Подразделение;
			Перемещение.МестоХранения = МестоХраненияКанбанов;
			Перемещение.МестоХраненияВ = МестоХранения;
			Перемещение.Комментарий = "Недостача по месту хранения "+СокрЛП(МестоХраненияКанбанов.Наименование)+", автор "+ПараметрыСеанса.Пользователь;
			ТЧ = Перемещение.ТабличнаяЧасть.Добавить();
			ТЧ.ВидМПЗ = ТекВидМПЗ;
			ТЧ.МПЗ = МПЗ;
			ТЧ.Количество = (КоличествоНаСкладе-КоличествоФактическое)/МПЗ.ОсновнаяЕдиницаИзмерения.Коэффициент;
			ТЧ.ЕдиницаИзмерения =  МПЗ.ОсновнаяЕдиницаИзмерения;	
			Перемещение.Записать(РежимЗаписиДокумента.Проведение);
				Если КоличествоФактическое = 0 Тогда
				ОбщийМодульВызовСервера.ОстановитьМТК(ПроизводственноеЗадание.ДокументОснование,ПараметрыСеанса.Пользователь,"Отсутствие МПЗ в связи со списанием недостачи",МПЗ,Неопределено,ПолучитьТекущееРабочееМесто());
				//МТК = ПроизводственноеЗадание.ДокументОснование.ПолучитьОбъект();
				//МТК.МПЗОстановки = МПЗ;
				//МТК.ДатаНачалаОстановки = ТекущаяДата();
				//МТК.ДатаОкончанияОстановки = Дата(1,1,1);
				//МТК.ИнициаторОстановки = ПараметрыСеанса.Пользователь;
				//МТК.ПричинаОстановки = "Отсутствие МПЗ в связи со списанием недостачи";
				//МТК.Статус = 2;
				//МТК.Записать(РежимЗаписиДокумента.Проведение);
				КонецЕсли;
			ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
			Возврат(Перемещение.Ссылка);
			Исключение
			Сообщить(ОписаниеОшибки());
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			Возврат(Неопределено);
			КонецПопытки;
КонецФункции

&НаСервере
Функция ПолучитьПользователя()
Возврат(ПараметрыСеанса.Пользователь);
КонецФункции

&НаСервере
Функция ПолучитьМТК()
Возврат(ПроизводственноеЗадание.ДокументОснование);
КонецФункции

&НаСервере
Функция ПолучитьТекущееРабочееМесто()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто КАК РабочееМесто
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ = &ПЗ";
Запрос.УстановитьПараметр("ПЗ", ПроизводственноеЗадание);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.РабочееМесто);
	КонецЦикла;
Возврат(Справочники.РабочиеМестаЛинеек.ПустаяСсылка());
КонецФункции 

&НаКлиенте
Процедура ОформитьНедостачу(Команда)
	Если КоличествоНаСкладе > 0 Тогда
		Если (КоличествоНаСкладе-КоличествоФактическое) > 0 Тогда
		Результат = ОформитьНедостачуНаСервере();	
			Если Результат <> Неопределено Тогда
			ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Создан документ "+Результат,БиблиотекаКартинок.Пользователь);
			Этаформа.Закрыть(Истина);
			КонецЕсли;		
		Иначе	
		Сообщить("Фактическое кол-во не может быть равно учётному кол-ву на складе.");
		Возврат;
		КонецЕсли; 	
	Иначе
		Если Вопрос("По учёту на складе нет выбранного МПЗ!
					|МТК будет остановлена. Получите следующее задание!", РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.ОК  Тогда
		ОбщийМодульВызовСервера.ОстановитьМТК(ПолучитьМТК(),ПолучитьПользователя(),"Фактическая недостача МПЗ",МПЗ,Неопределено,ПолучитьТекущееРабочееМесто());
		Этаформа.Закрыть(Истина);		
		КонецЕсли; 	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ОформитьИзлишкиНаСервере()
	Если КоличествоФактическое <= КоличествоНаСкладе Тогда
	Сообщить("Фактическое количество должно быть больше количества на складе "+МПЗ+"!");
	Возврат(Неопределено);				
	КонецЕсли;
		Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
		ТекВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
		Статья = Константы.СтатьяПриходаИзлишковМатериалов.Получить();
		ИначеЕсли ТипЗнч(МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
		ТекВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
		Статья = МПЗ.Канбан.СтатьяПриходаИзлишков;
		КонецЕсли; 
			Попытка
			НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
			ПоступлениеПрочее = Документы.ПоступлениеМПЗПрочее.СоздатьДокумент();
			ПоступлениеПрочее.Дата = ТекущаяДата();
			ПоступлениеПрочее.Автор = ПараметрыСеанса.Пользователь;
			ПоступлениеПрочее.Подразделение = МестоХраненияКанбанов.Подразделение;
			ПоступлениеПрочее.МестоХранения = МестоХраненияКанбанов;
			ПоступлениеПрочее.Статья = Статья;
			ПоступлениеПрочее.УстановитьНовыйНомер(ПрисвоитьПрефикс(МестоХраненияКанбанов.Подразделение));
			ПоступлениеПрочее.Комментарий = "Приходование излишков на линейку";
			ТЧПП = ПоступлениеПрочее.ТабличнаяЧасть.Добавить();
			ТЧПП.ВидМПЗ = ТекВидМПЗ;
			ТЧПП.МПЗ = МПЗ;	
			ТЧПП.ЕдиницаИзмерения = МПЗ.ОсновнаяЕдиницаИзмерения;
			ТЧПП.Количество = (КоличествоФактическое-КоличествоНаСкладе)/МПЗ.ОсновнаяЕдиницаИзмерения.Коэффициент;	
		    ПоступлениеПрочее.Записать(РежимЗаписиДокумента.Проведение);
			ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
			Возврат(ПоступлениеПрочее.Ссылка);
			Исключение
			Сообщить(ОписаниеОшибки());
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			Возврат(Неопределено);
			КонецПопытки;
КонецФункции

&НаКлиенте
Процедура ОформитьИзлишки(Команда)
Результат = ОформитьИзлишкиНаСервере();	
	Если Результат <> Неопределено Тогда
	ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Создан документ "+Результат,БиблиотекаКартинок.Пользователь);
	Этаформа.Закрыть(Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Оформить(Команда)
	Если ВидОперации = 1 Тогда
	ОформитьНедостачу(Неопределено);
	Иначе
	ОформитьИзлишки(Неопределено);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
Этаформа.Закрыть(Ложь);
КонецПроцедуры
