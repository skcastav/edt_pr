
&НаСервере
Процедура ИзменитьТекущееРабочееМесто(ПЗ,ВыбранноеРабочееМесто)
	Попытка
	флНайдено = Ложь;
	Выборка = РегистрыСведений.ЭтапыПроизводственныхЗаданий.Выбрать(,,Новый Структура("ПЗ",ПЗ));
		Пока Выборка.Следующий() Цикл
		МенеджерЗаписи = Выборка.ПолучитьМенеджерЗаписи();
		МенеджерЗаписи.Прочитать();
		ПрефиксРМ = СокрЛП(МенеджерЗаписи.РабочееМесто.ГруппаРабочихМест.Префикс);
	   		Если МенеджерЗаписи.РабочееМесто = ВыбранноеРабочееМесто Тогда
			флНайдено = Истина;
				Если СокрЛП(ВыбранноеРабочееМесто.ГруппаРабочихМест.Префикс) = "СТ" Тогда
				НаборЗаписей = РегистрыСведений.СтендовыйПрогон.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ПЗ.Установить(ПЗ);
				НаборЗаписей.Прочитать();
				    Для Каждого Запись Из НаборЗаписей Цикл 
				    	Если Запись.НомерСтроки = НаборЗаписей.Количество() Тогда
						Запись.ДатаСнятия = Дата(1,1,1);
						Запись.ИсполнительСнятие = Справочники.Сотрудники.ПустаяСсылка();	
						КонецЕсли;  
				    КонецЦикла;
				НаборЗаписей.Записать();
				МенеджерЗаписи.ДатаОкончания = Дата(1,1,1);
				МенеджерЗаписи.Ремонт = Ложь;
				МенеджерЗаписи.Записать();
				Иначе
				МенеджерЗаписи.Исполнитель = Справочники.Сотрудники.ПустаяСсылка();
				МенеджерЗаписи.ДатаНачала = Дата(1,1,1);
				МенеджерЗаписи.ДатаОкончания = Дата(1,1,1);	
				МенеджерЗаписи.Ремонт = Ложь;
				МенеджерЗаписи.Записать();
				КонецЕсли; 
			Выпуск = Документы.ВыпускПродукции.НайтиПоНомеру(СокрЛП(ПЗ.Номер)+"-"+ПрефиксРМ,ПЗ.Дата);
				Если Не Выпуск.Пустая() Тогда
				ДокВыпуск = Выпуск.ПолучитьОбъект();					
				ДокВыпуск.Удалить();
				КонецЕсли;
			Иначе
				Если флНайдено Тогда
				Выпуск = Документы.ВыпускПродукции.НайтиПоНомеру(СокрЛП(ПЗ.Номер)+"-"+ПрефиксРМ,ПЗ.Дата);
					Если Не Выпуск.Пустая() Тогда
					ДокВыпуск = Выпуск.ПолучитьОбъект();					
					ДокВыпуск.Удалить();
					КонецЕсли; 
				МенеджерЗаписи.Удалить();	
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла;
	Исключение
	Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ПолучитьТекущееРабочееМесто(ПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ = &ПЗ
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
Запрос.УстановитьПараметр("ПЗ", ПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.РабочееМесто);
	КонецЦикла;
КонецФункции

&НаСервере
Функция ПолучитьРабочиеМестаЛинейки(ПЗ)
СписокРабочихМест = Новый СписокЗначений;
Запрос = Новый Запрос;

ТекущееРабочееМесто = ПолучитьТекущееРабочееМесто(ПЗ);
Запрос.Текст = 
	"ВЫБРАТЬ
	|	РабочиеМестаЛинеек.Ссылка,
	|	РабочиеМестаЛинеек.Код КАК Код
	|ИЗ
	|	Справочник.РабочиеМестаЛинеек КАК РабочиеМестаЛинеек
	|ГДЕ
	|	РабочиеМестаЛинеек.Линейка = &Линейка
	|	И РабочиеМестаЛинеек.ЭтоГруппа = ЛОЖЬ
	|	И РабочиеМестаЛинеек.Код < &Код
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код";
Запрос.УстановитьПараметр("Линейка", ПЗ.Линейка);
Запрос.УстановитьПараметр("Код", ТекущееРабочееМесто.Код);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокРабочихМест.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
Возврат(СписокРабочихМест);
КонецФункции

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
СписокРабочихМест =  ПолучитьРабочиеМестаЛинейки(ПараметрКоманды);
ВыбранноеРабочееМесто = СписокРабочихМест.ВыбратьЭлемент("Выберите рабочее место");
	Если ВыбранноеРабочееМесто <> Неопределено Тогда
	ИзменитьТекущееРабочееМесто(ПараметрКоманды,ВыбранноеРабочееМесто.Значение);	
	КонецЕсли; 
КонецПроцедуры
