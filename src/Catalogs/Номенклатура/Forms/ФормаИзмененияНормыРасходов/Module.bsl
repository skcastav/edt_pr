
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
НормаРасходов = Параметры.НормаРасходов;
НаДату = Параметры.НаДату;
Позиция = Параметры.НормаРасходов.Позиция;
ВидЭлемента = Параметры.НормаРасходов.ВидЭлемента;
Элемент = Параметры.НормаРасходов.Элемент;
Норма = Параметры.Норма;
КонецПроцедуры

&НаСервере
Функция ИзменитьНаСервере()
	Если Элемент = НормаРасходов.Элемент Тогда
	Сообщить("Необходимо изменить элемент нормы расходов!");
	Возврат(Ложь);	
	КонецЕсли;
		Если НаДату = НачалоДня(ТекущаяДата()) Тогда
		ДатаИзм = ТекущаяДата();
		Иначе	
		ДатаИзм = НаДату;
		КонецЕсли;
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	ТаблицаАналогов = ОбщегоНазначенияПовтИсп.ПолучитьАналогиНормРасходов(НормаРасходов,ДатаИзм,Истина);
		Для каждого ТЧ Из ТаблицаАналогов Цикл
		РАНР = РегистрыСведений.АналогиНормРасходов.СоздатьМенеджерЗаписи();
		РАНР.Период = ДатаИзм;
		РАНР.Владелец = ТЧ.Ссылка.Владелец;
		РАНР.АналогНормыРасходов = ТЧ.Ссылка;
		РАНР.Норма = 0;
		РАНР.Записать();	
		КонецЦикла;	
	РНР = РегистрыСведений.НормыРасходов.СоздатьМенеджерЗаписи();
	РНР.Период = ДатаИзм;
	РНР.Владелец = НормаРасходов.Владелец;
	РНР.Элемент = НормаРасходов.Элемент;
	РНР.НормаРасходов = НормаРасходов;
	РНР.Норма = 0;
	РНР.Записать();
	НР = Справочники.НормыРасходов.СоздатьЭлемент();
	НР.Владелец = Параметры.Спецификация;
	НР.Позиция = Позиция;
	НР.ВидЭлемента = ВидЭлемента;
	НР.Элемент = Элемент;
		Если ТипЗнч(Элемент) = Тип("СправочникСсылка.Документация") Тогда
		НР.Наименование = Строка(Элемент.ВидДокумента)+", "+Элемент.Наименование;
		Иначе	
		НР.Наименование = Строка(ВидЭлемента)+", "+Элемент.Наименование;
		КонецЕсли;
	НР.Примечание = Примечание;
	НР.Записать();
	РНР = РегистрыСведений.НормыРасходов.СоздатьМенеджерЗаписи();
	РНР.Период = ДатаИзм;
	РНР.Владелец = НР.Владелец;
	РНР.Элемент = НР.Элемент;
	РНР.НормаРасходов = НР.Ссылка;
	РНР.Норма = Норма;
	РНР.Записать(); 
		Если Не Извещение.Пустая() Тогда
		ИОИ = РегистрыСведений.ИзвещенияОбИзменениях.СоздатьМенеджерЗаписи();
	    //ИОИ.Период = НаДату;
		ИОИ.Элемент = Параметры.Спецификация;
		ИОИ.Извещение = Извещение;
		ИОИ.Записать();
		КонецЕсли; 		
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(Истина);
	Исключение
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Сообщить(ОписаниеОшибки());
	Возврат(Ложь);
	КонецПопытки; 	
КонецФункции

&НаКлиенте
Процедура Изменить(Команда)
	Если ИзменитьНаСервере() Тогда
	ЭтаФорма.Закрыть(Истина);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
ЭтаФорма.Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЭлементНачалоВыбора(Элем, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
П = Новый Структура("ТекущаяСтрока",Элемент);
	Если Элементы.ВидЭлемента.ТекстРедактирования = "Материал" Тогда
	Результат = ОткрытьФормуМодально("Справочник.Материалы.ФормаВыбора",П);
		Если Результат = Неопределено Тогда
		Возврат;
		КонецЕсли;
	ИначеЕсли Элементы.ВидЭлемента.ТекстРедактирования = "Тех. операция" Тогда	
	Результат = ОткрытьФормуМодально("Справочник.ТехОперации.ФормаВыбора",П); 
		Если Результат = Неопределено Тогда
		Возврат;
		КонецЕсли;
	ИначеЕсли Элементы.ВидЭлемента.ТекстРедактирования = "Тех. оснастка" Тогда	
	Результат = ОткрытьФормуМодально("Справочник.ТехОснастка.ФормаВыбора",П); 
		Если Результат = Неопределено Тогда
		Возврат;
		КонецЕсли;	
	ИначеЕсли (Элементы.ВидЭлемента.ТекстРедактирования = "Документ")или
			  (Элементы.ВидЭлемента.ТекстРедактирования = "Программа")Тогда	
	Результат = ОткрытьФормуМодально("Справочник.Документация.ФормаВыбора",П); 
		Если Результат = Неопределено Тогда
		Возврат;
		КонецЕсли;	
	Иначе
	Результат = ОткрытьФормуМодально("Справочник.Номенклатура.ФормаВыбора",П); 
		Если Результат = Неопределено Тогда
		Возврат;
		КонецЕсли;		
	КонецЕсли;	
Элемент = Результат;
КонецПроцедуры

&НаСервере
Функция ПроверитьВидЭлемента()
	Если ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Деталь или
		 ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Набор или
		 ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Узел или
		 ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Основа Тогда
	Возврат(?(ТипЗнч(Элемент) = Тип("СправочникСсылка.Номенклатура"),Истина,Ложь));
	ИначеЕсли ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Документ или
			  ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Программа Тогда
    Возврат(?(ТипЗнч(Элемент) = Тип("СправочникСсылка.Документация"),Истина,Ложь));
	Иначе
	Возврат(Ложь);
	КонецЕсли; 	
КонецФункции

&НаКлиенте
Процедура ВидЭлементаПриИзменении(Элем)
	Если Не ПроверитьВидЭлемента() Тогда
	Элемент = Неопределено;	
	КонецЕсли;
КонецПроцедуры
