

&НаКлиенте
Процедура ПараметрыТипПараметраПриИзменении(Элемент)
	Элемент.Родитель.ТекущиеДанные.ЗначениеПараметра = Элемент.Родитель.ТекущиеДанные.ТипПараметра.ПривестиЗначение();
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЭтоНовый = (Объект.Ссылка.Пустая());
	Для каждого СтрокаОъекта из Объект.Параметры цикл
		  СтрокаП = ПараметрыЗапроса.Добавить();
		  ЗаполнитьЗначенияСвойств( СтрокаП,СтрокаОъекта);
		  МассивТипов = Новый Массив;
		  МассивТипов.Добавить(ТипЗнч(СтрокаП.ЗначениеПараметра));
		  СтрокаП.ТипПараметра = Новый ОписаниеТипов(МассивТипов);
	КонецЦикла;	
	Если ЭтоНовый Тогда
		
		РасписаниеРегламентногоЗадания = СРМ_ОбменВебСервис.РасписаниеРегламентногоЗаданияПоУмолчанию();
		
		Объект.ИспользоватьРегламентноеЗадание = Истина;
	Иначе
		РегламентноеЗаданиеОбъект = СРМ_ОбменВебСервис.НайтиРегламентноеЗаданиеПоПараметру(Объект.РегламентноеЗаданиеGUID);
		Если РегламентноеЗаданиеОбъект <> Неопределено Тогда
			РасписаниеРегламентногоЗадания = РегламентноеЗаданиеОбъект.Расписание;
		Иначе
			РасписаниеРегламентногоЗадания = Новый РасписаниеРегламентногоЗадания;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьПредставлениеРасписания();
	
	УстановитьДоступностьГиперссылкиНастройкиРасписания();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект)
	
	Справочники.Запросы.ОбновитьДанныеРегламентногоЗадания(Отказ, РасписаниеРегламентногоЗадания, ТекущийОбъект);
	ТекущийОбъект.Параметры.Загрузить(РеквизитФормыВЗначение("ПараметрыЗапроса"));
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура КонсольЗапроса(Команда)
	
	//ОткрытьФорму("Обработка.УниформальнаяКонсольЗапросов.Форма.ФормаУпр",
	//	Новый Структура("Текст,Параметры", Объект.ТекстЗапроса, ПолучитьСтруктуруПараметров()),
	//	ЭтотОбъект,,,, Новый ОписаниеОповещения("КонсольЗапросаЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Если ЗначениеЗаполнено(Объект.ТекстЗапроса) Тогда
		Конструктор = Новый КонструкторЗапроса(Объект.ТекстЗапроса);
	Иначе
		Конструктор = Новый КонструкторЗапроса;
	КонецЕсли;
	ОписаниеОповещения = Новый ОписаниеОповещения("КонсольЗапросаЗавершение", ЭтотОбъект);
	Конструктор.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура КонсольЗапросаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Объект.ТекстЗапроса = Результат;
	Если ЗначениеЗаполнено(Результат) Тогда
		ПолучитьПараметрыЗапросаНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеРегламентногоЗадания(Команда)
	
	РедактированиеРасписанияРегламентногоЗадания();
	
	ОбновитьПредставлениеРасписания();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьРегламентноеЗаданиеПриИзменении(Элемент)
	
	УстановитьДоступностьГиперссылкиНастройкиРасписания();
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РедактированиеРасписанияРегламентногоЗадания()
	
	// Если расписание не инициализировано в форме на сервере, то создаем новое.
	Если РасписаниеРегламентногоЗадания = Неопределено Тогда
		
		РасписаниеРегламентногоЗадания = Новый РасписаниеРегламентногоЗадания;
		
	КонецЕсли;
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеРегламентногоЗадания);
	
	// Открываем диалог для редактирования Расписания.
	ОписаниеОповещения = Новый ОписаниеОповещения("РедактированиеРасписанияРегламентногоЗаданияЗавершение", ЭтотОбъект);
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеРасписанияРегламентногоЗаданияЗавершение(Расписание, ДополнительныеПараметры) Экспорт
	
	Если Расписание <> Неопределено Тогда
		
		РасписаниеРегламентногоЗадания = Расписание;
		
	КонецЕсли;
	
	ОбновитьПредставлениеРасписания();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставлениеРасписания()
	
	ПредставлениеРасписания = Строка(РасписаниеРегламентногоЗадания);
	
	Если ПредставлениеРасписания = Строка(Новый РасписаниеРегламентногоЗадания) Тогда
		
		ПредставлениеРасписания = НСтр("en='The schedule are not set';ru='Расписание не задано'");
		
	КонецЕсли;
	
	Элементы.НастроитьРасписаниеРегламентногоЗадания.Заголовок = ПредставлениеРасписания;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьГиперссылкиНастройкиРасписания()
	
	Элементы.НастроитьРасписаниеРегламентногоЗадания.Доступность = Объект.ИспользоватьРегламентноеЗадание;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруПараметров() 
	
	Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(Объект.Параметры.Выгрузить());
	
КонецФункции

#КонецОбласти

&НаСервере
Процедура ПолучитьПараметрыЗапросаНаСервере()
	ПараметрыЗапроса.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = Объект.ТекстЗапроса;
	ОписаниеПараметров = Запрос.НайтиПараметры();
	
	Для Каждого ОписаниеПараметра Из ОписаниеПараметров Цикл
		РедактСтрокаТЗ = ПараметрыЗапроса.Добавить();
		РедактСтрокаТЗ.ИмяПараметра = ОписаниеПараметра.Имя;
		РедактСтрокаТЗ.ТипПараметра = ОписаниеПараметра.ТипЗначения;
		РедактСтрокаТЗ.ЗначениеПараметра = РедактСтрокаТЗ.ТипПараметра.ПривестиЗначение(РедактСтрокаТЗ.ЗначениеПараметра);
	КонецЦикла;
	
КонецПроцедуры
