#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьОперациюПоПлатежнойКарте(ТипТранзакции)
	
	ОчиститьСообщения();
	ПараметрыОперации = Новый Структура();
	ПараметрыОперации.Вставить("ТипТранзакции"               , ТипТранзакции);
	ПараметрыОперации.Вставить("УказатьДополнительныеДанные" , Истина);
	ПараметрыОперации.Вставить("ЗапретРедактированияСуммы"   , Ложь);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьОперациюПоПлатежнойКартеЗавершение", ЭтотОбъект, ПараметрыОперации);
	ОткрытьФорму("Справочник.ПодключаемоеОборудование.Форма.ФормаАвторизацииЭТ", ПараметрыОперации,,,  ,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОперациюПоПлатежнойКартеЗавершение(Результат, Параметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		Если НЕ Параметры.Свойство("ТипТранзакции") Тогда
			ТекстСообщения = НСтр("ru = 'Не указан тип транзакции.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;
	
		ЭтотОбъект.Доступность = Ложь;
		ПараметрыОперации = МенеджерОборудованияКлиент.ПараметрыВыполненияЭквайринговойОперации();
		ПараметрыОперации.ТипТранзакции  = Параметры.ТипТранзакции;
		ПараметрыОперации.СуммаОперации  = Результат.Сумма;
		ПараметрыОперации.НомерЧека      = ?(Результат.Свойство("НомерЧека"), Результат.НомерЧека, "");
		ПараметрыОперации.СсылочныйНомер = Результат.СсылочныйНомер;
		
		Оповещение = Новый ОписаниеОповещения("ОперацияПоПлатежнойКартеЗавершение", ЭтотОбъект);
		МенеджерОборудованияКлиент.НачатьВыполнениеОперацииНаЭквайринговомТерминале(Оповещение, УникальныйИдентификатор, Неопределено, Неопределено, ПараметрыОперации);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОперацияПоПлатежнойКартеЗавершение(Результат, Параметры) Экспорт
	
	ЭтотОбъект.Доступность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОплатитьПлатежнойКартой(Команда)
	
	ВыполнитьОперациюПоПлатежнойКарте("AuthorizeSales");
	
КонецПроцедуры

&НаКлиенте
Процедура ВернутьПлатежПоКарте(Команда)
	
	ВыполнитьОперациюПоПлатежнойКарте("AuthorizeRefund");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПлатежПоКарте(Команда)
	
	ВыполнитьОперациюПоПлатежнойКарте("AuthorizeVoid");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПреавторизацию(Команда)
	
	ВыполнитьОперациюПоПлатежнойКарте("AuthorizePreSales");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьПреавторизацию(Команда)
	
	ВыполнитьОперациюПоПлатежнойКарте("AuthorizeCompletion");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПреавторизацию(Команда)
	
	ВыполнитьОперациюПоПлатежнойКарте("AuthorizeVoidPreSales");
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьПоследнийСлипЧекЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	ЭтотОбъект.Доступность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСверкуИтогов(Команда)
	
	ОчиститьСообщения();
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьСверкуИтоговЗавершение", ЭтотОбъект);
	МенеджерОборудованияКлиент.НачатьВыполнениеСверкиИтоговНаЭквайринговомТерминале(ОписаниеОповещения, УникальныйИдентификатор)
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСверкуИтоговЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр("ru = 'Операция выполнена успешно.'");
	Иначе
		ТекстСообщения = РезультатВыполнения.ОписаниеОшибки;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьПоследнийСлипЧек(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПустаяСтрока(глПодключаемоеОборудование.ПоследнийСлипЧек) Тогда
		ЭтотОбъект.Доступность = Ложь;
		Оповещение = Новый ОписаниеОповещения("НапечататьПоследнийСлипЧекЗавершение", ЭтотОбъект);
		МенеджерОборудованияКлиент.НачатьПечатьТекста(Оповещение, УникальныйИдентификатор, , глПодключаемоеОборудование.ПоследнийСлипЧек, Ложь);
	Иначе
		ТекстСообщения = НСтр("ru = 'Отсутствует последний слип чек.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти