
&НаСервере
Процедура ПроверкаРемонтаНаСервере()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Ремонт.ПроизводственноеЗадание,
	|	Ремонт.БарКод
	|ИЗ
	|	Справочник.Ремонт КАК Ремонт
	|ГДЕ
	|	Ремонт.Статус <> &Статус";
Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыРемонта.Окончен);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Отбор = Новый Структура("ПЗ",ВыборкаДетальныеЗаписи.ПроизводственноеЗадание);	
	ЭтапыПЗ = РегистрыСведений.ЭтапыПроизводственныхЗаданий.ПолучитьПоследнее(ТекущаяДата(),Отбор);
		Если ЭтапыПЗ.ДатаОкончания <> Дата(1,1,1) Тогда
		Сообщить("Ремонт изделия "+ВыборкаДетальныеЗаписи.БарКод+" не завершён. "+ВыборкаДетальныеЗаписи.ПроизводственноеЗадание+" - завершено!");
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаРемонта(Команда)
ПроверкаРемонтаНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокПередНачаломИзмененияНаСервере()
	Если Не РольДоступна("Администратор")и(Не РольДоступна("Мастер")) Тогда
	Возврат(Истина);
	Иначе
	Возврат(Ложь);	
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
Отказ = СписокПередНачаломИзмененияНаСервере();
КонецПроцедуры
