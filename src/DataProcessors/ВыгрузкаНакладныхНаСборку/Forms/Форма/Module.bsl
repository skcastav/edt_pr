
&НаСервере
Функция ПолучитьЦенуЦена(БазаСД,Н)
ТипЦен=БазаСД.Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00-000001");
Запрос = БазаСД.NewObject("Запрос"); 

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныНоменклатуры.ТипЦен,
	|	ЦеныНоменклатуры.Номенклатура,
	|	ЦеныНоменклатуры.Цена
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|ГДЕ
	|	ЦеныНоменклатуры.Номенклатура = &Н
	|	И ЦеныНоменклатуры.ТипЦен = &ТипЦен
	|АВТОУПОРЯДОЧИВАНИЕ";
Запрос.УстановитьПараметр("Н", Н);
Запрос.УстановитьПараметр("ТипЦен", ТипЦен.Ссылка);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Цена=ВыборкаДетальныеЗаписи.Цена;
	КонецЦикла;
Возврат Цена;
КонецФункции

//Поиск номенклатуры по артикулу, если не найдена, добавление в группу "Новые"
&НаСервере
Функция ВыбратьДобавитьНоменклатуру(БазаСД,Товар)
Наименование = Товар.Наименование;	
Артикул = Формат(Товар.Код, "ЧДЦ=; ЧГ=0");
Артикул = СтрЗаменить(Артикул, " ", "");
	Пока СтрДлина(Артикул) < 9 Цикл
	Артикул = "0" + Артикул;
	Конеццикла;
Номенклатура =  БазаСД.Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",Артикул);
	// если не найден, то создать новую номенклатуру	
	Если Номенклатура = БазаСД.Справочники.Номенклатура.ПустаяСсылка() Тогда
	РодительНоменклатурыНов = БазаСД.Справочники.Номенклатура.НайтиПоНаименованию("Новые", Истина);
	Справ = БазаСД.Справочники.Номенклатура.СоздатьЭлемент();
	ГруппаНоменклатуры = БазаСД.Справочники.Номенклатура.НайтиПоНаименованию("Новые", Истина);
		Если ГруппаНоменклатуры = БазаСД.Справочники.Номенклатура.ПустаяСсылка() Тогда
		ГруппаНоменклатуры = БазаСД.Справочники.Номенклатура.СоздатьГруппу();
		ГруппаНоменклатуры.Наименование = "Новые";
		ГруппаНоменклатуры.Записать();
		КонецЕсли;
	ЕдиницаИзмерения = БазаСД.Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("шт");
	Справ.Артикул = 			Артикул;
	Справ.Наименование = 		Наименование;
	Справ.НаименованиеПолное = 	Товар.ПолнНаименование;
	Справ.Родитель = 			ГруппаНоменклатуры;
	Справ.ВидСтавкиНДС = 		БазаСД.Перечисления.ВидыСтавокНДС.Общая;
	Справ.ЕдиницаИзмерения = 	ЕдиницаИзмерения;
	Справ.Записать();
	Сообщить("Создана новая номенклатура  " + Артикул + "   " + Наименование);
	Номенклатура = БазаСД.Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",Артикул);
	Иначе
		// если помечен на удаление, то сообщить	
		Если Номенклатура.ПометкаУдаления Тогда
	    Сообщить("Номенклатура помечена на удаление " + Артикул + "   " + Наименование);
		КонецЕсли;	
	КонецЕсли;	
Возврат Номенклатура;
КонецФункции

&НаСервере
Процедура ПечатьТорг13(ТабДок,бсНовДок)
ТабДок.Очистить();
Макет = ПолучитьОбщийМакет("Торг13");
ОблПредупреждение = Макет.ПолучитьОбласть("Предупреждение");	 
ОблШапка = Макет.ПолучитьОбласть("Шапка");	
ОблЗаголовок = Макет.ПолучитьОбласть("Заголовок");
ОблСтрока = Макет.ПолучитьОбласть("Строка");
ОблИтог = Макет.ПолучитьОбласть("Итог_по_странице");
ОблПодвал = Макет.ПолучитьОбласть("Подвал");

ВсегоСтрок = бсНовДок.Товары.Количество();
ВыведеноНаСтраницу = 0; ВыведеноВсего = 0;
НомерСтраницы = 1;
// установка размеров секций
ВысотаШапки = 14;
ВысотаПодвала = 7;
СтрокНаСТранице = 32;
// инициализация
ВсегоКоличество	= 0; ВсегоСумма = 0;
ИтогоКоличество = 0; ИтогоСумма = 0;

ОблШапка.Параметры.НазваниеОрганизации = Константы.НазваниеОрганизации.Получить();
//ОблШапка.Параметры.ДокументОснование = Объект.ДокументОснование;
ОблШапка.Параметры.НомерДок = бсНовДок.Номер;
ОблШапка.Параметры.ДатаДок = Формат(Период.ДатаОкончания,"ДФ=dd.MM.yyyy");
ОблШапка.Параметры.МестоХранения = бсНовДок.СкладОтправитель.Наименование;
ОблШапка.Параметры.МестоХраненияВ = бсНовДок.СкладПолучатель.Наименование;
ОблШапка.Параметры.КодОКПО = Константы.КодОКПО.Получить();
ОблШапка.Параметры.КодОКДП = Константы.КодОКДП.Получить();
ТабДок.Вывести(ОблШапка);
ТабДок.Вывести(ОблЗаголовок);
	Для каждого ТЧ Из бсНовДок.Товары Цикл	
	НомСтр = "";
	ОблСтрока.Параметры.Наименование = СокрЛП(ТЧ.Номенклатура.Наименование);
	ОблСтрока.Параметры.Код = ТЧ.Номенклатура.Артикул;
	ОблСтрока.Параметры.Количество = ТЧ.Количество;
	ОблСтрока.Параметры.ЕдиницаИзмерения = СокрЛП(ТЧ.ЕдиницаИзмерения.Наименование);
	ОблСтрока.Параметры.ЕдиницаИзмеренияКод = ТЧ.ЕдиницаИзмерения.Код;
	//ОблСтрока.Параметры.Коэффициент = ТЧ.ЕдиницаИзмерения.Коэффициент;
	СуммаПеч = 0;

	ОстатокСтрок = СтрокНаСТранице - ВыведеноНаСтраницу;
	// если 1-я страница, то уменьшим количество строк на высоту шапки
		Если НомерСтраницы = 1 Тогда
		ОстатокСтрок = ОстатокСтрок - ВысотаШапки;
		КонецЕсли;		
			Если ВыведеноВсего = ВсегоСтрок -1  Тогда
			// выводим последнюю строку
			ОстатокСтрок = ОстатокСтрок - ВысотаПодвала;
			КонецЕсли;		
				Если Не(ОстатокСтрок > 0) Тогда
				// выводим итоги по странице
				ТабДок.Вывести(ОблИтог);			
				// переход на новую страницу
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДок.Вывести(ОблЗаголовок);
				ВыведеноНаСтраницу = 0;	
				// обнуляем итоги по старанице
				ИтогоКоличество = 0; 
				ИтогоСумма = 0;
				// увеличиваем номер страницы
				НомерСтраницы = НомерСтраницы + 1;
				КонецЕсли;
	ТабДок.Вывести(ОблСтрока);
	ВыведеноНаСтраницу = ВыведеноНаСтраницу + 1;
	ВыведеноВсего      = ВыведеноВсего      + 1;
	// вычисляем итоги
	//ВсегоСумма      = ВсегоСумма      + СуммаПеч;
	//ИтогоКоличество = ИтогоКоличество + ТЧ.Количество;
	//ИтогоСумма      = ИтогоСумма      + СуммаПеч;
	КонецЦикла; 
//ОблПодвал.Параметры.ВсегоСумма = ВсегоСумма;
//ОблПодвал.Параметры.ВсегоСуммаКопейки = Цел((ВсегоСумма-Цел(ВсегоСумма))*100);
//ОблПодвал.Параметры.ОТ = Объект.Автор.Наименование;
//ОблПодвал.Параметры.ПЛ = Объект.Сотрудник.Наименование;
ТабДок.Вывести(ОблПодвал);
КонецПроцедуры

&НаСервере
Процедура ВыгрузкаВБухБазу()
БазаСД = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Объект.БазаДанных);
	Если БазаСД = Неопределено Тогда
	Возврат;
	КонецЕсли;
	Попытка
	НачатьТранзакцию();
	Запрос = Новый Запрос;
	ТабДок = Новый ТабличныйДокумент;
	ТЗ = Новый ТаблицаЗначений;

	ТЗ.Колонки.Добавить("Подразделение");
	ТЗ.Колонки.Добавить("Товар");
	ТЗ.Колонки.Добавить("Количество");

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НакладнаяНаСборкуТабличнаяЧасть.Продукция КАК Продукция,
		|	НакладнаяНаСборкуТабличнаяЧасть.Товар КАК Товар,
		|	НакладнаяНаСборкуТабличнаяЧасть.Количество КАК Количество
		|ИЗ
		|	Документ.НакладнаяНаСборку.ТабличнаяЧасть КАК НакладнаяНаСборкуТабличнаяЧасть
		|ГДЕ
		|	НакладнаяНаСборкуТабличнаяЧасть.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И НакладнаяНаСборкуТабличнаяЧасть.Ссылка.Проведен = ИСТИНА"; 
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Период.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Период.ДатаОкончания));
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТЧ = ТЗ.Добавить();
			Если ТипЗнч(ВыборкаДетальныеЗаписи.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
			ТЧ.Подразделение = ВыборкаДетальныеЗаписи.Продукция.Линейка.Подразделение;
			Иначе	
			ТЧ.Подразделение = Справочники.Подразделения.НайтиПоНаименованию("Торговля ТНП",Истина);
			КонецЕсли;
		ТЧ.Товар = ВыборкаДетальныеЗаписи.Товар;
		ТЧ.Количество = ВыборкаДетальныеЗаписи.Количество;
		КонецЦикла;	
	ТЗ.Свернуть("Подразделение,Товар","Количество");
	ТЗ.Сортировать("Подразделение,Товар");
	бсНовДок = БазаСД.Документы.ПеремещениеТоваров.СоздатьДокумент();	
	ТекПодразделение = Неопределено;	
		Для Каждого ТЧ Из ТЗ Цикл
			Если ТЧ.Подразделение <> ТекПодразделение Тогда
				Если ТекПодразделение <> Неопределено Тогда
				БазаСД.Документы.ПеремещениеТоваров.ЗаполнитьСчетаУчетаВТабличнойЧасти(бсНовДок, "Товары");
				бсНовДок.Записать(БазаСД.РежимЗаписиДокумента.Запись);
				Сообщить(бсНовДок.Номер);
					Попытка
					бсНовДок.Записать(БазаСД.РежимЗаписиДокумента.Проведение);
					Исключение
					
					КонецПопытки;
				ПечатьТорг13(ТабДок,бсНовДок);
				ТабДок.Записать(ПутьВыгрузкиТОРГ13+"ТОРГ13_"+ТекПодразделение.Префикс+"_"+Формат(Период.ДатаОкончания,"ДФ=dd.MM.yyyy")+".xls","xls");
				КонецЕсли;
			бсНовДок = БазаСД.Документы.ПеремещениеТоваров.СоздатьДокумент();
			бсНовДок.Дата = НачалоДня(Период.ДатаОкончания)+600;
			бсНовДок.Организация = БазаСД.Справочники.Организации.НайтиПоРеквизиту("ИНН","7112011490");
				Если Найти(ТЧ.Подразделение,"Богородицк УПЭА") > 0 Тогда
				бсНовДок.СкладОтправитель = БазаСД.Справочники.Склады.НайтиПоНаименованию("Склад ГП УПЭА",Истина);
				ИначеЕсли Найти(ТЧ.Подразделение,"Торговля ТНП") > 0 Тогда
				бсНовДок.СкладОтправитель = БазаСД.Справочники.Склады.НайтиПоНаименованию("Склад ТНП",Истина);				
				Иначе	
				бсНовДок.СкладОтправитель = БазаСД.Справочники.Склады.НайтиПоНаименованию("Склад ГП УД",Истина);			
				КонецЕсли;
			бсНовДок.СкладПолучатель = БазаСД.Справочники.Склады.НайтиПоНаименованию("Транзитная зона",Истина);
			бсНовДок.НДСвСтоимостиТоваров = БазаСД.Перечисления.ДействиеНДСВСтоимостиТоваров.НеИзменять;
			бсНовДок.Комментарий = "Выгрузка из производственной базы за "+Формат(Период.ДатаНачала,"ДФ=dd.MM.yyyy");			
			ТекПодразделение = ТЧ.Подразделение;
			КонецЕсли;
		ТЧ_П = бсНовДок.Товары.Добавить();
		ТЧ_П.Номенклатура = ВыбратьДобавитьНоменклатуру(БазаСД,ТЧ.Товар);
		ТЧ_П.ЕдиницаИзмерения = ТЧ_П.Номенклатура.ЕдиницаИзмерения;
		ТЧ_П.Количество = ТЧ.Количество;
		//ТЧ_П.Себестоимость=ПолучитьЦенуЦена(БазаСД,ТЧ_П.Номенклатура);		
		КонецЦикла;
			Если ТекПодразделение <> Неопределено Тогда
			БазаСД.Документы.ПеремещениеТоваров.ЗаполнитьСчетаУчетаВТабличнойЧасти(бсНовДок, "Товары");
			бсНовДок.Записать(БазаСД.РежимЗаписиДокумента.Запись);
			Сообщить(бсНовДок.Номер);
				Попытка
				бсНовДок.Записать(БазаСД.РежимЗаписиДокумента.Проведение);
				Исключение
				
				КонецПопытки;			
			ПечатьТорг13(ТабДок,бсНовДок);
			ТабДок.Записать(ПутьВыгрузкиТОРГ13+"ТОРГ13_"+ТекПодразделение.Префикс+"_"+Формат(Период.ДатаОкончания,"ДФ=dd.MM.yyyy")+".xls","xls");
			КонецЕсли;
	ЗафиксироватьТранзакцию();
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();
	КонецПопытки;
КонецПроцедуры 

&НаКлиенте
Процедура Выгрузить(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	Состояние("Обработка...",,"Выгрузка в выбранную базу данных...");	
	ВыгрузкаВБухБазу();	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПутьВыгрузкиТОРГ13НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
Диалог.Заголовок = "Выберите каталог";
Диалог.ПолноеИмяФайла = ""; 
Фильтр = "Все файлы (*.*)|*.*"; 
Диалог.Фильтр = Фильтр; 
Диалог.МножественныйВыбор = Ложь;
Диалог.Каталог = ПутьВыгрузкиТОРГ13;
	Если Диалог.Выбрать() Тогда
	ПутьВыгрузкиТОРГ13 = Диалог.Каталог+"\"; 
	КонецЕсли;
КонецПроцедуры
