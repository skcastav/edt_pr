
&НаСервере
Процедура НайтиМТКНаСервере(ТЧ,Счёт,Номенклатура)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Ссылка
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.СтандартныйКомментарий = &СтандартныйКомментарий
	|	И МаршрутнаяКарта.Счёт = &Счёт
	|	И МаршрутнаяКарта.Номенклатура = &Номенклатура";
Запрос.УстановитьПараметр("СтандартныйКомментарий",КрупныйЗаказ);
Запрос.УстановитьПараметр("Счёт",Счёт);
Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ_ТЧ = ТЧ.ТаблицаМТК.Добавить();
	ТЧ_ТЧ.МТК = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПроверитьНаПСИ(СписокМТК)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Ссылка
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование В(&СписокМТК)
	|	И ПроизводственноеЗадание.Испытания <> 0";
Запрос.УстановитьПараметр("СписокМТК",СписокМТК);
РезультатЗапроса = Запрос.Выполнить();
Возврат(Не РезультатЗапроса.Пустой());
КонецФункции 

&НаСервере
Процедура НайтиЗаказыНаСервере()
ТаблицаЗаказов.Очистить();

Запрос = Новый Запрос;
СписокМТК = Новый СписокЗначений;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Ссылка КАК Ссылка,
	|	МаршрутнаяКарта.Номенклатура КАК Номенклатура,
	|	МаршрутнаяКарта.Количество КАК Количество
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.СтандартныйКомментарий = &СтандартныйКомментарий
	|	И МаршрутнаяКарта.Выгружено = ЛОЖЬ";
	Если ТорговыйДом Тогда
	Запрос.Текст = Запрос.Текст + " И МаршрутнаяКарта.ДокументОснование.ТорговыйДом = &ТорговыйДом";
	Запрос.УстановитьПараметр("ТорговыйДом",ТорговыйДом);
	КонецЕсли;
Запрос.УстановитьПараметр("СтандартныйКомментарий",ПоследняяМТК);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаЗаказов.Добавить();
	ТЧ.Счёт = ВыборкаДетальныеЗаписи.Ссылка.Счёт;
	ТЧ.Номенклатура = ВыборкаДетальныеЗаписи.Ссылка.Номенклатура;
	ТЧ_ТЧ = ТЧ.ТаблицаМТК.Добавить();
	ТЧ_ТЧ.МТК = ВыборкаДетальныеЗаписи.Ссылка;
	НайтиМТКНаСервере(ТЧ,ТЧ.Счёт,ТЧ.Номенклатура);
	СписокМТК.Очистить();
	флВыполнено = Истина;
		Для каждого ТЧ_МТК Из ТЧ.ТаблицаМТК Цикл
		СписокМТК.Добавить(ТЧ_МТК.МТК);
		ТЧ.Количество = ТЧ.Количество + ТЧ_МТК.МТК.Количество;
			Если ТЧ_МТК.МТК.Статус <> 3 Тогда
			флВыполнено = Ложь;
			КонецЕсли; 
		КонецЦикла;
	ТЧ.НаПСИ = ПроверитьНаПСИ(СписокМТК);
	ТЧ.Выполнено = флВыполнено;
		Если (ТЧ.Выполнено) и (Не ТЧ.НаПСИ) Тогда
		ТЧ.Пометка = Истина;
		Иначе
		ТЧ.Пометка = Ложь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура НайтиЗаказы(Команда)
НайтиЗаказыНаСервере();
КонецПроцедуры

&НаСервере
Функция СоздатьРеализациюИСчётФактуру(БазаСбыта,ПоступлениеТоваровИУслуг)
	Попытка
	бсСклад = БазаСбыта.Справочники.Склады.НайтиПоНаименованию("СД 423",Истина);
	бсНовДок = БазаСбыта.Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	бсНовДок.Дата = ТекущаяДата();
	бсНовДок.Организация = БазаСбыта.Справочники.Организации.НайтиПоКоду("30");
	бсНовДок.Партнер = БазаСбыта.Справочники.Партнеры.НайтиПоКоду("00-00000010");
	бсНовДок.Контрагент = БазаСбыта.Справочники.Контрагенты.НайтиПоКоду("99999911267");
	бсНовДок.Склад = бсСклад;
	бсНовДок.ХозяйственнаяОперация = БазаСбыта.Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию;
	бсНовДок.НалогообложениеНДС = БазаСбыта.Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	бсНовДок.БанковскийСчетОрганизации = БазаСбыта.ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(бсНовДок.Организация);
	бсНовДок.Валюта = БазаСбыта.Справочники.Валюты.НайтиПоКоду("643");
	бсНовДок.ВалютаВзаиморасчетов = БазаСбыта.Справочники.Валюты.НайтиПоКоду("643");
		Для каждого ТЧ Из ПоступлениеТоваровИУслуг.Товары Цикл
		ТЧ_Р = бсНовДок.Товары.Добавить();
		ТЧ_Р.Склад = бсСклад;	
		ТЧ_Р.Номенклатура = ТЧ.Номенклатура;
		ТЧ_Р.ИМНомерЗаказаЗаказнойТовар = ТЧ.ИМНомерЗаказаЗаказнойТовар;
		ТЧ_Р.КоличествоУпаковок = ТЧ.КоличествоУпаковок;
		ТЧ_Р.ИмКоличествоЗарегистрировано = ТЧ.ИмКоличествоЗарегистрировано;
		ТЧ_Р.Количество = ТЧ.Количество;
		ТЧ_Р.СтавкаНДС = ТЧ.СтавкаНДС;
		ТЧ_Р.Цена = ТЧ.Цена;
		ТЧ_Р.Сумма = ТЧ.Сумма;
		ТЧ_Р.СуммаНДС = ТЧ.СуммаНДС;
		ТЧ_Р.СуммаСНДС = ТЧ.СуммаСНДС;
		КонецЦикла;
			Для каждого ТЧ Из ПоступлениеТоваровИУслуг.Штрихкоды Цикл
			ТЧ_ШК = бсНовДок.Штрихкоды.Добавить();	
			ТЧ_ШК.Номенклатура = ТЧ.Номенклатура;
			ТЧ_ШК.ШК = ТЧ.ШК;
			КонецЦикла;
	бсНовДок.Записать(БазаСбыта.РежимЗаписиДокумента.Проведение);
	бсСФ = БазаСбыта.Документы.СчетФактураВыданный.СоздатьДокумент();
	бсСФ.Номер = бсНовДок.Номер;
	бсСФ.Дата = ТекущаяДата();
	бсСФ.ДокументОснование = бсНовДок.Ссылка;
	бсСФ.Организация = БазаСбыта.Справочники.Организации.НайтиПоКоду("30");
	бсСФ.КодВидаОперации = "01";
	бсСФ.ТипСчетаФактуры = БазаСбыта.Перечисления.ТипыВыданныхСчетовФактур.НаРеализацию;
	бсСФ.ДатаВыставления = ТекущаяДата();
	бсСФ.Записать(БазаСбыта.РежимЗаписиДокумента.Проведение);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина);
КонецФункции

&НаСервере
Процедура ВыгрузитьНаСервере()
БазаСбыта = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Константы.БазаДанных1ССбыт.Получить());
	Если БазаСбыта = Неопределено Тогда
	Сообщить("Не открыто соединение с базой сбыта!");
	Возврат;
	КонецЕсли;
Запрос = Новый Запрос;

бсСклад = БазаСбыта.Справочники.Склады.НайтиПоНаименованию("СД 423",Истина);
	Для каждого ТЧ Из ТаблицаЗаказов Цикл
		Если ТЧ.Пометка Тогда
			Попытка
			НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
			бсНовДок = БазаСбыта.Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
			бсНовДок.Дата = ТекущаяДата();
			бсНовДок.Организация = БазаСбыта.Справочники.Организации.НайтиПоКоду("02");
			бсНовДок.Партнер = БазаСбыта.Справочники.Партнеры.НайтиПоКоду("00-00000010");
			бсНовДок.Склад = бсСклад;
			бсНовДок.ХозяйственнаяОперация = БазаСбыта.Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
			бсНовДок.НалогообложениеНДС = БазаСбыта.Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
			бсНовДок.БанковскийСчетОрганизации = БазаСбыта.ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(бсНовДок.Организация);
			бсНовДок.Валюта = БазаСбыта.Справочники.Валюты.НайтиПоКоду("643");
			бсНовДок.ВалютаВзаиморасчетов = БазаСбыта.Справочники.Валюты.НайтиПоКоду("643");

			Артикул = ОбщийМодульВызовСервера.ПолучитьАртикулПоКодуТовара(ТЧ.Номенклатура.Товар.Код);
			бсНомен = БазаСбыта.Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",Артикул);
				Если бсНомен.Пустая() Тогда
				Сообщить(СокрЛП(ТЧ.Номенклатура.Товар.Наименование)+" - товар с артикулом "+Артикул+" не найден в торговой базе!");				
				Продолжить;
				КонецЕсли;
			ТЧ_Т = бсНовДок.Товары.Добавить();
			ТЧ_Т.Склад = бсСклад;	
			ТЧ_Т.Номенклатура = бсНомен;
			ТЧ_Т.ИМНомерЗаказаЗаказнойТовар = ТЧ.Счёт;
			ТЧ_Т.КоличествоУпаковок = ТЧ.Количество;
			ТЧ_Т.ИмКоличествоЗарегистрировано = ТЧ.Количество;
			ТЧ_Т.Количество = ТЧ.Количество;
			ТЧ_Т.СтавкаНДС = бсНомен.СтавкаНДС;
			ТЧ_Т.Цена = бсНомен.ИмЦена;
			ТЧ_Т.Сумма = ТЧ_Т.КоличествоУпаковок*ТЧ_Т.Цена;
				Если БазаСбыта.Перечисления.СтавкиНДС.Индекс(ТЧ_Т.СтавкаНДС) = БазаСбыта.Перечисления.СтавкиНДС.Индекс(БазаСбыта.Перечисления.СтавкиНДС.НДС18) Тогда
				ТЧ_Т.СуммаНДС = ТЧ_Т.Сумма*0.18;
				ТЧ_Т.СуммаСНДС = ТЧ_Т.Сумма + ТЧ_Т.СуммаНДС;
				ИначеЕсли БазаСбыта.Перечисления.СтавкиНДС.Индекс(ТЧ_Т.СтавкаНДС) = БазаСбыта.Перечисления.СтавкиНДС.Индекс(БазаСбыта.Перечисления.СтавкиНДС.НДС20) Тогда
				ТЧ_Т.СуммаНДС = ТЧ_Т.Сумма*0.2;
				ТЧ_Т.СуммаСНДС = ТЧ_Т.Сумма + ТЧ_Т.СуммаНДС;
				Иначе	
				ТЧ_Т.СуммаСНДС = ТЧ_Т.Сумма;
				КонецЕсли;
					Для каждого ТЧ_МТК Из ТЧ.ТаблицаМТК Цикл
					Подразделение = ТЧ_МТК.МТК.Подразделение;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	БарКоды.БарКод
						|ИЗ
						|	РегистрСведений.БарКоды КАК БарКоды
						|ГДЕ
						|	БарКоды.ПЗ.ДокументОснование = &ДокументОснование";
					Запрос.УстановитьПараметр("ДокументОснование", ТЧ_МТК.МТК);
					РезультатЗапроса = Запрос.Выполнить();
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						ТЧ_ШК = бсНовДок.Штрихкоды.Добавить();	
						ТЧ_ШК.Номенклатура = бсНомен;
						ТЧ_ШК.ШК = ВыборкаДетальныеЗаписи.БарКод;
						КонецЦикла;
					МТК = ТЧ_МТК.МТК.ПолучитьОбъект();
					МТК.Выгружено = Истина;
					МТК.Записать(РежимЗаписиДокумента.Проведение);
					КонецЦикла;
						Если Найти(Подразделение.Наименование,"УПЭА") > 0 Тогда
						бсНовДок.Комментарий = "Выгрузка УПЭА из производственной базы от "+ТекущаяДата();
						Иначе	
						бсНовДок.Комментарий = "&ДД Выгрузка УД из производственной базы от "+ТекущаяДата();
						КонецЕсли;
			бсНовДок.Записать();
			бсНовДок.Записать(БазаСбыта.РежимЗаписиДокумента.Проведение);
				Если ТорговыйДом Тогда
					Если Не СоздатьРеализациюИСчётФактуру(БазаСбыта,бсНовДок.Ссылка) Тогда
					ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
					Возврат;
					КонецЕсли;				
				КонецЕсли; 			 
			ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
			Исключение
			Сообщить(ОписаниеОшибки());
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			КонецПопытки;
		КонецЕсли;		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
ВыгрузитьНаСервере();
НайтиЗаказыНаСервере()
КонецПроцедуры
