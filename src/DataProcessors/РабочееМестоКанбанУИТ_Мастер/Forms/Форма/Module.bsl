
&НаСервере
Процедура ПриСозданииНаСервере()
Объект.Исполнитель = ПараметрыСеанса.Пользователь;
СортироватьПо = 1;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
    ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
    ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
    Сообщить(ТекстСообщения);
   	КонецЕсли;
		Если Не Объект.Подразделение.Пустая() Тогда
		ПодразделениеПриИзменении(Неопределено);
		КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПроверитьЛОПотребителя(Изделие,МестоХраненияКанбанов)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЛьготнаяОчередьСрезПоследних.ПЗ
	|ИЗ
	|	РегистрСведений.ЛьготнаяОчередь.СрезПоследних КАК ЛьготнаяОчередьСрезПоследних
	|ГДЕ
	|	ЛьготнаяОчередьСрезПоследних.НормаРасходов.Элемент = &МПЗ
	|	И ЛьготнаяОчередьСрезПоследних.Линейка.МестоХраненияКанбанов = &МестоХраненияКанбанов
	|	И ЛьготнаяОчередьСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
Запрос.УстановитьПараметр("МПЗ", Изделие);
Запрос.УстановитьПараметр("МестоХраненияКанбанов", МестоХраненияКанбанов);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(Истина);
	КонецЦикла;
Возврат(Ложь);
КонецФункции

&НаСервере
Функция ПроверитьЛО(Изделие)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЛьготнаяОчередьСрезПоследних.ПЗ
	|ИЗ
	|	РегистрСведений.ЛьготнаяОчередь.СрезПоследних КАК ЛьготнаяОчередьСрезПоследних
	|ГДЕ
	|	ЛьготнаяОчередьСрезПоследних.Изделие = &Изделие
	|	И ЛьготнаяОчередьСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
Запрос.УстановитьПараметр("Изделие", Изделие);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(Истина);
	КонецЦикла;
Возврат(Ложь);
КонецФункции

&НаСервере
Процедура ПолучитьДанныеНаСервере()
Объект.ТаблицаПЗ.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Период КАК Период,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.Подразделение = &Подразделение
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
Запрос.УстановитьПараметр("Подразделение",Объект.Подразделение);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = Объект.ТаблицаПЗ.Добавить();
	ТЧ.Потребитель = ВыборкаДетальныеЗаписи.ПЗ.ДокументОснование.МестоХраненияПотребитель;
	ТЧ.ПроизводственноеЗадание = ВыборкаДетальныеЗаписи.ПЗ;
	ТЧ.Изделие = ВыборкаДетальныеЗаписи.ПЗ.Изделие;
	ТЧ.ДатаЗапуска = ВыборкаДетальныеЗаписи.ПЗ.ДатаЗапуска;
	ТЧ.ЛО = ПроверитьЛО(ТЧ.Изделие);
	ТЧ.ЛОПотребителя = ПроверитьЛОПотребителя(ТЧ.Изделие,ТЧ.Потребитель);
	ТЧ.РабочееМесто = ВыборкаДетальныеЗаписи.РабочееМесто;
	ТЧ.РабочееМестоКод = ВыборкаДетальныеЗаписи.РабочееМесто.Код;
	ТЧ.ДатаНачала = ВыборкаДетальныеЗаписи.ДатаНачала;
	ТЧ.КоличествоНаСкладеГП = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокПоМестуХранения(ВыборкаДетальныеЗаписи.РабочееМесто.Линейка.МестоХраненияГП,ТЧ.Изделие);
	КонецЦикла;
КонецПроцедуры
 
&НаКлиенте
Процедура ПолучитьДанные() Экспорт
ПолучитьДанныеНаСервере();
СортироватьПоПриИзменении(Неопределено);
КонецПроцедуры

&НаСервере
Функция МожноРаботатьВАРМ()
	Если Объект.ТаблицаПЗ.Количество() > 0 Тогда
	Возврат(Истина);
	КонецЕсли; 
		Если ОбщийМодульВызовСервера.МожноВыполнить(Объект.ТаблицаПЗ[0].РабочееМесто.Линейка) Тогда	
		Возврат(Истина);
		Иначе
		Объект.ТаблицаПЗ.Очистить();
		Сообщить("Работа АРМ запрещена в этой базе!");
		Возврат(Ложь);
		КонецЕсли;
КонецФункции 

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
ПолучитьДанныеНаСервере();
	Если Не МожноРаботатьВАРМ() Тогда
	Возврат;
	КонецЕсли;
		Если Объект.ИнтервалОбновления > 0 Тогда
		ПодключитьОбработчикОжидания("ПолучитьДанные", Объект.ИнтервалОбновления*60);
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
ПолучитьДанныеНаСервере();
СортироватьПоПриИзменении(Неопределено);
КонецПроцедуры

&НаСервере
Функция ПолучитьЗаданиеНаСервере(Стр)
ТЧ = Объект.ТаблицаПЗ.НайтиПоИдентификатору(Стр);
ПЗ = ТЧ.ПроизводственноеЗадание;
	Если Не ЗначениеЗаполнено(ПЗ.ДатаЗапуска) Тогда
		Если Не ОбщийМодульВызовСервера.СоздатьТаблицуЭтаповПроизводства(ПЗ,Этапы,ЭтапыАРМ,ТЧ.РабочееМесто,Объект.Исполнитель) Тогда	
		Сообщить("МТК остановлена! Ошибка записана в МТК");
		Возврат(Ложь);			
		КонецЕсли;
	Результат = ОбщийМодульВызовСервера.ЗапуститьВПроизводство(ПЗ,ТЧ.РабочееМесто,Этапы);
	ТЧ.ЛО = ПроверитьЛО(ТЧ.Изделие);
	ТЧ.ЛОПотребителя = ПроверитьЛОПотребителя(ТЧ.Изделие,ТЧ.Потребитель);
		Если Результат = 1 Тогда
		ТЧ.ДатаНачала = ТекущаяДата();
			Если ТЧ.Изделие.Канбан.Подразделение.ОформлятьПустыеКанбаны > 0 Тогда
			ОбщийМодульРаботаСРегистрами.ОформитьПринятиеКанбана(ПЗ.Линейка.МестоХраненияГП,ТЧ.Потребитель,ТЧ.Изделие,ПЗ.ДокументОснование.НомерЯчейки,Объект.Исполнитель);
			КонецЕсли;
		Возврат(Истина);
		КонецЕсли;
	Иначе
	Сообщить("Производственное задание уже запущено в работу!"); 
	КонецЕсли;
Возврат(Ложь); 
КонецФункции

&НаКлиенте
Процедура ПринятьВРаботу(Команда)
	Если Элементы.ТаблицаПЗ.ТекущаяСтрока <> Неопределено Тогда
		Если Не ОбщийМодульВызовСервера.МТКОстановлена(Элементы.ТаблицаПЗ.ТекущиеДанные.ПроизводственноеЗадание) Тогда
			Если ПолучитьЗаданиеНаСервере(Элементы.ТаблицаПЗ.ТекущаяСтрока) Тогда
				Если ПечатьСпецификации Тогда
				ПечатьТекущейСпецификации(Неопределено);
				КонецЕсли;				
			КонецЕсли;
		Иначе
		Сообщить("По выбранному производственному заданию остановлена МТК!");
		КонецЕсли;	
	Иначе
	Сообщить("Выберите производственное задание!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалОбновленияПриИзменении(Элемент)
ОтключитьОбработчикОжидания("ПолучитьДанные");
	Если Объект.ИнтервалОбновления > 0 Тогда
	ПодключитьОбработчикОжидания("ПолучитьДанные", Объект.ИнтервалОбновления*60);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПечатьТекущейСпецификации(Команда)
ОткрытьФорму("Отчет.ПечатьСпецификацииСУчётомАналогов.Форма.ФормаОтчета",Новый Структура("ПЗ",Элементы.ТаблицаПЗ.ТекущиеДанные.ПроизводственноеЗадание));
КонецПроцедуры

&НаСервере
Функция НайтиПЗ(Данные)
Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,";");
	Если Массив[0] = "3" Тогда
	МестоХраненияПотребитель = ЗначениеИзСтрокиВнутр(Массив[1]);
	Спецификация = ЗначениеИзСтрокиВнутр(Массив[3]);
	НомерЯчейки = Число(Массив[5]);
		Для каждого ТЧ Из Объект.ТаблицаПЗ Цикл
			Если ТЧ.ПроизводственноеЗадание.ДокументОснование.МестоХраненияПотребитель = МестоХраненияПотребитель Тогда	
				Если ТЧ.ПроизводственноеЗадание.Изделие = Спецификация Тогда
					Если ТЧ.ПроизводственноеЗадание.ДокументОснование.НомерЯчейки = НомерЯчейки Тогда
					Возврат(ТЧ.ПолучитьИдентификатор());
					КонецЕсли; 
				КонецЕсли; 	
		    КонецЕсли;
		КонецЦикла;
	Иначе
	МТК = ЗначениеИзСтрокиВнутр(Массив[0]);
		Для каждого ТЧ Из Объект.ТаблицаПЗ Цикл
			Если ТЧ.ПроизводственноеЗадание.ДокументОснование = МТК Тогда	
			Возврат(ТЧ.ПолучитьИдентификатор()); 	
		    КонецЕсли;
		КонецЦикла;
	КонецЕсли; 
Возврат(Неопределено);
КонецФункции

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
	ВыбСтрока = НайтиПЗ(Данные);
		Если ВыбСтрока <> Неопределено Тогда
		Элементы.ТаблицаПЗ.ТекущаяСтрока = ВыбСтрока;
		Иначе	
		Сообщить("Производственное задание не найдено!");
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПоПриИзменении(Элемент)
	Если СортироватьПо = 1 Тогда
	Объект.ТаблицаПЗ.Сортировать("ПроизводственноеЗадание");
	ИначеЕсли СортироватьПо = 2 Тогда
	Объект.ТаблицаПЗ.Сортировать("Потребитель,ПроизводственноеЗадание");		
	ИначеЕсли СортироватьПо = 3 Тогда
	Объект.ТаблицаПЗ.Сортировать("Изделие,ПроизводственноеЗадание");
	ИначеЕсли СортироватьПо = 4 Тогда
	Объект.ТаблицаПЗ.Сортировать("ДатаНачала");
	ИначеЕсли СортироватьПо = 5 Тогда
	Объект.ТаблицаПЗ.Сортировать("РабочееМестоКод,ДатаНачала,ПроизводственноеЗадание");	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПечатьМТКНаСервере(Стр)
ТабДок = Новый ТабличныйДокумент;

barcode = ПолучитьCOMОбъект("","STROKESCRIBE.StrokeScribeClass.1");
barcode.Alphabet=25; //QRCODE
Макет = ПолучитьОбщийМакет("МТКДетали");
ОблМТК = Макет.ПолучитьОбласть("МТК");
ОблЭтикетка = Макет.ПолучитьОбласть("Этикетка");
ТЧ = Объект.ТаблицаПЗ.НайтиПоИдентификатору(Стр);
МТК = ТЧ.ПроизводственноеЗадание.ДокументОснование;
QRCode = ЗначениеВСтрокуВнутр(МТК);
ИмяФайла=ПолучитьИмяВременногоФайла("wmf");
barcode.Text=QRCode;
barcode.UTF8=1;
barcode.QrECL=2;
код=barcode.SavePicture(ИмяФайла,7,100,100);          
	Если код <> 0 Тогда //Проверка результата генерации штрихкода
	Сообщить(строка(код) + " - " + barcode.ErrorDescription);
	Возврат(ТабДок);
	КонецЕсли;
рис=ОблМТК.Рисунки.QRCode;
рис.РазмерКартинки=РазмерКартинки.Пропорционально;
рис.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
рис.Картинка = Новый Картинка(ИмяФайла);
ОблМТК.Параметры.МТКНомер = МТК.Номер;
ОблМТК.Параметры.ДатаСоздания = МТК.Дата;
ОблМТК.Параметры.Счёт = МТК.Счёт;
ОблМТК.Параметры.Номенклатура = СокрЛП(МТК.Номенклатура.Наименование);
ОблМТК.Параметры.Количество = МТК.Количество;
ОблМТК.Параметры.ЕдиницаИзмерения = МТК.Номенклатура.ЕдиницаИзмерения;
ТабДок.Вывести(ОблМТК);
ОблЭтикетка.Параметры.Линейка = МТК.Линейка;
ОблЭтикетка.Параметры.МТКНомер = МТК.Номер;
ОблЭтикетка.Параметры.ДатаСоздания = МТК.Дата;
ОблЭтикетка.Параметры.Номенклатура = СокрЛП(МТК.Номенклатура.Наименование);
ОблЭтикетка.Параметры.Количество = МТК.Количество;
ОблЭтикетка.Параметры.ЕдиницаИзмерения = МТК.Номенклатура.ЕдиницаИзмерения;
ТабДок.Вывести(ОблЭтикетка);
УдалитьФайлы(ИмяФайла);
ТабДок.РазмерСтраницы = "A4";
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьМТК(Команда)
ТабДок = ПечатьМТКНаСервере(Элементы.ТаблицаПЗ.ТекущаяСтрока);
ТабДок.Показать("МТК детали");
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры
