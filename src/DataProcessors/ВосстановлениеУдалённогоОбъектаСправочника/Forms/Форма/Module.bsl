
&НаСервере
Функция UUIDToGUID(UUID)
Возврат Сред(UUID, 20, 4) + Прав(UUID, 12) + Сред(UUID, 15, 4) + Сред(UUID, 10, 4) + Лев(UUID, 8);
КонецФункции

&НаСервере
Функция GUIDToUUID(GUID)
Возврат Прав(GUID, 8) + "-" + Сред(GUID, 21, 4) + "-" + Сред(GUID, 17, 4) + "-" + Лев(GUID, 4) + "-" + Сред(GUID, 5, 12); 
КонецФункции

&НаСервере
Процедура ВосстановитьОбъектНаСервере()
ГУИДУдОбъктаСтр = СтрЗаменить(СтрокаОбъектНеНайден,"<Объект не найден> (","");
ГУИДУдОбъктаСтр = СтрЗаменить(ГУИДУдОбъктаСтр,")","");
ГУИДУдОбъктаСтр = СтрЗаменить(ГУИДУдОбъктаСтр,"0x","");
ГУИДУдОбъктаСтр = Сред(ГУИДУдОбъктаСтр, Найти(ГУИДУдОбъктаСтр,":")+1, СтрДлина(ГУИДУдОбъктаСтр));
// Преобразуем GUID
ГУИД = Сред(ГУИДУдОбъктаСтр,25,8)+"-"+Сред(ГУИДУдОбъктаСтр,21,4)+"-"+Сред(ГУИДУдОбъктаСтр,17,4)+"-"+Сред(ГУИДУдОбъктаСтр,1,4)+"-"+Сред(ГУИДУдОбъктаСтр,5,12);
УИН = Новый УникальныйИдентификатор(ГУИД);
НовыйЭлементСпр = Справочники[ТипСправочника].СоздатьЭлемент();
НовыйЭлементСпр.УстановитьСсылкуНового(Справочники[ТипСправочника].ПолучитьСсылку(УИН));
НовыйЭлементСпр.Наименование = "Восстановленный элемент";
НовыйЭлементСпр.ОбменДанными.Загрузка = Истина; //Чтобы избежать проверок высокого уровня
НовыйЭлементСпр.Записать();
НовыйЭлемент = НовыйЭлементСпр.Ссылка;
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьОбъект(Команда)
ВосстановитьОбъектНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Для каждого Стр Из Метаданные.Справочники Цикл
	СписокСправочников.Добавить(Стр.Имя);
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ТипСправочникаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
ТипСправочника = СписокСправочников.ВыбратьЭлемент("Выберите справочник").Значение;
КонецПроцедуры
