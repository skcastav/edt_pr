
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Объект.Исполнитель = ПараметрыСеанса.Пользователь;
КонецПроцедуры

&НаСервере
Процедура АнализироватьРазрешения()
	Для каждого ТЧ Из ТаблицаЗаданий Цикл
		Если ЕстьПриоритет Тогда
		ТЧ.ВыборРазрешен = Истина;
		Прервать; 	
		Иначе
		ТЧ.ВыборРазрешен = Истина;
			Если Не СвободныйВыбор Тогда			 
			Прервать; 
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеПоЗаданиямНаСервере()
ТаблицаЗаданий.Очистить();
ЕстьПриоритет = Ложь;
Запрос = Новый Запрос;
ЗапросЛО = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПервых.ДатаНачала,
	|	ЭтапыПроизводственныхЗаданийСрезПервых.Изделие,
	|	ЭтапыПроизводственныхЗаданийСрезПервых.Количество
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПервых КАК ЭтапыПроизводственныхЗаданийСрезПервых
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПервых.РабочееМесто = &РабочееМесто
	|	И ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.ЛинияSMD = &ЛинияSMD
	|	И ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.ДокументОснование.Статус = 4
	|	И ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.Остановлено = ЛОЖЬ
	|	И ЭтапыПроизводственныхЗаданийСрезПервых.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
Запрос.УстановитьПараметр("РабочееМесто",Объект.РабочееМесто);
Запрос.УстановитьПараметр("ЛинияSMD",Объект.Линия);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
    ТЧ = ТаблицаЗаданий.Добавить();
	ТЧ.Спецификация = ВыборкаДетальныеЗаписи.Изделие;
	ТЧ.Статус = ПолучитьСтатус(ВыборкаДетальныеЗаписи.Изделие);
	ТЧ.ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
	ТЧ.ДатаПЗ = ВыборкаДетальныеЗаписи.ПЗ.Дата;
	ТЧ.Приоритет = ?(ВыборкаДетальныеЗаписи.ПЗ.НомерОчереди > 0,Истина,Ложь);
	ТЧ.НомерОчереди = ВыборкаДетальныеЗаписи.ПЗ.НомерОчереди;
		Если ТЧ.Приоритет Тогда
		ЕстьПриоритет = Истина;
		КонецЕсли; 
	ТЧ.МестоХраненияПотребитель = ВыборкаДетальныеЗаписи.ПЗ.ДокументОснование.МестоХраненияПотребитель;
	ТЧ.Количество = ВыборкаДетальныеЗаписи.Количество;
	//ЗапросЛО.Текст = 
	//	"ВЫБРАТЬ ПЕРВЫЕ 1
	//	|	ЛьготнаяОчередь.Период КАК Период
	//	|ИЗ
	//	|	РегистрСведений.ЛьготнаяОчередь КАК ЛьготнаяОчередь
	//	|ГДЕ
	//	|	ЛьготнаяОчередь.НормаРасходов.Элемент = &МПЗ
	//	|	И ЛьготнаяОчередь.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	//	|
	//	|УПОРЯДОЧИТЬ ПО
	//	|	Период";
	//ЗапросЛО.УстановитьПараметр("МПЗ",ВыборкаДетальныеЗаписи.Изделие);
	//РезультатЗапросаЛО = ЗапросЛО.Выполнить();
	//ВыборкаЛО = РезультатЗапросаЛО.Выбрать();
	//	Пока ВыборкаЛО.Следующий() Цикл
	//	ТЧ.ЛОПриборов = Истина;
	//	ТЧ.ДатаЛО = ВыборкаЛО.Период;
	//	КонецЦикла;
	КонецЦикла;
ТаблицаЗаданий.Сортировать("Приоритет Убыв,НомерОчереди,ДатаЛО Убыв,ДатаПЗ");
АнализироватьРазрешения();
ПолучитьДанныеПоОстановленнымЗаданиямНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеПоОстановленнымЗаданиямНаСервере()
ТаблицаОстановленныхЗаданий.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПервых.ДатаНачала,
	|	ЭтапыПроизводственныхЗаданийСрезПервых.Изделие,
	|	ЭтапыПроизводственныхЗаданийСрезПервых.Количество
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПервых КАК ЭтапыПроизводственныхЗаданийСрезПервых
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПервых.РабочееМесто = &РабочееМесто
	|	И ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.ЛинияSMD = &ЛинияSMD
	|	И ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.ДокументОснование.Статус = 4
	|	И ЭтапыПроизводственныхЗаданийСрезПервых.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ЭтапыПроизводственныхЗаданийСрезПервых.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
Запрос.УстановитьПараметр("РабочееМесто",Объект.РабочееМесто);
Запрос.УстановитьПараметр("ЛинияSMD",Объект.Линия);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.ПЗ = Объект.ПроизводственноеЗадание Тогда	
		Продолжить;
		КонецЕсли;  
    ТЧ = ТаблицаОстановленныхЗаданий.Добавить();
	ТЧ.Остановлено = ВыборкаДетальныеЗаписи.ПЗ.Остановлено;
	ТЧ.ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
	ТЧ.Спецификация = ВыборкаДетальныеЗаписи.Изделие;
	ТЧ.Статус = ПолучитьСтатус(ВыборкаДетальныеЗаписи.Изделие);
	ТЧ.ДатаНачала = ВыборкаДетальныеЗаписи.ДатаНачала;
	ТЧ.Количество = ВыборкаДетальныеЗаписи.Количество;
	КонецЦикла;
ТаблицаОстановленныхЗаданий.Сортировать("ДатаНачала,ПЗ");
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьЗадания(Команда)
ПолучитьДанныеПоЗаданиямНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьСписокЭтапов(ЭтапСпецификации)
	Если СокрЛП(ЭтапСпецификации.Канбан.Наименование) <> "Канбан УПЭА SMD ГСС" Тогда
	СписокЭтапов.Вставить(0,ЭтапСпецификации);
	КонецЕсли;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходовСрезПоследних.Элемент КАК Элемент
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(
	|			&НаДату,
	|			Владелец = &Владелец
	|				И НормаРасходов.ВидЭлемента = &ВидЭлемента) КАК НормыРасходовСрезПоследних
	|ГДЕ
	|	НормыРасходовСрезПоследних.Норма > 0
	|	И НормыРасходовСрезПоследних.НормаРасходов.ПометкаУдаления = ЛОЖЬ";
Запрос.УстановитьПараметр("НаДату", Объект.ПроизводственноеЗадание.ДатаЗапуска);
Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
Запрос.УстановитьПараметр("ВидЭлемента", Перечисления.ВидыЭлементовНормРасходов.Основа);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл
	ПолучитьСписокЭтапов(ВыборкаНР.Элемент);  
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьВыполненноеКоличество(Этап)	
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыполнениеЭтаповПроизводства.МТК КАК МТК,
	|	ВыполнениеЭтаповПроизводства.Количество КАК Количество
	|ИЗ
	|	РегистрСведений.ВыполнениеЭтаповПроизводства КАК ВыполнениеЭтаповПроизводства
	|ГДЕ
	|	ВыполнениеЭтаповПроизводства.МТК = &МТК
	|	И ВыполнениеЭтаповПроизводства.РабочееМесто = &РабочееМесто
	|	И ВыполнениеЭтаповПроизводства.Спецификация = &Спецификация
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	МТК";
Запрос.УстановитьПараметр("МТК", Объект.ПроизводственноеЗадание.ДокументОснование);
Запрос.УстановитьПараметр("РабочееМесто", Объект.РабочееМесто);
Запрос.УстановитьПараметр("Спецификация", Этап);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМТК = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМТК.Следующий() Цикл
	Возврат(ВыборкаМТК.Количество);
	КонецЦикла;
Возврат(0);
КонецФункции

&НаСервере
Функция ПолучитьНезавершёноеЗадание()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПервых.Количество
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПервых КАК ЭтапыПроизводственныхЗаданийСрезПервых
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПервых.РабочееМесто = &РабочееМесто
	|	И ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.ДокументОснование.Статус = 4
	|	И ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.Остановлено = ЛОЖЬ
	|	И ЭтапыПроизводственныхЗаданийСрезПервых.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ЭтапыПроизводственныхЗаданийСрезПервых.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.ЛинияSMD = &ЛинияSMD";
Запрос.УстановитьПараметр("РабочееМесто",Объект.РабочееМесто);
Запрос.УстановитьПараметр("ЛинияSMD",Объект.Линия);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
    Объект.ПроизводственноеЗадание = ВыборкаДетальныеЗаписи.ПЗ;
	КоличествоИзделия = ВыборкаДетальныеЗаписи.Количество;
	СписокЭтапов.Очистить();
	ПолучитьСписокЭтапов(ВыборкаДетальныеЗаписи.ПЗ.Изделие);
		Для каждого Этап Из СписокЭтапов Цикл
		КоличествоВыполнено = ПолучитьВыполненноеКоличество(Этап.Значение)-(Объект.ПроизводственноеЗадание.ДокументОснование.Количество-Объект.ПроизводственноеЗадание.Количество);
			Если КоличествоВыполнено < КоличествоИзделия Тогда
			ЭтапПроизводства = Этап.Значение;
			Прервать;
			КонецЕсли; 
		КонецЦикла;
	КоличествоБрак = ОбщийМодульВызовСервера.ПолучитьКоличествоВБракеПоПЗ(Объект.ПроизводственноеЗадание,Объект.РабочееМесто);
	Возврат(Истина); 
	КонецЦикла;
Возврат(Ложь);
КонецФункции

&НаСервере
Функция ПолучитьЗаданиеНаСервере(Стр)
ТЧ = ТаблицаЗаданий.НайтиПоИдентификатору(Стр);
ПЗ = ТЧ.ПЗ;
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Объект.ПроизводственноеЗадание = ПЗ;
	КоличествоИзделия = ПЗ.Количество;
	СписокЭтапов.Очистить();
	ПолучитьСписокЭтапов(ПЗ.Изделие);
		Для каждого Этап Из СписокЭтапов Цикл
		КоличествоВыполнено = ПолучитьВыполненноеКоличество(Этап.Значение)-(Объект.ПроизводственноеЗадание.ДокументОснование.Количество-Объект.ПроизводственноеЗадание.Количество);
			Если КоличествоВыполнено < КоличествоИзделия Тогда
			ЭтапПроизводства = Этап.Значение;
			Прервать;
			КонецЕсли; 
		КонецЦикла;
	Парам = Новый Структура("РабочееМесто,ДатаНачала",Объект.РабочееМесто,ТекущаяДата());
	ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(ПЗ,Парам);
	Парам = Новый Структура("РабочееМесто,Количество",ОбщийМодульВызовСервера.ПолучитьСледующееРабочееМесто(Объект.РабочееМесто),КоличествоИзделия);
	ОбщийМодульРаботаСРегистрами.СоздатьЭтапПроизводственногоЗаданияКанбан(ПЗ,Парам); 
	СвободныйВыбор = Ложь;//Не СвободныйВыбор;
	ТаблицаЗаданий.Удалить(ТЧ);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина);
КонецФункции 

&НаСервере
Процедура ПолучитьСписокФайловИзготовления(ЭтапСпецификации)
НормРасх = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н_М(ЭтапСпецификации,ТекущаяДата());
	Пока НормРасх.Следующий() Цикл			
		Если ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.Материалы")Тогда
			Если Найти(НормРасх.Элемент.Родитель.Наименование,"0 - Платы") > 0 Тогда
			ФайлыИзготовления = РегистрыСведений.ИзготовлениеПечатныхПлат.СрезПоследних(ТекущаяДата(),Новый Структура("МПЗ",НормРасх.Элемент));
				Для каждого Стр Из ФайлыИзготовления Цикл
					Если Стр.Действующий Тогда
					СписокФайловИзготовления.Добавить(""+Стр.ФайлИзготовления.ВидДокумента+", "+СокрЛП(Стр.ФайлИзготовления.Наименование));
					КонецЕсли; 					
				КонецЦикла; 
			Возврат;			
			КонецЕсли;			
		Иначе 
		ПолучитьСписокФайловИзготовления(НормРасх.Элемент); 
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры 

&НаКлиенте
Процедура ТаблицаЗаданийВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	Если Объект.ПроизводственноеЗадание.Пустая() Тогда
		Если Элементы.ТаблицаЗаданий.ТекущиеДанные.ВыборРазрешен Тогда
			Если ПолучитьЗаданиеНаСервере(Элементы.ТаблицаЗаданий.ТекущаяСтрока) Тогда
			ПолучитьСписокФайловИзготовления(ПолучитьИзделие());
			Элементы.Завершить.КнопкаПоУмолчанию = Истина;
			КонецЕсли; 
		Иначе
		Сообщить("Выберите разрешённое производственное задание!");
		КонецЕсли;			
	Иначе
	Сообщить("Сначала завершите текущее производственное задание!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьОстановленноеЗадание(Стр)
	Попытка
	ТЧ = ТаблицаОстановленныхЗаданий.НайтиПоИдентификатору(Стр);
	Объект.ПроизводственноеЗадание = ТЧ.ПЗ;
	КоличествоИзделия = ТЧ.Количество;
	СписокЭтапов.Очистить();
	ПолучитьСписокЭтапов(ТЧ.ПЗ.Изделие);
		Для каждого Этап Из СписокЭтапов Цикл
		КоличествоВыполнено = ПолучитьВыполненноеКоличество(Этап.Значение)-(Объект.ПроизводственноеЗадание.ДокументОснование.Количество-Объект.ПроизводственноеЗадание.Количество);
			Если КоличествоВыполнено < КоличествоИзделия Тогда
			ЭтапПроизводства = Этап.Значение;
			Прервать;
			КонецЕсли; 
		КонецЦикла;
	КоличествоБрак = ОбщийМодульВызовСервера.ПолучитьКоличествоВБракеПоПЗ(Объект.ПроизводственноеЗадание,Объект.РабочееМесто);
	Исключение
	Сообщить(ОписаниеОшибки());
	Возврат Ложь;
	КонецПопытки;
Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ТаблицаОстановленныхЗаданийВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	Если Объект.ПроизводственноеЗадание.Пустая() Тогда
		Если Элементы.ТаблицаОстановленныхЗаданий.ТекущиеДанные.Остановлено = Ложь Тогда
			Если ПолучитьОстановленноеЗадание(Элементы.ТаблицаОстановленныхЗаданий.ТекущаяСтрока) Тогда
			ПолучитьСписокФайловИзготовления(ПолучитьИзделие());
			Элементы.Завершить.КнопкаПоУмолчанию = Истина;
			КонецЕсли; 
		Иначе
		Сообщить("Выберите снятое с остановки задание!");
		КонецЕсли;			
	Иначе
	Сообщить("Сначала завершите текущее производственное задание!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОчиститьСсылкуНаПЗ()
Объект.ПроизводственноеЗадание = Документы.ПроизводственноеЗадание.ПустаяСсылка();
ЭтапПроизводства = Справочники.Номенклатура.ПустаяСсылка();
СписокФайловИзготовления.Очистить();
КоличествоИзделия = 0;
КоличествоВыполнено = 0;
КоличествоБрак = 0;
Элементы.Завершить.КнопкаПоУмолчанию = Ложь;
КонецПроцедуры 

&НаСервере
Функция МожноРаботатьВАРМ()
	Если ОбщийМодульВызовСервера.МожноВыполнить(Объект.РабочееМесто.Линейка) Тогда	
	Возврат(Истина);
	Иначе
	Объект.РабочееМесто = Справочники.РабочиеМестаЛинеек.ПустаяСсылка();
	Сообщить("Работа АРМ запрещена в этой базе!");
	Возврат(Ложь);
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура РабочееМестоПриИзменении(Элемент)
	Если Не МожноРаботатьВАРМ() Тогда
	Возврат;
	КонецЕсли;
Объект.Линия = "";
ОчиститьСсылкуНаПЗ();
КонецПроцедуры

&НаСервере
Функция ПолучитьКодРабочегоМеста(РабочееМесто)
Возврат(РабочееМесто.Код);
КонецФункции

&НаКлиенте
Процедура РабочееМестоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ПолучитьКодРабочегоМеста(ВыбранноеЗначение) <> 1 Тогда
	СтандартнаяОбработка = Ложь;
	Сообщить("Выберите первое рабочее место!");	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЛинияПриИзменении(Элемент)
ОчиститьСсылкуНаПЗ();
СвободныйВыбор = Ложь;
	Если ПолучитьНезавершёноеЗадание() Тогда
	ПолучитьСписокФайловИзготовления(ПолучитьИзделие());	
	Элементы.Завершить.КнопкаПоУмолчанию = Истина;
	КонецЕсли; 
ПолучитьДанныеПоЗаданиямНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОформитьБрак(Команда)
	Если Объект.ПроизводственноеЗадание.Пустая() Тогда
	Сообщить("Нет выбранного производственного задания!");
	Возврат;	
	КонецЕсли;
Результат = ОткрытьФормуМодально("ОбщаяФорма.ОформлениеБракаКанбан",Новый Структура("РабочееМесто,ПЗ,КоличествоИзделия",Объект.РабочееМесто,Объект.ПроизводственноеЗадание,КоличествоИзделия - КоличествоБрак));
	Если Результат <> 0 Тогда
	КоличествоБрак = ОбщийМодульВызовСервера.ПолучитьКоличествоВБракеПоПЗ(Объект.ПроизводственноеЗадание,Объект.РабочееМесто);		
	КонецЕсли;  
КонецПроцедуры

&НаКлиенте
Процедура ПечатьТекущейСпецификации(Команда)
ОткрытьФорму("Отчет.ПечатьСпецификацииСУчётомАналогов.Форма.ФормаОтчета",Новый Структура("ПЗ",Объект.ПроизводственноеЗадание));
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСпецификации(Команда)
ОткрытьФорму("Отчет.ПечатьСпецификацииСУчётомАналогов.Форма.ФормаОтчета",Новый Структура("ПЗ",Элементы.ТаблицаЗаданий.ТекущиеДанные.ПЗ));
КонецПроцедуры

&НаКлиенте
Процедура ПечатьОстановленнойСпецификации(Команда)
ОткрытьФорму("Отчет.ПечатьСпецификацииСУчётомАналогов.Форма.ФормаОтчета",Новый Структура("ПЗ",Элементы.ТаблицаОстановленныхЗаданий.ТекущиеДанные.ПЗ));
КонецПроцедуры

&НаСервере
Функция ЗавершитьЧастичноНаСервере(Количество)
	Попытка
	ОбщийМодульРаботаСРегистрами.ЗафиксироватьИсполнениеЭтапаПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,ЭтапПроизводства,Количество,Объект.Исполнитель);
	Исключение
	Сообщить(ОписаниеОшибки());
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина);
КонецФункции

&НаСервере
Функция ЗавершитьНаСервере(Количество)
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	ОбщийМодульРаботаСРегистрами.ЗафиксироватьИсполнениеЭтапаПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,ЭтапПроизводства,Количество,Объект.Исполнитель);
	Парам = Новый Структура("РабочееМесто,ДатаОкончания",Объект.РабочееМесто,ТекущаяДата());
	ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Парам);
	ПЗ = Объект.ПроизводственноеЗадание.ПолучитьОбъект();
	ПЗ.НомерОчереди = 0;
	ПЗ.Записать();
	//ОбщийМодульРаботаСРегистрами.ИзменитьНомерОчереди(ПЗ.Ссылка,0);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;	
	Исключение
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Сообщить(ОписаниеОшибки());
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина);
КонецФункции

&НаСервере
Функция ПолучитьИзделие()
Возврат(Объект.ПроизводственноеЗадание.Изделие);
КонецФункции

&НаКлиенте
Процедура Завершить(Команда)
	Если Объект.ПроизводственноеЗадание.Пустая() Тогда
	Сообщить("Нет выбранного производственного задания!");
	Возврат;	
	КонецЕсли;
МаксКоличество = КоличествоИзделия - КоличествоВыполнено;
КоличествоВыпущено = МаксКоличество;
	Если ВвестиЧисло(КоличествоВыпущено,"Введите количество выпущенных изделий",9,3) Тогда
		Если КоличествоВыпущено = 0 Тогда
		Сообщить("Введите количество выпущенных изделий отличное от нуля!");
		ИначеЕсли КоличествоВыпущено < МаксКоличество Тогда
			Если ЗавершитьЧастичноНаСервере(КоличествоВыпущено) Тогда	
			КоличествоВыполнено = КоличествоВыполнено + КоличествоВыпущено; 
			КонецЕсли;
		ИначеЕсли КоличествоВыпущено = МаксКоличество Тогда
			Если СписокЭтапов[СписокЭтапов.Количество()-1].Значение = ЭтапПроизводства Тогда
				Если ЗавершитьНаСервере(КоличествоВыпущено) Тогда	
				ОчиститьСсылкуНаПЗ();
				ПолучитьДанныеПоЗаданиямНаСервере();
				КонецЕсли;			
			Иначе	
				Если ЗавершитьЧастичноНаСервере(КоличествоВыпущено) Тогда	
				ЭтапПроизводства = СписокЭтапов[1].Значение;
				КоличествоВыполнено = 0;
				КонецЕсли;			
			КонецЕсли; 		
		Иначе	
		Сообщить("Выпущенное количество не должно превышать "+МаксКоличество+"!");
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЗавершитьСОстановкойНаСервере(Количество,ПричинаОстановки)
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;	
	ОбщийМодульРаботаСРегистрами.ЗафиксироватьИсполнениеЭтапаПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,ЭтапПроизводства,Количество,Объект.Исполнитель);
	ОбщийМодульВызовСервера.ОстановитьПЗ(Объект.ПроизводственноеЗадание,ПричинаОстановки);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Сообщить(ОписаниеОшибки());
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина);
КонецФункции

&НаСервере
Функция ЗавершитьИРазделитьНаСервере(Количество,ПричинаОстановки)
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	ОбщийМодульРаботаСРегистрами.ЗафиксироватьИсполнениеЭтапаПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,ЭтапПроизводства,Количество,Объект.Исполнитель);
	Парам = Новый Структура("РабочееМесто,ДатаОкончания",Объект.РабочееМесто,ТекущаяДата());
	ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Парам);
	КоличествоВыпущено = КоличествоВыполнено + Количество;
	ПЗ = Объект.ПроизводственноеЗадание.ПолучитьОбъект();
	ПЗ.Количество = КоличествоВыпущено;
	ПЗ.НомерОчереди = 0;
	ПЗ.Записать();
	//ОбщийМодульРаботаСРегистрами.ИзменитьНомерОчереди(ПЗ.Ссылка,0);
	НаборЗаписей = РегистрыСведений.ЭтапыПроизводственныхЗаданий.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПЗ.Установить(Объект.ПроизводственноеЗадание);
	НаборЗаписей.Прочитать();
	КолБрак = 0;
	    Для Каждого Запись Из НаборЗаписей Цикл 
		Запись.Количество = Количество - КолБрак;
		КолБрак = КолБрак + ОбщийМодульВызовСервера.ПолучитьКоличествоВБракеПоПЗ(Объект.ПроизводственноеЗадание,Запись.РабочееМесто);
	    КонецЦикла;
	НаборЗаписей.Записать();			
	ОбщийМодульСозданиеДокументов.СоздатьДополнительноеПЗ(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,КоличествоИзделия - КоличествоВыпущено,ПричинаОстановки);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Сообщить(ОписаниеОшибки());
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина);
КонецФункции

&НаКлиенте
Процедура ЗавершитьСОстановкой(Команда)
	Если Объект.ПроизводственноеЗадание.Пустая() Тогда
	Сообщить("Нет выбранного производственного задания!");
	Возврат;	
	КонецЕсли;
МаксКоличество = КоличествоИзделия - КоличествоВыполнено;
КоличествоВыпущено = МаксКоличество;
	Если ВвестиЧисло(КоличествоВыпущено,"Введите количество выпущенных изделий",9,3) Тогда
	ПричинаОстановки = "";
		Если ВвестиСтроку(ПричинаОстановки,"Введите причину остановки",0,Истина) Тогда
			Если ЗначениеЗаполнено(ПричинаОстановки) Тогда
			ПричинаОстановки = СокрЛП(ПричинаОстановки)+" ("+Объект.Исполнитель+")";
				Если КоличествоВыпущено = 0 Тогда
					Если ОбщийМодульВызовСервера.ОстановитьПЗ(Объект.ПроизводственноеЗадание,ПричинаОстановки) Тогда
					ОчиститьСсылкуНаПЗ();
					ПолучитьДанныеПоЗаданиямНаСервере();				
					КонецЕсли;
				ИначеЕсли КоличествоВыпущено < МаксКоличество Тогда
					Если ЗавершитьСОстановкойНаСервере(КоличествоВыпущено,ПричинаОстановки) Тогда
					ОчиститьСсылкуНаПЗ();
					ПолучитьДанныеПоЗаданиямНаСервере();					
					КонецЕсли;
				Иначе 	
				Сообщить("Выпущенное количество должно быть меньше "+МаксКоличество+"!");
				КонецЕсли;
			Иначе
            Сообщить("Введите причину остановки!");
			КонецЕсли;
		Иначе
		Сообщить("Введите причину остановки!");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаКлиенте
Процедура ОтчётПоИзменениям(Команда)
ОткрытьФорму("Отчет.ОтчётПоИзменениямВСпецификации.Форма.ФормаОтчета",Новый Структура("Спецификация",ПолучитьИзделие()));
КонецПроцедуры
