
&НаСервере
Процедура МТКПриИзмененииНаСервере(МТК)
ТаблицаЦветов.Очистить();
ДиаграммаГанта.Очистить();
ДиаграммаГанта.Обновление = Ложь;
ГСЧ = Новый ГенераторСлучайныхЧисел(255);
Запрос = Новый Запрос;

Серия = ДиаграммаГанта.УстановитьСерию("Рабочие места");
Серия.ШтриховкаПерекрывающихсяИнтервалов = Истина;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданий.ДатаНачала,
	|	ЭтапыПроизводственныхЗаданий.ДатаОкончания,
	|	ЭтапыПроизводственныхЗаданий.РабочееМесто,
	|	ЭтапыПроизводственныхЗаданий.ПЗ КАК ПЗ,
	|	ЭтапыПроизводственныхЗаданий.Период
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданий.ПЗ.ДокументОснование = &ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПЗ
	|ИТОГИ ПО
	|	ПЗ";
Запрос.УстановитьПараметр("ДокументОснование", МТК);
ТочкаМТК = ДиаграммаГанта.УстановитьТочку(МТК);
ТочкаМТК.Текст = МТК.Номер;
ТочкаМТК.Расшифровка = МТК;
	Если ЗначениеЗаполнено(МТК.ДатаНачалаОстановки) Тогда
	Значение = ДиаграммаГанта.ПолучитьЗначение(ТочкаМТК, Серия);
	Интервал = Значение.Добавить(); 
	Интервал.Начало = МТК.ДатаНачалаОстановки;
		Если ЗначениеЗаполнено(МТК.ДатаОкончанияОстановки) Тогда
		Интервал.Конец = МТК.ДатаОкончанияОстановки;
		Иначе
		Интервал.Конец = ТекущаяДата();			
		КонецЕсли; 
	Интервал.Текст = "Остановка c "+Интервал.Начало+" по "+Интервал.Конец;	
	Интервал.Цвет = Новый Цвет(255, 0, 0);
	КонецЕсли; 
//ДатаКон = Дата(1,1,1);
ВыборкаПЗ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПЗ.Следующий() Цикл
	ТаблицаЭтапов.Очистить();
	Точка = ДиаграммаГанта.УстановитьТочку(ВыборкаПЗ.ПЗ,МТК);
	Точка.Текст = ВыборкаПЗ.ПЗ.Номер;
	Точка.Расшифровка = ВыборкаПЗ.ПЗ;
	Значение = ДиаграммаГанта.ПолучитьЗначение(Точка, Серия);
	Выборка = ВыборкаПЗ.Выбрать();
		Пока Выборка.Следующий() Цикл
		ВыборкаРМ = ТаблицаЦветов.НайтиСтроки(Новый Структура("РабочееМесто",Выборка.РабочееМесто));
			Если ВыборкаРМ.Количество() = 0 Тогда
			ТЧ = ТаблицаЦветов.Добавить();
			ТЧ.РабочееМесто = Выборка.РабочееМесто;
			ТЧ.Цвет = Новый Цвет(ГСЧ.СлучайноеЧисло(100,255), ГСЧ.СлучайноеЧисло(100,255), ГСЧ.СлучайноеЧисло(100,255));
			КонецЕсли; 
		ТЧ = ТаблицаЭтапов.Добавить();
		ТЧ.РабочееМесто = Выборка.РабочееМесто;
			Если ЗначениеЗаполнено(Выборка.ДатаНачала) Тогда
			ТЧ.Начало = Выборка.ДатаНачала;			
			Иначе
			ТЧ.Начало = Выборка.Период;
			КонецЕсли;
				Если ЗначениеЗаполнено(Выборка.ДатаОкончания) Тогда
				ТЧ.Окончание = Выборка.ДатаОкончания;
				Иначе
				ТЧ.Окончание = ТекущаяДата();			
				КонецЕсли; 
		//ДатаКон = Макс(ДатаКон,Выборка.ДатаОкончания);
		КонецЦикла;
	ЗапросРемонт = Новый Запрос;

	ЗапросРемонт.Текст = 
		"ВЫБРАТЬ
		|	РемонтнаяКарта.ДатаНачала,
		|	РемонтнаяКарта.ДатаОкончания
		|ИЗ
		|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
		|ГДЕ
		|	Ремонт.ДокументОснование = &ДокументОснование";			
	ЗапросРемонт.УстановитьПараметр("ДокументОснование", ВыборкаПЗ.ПЗ);	
	РезультатЗапросаРемонт = ЗапросРемонт.Выполнить();			
	ВыборкаДетальныеЗаписиРемонт = РезультатЗапросаРемонт.Выбрать();			
		Пока ВыборкаДетальныеЗаписиРемонт.Следующий() Цикл
		Ремонтник = Справочники.РабочиеМестаЛинеек.НайтиПоНаименованию("Ремонтник",Истина);
		ВыборкаРМ = ТаблицаЦветов.НайтиСтроки(Новый Структура("РабочееМесто",Ремонтник));
			Если ВыборкаРМ.Количество() = 0 Тогда
			ТЧ = ТаблицаЦветов.Добавить();
			ТЧ.РабочееМесто = Ремонтник;
			ТЧ.Цвет = Новый Цвет(255, 0, 0);
			КонецЕсли; 
		ТЧ = ТаблицаЭтапов.Добавить();
		ТЧ.РабочееМесто = Ремонтник;
		ТЧ.Начало = ВыборкаДетальныеЗаписиРемонт.ДатаНачала;
		ТЧ.Окончание = ВыборкаДетальныеЗаписиРемонт.ДатаОкончания;
		КонецЦикла;
	ТаблицаЭтапов.Сортировать("Начало");
		Для каждого ТЧ Из ТаблицаЭтапов Цикл
		Интервал = Значение.Добавить(); 
		Интервал.Начало = ТЧ.Начало;
		Интервал.Конец = ТЧ.Окончание;
		Интервал.Текст = ""+ТЧ.РабочееМесто+" c "+ТЧ.Начало+" по "+ТЧ.Окончание;
		ВыборкаРМ = ТаблицаЦветов.НайтиСтроки(Новый Структура("РабочееМесто",ТЧ.РабочееМесто));			
		Интервал.Цвет = ВыборкаРМ[0].Цвет;		
		КонецЦикла; 
	КонецЦикла;
ДиаграммаГанта.РазвернутьТочку(ТочкаМТК,Истина);
//	Если ТаблицаЭтапов.Количество() > 0 Тогда
//	ДиаграммаГанта.АвтоОпределениеПолногоИнтервала = Ложь;
//		Если ДатаКон < ТаблицаЭтапов[0].Начало Тогда
//		ДатаКон = ТаблицаЭтапов[0].Начало;
//		КонецЕсли;
//Сообщить(ТаблицаЭтапов[0].Начало); 
//Сообщить(ДатаКон);
//	ДиаграммаГанта.УстановитьПолныйИнтервал(ТаблицаЭтапов[0].Начало,ДатаКон);
//	КонецЕсли; 
ДиаграммаГанта.Обновление = Истина;
ТекДата = ДиаграммаГанта.НачалоПолногоИнтервала;
	Пока ТекДата <= ДиаграммаГанта.КонецПолногоИнтервала Цикл
	ИнтервалФона = ДиаграммаГанта.ИнтервалыФона.Добавить(НачалоДня(ТекДата)+3600*8,НачалоДня(ТекДата)+3600*12);
	ИнтервалФона.Цвет = WebЦвета.Бежевый;
	ИнтервалФона = ДиаграммаГанта.ИнтервалыФона.Добавить(НачалоДня(ТекДата)+3600*12+40*60,НачалоДня(ТекДата)+3600*16+40*60);
	ИнтервалФона.Цвет = WebЦвета.Бежевый;
	ТекДата = ТекДата + 3600*24;
	КонецЦикла;
		Если ЕдиницаИзмерения = 0 Тогда
		ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.ВсеДанные;
		ИначеЕсли ЕдиницаИзмерения = 1 Тогда
		ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
		ДиаграммаГанта.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Минута;
		ИначеЕсли ЕдиницаИзмерения = 2 Тогда
		ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
		ДиаграммаГанта.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Час;
		Иначе
		ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
		ДиаграммаГанта.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.День;
		КонецЕсли;
			Если Кратность = 0 Тогда
			Кратность = 1;
			КонецЕсли;
ДиаграммаГанта.КратностьПериодическогоВарианта = Кратность;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Документ") <> Неопределено Тогда
	Документ = Параметры.Документ;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура КратностьПриИзменении(Элемент)
КратностьПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КратностьПриИзмененииНаСервере()
ДиаграммаГанта.КратностьПериодическогоВарианта = Кратность;
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
ЕдиницаИзмеренияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЕдиницаИзмеренияПриИзмененииНаСервере()
	Если ЕдиницаИзмерения = 0 Тогда
	ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.ВсеДанные;
	ИначеЕсли ЕдиницаИзмерения = 1 Тогда
	ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
	ДиаграммаГанта.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Минута;
	ИначеЕсли ЕдиницаИзмерения = 2 Тогда
	ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
	ДиаграммаГанта.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Час;
	ИначеЕсли ЕдиницаИзмерения = 3 Тогда
	ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
	ДиаграммаГанта.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.День;
	КонецЕсли; 	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не Документ.Пустая() Тогда
	МТКПриИзмененииНаСервере(Документ);
	КонецЕсли; 
КонецПроцедуры
