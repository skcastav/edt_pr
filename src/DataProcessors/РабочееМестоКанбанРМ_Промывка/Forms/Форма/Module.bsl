
&НаСервере
Процедура ПриСозданииНаСервере()
Объект.Исполнитель =  ПараметрыСеанса.Пользователь;
КанбанУПЭА_РМ = Справочники.ВидыКанбанов.НайтиПоНаименованию("Канбан УПЭА РМ",Истина);
Выборка = Справочники.РабочиеМестаЛинеек.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ЭтоГруппа Тогда
		Продолжить;		
		КонецЕсли;
			Если Найти(Выборка.Наименование,"Промывка") > 0 Тогда
				Если Выборка.Линейка.ВидЛинейки = Перечисления.ВидыЛинеек.Канбан Тогда
					Если ОбщийМодульВызовСервера.КанбанПринадлежитЛинейкеПоВидуКанбана(Выборка.Линейка,КанбанУПЭА_РМ) Тогда
					СписокРабочихМест.Добавить(Выборка.Ссылка);
					КонецЕсли; 
				КонецЕсли; 
			КонецЕсли; 	
	КонецЦикла;
		Если СписокРабочихМест.Количество() > 0 Тогда
			Если Не МожноРаботатьВАРМ() Тогда
			Возврат;
			КонецЕсли;
		ПолучитьДанныеПоПромывкеНаСервере();
			Если Объект.ИнтервалОбновления > 0 Тогда
			ПодключитьОбработчикОжидания("ПолучитьДанныеПоПромывке", Объект.ИнтервалОбновления*60);
			КонецЕсли;
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаСервере
Функция МожноРаботатьВАРМ()
	Если ОбщийМодульВызовСервера.МожноВыполнить(СписокРабочихМест[0].Значение.Линейка) Тогда	
	Возврат(Истина);
	Иначе
	СписокРабочихМест.Очистить();
	Сообщить("Работа АРМ запрещена в этой базе!");
	Возврат(Ложь);
	КонецЕсли;
КонецФункции 

&НаСервере
Функция ПолучитьКоличествоВБраке(ПЗ)
Запрос = Новый Запрос;

Количество = 0;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	РемонтнаяКарта.КоличествоНеремонтопригодных КАК КоличествоНеремонтопригодных
	|ИЗ
	|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
	|ГДЕ
	|	РемонтнаяКарта.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", ПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Количество = Количество + ВыборкаДетальныеЗаписи.КоличествоНеремонтопригодных;
	КонецЦикла;
Возврат(Количество);
КонецФункции

&НаСервере
Процедура ПолучитьДанныеПоПромывкеНаСервере()
Объект.ТаблицаПЗ.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Период КАК Период
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто В(&СписокРабочихМест)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = &ДатаОкончания
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
Запрос.УстановитьПараметр("СписокРабочихМест",СписокРабочихМест);
Запрос.УстановитьПараметр("ДатаОкончания",Дата(1,1,1));
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = Объект.ТаблицаПЗ.Добавить();
	ТЧ.РабочееМесто = ВыборкаДетальныеЗаписи.РабочееМесто;
	ТЧ.ПроизводственноеЗадание = ВыборкаДетальныеЗаписи.ПЗ;
	ТЧ.ДатаПередачи = ВыборкаДетальныеЗаписи.Период;
	ТЧ.ДатаНачала = ВыборкаДетальныеЗаписи.ДатаНачала;
	ТЧ.КоличествоБрак = ПолучитьКоличествоВБраке(ВыборкаДетальныеЗаписи.ПЗ);
	КонецЦикла;
Объект.ТаблицаПЗ.Сортировать("ДатаПередачи");
КонецПроцедуры
 
&НаКлиенте
Процедура ПолучитьДанныеПоПромывке() Экспорт
ПолучитьДанныеПоПромывкеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
ПолучитьДанныеПоПромывкеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПринятьНаПромывкуНаСервере(Стр)
ТЧ = Объект.ТаблицаПЗ.НайтиПоИдентификатору(Стр);
	Если ЗначениеЗаполнено(ТЧ.ДатаНачала) Тогда
	Сообщить("Выбранное производственное задание уже принято на промывку!");
	Возврат;
	КонецЕсли; 
ДатаНачала = ТекущаяДата();
	Попытка
	Парам = Новый Структура("РабочееМесто,Исполнитель,ДатаНачала",ТЧ.РабочееМесто,Объект.Исполнитель,ДатаНачала);	
	ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(ТЧ.ПроизводственноеЗадание,Парам);
	ТЧ.ДатаНачала = ДатаНачала;
	Исключение
	Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПринятьНаПромывку(Команда)
	Если Элементы.ТаблицаПЗ.ТекущаяСтрока <> Неопределено Тогда
	ПринятьНаПромывкуНаСервере(Элементы.ТаблицаПЗ.ТекущаяСтрока);	
	Иначе
	Сообщить("Выберите производственное задание!");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьСледующееРабочееМесто(РабочееМесто)
Выборка = Справочники.РабочиеМестаЛинеек.Выбрать(,,Новый Структура("Линейка",РабочееМесто.Линейка),"Код");
флНайденоТекущееРМ = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не Выборка.Авторизовано Тогда
		Продолжить;
		КонецЕсли; 
			Если флНайденоТекущееРМ Тогда
			Возврат(Выборка.Ссылка);
			Иначе
				Если Выборка.Ссылка = РабочееМесто Тогда
				флНайденоТекущееРМ = Истина;
				КонецЕсли; 
			КонецЕсли; 
	КонецЦикла;
Возврат(Справочники.РабочиеМестаЛинеек.ПустаяСсылка()); 	
КонецФункции

&НаСервере
Функция ЗавершитьНаСервере(Стр)
ТЧ = Объект.ТаблицаПЗ.НайтиПоИдентификатору(Стр);
ПЗ = ТЧ.ПроизводственноеЗадание;
ДатаОкончания = ТекущаяДата();
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;	
	НаборЗаписей = РегистрыСведений.ЭтапыПроизводственныхЗаданий.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПЗ.Установить(ПЗ);
	НаборЗаписей.Прочитать();
	    Для Каждого Запись Из НаборЗаписей Цикл 
			Если Запись.РабочееМесто = ТЧ.РабочееМесто Тогда
			Запись.ДатаОкончания = ДатаОкончания;
			КонецЕсли;  
	    КонецЦикла;
			Если ПЗ.Изделие.Промывка = 1 Тогда	
			РабочееМестоДомонтажа = ПолучитьСледующееРабочееМесто(ТЧ.РабочееМесто);
				Если РабочееМестоДомонтажа.Пустая() Тогда	
				Сообщить("Не найдено рабочее место после промывки!");
				ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
				Возврат(Ложь);			
				КонецЕсли; 
			ЭПЗ = НаборЗаписей.Добавить();
			ЭПЗ.Период = ДатаОкончания;
			ЭПЗ.ПЗ = ПЗ; 
			ЭПЗ.Линейка = ПЗ.Линейка;
			ЭПЗ.Изделие = ПЗ.Изделие;
			ЭПЗ.Количество = ПЗ.ДокументОснование.Количество;
			ЭПЗ.РабочееМесто = РабочееМестоДомонтажа;
			Иначе
				Если Не ОбщийМодульСозданиеДокументов.СоздатьВыпускПродукцииКанбан(ПЗ,ДатаОкончания,ПЗ.Количество - ТЧ.КоличествоБрак) Тогда
				Сообщить("Документ выпуска по ПЗ "+ПЗ.Номер+" не создан!");
				ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
				Возврат(Ложь);
				КонецЕсли;
					Если ТЧ.КоличествоБрак > 0 Тогда
						Если Не ОбщийМодульСозданиеДокументов.СоздатьВыпускПродукцииКанбан(ПЗ,ДатаОкончания,ТЧ.КоличествоБрак,Истина) Тогда
						Сообщить("Документ выпуска в брак по ПЗ "+ПЗ.Номер+" не создан!");
						ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
						Возврат("");
						КонецЕсли;
					КонецЕсли;
			КонецЕсли;
	НаборЗаписей.Записать(Истина);
	Объект.ТаблицаПЗ.Удалить(ТЧ);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;	
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина);
КонецФункции

&НаКлиенте
Процедура Завершить(Команда)
	Если Элементы.ТаблицаПЗ.ТекущаяСтрока <> Неопределено Тогда
		Если ЗначениеЗаполнено(Элементы.ТаблицаПЗ.ТекущиеДанные.ДатаНачала) Тогда
		ОтключитьОбработчикОжидания("ПолучитьДанныеПоПромывке");
		ЗавершитьНаСервере(Элементы.ТаблицаПЗ.ТекущаяСтрока);
			Если Объект.ИнтервалОбновления > 0 Тогда
			ПодключитьОбработчикОжидания("ПолучитьДанныеПоПромывке", Объект.ИнтервалОбновления*60);
			КонецЕсли;
		Иначе
	    Сообщить("Производственное задание не принято на промывку!");
		КонецЕсли; 
	Иначе
	Сообщить("Выберите производственное задание!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалОбновленияПриИзменении(Элемент)
ОтключитьОбработчикОжидания("ПолучитьДанныеПоПромывке");
	Если Объект.ИнтервалОбновления > 0 Тогда
	ПодключитьОбработчикОжидания("ПолучитьДанныеПоПромывке", Объект.ИнтервалОбновления*60);
	КонецЕсли;
КонецПроцедуры
