
&НаСервере
Функция ПолучитьКоличествоЗапусков(Продукция,СчётЗаказ)	
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетаЗаказыОбороты.Регистратор
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПроизводство.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК СчетаЗаказыОбороты
	|ГДЕ
	|	СчетаЗаказыОбороты.КоличествоРасход > 0
	|	И СчетаЗаказыОбороты.Продукция = &Продукция
	|	И СчетаЗаказыОбороты.Документ = &Документ";
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ТекущаяДата()));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(ТекущаяДата()));
Запрос.УстановитьПараметр("Продукция", Продукция);
Запрос.УстановитьПараметр("Документ", СчётЗаказ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
Возврат(ВыборкаДетальныеЗаписи.Количество());
КонецФункции

&НаСервере
Процедура ЛинейкаПриИзмененииНаСервере()
ТаблицаСчетовЗаказов.Очистить();
ПаспортЛинейки = РегистрыСведений.ПаспортЛинейки.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("Линейка",Объект.Линейка));
ВыпускЗаДеньРасчётный = ПаспортЛинейки.ВыпускЗаДеньРасчётный; 
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыНаПроизводство.Документ,
	|	ЗаказыНаПроизводство.Продукция,
	|	ЗаказыНаПроизводство.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПроизводство.Остатки КАК ЗаказыНаПроизводство
	|ГДЕ
	|	ЗаказыНаПроизводство.Продукция.Линейка = &Линейка";
Запрос.УстановитьПараметр("Линейка", Объект.Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.КоличествоОстаток > 0 Тогда
		ТЧ = ТаблицаСчетовЗаказов.Добавить();
		ТЧ.ЗаказНаПроизводство = ВыборкаДетальныеЗаписи.Документ;
		ТЧ.Продукция = ВыборкаДетальныеЗаписи.Продукция;
		ТЧ.Товар = ВыборкаДетальныеЗаписи.Продукция.Товар;
		ТЧ.Количество = ВыборкаДетальныеЗаписи.КоличествоОстаток;
		ТЧ.КоличествоЗапусков = ПолучитьКоличествоЗапусков(ВыборкаДетальныеЗаписи.Продукция,ВыборкаДетальныеЗаписи.Документ);
		ТЧ.ЛьготнаяОчередь = Не ПроверитьНаЛО(ТЧ.Продукция);
		КонецЕсли; 
	КонецЦикла;
ТаблицаСчетовЗаказов.Сортировать("КоличествоЗапусков,ЗаказНаПроизводство,Продукция");
ТаблицаМТК.Очистить();
Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Ссылка
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	//|	МаршрутнаяКарта.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	МаршрутнаяКарта.Линейка = &Линейка
	|	И МаршрутнаяКарта.Статус <> 3
	|
	|УПОРЯДОЧИТЬ ПО
	|	МаршрутнаяКарта.НомерОчереди";
//Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ТекущаяДата()));
//Запрос.УстановитьПараметр("ДатаКон", КонецДня(ТекущаяДата()));
Запрос.УстановитьПараметр("Линейка", Объект.Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаМТК.Добавить();
	ТЧ.МТК = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЛинейкаПриИзменении(Элемент)
ЛинейкаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Функция ПроверитьНаЛО(Продукция)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛьготнаяОчередь.ПЗ
	|ИЗ
	|	РегистрСведений.ЛьготнаяОчередь КАК ЛьготнаяОчередь
	|ГДЕ
	|	ЛьготнаяОчередь.Линейка = &Линейка
	|	И ЛьготнаяОчередь.Изделие = &Изделие
	|	И ЛьготнаяОчередь.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
Запрос.УстановитьПараметр("Линейка",Объект.Линейка);
Запрос.УстановитьПараметр("Изделие",Продукция);
РезультатЗапроса = Запрос.Выполнить();
Возврат(Не РезультатЗапроса.Пустой());
КонецФункции

&НаСервере
Функция СоздатьМТКНаСервере()
	Для каждого ТЧ Из ТаблицаСчетовЗаказов Цикл
		Если ТЧ.Количество <= ТЧ.Продукция.Товар.КрупностьЗаказа Тогда
		Количество = ТЧ.Количество;
		Иначе		
		Количество = ТЧ.Продукция.Товар.КрупностьЗаказа;
		КонецЕсли;
	ТЧ.ЛьготнаяОчередь = ПроверитьНаЛО(ТЧ.Продукция);
			Если Не ТЧ.ЛьготнаяОчередь Тогда
			МТК = ОбщийМодульСозданиеДокументов.СоздатьМТК(Объект.Линейка,ТЧ.Продукция,Количество,Справочники.СтандартныеКомментарии.ПустаяСсылка(),Справочники.Проекты.ПустаяСсылка(),Ложь,Истина,"",,,ТЧ.ЗаказНаПроизводство,ТЧ.ЗаказНаПроизводство.Контрагент.ОсобаяОтметка);
			Возврат(МТК);
			Иначе
			Продолжить;
			КонецЕсли;
	КонецЦикла;
Возврат(Документы.МаршрутнаяКарта.ПустаяСсылка());
КонецФункции

&НаКлиенте
Процедура СоздатьМТК(Команда)
МТК = СоздатьМТКНаСервере();
	Если Не МТК.Пустая() Тогда
	ЛинейкаПриИзмененииНаСервере();
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Линейка") Тогда
	Объект.Линейка = Параметры.Линейка;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не Объект.Линейка.Пустая() Тогда
	ПоказатьОповещениеПользователя("Обработка...",,"Обработка очереди счёт-заказов...",БиблиотекаКартинок.Пользователь);
	ЛинейкаПриИзмененииНаСервере();
	МТК = СоздатьМТКНаСервере();
		Если Не МТК.Пустая() Тогда
		ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Создана МТК по счёт-заказу!",БиблиотекаКартинок.Пользователь);
		ЭтаФорма.Закрыть(Истина);
		Иначе
		ЭтаФорма.Закрыть(Ложь);
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
ЛинейкаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура УдалитьМТКНаСервере(Стр)
ТЧ = ТаблицаМТК.НайтиПоИдентификатору(Стр);
МТКОбъект = ТЧ.МТК.ПолучитьОбъект();
МТКОбъект.Удалить();
ТаблицаМТК.Удалить(ТЧ);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьМТК(Команда)
УдалитьМТКНаСервере(Элементы.ТаблицаМТК.ТекущаяСтрока);
КонецПроцедуры
