
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
СортироватьПо = 1;
	Если Параметры.Свойство("Линейка") Тогда
	Объект.Линейка = Параметры.Линейка;	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;
Элементы.Номенклатура.ИзменятьПорядокСтрок = ОбщийМодульВызовСервера.ДоступностьРоли("Планирование"); 
Элементы.НоменклатураПереместитьВПозицию.Доступность = ОбщийМодульВызовСервера.ДоступностьРоли("Планирование");
	Если ОбщийМодульВызовСервера.ДоступностьРоли("Администратор") или ОбщийМодульВызовСервера.ДоступностьРоли("ГлавныйДиспетчер") Тогда
	Элементы.НоменклатураПереместитьВНачалоОчереди.Доступность = Истина;
	Иначе	
	Элементы.НоменклатураПереместитьВНачалоОчереди.Доступность = Ложь;
	КонецЕсли;
		Если Не Объект.Линейка.Пустая() Тогда
		ЛинейкаПриИзменении(Неопределено);
		КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаКлиенте
Процедура ЛинейкаПриИзменении(Элемент)
Элементы.ПечатьQRКодовКанбан.Видимость = ЛинейкаКанбан();
Элементы.ПечатьМТК_Деталь.Видимость = ЛинейкаКанбан();
Элементы.ДобавитьПоQRКоду.Видимость = ЛинейкаКанбан();
Элементы.НоменклатураСчёт.Видимость = Не ЛинейкаКанбан();
Элементы.НоменклатураСтандартныйКомментарий.Видимость = Не ЛинейкаКанбан();
Элементы.НоменклатураПроект.Видимость = Не ЛинейкаКанбан();
Элементы.НоменклатураМестоХраненияПотребитель.Видимость = ЛинейкаКанбан();
Элементы.НоменклатураНомерЯчейки.Видимость = ЛинейкаКанбан();
Элементы.НоменклатураИзменитьКоличествоВМТК.Видимость = ЛинейкаКанбан();
Элементы.НоменклатураУдалитьНезапущенныеПЗВМТК.Видимость = Не ЛинейкаКанбан();
Элементы.НоменклатураВыбратьДругоеИзделиеВМТК.Видимость = Не ЛинейкаКанбан();
Элементы.ПерестроитьОчередь.Доступность = ЕстьНумераторОчереди();
	Если (ОбщийМодульВызовСервера.ДоступностьРоли("Администратор"))или(ОбщийМодульВызовСервера.ДоступностьРоли("Мастер"))или(ОбщийМодульВызовСервера.ДоступностьРоли("ГлавныйДиспетчер")) Тогда
	Элементы.СоздатьМТКБезОформленияПустыхКанбанов.Видимость = ОформлятьПустыеКанбаны();
	КонецЕсли; 
Состояние("Обработка...",,"Загрузка незавершённых маршрутных карт...");
ЗагрузитьИзделияВПроизводствеНаСервере();
ОбновитьТаблицуСтандартныхКомментариев();
СортироватьПоПриИзменении(Неопределено); 
КонецПроцедуры 

&НаКлиенте
Процедура Обновить(Команда)
ЛинейкаПриИзменении(Неопределено);
КонецПроцедуры

&НаСервере
Процедура РаскрытьНаУзлы(ТаблицаУзлов,ЭтапСпецификации,КолУзла)
ВыборкаНР = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н(ЭтапСпецификации,ТекущаяДата());
	Пока ВыборкаНР.Следующий() Цикл
	БазовоеКоличество = ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения);
		Если (ВыборкаНР.ВидЭлемента <> Перечисления.ВидыЭлементовНормРасходов.Основа)и
			 (ВыборкаНР.ВидЭлемента <> Перечисления.ВидыЭлементовНормРасходов.Набор) Тогда
			Если ЗначениеЗаполнено(ВыборкаНР.Элемент.Канбан) Тогда	
				Если ВыборкаНР.Элемент.Канбан.Служебный Тогда
				ТЧ = ТаблицаУзлов.Добавить();
				ТЧ.Узел = ВыборкаНР.Элемент;
				ТЧ.Количество = БазовоеКоличество*КолУзла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	РаскрытьНаУзлы(ТаблицаУзлов,ВыборкаНР.Элемент,БазовоеКоличество*КолУзла);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПечатьСборочныеЕдиницыЗаказанныхДатчиков(СписокМТК,ДатаНачала = Неопределено,ДатаОкончания = Неопределено)
ТабДок = Новый ТабличныйДокумент;
ТаблицаУзлов = Новый ТаблицаЗначений;

ТаблицаУзлов.Колонки.Добавить("Узел");
ТаблицаУзлов.Колонки.Добавить("Количество");

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("ЗаказанныеДатчики");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблУзел = Макет.ПолучитьОбласть("Узел");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ТабДок.Вывести(ОблШапка);
	Для каждого МТК Из СписокМТК Цикл
		Если ДатаНачала <> Неопределено Тогда
			Если Найти(МТК.Значение.СтандартныйКомментарий.Наименование,"Заказанные датчики от клиентов") > 0 Тогда
				Если (МТК.Значение.Дата < ДатаНачала) или ((МТК.Значение.Дата > ДатаОкончания)) Тогда
				Продолжить;
				КонецЕсли;
			Иначе
			Продолжить; 
			КонецЕсли; 
		КонецЕсли; 
	ТаблицаУзлов.Очистить();
	РаскрытьНаУзлы(ТаблицаУзлов,МТК.Значение.Номенклатура,МТК.Значение.Количество);
		Для каждого ТЧ Из ТаблицаУзлов Цикл
		ОблУзел.Параметры.Линейка = МТК.Значение.Линейка;	
		ОблУзел.Параметры.Изделие = СокрЛП(МТК.Значение.Номенклатура.Наименование);
		ОблУзел.Параметры.Количество = МТК.Значение.Количество;
		ОблУзел.Параметры.НомерМТК = МТК.Значение.Номер;
		ОблУзел.Параметры.Узел = СокрЛП(ТЧ.Узел.Наименование);
		ОблУзел.Параметры.Количество = ТЧ.Количество;
		ТабДок.Вывести(ОблУзел);			
		КонецЦикла;		
	КонецЦикла;
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 1; 
Возврат(ТабДок);
КонецФункции

&НаСервере
Процедура СоздатьМТКНаСервере(РазрешитьОформлятьПустыеКанбаны)
	Для каждого ТЧ из Объект.Номенклатура Цикл
		Если ТЧ.МТК.Пустая() Тогда
			Если ТЧ.Количество > 0 Тогда		
				Если Объект.Линейка.ВидЛинейки <> Перечисления.ВидыЛинеек.Канбан Тогда
					Если ЗначениеЗаполнено(ТЧ.СтандартныйКомментарий) Тогда
					МТК = ОбщийМодульСозданиеДокументов.СоздатьМТК(Объект.Линейка,ТЧ.Спецификация,ТЧ.Количество,ТЧ.СтандартныйКомментарий,ТЧ.Проект,Ложь,Истина,"",ТЧ.Счёт,ТЧ.ДатаОтгрузки);
					Иначе
					МТК = Документы.МаршрутнаяКарта.ПустаяСсылка();
					Сообщить(СокрЛП(ТЧ.Спецификация.Наименование)+" - отсутствует стандартный комментарий. МТК не создана!");
					КонецЕсли;
				Иначе
				Сообщить("Канбаны оформляются на странице Канбанов!");
				Возврат;
				КонецЕсли; 
					Если Не МТК.Пустая() Тогда
					ТЧ.МТК = МТК;
					ТЧ.НомерОчереди = МТК.НомерОчереди;
					ТЧ.КоличествоНевып = МТК.Количество;
					КонецЕсли;			
			КонецЕсли; 		
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМТК(Команда)
СоздатьМТКНаСервере(Истина);
	Если ПечатьСборочныхЕдиниц Тогда
	СписокМТК = Новый СписокЗначений;

		Для каждого ТЧ Из Объект.Номенклатура Цикл	
			Если ЗначениеЗаполнено(ТЧ.МТК) Тогда
			СписокМТК.Добавить(ТЧ.МТК);
			КонецЕсли; 		
		КонецЦикла;	
	ТабДок = ПечатьСборочныеЕдиницыЗаказанныхДатчиков(СписокМТК);
	ТабДок.Показать("Сборочные единицы заказанных датчиков");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМТКБезОформленияПустыхКанбанов(Команда)
	Если Вопрос("Вы действительно хотите создать МТК
				|без оформления пустых канбанов?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
	СоздатьМТКНаСервере(Ложь);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура СоздатьМТКДляВсехЛинеекНаСервере()
	Для каждого ТЧ из ТаблицаЗаказных Цикл
		Если ТЧ.МТК.Пустая() Тогда
			Если Не ТЧ.Спецификация.Пустая() Тогда
				Если ТЧ.Количество > 0 Тогда
					Если ТЧ.Статус <> Перечисления.СтатусыСпецификаций.ОНР Тогда
						Если Не ТЧ.Линейка.Пустая() Тогда
							Если Не ТЧ.Линейка.Проектная Тогда
								Если ЗначениеЗаполнено(ТЧ.СтандартныйКомментарий) Тогда
								МТК = ОбщийМодульСозданиеДокументов.СоздатьМТК(ТЧ.Линейка,ТЧ.Спецификация,ТЧ.Количество,ТЧ.СтандартныйКомментарий,Справочники.Проекты.ПустаяСсылка(),Ложь,Истина,"",ТЧ.Счёт,ТЧ.ДатаОтгрузки);
								Иначе
								МТК = Документы.МаршрутнаяКарта.ПустаяСсылка();
								Сообщить(СокрЛП(ТЧ.Спецификация.Наименование)+" - отсутствует стандартный комментарий. МТК не создана!");
								КонецЕсли;							
									Если Не МТК.Пустая() Тогда
									ТЧ.МТК = МТК;
									КонецЕсли;
							КонецЕсли; 
						КонецЕсли; 	
					КонецЕсли;					
				КонецЕсли;
			КонецЕсли; 		
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМТКДляВсехЛинеек(Команда)
СоздатьМТКДляВсехЛинеекНаСервере();
	Если ПечатьСборочныхЕдиниц Тогда
	СписокМТК = Новый СписокЗначений;

		Для каждого ТЧ Из ТаблицаЗаказных Цикл	
			Если ЗначениеЗаполнено(ТЧ.МТК) Тогда
			СписокМТК.Добавить(ТЧ.МТК);
			КонецЕсли; 		
		КонецЦикла;	
	ТабДок = ПечатьСборочныеЕдиницыЗаказанныхДатчиков(СписокМТК);
	ТабДок.Показать("Сборочные единицы заказанных датчиков");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция НайтиСпецификациюНаСервере(Наименование)
Номен = Справочники.Номенклатура.ПустаяСсылка();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка,
	|	СтатусыМПЗСрезПоследних.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.СтатусыМПЗ.СрезПоследних(&НаДату, ) КАК СтатусыМПЗСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО СтатусыМПЗСрезПоследних.МПЗ = Номенклатура.Ссылка
	|ГДЕ
	|	Номенклатура.Товар.Наименование = &Наименование
	|	И СтатусыМПЗСрезПоследних.Статус <> &Статус
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтатусыМПЗСрезПоследних.Статус.Порядок УБЫВ";		    
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("Наименование", СокрЛП(Наименование));
Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыСпецификаций.Запрещённая);
РезультатЗапроса = Запрос.Выполнить();		
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Ссылка.Линейка.ВидЛинейки = Перечисления.ВидыЛинеек.Переупаковка Тогда
			Если Найти(ВыборкаДетальныеЗаписи.Ссылка.Наименование,"_Х") > 0 Тогда
			Возврат(ВыборкаДетальныеЗаписи.Ссылка);
			КонецЕсли; 
		Иначе
			Если ВыборкаДетальныеЗаписи.Статус = Перечисления.СтатусыСпецификаций.ДоИсчерпанияЗапасов Тогда
			Возврат(ВыборкаДетальныеЗаписи.Ссылка);
			Иначе 
			Номен = ВыборкаДетальныеЗаписи.Ссылка;
			КонецЕсли;
		КонецЕсли;  
	КонецЦикла;
Возврат(Номен);
КонецФункции 

&НаСервере
Процедура ЗагрузитьИзделияВПроизводствеНаСервере()
Объект.Номенклатура.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Ссылка,
	|	МаршрутнаяКарта.НомерОчереди КАК НомерОчереди,
	|	МаршрутнаяКарта.Номенклатура,
	|	МаршрутнаяКарта.Количество,
	|	МаршрутнаяКарта.Счёт,
	|	МаршрутнаяКарта.СтандартныйКомментарий,
	|	МаршрутнаяКарта.МестоХраненияПотребитель,
	|	МаршрутнаяКарта.ДатаОтгрузки,
	|	МаршрутнаяКарта.НомерЯчейки
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.Линейка = &Линейка
	|	И МаршрутнаяКарта.Статус <> 3
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерОчереди";
Запрос.УстановитьПараметр("Линейка",Объект.Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = Объект.Номенклатура.Добавить();
	ТЧ.Линейка = Объект.Линейка;
	ТЧ.МТК = ВыборкаДетальныеЗаписи.Ссылка;
	ТЧ.ДатаМТК = ВыборкаДетальныеЗаписи.Ссылка.Дата;
	ТЧ.СтатусМТК = ВыборкаДетальныеЗаписи.Ссылка.Статус;
	ТЧ.Наименование = ВыборкаДетальныеЗаписи.Номенклатура.Товар.Наименование;
	ТЧ.Спецификация = ВыборкаДетальныеЗаписи.Номенклатура;
	ТЧ.Статус = ПолучитьСтатус(ВыборкаДетальныеЗаписи.Номенклатура);
	ТЧ.Количество = ВыборкаДетальныеЗаписи.Количество;
	ТЧ.КоличествоНевып = ОбщийМодульВызовСервера.ПолучитьНезавершённоеКоличество(ТекущаяДата(),ВыборкаДетальныеЗаписи.Ссылка);	
	ТЧ.Счёт = ВыборкаДетальныеЗаписи.Счёт;
	ТЧ.ДатаОтгрузки = ВыборкаДетальныеЗаписи.ДатаОтгрузки;
	ТЧ.НомерОчереди = ВыборкаДетальныеЗаписи.НомерОчереди;
	ТЧ.СтандартныйКомментарий = ВыборкаДетальныеЗаписи.СтандартныйКомментарий;
	ТЧ.Проект = ВыборкаДетальныеЗаписи.Ссылка.Проект;
	ТЧ.МестоХраненияПотребитель = ВыборкаДетальныеЗаписи.МестоХраненияПотребитель;
	ТЧ.НомерЯчейки = ВыборкаДетальныеЗаписи.НомерЯчейки;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтрокуНоменклатуры(Наименование,Линейка,Количество,Счёт,Заказной,ДатаОтгрузки)
СтдКомм = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Заказанные приборы от клиентов",Истина);
Спецификация = НайтиСпецификациюНаСервере(Наименование);
	Если Не Спецификация.Пустая() Тогда
		Если Спецификация.Линейка <> Объект.Линейка Тогда
		Сообщить(Наименование + " - должен производиться на другой линейке!");
		Возврат;
		КонецЕсли;	
	КонецЕсли;
Индекс = 0; 	
	Если Заказной Тогда
		Для каждого ТЧ_Ном Из Объект.Номенклатура Цикл
			Если ТЧ_Ном.СтандартныйКомментарий = СтдКомм Тогда
			Индекс = Объект.Номенклатура.Индекс(ТЧ_Ном);
			КонецЕсли; 			
		КонецЦикла;
			Если Индекс = 0 Тогда
			ТЧ = Объект.Номенклатура.Добавить();
			Иначе	
			ТЧ = Объект.Номенклатура.Вставить(Индекс+1);
			КонецЕсли;  
	ТЧ.СтандартныйКомментарий = СтдКомм; 
	Иначе
	ТЧ = Объект.Номенклатура.Добавить();
	КонецЕсли;
ТЧ.Линейка = Линейка; 
ТЧ.Наименование = Наименование;
ТЧ.Количество = Количество;
ТЧ.Счёт = Счёт;
ТЧ.ДатаОтгрузки = ДатаОтгрузки;    
ТЧ.Спецификация = Спецификация;
ТЧ.Статус = ПолучитьСтатус(ТЧ.Спецификация);
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда,Заказной = Ложь,НомСтр = 0)
	Если Объект.Линейка.Пустая() Тогда
	Сообщить("Выберите линейку производства!");
	Возврат;
	КонецЕсли;  
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл c заказами");
	Если Результат <> Неопределено Тогда
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок;
	    Для к = 2 по КолСтрок Цикл
		Состояние("Обработка...",к*100/КолСтрок,"Загрузка заказов из файла..."); 
		Наименование = СокрЛП(ExcelЛист.Cells(к,1).Value);
		Линейка = ПолучитьЛинейку(СокрЛП(ExcelЛист.Cells(к,2).Value));
		Количество = Число(ExcelЛист.Cells(к,3).Value);
		Счёт = СокрЛП(ExcelЛист.Cells(к,4).Value);
			Если ЗначениеЗаполнено(ExcelЛист.Cells(к,7).Value) Тогда
			Д = ExcelЛист.Cells(к,7).Value;
			ДатаОтгрузки = Дата(Число(Сред(Д,7,4)),Число(Сред(Д,4,2)),Число(Сред(Д,1,2)));			
			Иначе	
			ДатаОтгрузки = Дата(1,1,1);
			КонецЕсли; 
				Если Не Линейка.Пустая() Тогда
					Если Линейка = Объект.Линейка Тогда
					ДобавитьСтрокуНоменклатуры(Наименование,Линейка,Количество,Счёт,Заказной,ДатаОтгрузки);
					Иначе	
					Сообщить("Линейка "+СокрЛП(ExcelЛист.Cells(к, 2).Value)+" не соответствует выбранной!");
					КонецЕсли;	
				Иначе
				Сообщить("Линейка "+СокрЛП(ExcelЛист.Cells(к, 2).Value)+" не найдена!");
				КонецЕсли;
	    КонецЦикла;
	Результат.Excel.Quit();
	КонецЕсли;
ОбновитьТаблицуСтандартныхКомментариев();
КонецПроцедуры

&НаСервере
Функция НайтиПоследнийЗаказной()
НомСтр = 0;
	Для каждого ТЧ Из Объект.Номенклатура Цикл
		Если Найти(ТЧ.СтандартныйКомментарий.Наименование,"Заказные") > 0 Тогда
		НомСтр = ТЧ.ПолучитьИдентификатор();
		КонецЕсли; 
	КонецЦикла; 
Возврат(НомСтр);
КонецФункции 

&НаКлиенте
Процедура ЗагрузитьЗаказанные(Команда)
НомСтр = НайтиПоследнийЗаказной();
Загрузить(Неопределено,Истина,НомСтр);
КонецПроцедуры

&НаСервере
Функция ПолучитьСтандартныйКомментарий(ОсобаяОтметка)
	Если ЗначениеЗаполнено(ОсобаяОтметка) Тогда
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтандартныеКомментарии.Ссылка
		|ИЗ
		|	Справочник.СтандартныеКомментарии КАК СтандартныеКомментарии
		|ГДЕ
		|	СтандартныеКомментарии.ОсобаяОтметка = &ОсобаяОтметка";
	Запрос.УстановитьПараметр("ОсобаяОтметка", ОсобаяОтметка);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
	Иначе	
	Возврат(Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Заказанные изделия для клиентов",Истина));
	КонецЕсли; 
КонецФункции 

&НаСервере
Процедура ДобавитьНоменклатуруДляВсехЛинеек()
Запрос = Новый Запрос;

ТаблицаЗагрузки.Сортировать("ДатаОтгрузки,Линейка,Наименование");
	Для каждого ТЧ Из ТаблицаЗагрузки Цикл
	Спецификация = Справочники.Номенклатура.ПустаяСсылка();
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Ссылка,
		|	Номенклатура.Наименование КАК Наименование,
		|	СтатусыМПЗСрезПоследних.Статус КАК Статус
		|ИЗ
		|	РегистрСведений.СтатусыМПЗ.СрезПоследних(&НаДату, ) КАК СтатусыМПЗСрезПоследних
		|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО СтатусыМПЗСрезПоследних.МПЗ = Номенклатура.Ссылка
		|ГДЕ
		|	Номенклатура.Товар.Наименование = &Товар
		|	И СтатусыМПЗСрезПоследних.Статус <> &Статус
		|	И Номенклатура.Линейка <> &ПустаяЛинейка";
	Запрос.УстановитьПараметр("Товар", ТЧ.Наименование);
	Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыСпецификаций.Запрещённая);
	Запрос.УстановитьПараметр("ПустаяЛинейка", Справочники.Линейки.ПустаяСсылка());
	Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если Найти(ВыборкаДетальныеЗаписи.Наименование,"УП-") = 0 Тогда
			Продолжить;
			КонецЕсли;
				Если Найти(ВыборкаДетальныеЗаписи.Наименование,"_КА") > 0 Тогда
				Продолжить;
				КонецЕсли; 
					Если ?(Найти(ТЧ.Линейка,"Б17Х")>0,Истина,Ложь) Тогда
						Если Найти(ВыборкаДетальныеЗаписи.Наименование,"_Х") > 0 Тогда
						Спецификация = ВыборкаДетальныеЗаписи.Ссылка;
						Прервать;
						КонецЕсли; 
					Иначе	
						Если Найти(ВыборкаДетальныеЗаписи.Наименование,"_Х") = 0 Тогда
							Если ВыборкаДетальныеЗаписи.Статус = Перечисления.СтатусыСпецификаций.ДоИсчерпанияЗапасов Тогда
							Спецификация = ВыборкаДетальныеЗаписи.Ссылка;
							Прервать;
							Иначе 
							Спецификация = ВыборкаДетальныеЗаписи.Ссылка;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
		КонецЦикла;

		Если Не Спецификация.Пустая() Тогда
			Если Не Спецификация.Товар.НумераторГрупповойУпаковки.Пустая() Тогда
			КолВсего = ТЧ.Количество;
			КолМТК = Спецификация.Товар.НумераторГрупповойУпаковки.КоличествоВТаре;
				Пока КолВсего > КолМТК Цикл
				ТЧ_ТЗ = ТаблицаЗаказных.Добавить();
				ТЧ_ТЗ.Наименование = ТЧ.Наименование;
				ТЧ_ТЗ.Количество = КолМТК;
				ТЧ_ТЗ.Счёт = ТЧ.Счёт;
				ТЧ_ТЗ.ДатаОтгрузки = ТЧ.ДатаОтгрузки;
				ТЧ_ТЗ.Спецификация = Спецификация;
				ТЧ_ТЗ.Линейка = Спецификация.Линейка;
				ТЧ_ТЗ.Проектная = Спецификация.Линейка.Проектная;
				ТЧ_ТЗ.СтандартныйКомментарий = ПолучитьСтандартныйКомментарий(ТЧ.ОсобаяОтметка);
				ТЧ_ТЗ.ОсобаяОтметка = ТЧ.ОсобаяОтметка;
				ТЧ_ТЗ.Статус = ПолучитьСтатус(Спецификация);
				КолВсего = КолВсего - КолМТК;
				КонецЦикла; 
					Если КолВсего > 0 Тогда
					ТЧ_ТЗ = ТаблицаЗаказных.Добавить();
					ТЧ_ТЗ.Наименование = ТЧ.Наименование;
					ТЧ_ТЗ.Количество = КолВсего;
					ТЧ_ТЗ.Счёт = ТЧ.Счёт;
					ТЧ_ТЗ.Спецификация = Спецификация;
					ТЧ_ТЗ.Линейка = Спецификация.Линейка;
					ТЧ_ТЗ.Проектная = Спецификация.Линейка.Проектная;
					ТЧ_ТЗ.СтандартныйКомментарий = ПолучитьСтандартныйКомментарий(ТЧ.ОсобаяОтметка);;
					ТЧ_ТЗ.ОсобаяОтметка = ТЧ.ОсобаяОтметка;
					ТЧ_ТЗ.Статус = ПолучитьСтатус(Спецификация);
					КонецЕсли; 
			Иначе
			ТЧ_ТЗ = ТаблицаЗаказных.Добавить();
			ТЧ_ТЗ.Наименование = ТЧ.Наименование;
			ТЧ_ТЗ.Количество = ТЧ.Количество;
			ТЧ_ТЗ.Счёт = ТЧ.Счёт;
			ТЧ_ТЗ.ДатаОтгрузки = ТЧ.ДатаОтгрузки;
			ТЧ_ТЗ.Спецификация = Спецификация;
			ТЧ_ТЗ.Линейка = Спецификация.Линейка;
			ТЧ_ТЗ.Проектная = Спецификация.Линейка.Проектная;
			ТЧ_ТЗ.СтандартныйКомментарий = ПолучитьСтандартныйКомментарий(ТЧ.ОсобаяОтметка);;
			ТЧ_ТЗ.ОсобаяОтметка = ТЧ.ОсобаяОтметка;
			ТЧ_ТЗ.Статус = ПолучитьСтатус(Спецификация);
			Запрос = Новый Запрос;

			Запрос.Текст = 
				"ВЫБРАТЬ
				|	МаршрутнаяКарта.Ссылка
				|ИЗ
				|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
				|ГДЕ
				|	МаршрутнаяКарта.Номенклатура = &Номенклатура
				|	И МаршрутнаяКарта.Количество = &Количество
				|	И МаршрутнаяКарта.Счёт = &Счёт";
			Запрос.УстановитьПараметр("Количество", ТЧ.Количество);
			Запрос.УстановитьПараметр("Номенклатура", Спецификация);
			Запрос.УстановитьПараметр("Счёт", ТЧ.Счёт);
			РезультатЗапроса = Запрос.Выполнить();
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ТЧ_ТЗ.Проверка = Истина;
				КонецЦикла;
			КонецЕсли;		
		Иначе
		ТЧ_ТЗ = ТаблицаЗаказных.Добавить();
		ТЧ_ТЗ.Наименование = ТЧ.Наименование;
		ТЧ_ТЗ.Количество = ТЧ.Количество;
		ТЧ_ТЗ.Счёт = ТЧ.Счёт;
		ТЧ_ТЗ.СтандартныйКомментарий = ПолучитьСтандартныйКомментарий(ТЧ.ОсобаяОтметка);; 
		ТЧ_ТЗ.ОсобаяОтметка = ТЧ.ОсобаяОтметка;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьВТаблицуЗагрузки(Наименование,Линейка,Количество,Счёт,ОсобаяОтметка,ДатаОтгрузки)
ТЧ = ТаблицаЗагрузки.Добавить();
ТЧ.Наименование = Наименование;
ТЧ.Линейка = Линейка;
ТЧ.Количество = Количество;
ТЧ.Счёт = Счёт;
ТЧ.ОсобаяОтметка = ОсобаяОтметка;
	Если ЗначениеЗаполнено(ДатаОтгрузки) Тогда
	Д = ДатаОтгрузки;
	ТЧ.ДатаОтгрузки = Дата(Число(Сред(Д,7,4)),Число(Сред(Д,4,2)),Число(Сред(Д,1,2)));			
	Иначе	
	ТЧ.ДатаОтгрузки = Дата(1,1,1);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОчиститьТаблицуЗагрузки()
ТаблицаЗагрузки.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЗаказанныеДляВсехЛинеек(Команда)
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл c заказами для всех линеек");
	Если Результат <> Неопределено Тогда
	ОчиститьТаблицуЗагрузки();
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок; 
	    Для к = 2 по КолСтрок Цикл
		Состояние("Обработка...",к*100/КолСтрок,"Загрузка заказов для всех линеек из файла...");
		ДобавитьВТаблицуЗагрузки(СокрЛП(ExcelЛист.Cells(к,1).Value),СокрЛП(ExcelЛист.Cells(к,2).Value),Число(ExcelЛист.Cells(к,3).Value),СокрЛП(ExcelЛист.Cells(к,4).Value),СокрЛП(ExcelЛист.Cells(к,5).Value),ExcelЛист.Cells(к,7).Value);
	    КонецЦикла;
	Результат.Excel.Quit();
	КонецЕсли;
ДобавитьНоменклатуруДляВсехЛинеек(); 
КонецПроцедуры

&НаКлиенте
Процедура НазначитьВыделенным(Команда)
	Для каждого ТЧ из Элементы.Номенклатура.ВыделенныеСтроки Цикл
		Если Элементы.Номенклатура.ДанныеСтроки(ТЧ).МТК.Пустая() Тогда
		Элементы.Номенклатура.ДанныеСтроки(ТЧ).СтандартныйКомментарий = Объект.СтандартныйКомментарий;
		КонецЕсли; 
	КонецЦикла;
ОбновитьТаблицуСтандартныхКомментариев();
КонецПроцедуры

&НаСервере
Функция ПолучитьСтатусСпецификации(Спецификация)
Возврат(ПолучитьСтатус(Спецификация));
КонецФункции

&НаКлиенте
Процедура НоменклатураСпецификацияПриИзменении(Элемент)
Элементы.Номенклатура.ТекущиеДанные.Статус = ПолучитьСтатусСпецификации(Элементы.Номенклатура.ТекущиеДанные.Спецификация);
ОбновитьТаблицуСтандартныхКомментариев();
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуСтандартныхКомментариев()
Объект.ТаблицаСтандартныхКомментариев.Очистить();
	Для каждого ТЧ из Объект.Номенклатура Цикл
	Отбор = Новый Структура("СтандартныйКомментарий",ТЧ.СтандартныйКомментарий);
	Выборка = Объект.ТаблицаСтандартныхКомментариев.НайтиСтроки(Отбор);
		Если Выборка.Количество() = 0 Тогда
		ТЧ_ТСК = Объект.ТаблицаСтандартныхКомментариев.Добавить();
		ТЧ_ТСК.СтандартныйКомментарий = ТЧ.СтандартныйКомментарий;
			Если ТЧ.МТК.Пустая() Тогда
			ТЧ_ТСК.КолБезМТК = ТЧ.Количество;
			ТЧ_ТСК.КолБезМТКУсл = ТЧ.Количество*ТЧ.Спецификация.УсловныеПриборы;			
			ИначеЕсли ТЧ.МТК.Статус = 1 Тогда
			ТЧ_ТСК.КолВРаботе = ТЧ.Количество;
			ТЧ_ТСК.КолВРаботеУсл = ТЧ.Количество*ТЧ.Спецификация.УсловныеПриборы;
			Иначе
			ТЧ_ТСК.КолВОжидании = ТЧ.Количество;
			ТЧ_ТСК.КолВОжиданииУсл = ТЧ.Количество*ТЧ.Спецификация.УсловныеПриборы;
			КонецЕсли; 
		Иначе
			Если ТЧ.МТК.Пустая() Тогда
			Выборка[0].КолБезМТК = Выборка[0].КолБезМТК + ТЧ.Количество;
			Выборка[0].КолБезМТКУсл = Выборка[0].КолБезМТКУсл + ТЧ.Количество*ТЧ.Спецификация.УсловныеПриборы;			
			ИначеЕсли ТЧ.МТК.Статус = 1 Тогда
			Выборка[0].КолВРаботе = Выборка[0].КолВРаботе + ТЧ.Количество;
			Выборка[0].КолВРаботеУсл = Выборка[0].КолВРаботеУсл + ТЧ.Количество*ТЧ.Спецификация.УсловныеПриборы;
			Иначе
			Выборка[0].КолВОжидании = Выборка[0].КолВОжидании + ТЧ.Количество;
			Выборка[0].КолВОжиданииУсл = Выборка[0].КолВОжиданииУсл + ТЧ.Количество*ТЧ.Спецификация.УсловныеПриборы;
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураСтандартныйКомментарийПриИзменении(Элемент)
ОбновитьТаблицуСтандартныхКомментариев();
КонецПроцедуры

&НаСервере
Процедура ПерестроитьОчередьНаСервере()
	Попытка
    НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	НомерОчереди = 1;
		Для каждого ТЧ из Объект.Номенклатура Цикл
			Если ТЧ.МТК.Ремонт Тогда
			Продолжить;
			КонецЕсли; 
				Если ТЧ.НомерОчереди <> НомерОчереди Тогда
				МТК = ТЧ.МТК.ПолучитьОбъект();
				МТК.НомерОчереди = НомерОчереди;
				МТК.Записать();
				//ОбщийМодульРаботаСРегистрами.ИзменитьНомерОчереди(МТК.Ссылка,НомерОчереди);
				Отбор = Новый Структура("ДокументОснование",МТК.Ссылка);
				ВыборкаПЗ = Документы.ПроизводственноеЗадание.Выбрать(,,Отбор);	
					Пока ВыборкаПЗ.Следующий() Цикл
					ПЗ = ВыборкаПЗ.ПолучитьОбъект();
					ПЗ.НомерОчереди = НомерОчереди;
					ПЗ.Записать(РежимЗаписиДокумента.Запись);
					//ОбщийМодульРаботаСРегистрами.ИзменитьНомерОчереди(ПЗ.Ссылка,НомерОчереди);			
					КонецЦикла;
				ТЧ.НомерОчереди = НомерОчереди;
				КонецЕсли;
		НомерОчереди = НомерОчереди + 1;
		КонецЦикла;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат;
	КонецПопытки;	
НО = Справочники.НумераторОчереди.НайтиПоРеквизиту("Линейка",Объект.Линейка).ПолучитьОбъект();
НО.СледующийНомер = НомерОчереди;
НО.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ПерестроитьОчередь(Команда)
ПерестроитьОчередьНаСервере();
Элементы.Номенклатура.Обновить();
КонецПроцедуры

&НаСервере
Процедура ПерестроитьОчередьДляВсехЛинеекНаСервере()
Запрос = Новый Запрос;

//СтдКомм = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Заказанные приборы от клиентов",Истина);
//	Если СтдКомм.Пустая() Тогда
//	Сообщить("Не найден стандартный комментарий - Заказанные приборы от клиентов!");
//	Возврат;
//	КонецЕсли;
СписокЛинеек = Новый СписокЗначений;
 
		Для каждого ТЧ Из ТаблицаЗаказных Цикл	
			Если СписокЛинеек.НайтиПоЗначению(ТЧ.Линейка) = Неопределено Тогда
			СписокЛинеек.Добавить(ТЧ.Линейка);
			КонецЕсли; 
		КонецЦикла; 

	Для каждого Стр Из СписокЛинеек Цикл
	НО = Справочники.НумераторОчереди.НайтиПоРеквизиту("Линейка",Стр.Значение);
		Если НО.Пустая() Тогда
		Сообщить("Не найден нумератор очереди для линейки "+Стр.Значение+"!");
		Продолжить;						
		КонецЕсли;
	НомерОчереди = 1;
		Попытка
		НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	МаршрутнаяКарта.Ссылка,
			|	МаршрутнаяКарта.НомерОчереди
			|ИЗ
			|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
			|ГДЕ
			|	МаршрутнаяКарта.Линейка = &Линейка
			|	И МаршрутнаяКарта.Статус <> 3
			//|	И МаршрутнаяКарта.СтандартныйКомментарий = &СтандартныйКомментарий
			|	И МаршрутнаяКарта.Ремонт = ЛОЖЬ
			|
			|УПОРЯДОЧИТЬ ПО
			|	МаршрутнаяКарта.НомерОчереди";
		Запрос.УстановитьПараметр("Линейка", Стр.Значение);
		//Запрос.УстановитьПараметр("СтандартныйКомментарий", СтдКомм);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если ВыборкаДетальныеЗаписи.НомерОчереди <> НомерОчереди Тогда
				МТК = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
				МТК.НомерОчереди = НомерОчереди;
				МТК.Записать(РежимЗаписиДокумента.Проведение);
				//ОбщийМодульРаботаСРегистрами.ИзменитьНомерОчереди(МТК.Ссылка,НомерОчереди);
				Отбор = Новый Структура("ДокументОснование",МТК.Ссылка);
				ВыборкаПЗ = Документы.ПроизводственноеЗадание.Выбрать(,,Отбор);	
					Пока ВыборкаПЗ.Следующий() Цикл
					ПЗ = ВыборкаПЗ.ПолучитьОбъект();
					ПЗ.НомерОчереди = НомерОчереди;
					ПЗ.Записать(РежимЗаписиДокумента.Запись);
					//ОбщийМодульРаботаСРегистрами.ИзменитьНомерОчереди(ПЗ.Ссылка,НомерОчереди);			
					КонецЦикла;
				КонецЕсли;
			НомерОчереди = НомерОчереди + 1;
			КонецЦикла;
		НовыйНО = НО.ПолучитьОбъект();
		НовыйНО.СледующийНомер = НомерОчереди;
		НовыйНО.Записать(); 
		ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
		Исключение
		Сообщить(ОписаниеОшибки());
		ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
		Возврат;
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПерестроитьОчередьДляВсехЛинеек(Команда)
ПерестроитьОчередьДляВсехЛинеекНаСервере();
КонецПроцедуры

&НаСервере
Функция ЛинейкаКанбан()
	Если Объект.Линейка.ВидЛинейки = Перечисления.ВидыЛинеек.Канбан Тогда
	Возврат(Истина);
	Иначе
	Возврат(Ложь);
	КонецЕсли; 
КонецФункции

&НаСервере
Функция ОформлятьПустыеКанбаны()
Возврат(?(Объект.Линейка.Подразделение.ОформлятьПустыеКанбаны = 2,Истина,Ложь));
КонецФункции

&НаСервере
Функция ЕстьНумераторОчереди()
НумераторОчереди = Справочники.НумераторОчереди.НайтиПоРеквизиту("Линейка",Объект.Линейка);
Возврат(Не НумераторОчереди.Пустая());	
КонецФункции

&НаКлиенте
Процедура НоменклатураКоличествоПриИзменении(Элемент)
ОбновитьТаблицуСтандартныхКомментариев();
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПометкаПриИзменении(Элемент)
НоменклатураПометкаПриИзмененииНаСервере(Элементы.Номенклатура.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура НоменклатураПометкаПриИзмененииНаСервере(Стр)
ТЧ = Объект.Номенклатура.НайтиПоИдентификатору(Стр);
	Если Не ТЧ.МТК.Пустая() Тогда
	ТЧ.Пометка = Ложь;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура СохранитьИзделияБезМТКНаСервере()
	Для каждого ТЧ Из Объект.Номенклатура Цикл	
		Если ТЧ.МТК.Пустая() Тогда
		Выборка = Справочники.НезапущенныеИзделия.НайтиПоРеквизиту("Изделие",ТЧ.Спецификация);
			Если Выборка.Пустая() Тогда
			НИ = Справочники.НезапущенныеИзделия.СоздатьЭлемент();
			НИ.Изделие = ТЧ.Спецификация;
			НИ.КратностьЗапуска = ТЧ.Количество;
			НИ.Записать();
			Иначе
				Если Выборка.КратностьЗапуска <> ТЧ.Количество Тогда
				НИ = Выборка.ПолучитьОбъект();
				НИ.КратностьЗапуска = ТЧ.Количество;
				НИ.Записать();	
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 	
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзделияБезМТК(Команда)
СохранитьИзделияБезМТКНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДобавитьНезапущенноеИзделие(Спецификация,НормативныйЗапас,КратностьЗапуска,КоличествоЗапусковЗаЦикл)
Линейка = Спецификация.Линейка;
	Если Спецификация.Линейка.Пустая() Тогда
	Сообщить(СокрЛП(Спецификация.Наименование)+" - в карточке не указана линейка производства!");
	Возврат;
	КонецЕсли; 
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НезапущенныеИзделия.НомерОчереди КАК НомерОчереди
	|ИЗ
	|	Справочник.НезапущенныеИзделия КАК НезапущенныеИзделия
	|ГДЕ
	|	НезапущенныеИзделия.Линейка = &Линейка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерОчереди УБЫВ";
Запрос.УстановитьПараметр("Линейка", Линейка);
НО = 0;
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	НО = ВыборкаДетальныеЗаписи.НомерОчереди;
	КонецЦикла;
НИ = Справочники.НезапущенныеИзделия.СоздатьЭлемент();
НИ.НомерОчереди = НО + 1;
НИ.Линейка = Линейка;
НИ.Изделие = Спецификация;
НИ.НормативныйЗапас = НормативныйЗапас;
НИ.КратностьЗапуска = КратностьЗапуска;
НИ.КоличествоЗапусковЗаЦикл = КоличествоЗапусковЗаЦикл;
НИ.Записать();
КонецПроцедуры

&НаСервере
Процедура ОчиститьНезапущенныеИзделия()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НезапущенныеИзделия.Ссылка
	|ИЗ
	|	Справочник.НезапущенныеИзделия КАК НезапущенныеИзделия";
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	НИ = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
	НИ.Удалить();
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьЛинейку(Линейка)
Возврат(Справочники.Линейки.НайтиПоНаименованию(СокрЛП(Линейка),Истина));
КонецФункции

&НаКлиенте
Процедура ЗагрузитьИзделияНаПополнениеСклада(Команда)
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл c изделиями на пополнение склада ГП");
	Если Результат <> Неопределено Тогда
	ОчиститьНезапущенныеИзделия();
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок; 
	    Для к = 2 по КолСтрок Цикл
		Состояние("Обработка...",к*100/КолСтрок,"Загрузка изделий на пополнение склада ГП из файла..."); 
		Наименование = СокрЛП(ExcelЛист.Cells(к, 1).Value);
		НормативныйЗапас = ExcelЛист.Cells(к, 3).Value;
		КратностьЗапуска = ExcelЛист.Cells(к, 4).Value;
		КоличествоЗапусковЗаЦикл = ExcelЛист.Cells(к, 5).Value;
		Спецификация = НайтиСпецификациюНаСервере(Наименование);
			Если Не Спецификация.Пустая() Тогда
			ДобавитьНезапущенноеИзделие(Спецификация,НормативныйЗапас,КратностьЗапуска,КоличествоЗапусковЗаЦикл);
			Иначе
			Сообщить(Наименование+" - не найдена спецификация!");
			КонецЕсли;
	    КонецЦикла;
	Результат.Excel.Quit();
	Элементы.ИзделияНаПополнениеСклада.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПечатьQRКодаКанбанНаСервере(СписокСпецификаций,КоличествоКопий)
ТабДок = Новый ТабличныйДокумент;

Макет = ПолучитьОбщийМакет("QRКодКанбан1");
ОблQRКод = Макет.ПолучитьОбласть("QRКод");
	Для каждого Стр Из СписокСпецификаций Цикл
	ТЧ = Объект.Номенклатура.НайтиПоИдентификатору(Стр.Значение);
	QRCode = ЗначениеВСтрокуВнутр(ТЧ.Спецификация)+";"+ТЧ.Количество;
	ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRCode, 0, 100);	
		Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
		КартинкаQRКода = Новый Картинка(ДанныеQRКода);
		ОблQRКод.Рисунки.QRCode.Картинка = КартинкаQRКода;
		Иначе
		Сообщить("Не удалось сформировать QR-код!");
		КонецЕсли;
	ОблQRКод.Параметры.Наименование = СокрЛП(ТЧ.Спецификация.Наименование);
	ОблQRКод.Параметры.Количество = ТЧ.Количество;
	ОблQRКод.Параметры.ЕдИзм = ТЧ.Спецификация.ЕдиницаИзмерения;
		Для к = 1 По КоличествоКопий Цикл
		ТабДок.Вывести(ОблQRКод);
		КонецЦикла; 
	КонецЦикла; 
ТабДок.РазмерСтраницы = "A4";
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьQRКодовКанбан(Команда)
КоличествоКопий = 2;
	Если ВвестиЧисло(КоличествоКопий,"Введите количество копий",1,0) Тогда
	СписокСпецификаций = Новый СписокЗначений;

		Для каждого ТЧ из Элементы.Номенклатура.ВыделенныеСтроки Цикл
		СписокСпецификаций.Добавить(ТЧ);
		КонецЦикла;
	ТабДок = ПечатьQRКодаКанбанНаСервере(СписокСпецификаций,КоличествоКопий);
	ТабДок.Показать("QR-коды канбанов");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПечатьQRКодаКанбан1НаСервере(СписокСпецификаций,КоличествоКопий)
ТабДок = Новый ТабличныйДокумент;

Макет = ПолучитьОбщийМакет("QRКодКанбан1");
ОблQRКод = Макет.ПолучитьОбласть("QRКод");
	Для каждого Стр Из СписокСпецификаций Цикл
	ТЧ = ТаблицаКанбанов.НайтиПоИдентификатору(Стр.Значение);
	QRCode = ЗначениеВСтрокуВнутр(ТЧ.Изделие)+";"+ТЧ.Количество;
	ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRCode, 0, 100);	
		Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
		КартинкаQRКода = Новый Картинка(ДанныеQRКода);
		ОблQRКод.Рисунки.QRCode.Картинка = КартинкаQRКода;
		Иначе
		Сообщить("Не удалось сформировать QR-код!");
		КонецЕсли;
	ОблQRКод.Параметры.Наименование = СокрЛП(ТЧ.Изделие.Наименование);
	ОблQRКод.Параметры.Количество = ТЧ.Количество;
	ОблQRКод.Параметры.ЕдИзм = ТЧ.Изделие.ЕдиницаИзмерения;
		Для к = 1 По КоличествоКопий Цикл
		ТабДок.Вывести(ОблQRКод);
		КонецЦикла; 
	КонецЦикла; 
ТабДок.РазмерСтраницы = "A4";
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьQRКодовКанбан1(Команда)
КоличествоКопий = 2;
	Если ВвестиЧисло(КоличествоКопий,"Введите количество копий",1,0) Тогда
	СписокСпецификаций = Новый СписокЗначений;

		Для каждого ТЧ из Элементы.ТаблицаКанбанов.ВыделенныеСтроки Цикл
		СписокСпецификаций.Добавить(ТЧ);
		КонецЦикла;
	ТабДок = ПечатьQRКодаКанбан1НаСервере(СписокСпецификаций,КоличествоКопий);
	ТабДок.Показать("QR-коды канбанов");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьЛинейкуПоМестуХранения(МестоХранения)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Линейки.Ссылка
	|ИЗ
	|	Справочник.Линейки КАК Линейки
	|ГДЕ
	|	Линейки.Проектная = ЛОЖЬ
	|	И (Линейки.МестоХраненияГП = &МестоХранения
	|			ИЛИ Линейки.МестоХраненияКанбанов = &МестоХранения)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Линейки.Код";
Запрос.УстановитьПараметр("МестоХранения", МестоХранения);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
Возврат(Справочники.Линейки.ПустаяСсылка());
КонецФункции

&НаСервере
Процедура ДобавитьПоQRКодуНаСервере(Данные)
Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,";");
	Если Массив[0] = "3" Тогда
	МестоХраненияПотребитель = ЗначениеИзСтрокиВнутр(Массив[1]);
	МестоХраненияОтправитель = ОбщийМодульВызовСервера.ПолучитьМестоХраненияПоКоду(Массив[2]);
		Если МестоХраненияОтправитель.Пустая() Тогда
		Сообщить("Место хранения с кодом "+Массив[2]+" - не найдено!");
		Возврат;
		КонецЕсли; 
	Спецификация = ЗначениеИзСтрокиВнутр(Массив[3]); 
		Если Спецификация = Неопределено Тогда
		Сообщить(Массив[3]+" - спецификация не найдена!");
		Возврат;	
		КонецЕсли;
			Если СокрЛП(Спецификация.Канбан.Подразделение.Наименование) = "Богородицк линия SMD" Тогда
			Линейка = Неопределено;
				Для каждого ТЧ Из Спецификация.ЛинейкиSMD Цикл	
					Если ТЧ.Основная Тогда
					Линейка = ТЧ.Линейка;
					Прервать;
					КонецЕсли; 
				КонецЦикла; 
					Если Линейка = Неопределено Тогда
					Сообщить("В спецификации "+Спецификация+" линейка не определена!");
					Возврат;
					КонецЕсли; 
			Иначе	
			Линейка = ПолучитьЛинейкуПоМестуХранения(МестоХраненияОтправитель);
				Если Линейка.Пустая() Тогда
				Сообщить("По месту хранения "+МестоХраненияОтправитель+" - линейка не найдена!");
				Возврат;
				КонецЕсли;			
			КонецЕсли;
				Если Не Объект.Линейка.Пустая() Тогда
					Если Линейка <> Объект.Линейка Тогда
					Сообщить("Линейка отсканированного изделия не совпадает с выбранной!");
					Возврат;				
					КонецЕсли; 
				КонецЕсли;
	Количество = Число(Массив[4]);
	НомерЯчейки = Число(Массив[5]);
	ИначеЕсли Массив[0] = "5" Тогда
	Линейка = ЗначениеИзСтрокиВнутр(Массив[1]);
		Если Не Объект.Линейка.Пустая() Тогда
			Если Линейка <> Объект.Линейка Тогда
			Сообщить("Линейка отсканированного изделия не совпадает с выбранной!");
			Возврат;				
			КонецЕсли; 
		КонецЕсли; 
	Спецификация = ЗначениеИзСтрокиВнутр(Массив[2]); 
		Если Спецификация = Неопределено Тогда
		Сообщить(Массив[2]+" - спецификация не найдена!");
		Возврат;	
		КонецЕсли;
	Количество = Число(Массив[3]);
	НомерЯчейки = Число(Массив[4]);
	ИначеЕсли Массив[0] = "7" Тогда
	Линейка = ЗначениеИзСтрокиВнутр(Массив[1]);
		Если Не Объект.Линейка.Пустая() Тогда
			Если Линейка <> Объект.Линейка Тогда
			Сообщить("Линейка отсканированного изделия не совпадает с выбранной!");
			Возврат;				
			КонецЕсли; 
		КонецЕсли;
	МестоХраненияПотребитель = ЗначениеИзСтрокиВнутр(Массив[2]); 
	Спецификация = ЗначениеИзСтрокиВнутр(Массив[3]); 
		Если Спецификация = Неопределено Тогда
		Сообщить(Массив[2]+" - спецификация не найдена!");
		Возврат;	
		КонецЕсли;
	Количество = Число(Массив[4]);
	НомерЯчейки = Число(Массив[5]); 
	Иначе
	НомерЯчейки = 0;
	ПервыйЭлемент = ЗначениеИзСтрокиВнутр(Массив[0]);
		Если ТипЗнч(ПервыйЭлемент) = Тип("СправочникСсылка.МестаХранения") Тогда
		МестоХраненияПотребитель = ПервыйЭлемент;
		Спецификация = ЗначениеИзСтрокиВнутр(Массив[1]);
			Если Спецификация = Неопределено Тогда
			Сообщить(Массив[3]+" - спецификация не найдена!");
			Возврат;	
			КонецЕсли; 
		Количество = Число(Массив[2]);
		Иначе
		МестоХраненияПотребитель = Справочники.МестаХранения.ПустаяСсылка();
		Спецификация = ПервыйЭлемент;
			Если Спецификация = Неопределено Тогда
			Сообщить(Массив[3]+" - спецификация не найдена!");
			Возврат;	
			КонецЕсли;
		Количество = Число(Массив[1]);
		КонецЕсли;
	Линейка = Объект.Линейка;
	КонецЕсли;
Статус = ПолучитьСтатус(Спецификация);
	Если Статус <> Перечисления.СтатусыСпецификаций.Запрещённая Тогда
		Если Линейка.ВидЛинейки = Перечисления.ВидыЛинеек.Продукция Тогда
		ТЧ = Объект.Номенклатура.Добавить();
		ТЧ.Наименование = СокрЛП(Спецификация.Наименование);
		ТЧ.Линейка = Линейка;
		ТЧ.Статус = Статус;
		ТЧ.Спецификация = Спецификация;
		ТЧ.Количество = Количество;
		ТЧ.МестоХраненияПотребитель = МестоХраненияПотребитель;
		ТЧ.НомерЯчейки = НомерЯчейки;		
		Иначе	
		ТЧ = ТаблицаКанбанов.Добавить();
		ТЧ.Линейка = Линейка;
		ТЧ.Статус = Статус;
		ТЧ.Изделие = Спецификация;
		ТЧ.Количество = Количество;
		ТЧ.МестоХраненияПотребителя = МестоХраненияПотребитель;
		ТЧ.МестоХраненияОтправителя = МестоХраненияОтправитель;
		ТЧ.НомерЯчейки = НомерЯчейки;		
		КонецЕсли;
	Иначе
	Сообщить("Спецификация имеет запрещённый статус! Запуск в работу запрещён! Обратитесь к мастеру линейки!");		
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоQRКоду(Команда,Код = "")
	Если Код = "" Тогда
		Если Не ВвестиСтроку(Код,"Введите код",100) Тогда
		Возврат;
		КонецЕсли; 	
	КонецЕсли; 
ДобавитьПоQRКодуНаСервере(Код);
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
	ДобавитьПоQRКоду(Неопределено,Данные);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура УдалитьМТКНаСервере(Стр)
ТЧ = Объект.Номенклатура.НайтиПоИдентификатору(Стр);
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Запрос = Новый Запрос;
		Если ТЧ.МТК.Подразделение.ОформлятьПустыеКанбаны = 2 Тогда
		НаборЗаписей = РегистрыСведений.ОборотКанбанов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.МестоХранения.Установить(ТЧ.МТК.МестоХраненияПотребитель);
		НаборЗаписей.Отбор.Подразделение.Установить(ТЧ.МТК.Подразделение);
		НаборЗаписей.Отбор.МПЗ.Установить(ТЧ.МТК.Номенклатура);
		НаборЗаписей.Прочитать();
			Для Каждого Запись Из НаборЗаписей Цикл
			    Если Не ЗначениеЗаполнено(Запись.ДатаПринятия) Тогда
				НаборЗаписей.Удалить(Запись);
				Прервать;
			    КонецЕсли;
			КонецЦикла;
		НаборЗаписей.Записать();
		КонецЕсли; 
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПроизводственноеЗадание.Ссылка
		|ИЗ
		|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
		|ГДЕ
		|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование";
	Запрос.УстановитьПараметр("ДокументОснование", ТЧ.МТК);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ПЗ = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();		
		ПЗ.Удалить();
		КонецЦикла;
	МТК = ТЧ.МТК.ПолучитьОбъект();
	МТК.Удалить();
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Объект.Номенклатура.Удалить(ТЧ);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	КонецПопытки;	
КонецПроцедуры

&НаСервере
Функция ПроверитьМТК(МТК)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Ссылка
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование
	|	И ПроизводственноеЗадание.ДатаЗапуска <> ДАТАВРЕМЯ(1,1,1,0,0,0)";
Запрос.УстановитьПараметр("ДокументОснование", МТК);
РезультатЗапроса = Запрос.Выполнить();
Возврат(РезультатЗапроса.Пустой());
КонецФункции

&НаСервере
Процедура УдалитьСтрокуТЧ(Стр)
ТЧ = Объект.Номенклатура.НайтиПоИдентификатору(Стр);
Объект.Номенклатура.Удалить(ТЧ);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьМТК(Команда)
	Если Не Элементы.Номенклатура.ТекущиеДанные.МТК.Пустая() Тогда
		Если ОткрытьФормуМодально("ОбщаяФорма.УдалениеМТК",Новый Структура("МТК",Элементы.Номенклатура.ТекущиеДанные.МТК)) <> Неопределено Тогда
		УдалитьСтрокуТЧ(Элементы.Номенклатура.ТекущаяСтрока);
		КонецЕсли;
	Иначе
	Сообщить("Для выбранного изделия не создана МТК!");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ВыбратьДругоеИзделиеВМТКНаСервере(Стр,Изделие)
ТЧ = Объект.Номенклатура.НайтиПоИдентификатору(Стр);
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПроизводственноеЗадание.Ссылка
		|ИЗ
		|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
		|ГДЕ
		|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование";
	Запрос.УстановитьПараметр("ДокументОснование", ТЧ.МТК);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ПЗ = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ПЗ.Изделие = Изделие;		
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Ссылка.БарКод) Тогда
				Если СтрДлина(СокрЛП(ВыборкаДетальныеЗаписи.Ссылка.БарКод)) = 17 Тогда
				БарКод = ОбщийМодульВызовСервера.ПолучитьАртикулПоКодуТовара(Изделие.Товар.Код)+Сред(ВыборкаДетальныеЗаписи.Ссылка.БарКод,6);				
				Иначе	
				БарКод = ОбщийМодульВызовСервера.ПолучитьАртикулПоКодуТовара(Изделие.Товар.Код)+Сред(ВыборкаДетальныеЗаписи.Ссылка.БарКод,7);
				КонецЕсли; 
			ПЗ.БарКод = БарКод;
			НаборЗаписей = РегистрыСведений.БарКоды.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ПЗ.Установить(ВыборкаДетальныеЗаписи.Ссылка);
			НаборЗаписей.Прочитать();
				Для Каждого Запись Из НаборЗаписей Цикл
				Запись.Изделие = Изделие;
				Запись.Товар = Изделие.Товар;
				Запись.БарКод = БарКод;
				КонецЦикла;
			НаборЗаписей.Записать();
			Иначе
			БарКод = "";			
			КонецЕсли;
		ПЗ.Записать();

		НаборЗаписей = РегистрыСведений.ЭтапыПроизводственныхЗаданий.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ПЗ.Установить(ВыборкаДетальныеЗаписи.Ссылка);
		НаборЗаписей.Прочитать();
			Для Каждого Запись Из НаборЗаписей Цикл
			Запись.Изделие = Изделие;
			Запись.БарКод = БарКод;
			КонецЦикла;
		НаборЗаписей.Записать();

		НаборЗаписей = РегистрыСведений.ЛьготнаяОчередь.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ПЗ.Установить(ВыборкаДетальныеЗаписи.Ссылка);
		НаборЗаписей.Записать();
		КонецЦикла;
			Если ТипЗнч(ТЧ.МТК.ДокументОснование) = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
			ТекПродукция = ТЧ.МТК.Номенклатура;
			ЗП = ТЧ.МТК.ДокументОснование.ПолучитьОбъект();
				Для каждого ТЧ_З Из ЗП.Заказ Цикл
					Если ТЧ_З.Продукция = ТекПродукция Тогда	
					ТЧ_З.Продукция = Изделие;
					Прервать;
					КонецЕсли; 			
				КонецЦикла; 
			ЗП.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли; 
	МТК = ТЧ.МТК.ПолучитьОбъект();
	МТК.Номенклатура = Изделие;
	МТК.Статус = ОбщийМодульВызовСервера.НазначитьСтатусМТК(ТЧ.МТК);
	МТК.Записать(РежимЗаписиДокумента.Проведение);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	ТЧ.Спецификация = Изделие;
	Статусы = РегистрыСведений.СтатусыМПЗ.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("МПЗ",Изделие));
	ТЧ.Статус = Статусы.Статус;
	ТЧ.Наименование = Изделие.Товар.Наименование; 
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ПроверитьТовар(Изделие)
Возврат(ЗначениеЗаполнено(Изделие.Товар));
КонецФункции

&НаКлиенте
Процедура ВыбратьДругоеИзделиеВМТК(Команда)
	Если ПроверитьМТК(Элементы.Номенклатура.ТекущиеДанные.МТК) Тогда
	ВыбЗнач = Элементы.Номенклатура.ТекущиеДанные.Спецификация;
		Если ВвестиЗначение(ВыбЗнач, "Выберите спецификацию", Новый ОписаниеТипов("СправочникСсылка.Номенклатура")) Тогда
			Если ПроверитьТовар(ВыбЗнач) Тогда
			ВыбратьДругоеИзделиеВМТКНаСервере(Элементы.Номенклатура.ТекущаяСтрока,ВыбЗнач);				
			Иначе
			Сообщить("В выбранном изделии не заполнен Товар!");
			КонецЕсли;	
		КонецЕсли; 
	Иначе
	Сообщить("В выбранной МТК есть запущенные производственные задания!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УдалитьНезапущенныеПЗВМТКНаСервере(Стр)
ТЧ = Объект.Номенклатура.НайтиПоИдентификатору(Стр);
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПроизводственноеЗадание.Ссылка
		|ИЗ
		|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
		|ГДЕ
		|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование
		|	И ПроизводственноеЗадание.ДатаЗапуска = ДАТАВРЕМЯ(1,1,1,0,0,0)";
	Запрос.УстановитьПараметр("ДокументОснование", ТЧ.МТК);
	РезультатЗапроса = Запрос.Выполнить();
	КолПЗ = 0;
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КолПЗ = КолПЗ + 1;
		ПЗ = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();		
		ПЗ.Удалить();
		КонецЦикла;
	МТК = ТЧ.МТК.ПолучитьОбъект();
	МТК.Количество = МТК.Количество - КолПЗ;
	КолОстПВ = ОбщийМодульВызовСервера.ПолучитьНезавершённоеКоличество(ТекущаяДата(),ТЧ.МТК);
		Если (КолОстПВ - КолПЗ) = 0 Тогда
		МТК.Статус = 3;
		КонецЕсли;
	МТК.Записать(РежимЗаписиДокумента.Проведение);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	ТЧ.Количество = МТК.Количество;
	ТЧ.КоличествоНевып = ОбщийМодульВызовСервера.ПолучитьНезавершённоеКоличество(ТекущаяДата(),МТК.Ссылка);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ПроверитьНезапущенныеПЗМТК(МТК)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Ссылка
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование
	|	И ПроизводственноеЗадание.ДатаЗапуска = ДАТАВРЕМЯ(1,1,1,0,0,0)";
Запрос.УстановитьПараметр("ДокументОснование", МТК);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
	Возврат(Истина);
	КонецЕсли;
Возврат(Ложь);
КонецФункции

&НаКлиенте
Процедура УдалитьНезапущенныеПЗВМТК(Команда)
	Если ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(Элементы.Номенклатура.ТекущиеДанные.МТК,"Статус") <> 0 Тогда
		Если ПроверитьНезапущенныеПЗМТК(Элементы.Номенклатура.ТекущиеДанные.МТК) Тогда
		УдалитьНезапущенныеПЗВМТКНаСервере(Элементы.Номенклатура.ТекущаяСтрока);
		Иначе
		Сообщить("В выбранной МТК все производственные задания запущены!");
		КонецЕсли;
	Иначе
	Сообщить("Выбранная МТК не запущена в работу!");	
	КонецЕсли;  
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПередУдалением(Элемент, Отказ)
	Если Не Элементы.Номенклатура.ТекущиеДанные.МТК.Пустая() Тогда
	Отказ = Истина;
	Сообщить("Сначала удалите МТК!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПередНачаломИзменения(Элемент, Отказ)
	Если Элемент.ТекущийЭлемент.Имя <> "НоменклатураПометка" Тогда
		Если Не Элементы.Номенклатура.ТекущиеДанные.МТК.Пустая() Тогда
		Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьМТК(Команда)
ОткрытьФорму("Документ.МаршрутнаяКарта.ФормаОбъекта",Новый Структура("Ключ",Элементы.Номенклатура.ТекущиеДанные.МТК));
КонецПроцедуры

&НаСервере
Функция ПолучитьЗапрещённыйСтатусСпецификации()
Возврат(Перечисления.СтатусыСпецификаций.Запрещённая);
КонецФункции

&НаСервере
Функция ЭтоЛинейкаПриборов()
Возврат(?(Объект.Линейка.ВидЛинейки <> Перечисления.ВидыЛинеек.Канбан,Истина,Ложь));
КонецФункции

&НаКлиенте
Процедура НоменклатураСпецификацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
ЛинейкаИзделия = ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(ВыбранноеЗначение,"Линейка");
	Если Не ЛинейкаИзделия.Пустая() Тогда
		Если ЛинейкаИзделия <> Объект.Линейка Тогда	
		Сообщить("Выбранное изделие должно производится на другой линейке!");
		СтандартнаяОбработка = Ложь;
		КонецЕсли;
	Иначе
		Если ЭтоЛинейкаПриборов() Тогда
		Сообщить("В выбранное изделии не указана линейка производства!");
		СтандартнаяОбработка = Ложь; 
		КонецЕсли;	
	КонецЕсли;
		Если ПолучитьСтатусСпецификации(ВыбранноеЗначение) = ПолучитьЗапрещённыйСтатусСпецификации() Тогда
		Сообщить("Спецификация имеет запрещённый статус! Запуск в работу запрещён! Обратитесь к мастеру линейки!");
		СтандартнаяОбработка = Ложь;
		КонецЕсли;  
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьОстаткиНаСкладеГПНаСервере(Спецификация,СвободныйОстатокНаСкладеГП)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НезапущенныеИзделия.Ссылка
	|ИЗ
	|	Справочник.НезапущенныеИзделия КАК НезапущенныеИзделия
	|ГДЕ
	|	НезапущенныеИзделия.Изделие = &Изделие";
Запрос.УстановитьПараметр("Изделие", Спецификация);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ЗапросПР = Новый Запрос;

	СтдКом = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Приборы на пополнение склада ГП",Истина);
	КолПР = 0;
	ЗапросПР.Текст = 
		"ВЫБРАТЬ
		|	ПланыВыпускаОстатки.Номенклатура,
		|	ПланыВыпускаОстатки.КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ПланыВыпуска.Остатки(&НаДату, ) КАК ПланыВыпускаОстатки
		|ГДЕ
		|	ПланыВыпускаОстатки.Номенклатура = &Номенклатура
		|	И ПланыВыпускаОстатки.МаршрутнаяКарта.СтандартныйКомментарий = &СтандартныйКомментарий";
	ЗапросПР.УстановитьПараметр("НаДату", ТекущаяДата());
	ЗапросПР.УстановитьПараметр("Номенклатура", Спецификация);
	ЗапросПР.УстановитьПараметр("СтандартныйКомментарий", СтдКом);
	РезультатЗапроса = ЗапросПР.Выполнить();
	ВыборкаПР = РезультатЗапроса.Выбрать();
		Пока ВыборкаПР.Следующий() Цикл
		КолПР = КолПР + ВыборкаПР.КоличествоОстаток;
		КонецЦикла;
	НИ = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
	НИ.Запущено = Ложь;
	НИ.КоличествоЗапусков = 0;
	НИ.КоличествоВПроизводстве = КолПР;
		Если СвободныйОстатокНаСкладеГП > 0 Тогда
		НИ.СвободныйОстатокНаСкладеГП = СвободныйОстатокНаСкладеГП;
		Иначе
		НИ.СвободныйОстатокНаСкладеГП = 0;
		КонецЕсли;
	НИ.НомерОчереди = (НИ.КоличествоВПроизводстве+НИ.СвободныйОстатокНаСкладеГП)/НИ.НормативныйЗапас;
	НИ.Записать();
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОстаткиНаСкладеГП(Команда)
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл c остатками на складе ГП");
	Если Результат <> Неопределено Тогда
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок; 
	    Для к = 2 по КолСтрок Цикл
		Состояние("Обработка...",к*100/КолСтрок,"Загрузка остатков на складе ГП из файла..."); 
		Наименование = СокрЛП(ExcelЛист.Cells(к, 1).Value);
		СвободныйОстатокНаСкладеГП = Число(ExcelЛист.Cells(к, 3).Value);
		Спецификация = НайтиСпецификациюНаСервере(Наименование);
			Если Не Спецификация.Пустая() Тогда
			ЗагрузитьОстаткиНаСкладеГПНаСервере(Спецификация,СвободныйОстатокНаСкладеГП);
			Иначе
			Сообщить(Наименование+" не найдена спецификация !");
			КонецЕсли;
	    КонецЦикла;
	Результат.Excel.Quit();
	Элементы.ИзделияНаПополнениеСклада.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура НайтиНедостающиеСпецификацииНаСервере()
	Для каждого ТЧ Из ТаблицаЗаказных Цикл	
		Если ТЧ.Спецификация.Пустая() Тогда
		Спецификация = НайтиСпецификациюНаСервере(ТЧ.Наименование);
			Если Не Спецификация.Пустая() Тогда
			ТЧ.Спецификация = Спецификация;
			ТЧ.Статус = ПолучитьСтатус(Спецификация);
			Иначе
			Сообщить(ТЧ.Наименование+" - не найдена спецификация!");
			КонецЕсли;		
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура НайтиНедостающиеСпецификации(Команда)
НайтиНедостающиеСпецификацииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПоПриИзменении(Элемент)
	Если СортироватьПо = 0 Тогда 
	Объект.Номенклатура.Сортировать("ДатаМТК");
	ИначеЕсли СортироватьПо = 1 Тогда
	Объект.Номенклатура.Сортировать("НомерОчереди,ДатаОтгрузки,ДатаМТК");
	Иначе
	Объект.Номенклатура.Сортировать("Счёт,Спецификация");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьEmailСотрудника()
Возврат(ПараметрыСеанса.Пользователь.Email);
КонецФункции

&НаСервере
Функция ПолучитьEmailПолучателя(Сотрудник)
Возврат(Сотрудник.Email);
КонецФункции

&НаКлиенте
Процедура ПочтоваяРассылка(Команда)
EmailСотрудника = ПолучитьEmailСотрудника();
	Если Не ЗначениеЗаполнено(EmailСотрудника) Тогда
	Сообщить("Не заполнен почтовый адрес отправителя!");
	Возврат;
	КонецЕсли; 
Сообщение = Новый ИнтернетПочтовоеСообщение;
ИПП = Новый ИнтернетПочтовыйПрофиль; 

НастройкиПочты = ОбщийМодульВызовСервера.ПолучитьНастройкиПочты();
ИПП.АдресСервераSMTP = НастройкиПочты.АдресСервераSMTP; 
ИПП.ПортSMTP = НастройкиПочты.ПортSMTP;
ИПП.ВремяОжидания = 60; 
ИПП.Пароль = НастройкиПочты.ПарольПочтовогоСервера; 
ИПП.Пользователь = EmailСотрудника;
	Если СписокПочтовойРассылки.Количество() = 0 Тогда
	Сообщить("Нет списка почтовой рассылки!");
	Возврат;
	КонецЕсли;
Сообщение = Новый ИнтернетПочтовоеСообщение;
	 
	Для каждого Стр Из СписокПочтовойРассылки Цикл
    Сообщение.Получатели.Добавить(ПолучитьEmailПолучателя(Стр.Значение));
	КонецЦикла; 
Сообщение.Отправитель.Адрес = EmailСотрудника;
Сообщение.Тема = "Отсутствующие позиции заказанных приборов на "+ТекущаяДата(); 
Текст = "Здравствуйте!";
Текст = Текст + Символы.ПС + "";
Текст = Текст + Символы.ПС + "При загрузке заказанных приборов не найдены следующие позиции:";	
	Для каждого ТЧ Из ТаблицаЗаказных Цикл
		Если Не ЗначениеЗаполнено(ТЧ.Спецификация) Тогда
		Текст = Текст + Символы.ПС + СокрЛП(ТЧ.Наименование) + " ("+ТЧ.Линейка+") по счёту " + СокрЛП(ТЧ.Счёт) + " ("+ТЧ.Количество+" шт.)";
		КонецЕсли; 	
	КонецЦикла; 
Текст = Текст + Символы.ПС+ "";
Текст = Текст + Символы.ПС+ "С уважением, email: "+EmailСотрудника;
Сообщение.Тексты.Добавить(Текст);
// Подключиться и отправить. 
Почта = Новый ИнтернетПочта; 
Почта.Подключиться(ИПП);
Почта.Послать(Сообщение); 
Почта.Отключиться();
ПоказатьОповещениеПользователя("Сообщение отправлено!");
//УдалитьФайлы(ИмяФайла);	
КонецПроцедуры

&НаСервере
Процедура СдвинутьНоменклатуру(Стр,НоваяПозиция)
Индекс = Объект.Номенклатура.Индекс(Объект.Номенклатура.НайтиПоИдентификатору(Стр));
Объект.Номенклатура.Сдвинуть(Индекс,НоваяПозиция-Индекс);
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВПозицию(Команда)
НоваяПозиция = 0;
	Если ВвестиЧисло(НоваяПозиция,"Введите номер позиции",3,0) Тогда
		Если НоваяПозиция <= Объект.Номенклатура.Количество() Тогда
		СдвинутьНоменклатуру(Элементы.Номенклатура.ТекущаяСтрока,НоваяПозиция);
		Иначе
		Сообщить("Введите число не более "+Объект.Номенклатура.Количество());
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПереместитьВНачалоОчередиНаСервере(Стр)
ПервыйНомерОчереди = Объект.Номенклатура[0].НомерОчереди;
ТЧ = Объект.Номенклатура.НайтиПоИдентификатору(Стр);
	Если ПервыйНомерОчереди > 0 Тогда
	НомерОчереди = -1;
	Иначе	
	НомерОчереди = ПервыйНомерОчереди - 1;
	КонецЕсли; 
		Попытка
		НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;	
		МТК = ТЧ.МТК.ПолучитьОбъект();
		МТК.НомерОчереди = НомерОчереди;
		МТК.Записать(РежимЗаписиДокумента.Проведение);
		ВыборкаПЗ = Документы.ПроизводственноеЗадание.Выбрать(,,Новый Структура("ДокументОснование",МТК.Ссылка));	
			Пока ВыборкаПЗ.Следующий() Цикл
			ПЗ = ВыборкаПЗ.ПолучитьОбъект();
			ПЗ.НомерОчереди = НомерОчереди;
			ПЗ.Записать(РежимЗаписиДокумента.Запись);
			КонецЦикла;	
		ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
		Исключение
		Сообщить(ОписаниеОшибки());
		ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);	
		КонецПопытки; 
ТЧ.НомерОчереди = НомерОчереди;
Индекс = Объект.Номенклатура.Индекс(ТЧ);
Объект.Номенклатура.Сдвинуть(Индекс,-1*Индекс);
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВНачалоОчереди(Команда)
ПереместитьВНачалоОчередиНаСервере(Элементы.Номенклатура.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ИзменитьКоличествоВМТКНаСервере(Стр,Количество)
ТЧ = Объект.Номенклатура.НайтиПоИдентификатору(Стр);
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПроизводственноеЗадание.Ссылка
		|ИЗ
		|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
		|ГДЕ
		|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование";
	Запрос.УстановитьПараметр("ДокументОснование", ТЧ.МТК);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ПЗ = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ПЗ.Количество = Количество;		
		ПЗ.Записать();

		НаборЗаписей = РегистрыСведений.ЭтапыПроизводственныхЗаданий.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ПЗ.Установить(ВыборкаДетальныеЗаписи.Ссылка);
		НаборЗаписей.Прочитать();
			Для Каждого Запись Из НаборЗаписей Цикл
			Запись.Количество = Количество;
			КонецЦикла;
		НаборЗаписей.Записать();

		НаборЗаписей = РегистрыСведений.ЛьготнаяОчередь.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ПЗ.Установить(ВыборкаДетальныеЗаписи.Ссылка);
		НаборЗаписей.Записать();
		КонецЦикла;
	МТК = ТЧ.МТК.ПолучитьОбъект();
	МТК.Статус = ОбщийМодульВызовСервера.НазначитьСтатусМТК(ТЧ.МТК);
	МТК.Количество = Количество;
	МТК.Записать(РежимЗаписиДокумента.Проведение);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	ТЧ.Количество = Количество;
	ТЧ.КоличествоНевып = Количество; 
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьКоличествоВМТК(Команда)
	Если Не Элементы.Номенклатура.ТекущиеДанные.МТК.Пустая() Тогда
		Если ПроверитьМТК(Элементы.Номенклатура.ТекущиеДанные.МТК) Тогда
		ВыбКол = Элементы.Номенклатура.ТекущиеДанные.Количество;
			Если ВвестиЧисло(ВыбКол, "Выберите новое количество",9,3) Тогда
			ИзменитьКоличествоВМТКНаСервере(Элементы.Номенклатура.ТекущаяСтрока,ВыбКол);				
			КонецЕсли;
		Иначе
		Сообщить("В выбранной МТК есть запущенные производственные задания!");
		КонецЕсли; 
	Иначе
	Сообщить("Для выбранного изделия не создана МТК!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СгруппироватьМТКНаСервере(ВыбДата)
ТаблицаМТК = Новый ТаблицаЗначений;
МассивСтрок = Новый Массив;

	Для каждого ТЧ Из Объект.Номенклатура Цикл
		Если НачалоДня(ТЧ.МТК.Дата) <> НачалоДня(ВыбДата) Тогда
		Индекс = Объект.Номенклатура.Индекс(Объект.Номенклатура.НайтиПоИдентификатору(ТЧ.ПолучитьИдентификатор()));	
		МассивСтрок.Добавить(Объект.Номенклатура.Получить(Индекс));
		Продолжить;		
		КонецЕсли; 
			Если МассивСтрок.Найти(ТЧ) = Неопределено Тогда	
				Если ТЧ.Количество >= 10 Тогда
				Индекс = Объект.Номенклатура.Индекс(Объект.Номенклатура.НайтиПоИдентификатору(ТЧ.ПолучитьИдентификатор()));	
				МассивСтрок.Добавить(Объект.Номенклатура.Получить(Индекс));
				Иначе
				МаксКол = ТЧ.Количество;
				Индекс = Объект.Номенклатура.Индекс(Объект.Номенклатура.НайтиПоИдентификатору(ТЧ.ПолучитьИдентификатор()));	
				МассивСтрок.Добавить(Объект.Номенклатура.Получить(Индекс));		
					Для каждого ТЧ1 Из Объект.Номенклатура Цикл
						Если НачалоДня(ТЧ.МТК.Дата) <> НачалоДня(ВыбДата) Тогда
						Продолжить;		
						КонецЕсли; 
							Если МассивСтрок.Найти(ТЧ1) = Неопределено Тогда	
								Если ТЧ1.Спецификация = ТЧ.Спецификация Тогда
									Если (ТЧ1.Количество + МаксКол) <= 10 Тогда	
									МаксКол = МаксКол + ТЧ1.Количество;
									Индекс = Объект.Номенклатура.Индекс(Объект.Номенклатура.НайтиПоИдентификатору(ТЧ1.ПолучитьИдентификатор()));	
									МассивСтрок.Добавить(Объект.Номенклатура.Получить(Индекс));
									КонецЕсли; 					
								КонецЕсли; 
							КонецЕсли; 
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;	 
	КонецЦикла;
ТаблицаМТК = Объект.Номенклатура.Выгрузить(МассивСтрок);
Объект.Номенклатура.Загрузить(ТаблицаМТК); 
КонецПроцедуры

&НаКлиенте
Процедура СгруппироватьМТК(Команда)
ВыбДата = ТекущаяДата();
	Если ВвестиДату(ВыбДата,"Введите дату",ЧастиДаты.Дата) Тогда
	СгруппироватьМТКНаСервере(ВыбДата);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПечатьМТК_ДетальНаСервере(СписокМТК)
ТабДок = Новый ТабличныйДокумент;

Макет = ПолучитьОбщийМакет("МТКДетали");
ОблМТК = Макет.ПолучитьОбласть("МТК");
ОблЭтикетка = Макет.ПолучитьОбласть("Этикетка");
	Для каждого Стр Из СписокМТК Цикл
	ТЧ = Объект.Номенклатура.НайтиПоИдентификатору(Стр.Значение);
	QRCode = ЗначениеВСтрокуВнутр(ТЧ.МТК);
	ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRCode, 0, 100);	
		Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
		КартинкаQRКода = Новый Картинка(ДанныеQRКода);
		ОблМТК.Рисунки.QRCode.Картинка = КартинкаQRКода;
		Иначе
		Сообщить("Не удалось сформировать QR-код!");
		КонецЕсли;
	ОблМТК.Параметры.МТКНомер = ТЧ.МТК.Номер;
	ОблМТК.Параметры.ДатаСоздания = ТЧ.МТК.Дата;
	ОблМТК.Параметры.Счёт = ТЧ.МТК.Счёт;
	ОблМТК.Параметры.Номенклатура = СокрЛП(ТЧ.МТК.Номенклатура.Наименование);
	ОблМТК.Параметры.Количество = ТЧ.МТК.Количество;
	ОблМТК.Параметры.ЕдиницаИзмерения = ТЧ.МТК.Номенклатура.ЕдиницаИзмерения;
	ТабДок.Вывести(ОблМТК);
	ОблЭтикетка.Параметры.Линейка = ТЧ.МТК.Линейка;
	ОблЭтикетка.Параметры.МТКНомер = ТЧ.МТК.Номер;
	ОблЭтикетка.Параметры.ДатаСоздания = ТЧ.МТК.Дата;
	ОблЭтикетка.Параметры.Номенклатура = СокрЛП(ТЧ.МТК.Номенклатура.Наименование);
	ОблЭтикетка.Параметры.Количество = ТЧ.МТК.Количество;
	ОблЭтикетка.Параметры.ЕдиницаИзмерения = ТЧ.МТК.Номенклатура.ЕдиницаИзмерения;
	ТабДок.Вывести(ОблЭтикетка);
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла; 
ТабДок.РазмерСтраницы = "A4";
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьМТК_Деталь(Команда)
СписокМТК = Новый СписокЗначений;

	Для каждого ТЧ из Элементы.Номенклатура.ВыделенныеСтроки Цикл
	СписокМТК.Добавить(ТЧ);
	КонецЦикла;
ТабДок = ПечатьМТК_ДетальНаСервере(СписокМТК);
ТабДок.Показать("МТК детали");
КонецПроцедуры

&НаСервере
Функция ПечатьМТК_Деталь1НаСервере(СписокМТК)
ТабДок = Новый ТабличныйДокумент;

Макет = ПолучитьОбщийМакет("МТКДетали");
ОблМТК = Макет.ПолучитьОбласть("МТК");
ОблЭтикетка = Макет.ПолучитьОбласть("Этикетка");
	Для каждого Стр Из СписокМТК Цикл
	ТЧ = ТаблицаКанбанов.НайтиПоИдентификатору(Стр.Значение);
	QRCode = ЗначениеВСтрокуВнутр(ТЧ.МТК);
	ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRCode, 0, 100);	
		Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
		КартинкаQRКода = Новый Картинка(ДанныеQRКода);
		ОблМТК.Рисунки.QRCode.Картинка = КартинкаQRКода;
		Иначе
		Сообщить("Не удалось сформировать QR-код!");
		КонецЕсли;
	ОблМТК.Параметры.МТКНомер = ТЧ.МТК.Номер;
	ОблМТК.Параметры.ДатаСоздания = ТЧ.МТК.Дата;
	ОблМТК.Параметры.Счёт = ТЧ.МТК.Счёт;
	ОблМТК.Параметры.Номенклатура = СокрЛП(ТЧ.МТК.Номенклатура.Наименование);
	ОблМТК.Параметры.Количество = ТЧ.МТК.Количество;
	ОблМТК.Параметры.ЕдиницаИзмерения = ТЧ.МТК.Номенклатура.ЕдиницаИзмерения;
	ТабДок.Вывести(ОблМТК);
	ОблЭтикетка.Параметры.Линейка = ТЧ.МТК.Линейка;
	ОблЭтикетка.Параметры.МТКНомер = ТЧ.МТК.Номер;
	ОблЭтикетка.Параметры.ДатаСоздания = ТЧ.МТК.Дата;
	ОблЭтикетка.Параметры.Номенклатура = СокрЛП(ТЧ.МТК.Номенклатура.Наименование);
	ОблЭтикетка.Параметры.Количество = ТЧ.МТК.Количество;
	ОблЭтикетка.Параметры.ЕдиницаИзмерения = ТЧ.МТК.Номенклатура.ЕдиницаИзмерения;
	ТабДок.Вывести(ОблЭтикетка);
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла; 
ТабДок.РазмерСтраницы = "A4";
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьМТК_Деталь1(Команда)
СписокМТК = Новый СписокЗначений;

	Для каждого ТЧ из Элементы.ТаблицаКанбанов.ВыделенныеСтроки Цикл
	СписокМТК.Добавить(ТЧ);
	КонецЦикла;
ТабДок = ПечатьМТК_Деталь1НаСервере(СписокМТК);
ТабДок.Показать("МТК детали");
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСборочныхЕдиниц(Команда)
СписокМТК = Новый СписокЗначений;

Результат = ОткрытьФормуМодально("ОбщаяФорма.ВыборПериодаСВременем");
	Если Результат <> Неопределено Тогда
		Для каждого ТЧ Из Объект.Номенклатура Цикл	
			Если ЗначениеЗаполнено(ТЧ.МТК) Тогда
			СписокМТК.Добавить(ТЧ.МТК);
			КонецЕсли; 		
		КонецЦикла;	
	ТабДок = ПечатьСборочныеЕдиницыЗаказанныхДатчиков(СписокМТК,Результат.ДатаНачала,Результат.ДатаОкончания);
	ТабДок.Показать("Сборочные единицы заказанных датчиков");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСборочныхЕдиницВсеЛинейки(Команда)
СписокМТК = Новый СписокЗначений;

Результат = ОткрытьФормуМодально("ОбщаяФорма.ВыборПериодаСВременем");
	Если Результат <> Неопределено Тогда
		Для каждого ТЧ Из ТаблицаЗаказных Цикл	
			Если ЗначениеЗаполнено(ТЧ.МТК) Тогда
			СписокМТК.Добавить(ТЧ.МТК);
			КонецЕсли; 		
		КонецЦикла;	
	ТабДок = ПечатьСборочныеЕдиницыЗаказанныхДатчиков(СписокМТК,Результат.ДатаНачала,Результат.ДатаОкончания);
	ТабДок.Показать("Сборочные единицы заказанных датчиков");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСборочныхЕдиницВыбранных(Команда)
СписокМТК = Новый СписокЗначений;

	Для каждого ТЧ Из Элементы.Номенклатура.ВыделенныеСтроки Цикл
	ТЧ_Стр = Объект.Номенклатура.НайтиПоИдентификатору(ТЧ);	
		Если ЗначениеЗаполнено(ТЧ_Стр.МТК) Тогда
		СписокМТК.Добавить(ТЧ_Стр.МТК);
		КонецЕсли; 		
	КонецЦикла;	
ТабДок = ПечатьСборочныеЕдиницыЗаказанныхДатчиков(СписокМТК);
ТабДок.Показать("Сборочные единицы заказанных датчиков");
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСборочныхЕдиницВсеЛинейкиВыбранных(Команда)
СписокМТК = Новый СписокЗначений;

	Для каждого ТЧ Из Элементы.ТаблицаЗаказных.ВыделенныеСтроки Цикл
	ТЧ_Стр = ТаблицаЗаказных.НайтиПоИдентификатору(ТЧ);	
		Если ЗначениеЗаполнено(ТЧ_Стр.МТК) Тогда
		СписокМТК.Добавить(ТЧ_Стр.МТК);
		КонецЕсли; 		
	КонецЦикла;	
ТабДок = ПечатьСборочныеЕдиницыЗаказанныхДатчиков(СписокМТК);
ТабДок.Показать("Сборочные единицы заказанных датчиков");
КонецПроцедуры

&НаСервере
Функция ПолучитьЛинейкуКанбана(Линейка,ВидКанбана)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛинейкиЛинейкиПотребители.Ссылка
	|ИЗ
	|	Справочник.Линейки.ЛинейкиПотребители КАК ЛинейкиЛинейкиПотребители
	|ГДЕ
	|	ЛинейкиЛинейкиПотребители.Линейка = &Линейка
	|	И ЛинейкиЛинейкиПотребители.Ссылка.ПометкаУдаления = ЛОЖЬ";
Запрос.УстановитьПараметр("Линейка", Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныхЗаписей = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныхЗаписей.Следующий() Цикл
		Если ВыборкаДетальныхЗаписей.Ссылка.ВидыКанбанов.Найти(ВидКанбана,"ВидКанбана") <> Неопределено Тогда
		Возврат(ВыборкаДетальныхЗаписей.Ссылка);
		КонецЕсли;
	КонецЦикла; 
Возврат(Неопределено);
КонецФункции 

&НаСервере
Функция ПодчиненнаяМТКСуществует(МТК,Спецификация)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Ссылка
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.ДокументОснование = &ДокументОснование
	|	И МаршрутнаяКарта.Номенклатура = &Номенклатура";
Запрос.УстановитьПараметр("ДокументОснование", МТК);
Запрос.УстановитьПараметр("Номенклатура", Спецификация);
РезультатЗапроса = Запрос.Выполнить();
Возврат(Не РезультатЗапроса.Пустой());
КонецФункции

&НаСервере
Функция РаскрытьНаМПЗ(МТК,Спецификация,Количество,Результат)
ВыборкаНР = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н(Спецификация,ТекущаяДата());
	Пока ВыборкаНР.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаНР.Элемент.Канбан) Тогда
			Если ВыборкаНР.Элемент.Канбан.Служебный Тогда
				Если Не ПодчиненнаяМТКСуществует(МТК,ВыборкаНР.Элемент) Тогда
					Если ВыборкаНР.Элемент.Линейка.Пустая() Тогда
					ЛинейкаКанбана = ПолучитьЛинейкуКанбана(МТК.Линейка,ВыборкаНР.Элемент.Канбан);
						Если ЛинейкаКанбана <> Неопределено Тогда
						ВыбМТК = ОбщийМодульСозданиеДокументов.СоздатьМТККанбан(ЛинейкаКанбана,МТК.Линейка.МестоХраненияКанбанов,1,ВыборкаНР.Элемент,ВыборкаНР.Норма*Количество,Ложь,МТК);
						Иначе
						Результат = Ложь;
						Сообщить(МТК.Номер+" > "+СокрЛП(ВыборкаНР.Элемент.Наименование)+" - не найдена линейка-поставщик канбана для "+МТК.Линейка);
						Возврат(Результат);
						КонецЕсли;					
					Иначе	
					СтдКом = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Изделия для производства комплектов",Истина); 
					ВыбМТК = ОбщийМодульСозданиеДокументов.СоздатьМТК(ВыборкаНР.Элемент.Линейка,ВыборкаНР.Элемент,Количество*ВыборкаНР.Норма,СтдКом,Справочники.Проекты.ПустаяСсылка(),Ложь,Истина,"","",,МТК,,МТК.Линейка.МестоХраненияКанбанов);
					КонецЕсли;
				Иначе
				Сообщить(МТК.Номер+" > "+СокрЛП(ВыборкаНР.Элемент.Наименование)+" - МТК на канбан существует!");
				КонецЕсли; 
			Результат = РаскрытьНаМПЗ(ВыбМТК,ВыборкаНР.Элемент,ВыборкаНР.Норма*Количество,Результат);
			КонецЕсли;
		Иначе
		Результат = РаскрытьНаМПЗ(МТК,ВыборкаНР.Элемент,ВыборкаНР.Норма*Количество,Результат);		
		КонецЕсли; 
	КонецЦикла;
Возврат(Результат);
КонецФункции
 
&НаСервере
Процедура СоздатьПодчиненныеМТКНаСервере()
	Для каждого ТЧ Из Объект.Номенклатура Цикл
		Если ЗначениеЗаполнено(ТЧ.МТК) Тогда
			Попытка
			НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;	
				Если Не РаскрытьНаМПЗ(ТЧ.МТК,ТЧ.Спецификация,ТЧ.Количество,Истина) Тогда
				Сообщить(ТЧ.МТК.Номер+" - подчиненные МТК не созданы!");
				ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
				Продолжить;
				КонецЕсли;
			ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
			Исключение
			Сообщить(ОписаниеОшибки());
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			КонецПопытки;
		КонецЕсли;		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПодчиненныеМТК(Команда)
СоздатьПодчиненныеМТКНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьПодчиненныеМТКВсехЛинеекНаСервере()
	Для каждого ТЧ Из ТаблицаЗаказных Цикл
		Если ЗначениеЗаполнено(ТЧ.МТК) Тогда
		РаскрытьНаМПЗ(ТЧ.МТК,ТЧ.Спецификация,ТЧ.Количество,Истина);
		КонецЕсли;		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПодчиненныеМТКВсехЛинеек(Команда)
СоздатьПодчиненныеМТКВсехЛинеекНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьПодчиненныеМТКВыборочноНаСервере(Стр)
ТЧ = Объект.Номенклатура.НайтиПоИдентификатору(Стр);
	Если ЗначениеЗаполнено(ТЧ.МТК) Тогда
		Попытка
		НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;	
			Если Не РаскрытьНаМПЗ(ТЧ.МТК,ТЧ.Спецификация,ТЧ.Количество,Истина) Тогда
			Сообщить(ТЧ.МТК.Номер+" - подчиненные МТК не созданы!");
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			Возврат;
			КонецЕсли;
		ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
		Исключение
		Сообщить(ОписаниеОшибки());
		ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
		КонецПопытки;
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПодчиненныеМТКВыборочно(Команда)
	Для каждого Стр Из Элементы.Номенклатура.ВыделенныеСтроки Цикл
	СоздатьПодчиненныеМТКВыборочноНаСервере(Стр);	
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Функция ПолучитьПервоеРабочееМесто(ВыбЛинейка)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РабочиеМестаЛинеек.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.РабочиеМестаЛинеек КАК РабочиеМестаЛинеек
	|ГДЕ
	|	РабочиеМестаЛинеек.Линейка = &Линейка
	|	И РабочиеМестаЛинеек.Код = 1
	|	И РабочиеМестаЛинеек.ЭтоГруппа = ЛОЖЬ";
Запрос.УстановитьПараметр("Линейка", ВыбЛинейка);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.Ссылка);	
	КонецЦикла;
Возврат(Справочники.РабочиеМестаЛинеек.ПустаяСсылка()); 	
КонецФункции 

&НаСервере
Процедура ИзменитьЛинейкуНаСервере(ВыбЛинейка)
Запрос = Новый Запрос;

	Для каждого ТЧ Из Объект.Номенклатура Цикл
		Если ТЧ.Пометка Тогда
			Если Не ТЧ.МТК.Пустая() Тогда
				Если ТЧ.МТК.Статус = 0 Тогда
					Попытка
					НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
					МТКОбъект = ТЧ.МТК.ПолучитьОбъект();
		            МТКОбъект.Линейка = ВыбЛинейка;
					МТКОбъект.Записать(РежимЗаписиДокумента.Проведение);
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	ПроизводственноеЗадание.Ссылка КАК Ссылка
						|ИЗ
						|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
						|ГДЕ
						|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование";
					Запрос.УстановитьПараметр("ДокументОснование", ТЧ.МТК);
					РезультатЗапроса = Запрос.Выполнить();
					ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
						Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
						ПЗОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			            ПЗОбъект.Линейка = ВыбЛинейка;
						ПЗОбъект.Записать(РежимЗаписиДокумента.Запись);
						НаборЗаписей = РегистрыСведений.ЭтапыПроизводственныхЗаданий.СоздатьНаборЗаписей();
						НаборЗаписей.Отбор.ПЗ.Установить(ВыборкаДетальныеЗаписи.Ссылка);
						НаборЗаписей.Прочитать();
						    Для Каждого Запись Из НаборЗаписей Цикл
							Запись.Линейка = ВыбЛинейка;
							Запись.РабочееМесто = ПолучитьПервоеРабочееМесто(ВыбЛинейка);
							КонецЦикла;
						НаборЗаписей.Записать();
						КонецЦикла;
					ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
					ТЧ.Линейка = ВыбЛинейка;
					Исключение
					Сообщить(ОписаниеОшибки());
					ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
					КонецПопытки; 
				Иначе	
				Сообщить(""+ТЧ.МТК+" - находится не в статусе ожидания!");
				КонецЕсли;
			КонецЕсли;		
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЛинейку(Команда)
ВыбЛинейка = Объект.Линейка;
	Если ВвестиЗначение(ВыбЛинейка,"Выберите линейку",Тип("СправочникСсылка.Линейки")) Тогда
	ИзменитьЛинейкуНаСервере(ВыбЛинейка);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура СоздатьМТККанбановНаСервере(РазрешитьОформлятьПустыеКанбаны)
	Для каждого ТЧ из ТаблицаКанбанов Цикл
		Если ТЧ.МТК.Пустая() Тогда
			Если ТЧ.Количество > 0 Тогда		
			МТК = ОбщийМодульСозданиеДокументов.СоздатьМТККанбан(ТЧ.Линейка,ТЧ.МестоХраненияПотребителя,ТЧ.НомерЯчейки,ТЧ.Изделие,ТЧ.Количество,РазрешитьОформлятьПустыеКанбаны);			
			ТЧ.МТК = МТК;
			КонецЕсли; 
		КонецЕсли;		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМТККанбанов(Команда)
СоздатьМТККанбановНаСервере(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМТККанбановБезОформления(Команда)
	Если Вопрос("Вы действительно хотите создать МТК
				|без оформления пустых канбанов?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
	СоздатьМТККанбановНаСервере(Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТаблицуКанбанов(Команда)
ТаблицаКанбанов.Очистить();
КонецПроцедуры
