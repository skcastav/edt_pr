
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ГруппаСпецификаций") Тогда
		Если Параметры.ГруппаСпецификаций.ЭтоГруппа Тогда
		СписокГруппСпецификаций.Добавить(Параметры.ГруппаСпецификаций);
		ДобавитьСпецификацииНаСервере(Параметры.ГруппаСпецификаций);
		Иначе	
		ТЧ = Объект.ТабличнаяЧасть.Добавить();
		ТЧ.Спецификация = Параметры.ГруппаСпецификаций;
		ТЧ.Статус = ПолучитьСтатус(Параметры.ГруппаСпецификаций);		
		КонецЕсли;
	ИначеЕсли Параметры.Свойство("СписокНоменклатуры") Тогда
		Для каждого Номен Из Параметры.СписокНоменклатуры Цикл
		ТЧ = Объект.ТабличнаяЧасть.Добавить();
		ТЧ.Спецификация = Номен.Значение;
		ТЧ.Статус = ПолучитьСтатус(Номен.Значение);
		КонецЦикла;
	ИначеЕсли Параметры.Свойство("НаДату") Тогда
    ИзвещениеОбИзменениях = Параметры.ИзвещениеОбИзменениях;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ДобавитьСпецификацииНаСервере(ВыбГруппа)
Выборка = Справочники.Номенклатура.ВыбратьИерархически(ВыбГруппа);
	Пока Выборка.Следующий() Цикл
		Если Выборка.ЭтоГруппа Тогда
		Продолжить;
		КонецЕсли;
	НайденныеСпецификации = Объект.ТабличнаяЧасть.НайтиСтроки(Новый Структура("Спецификация",Выборка.Ссылка));
		Если НайденныеСпецификации.Количество() = 0 Тогда
		ТЧ = Объект.ТабличнаяЧасть.Добавить();
		ТЧ.Спецификация = Выборка.Ссылка;
		ТЧ.Статус = ПолучитьСтатус(Выборка.Ссылка);			
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьГруппу(Команда)
Ф = ПолучитьФорму("Справочник.Номенклатура.ФормаВыбораГруппы");
Результат = Ф.ОткрытьМодально();
	Если Результат = Неопределено Тогда
	Возврат;
	КонецЕсли; 
ДобавитьСпецификацииНаСервере(Результат);
КонецПроцедуры

&НаСервере
Процедура ДобавитьСпецификацииНаСервере1()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В ИЕРАРХИИ(&СписокГруппСпецификаций)
	|	И Номенклатура.ЭтоГруппа = ЛОЖЬ";
Запрос.УстановитьПараметр("СписокГруппСпецификаций", СписокГруппСпецификаций);
	Если ЗначениеЗаполнено(ШаблонОтбораСпецификаций) Тогда
	Запрос.Текст = Запрос.Текст + " И Номенклатура.Наименование ПОДОБНО &Наименование";	
	Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(ШаблонОтбораСпецификаций,";");
	Подстроки = "%";
		Для к = 0 По Массив.Количество()-1 Цикл
		Подстроки = Подстроки + Массив[к] + "%";
		КонецЦикла;
	Запрос.УстановитьПараметр("Наименование", Подстроки);
	КонецЕсли;
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = Объект.ТабличнаяЧасть.Добавить();
	ТЧ.Спецификация = ВыборкаДетальныеЗаписи.Ссылка;
	ТЧ.Статус = ПолучитьСтатус(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСпецификации(Команда)
ДобавитьСпецификацииНаСервере1();
КонецПроцедуры

&НаСервере
Процедура РаскрытьНаМПЗ(Спецификация)
ВыборкаДетальныеЗаписи = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н_М(Спецификация,ТекущаяДата());
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл	
		Если ТипЗнч(ВыборкаДетальныеЗаписи.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
		Выборка = табМПЗ.НайтиСтроки(Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.Элемент));
			Если Выборка.Количество() = 0 Тогда
			ТЧ = табМПЗ.Добавить();
			ТЧ.МПЗ = ВыборкаДетальныеЗаписи.Элемент;
			ТЧ.Статус = ПолучитьСтатус(ТЧ.МПЗ);
			ТЧ.Уникальный = Истина;
			КонецЕсли;				
		Иначе
		Выборка = табУзлы.НайтиСтроки(Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.Элемент));
			Если Выборка.Количество() = 0 Тогда
			ТЧ = табУзлы.Добавить();
			ТЧ.МПЗ = ВыборкаДетальныеЗаписи.Элемент;
			ТЧ.Статус = ПолучитьСтатус(ТЧ.МПЗ);
			ТЧ.Уникальный = Истина;
			КонецЕсли;				
		РаскрытьНаМПЗ(ВыборкаДетальныеЗаписи.Элемент);
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСоставНаСервере()
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		Если ТЧ.Пометка Тогда
		ТекСтатус = ТЧ.Статус; 
		Прервать;
		КонецЕсли;
	КонецЦикла;
		Если ТекСтатус = Объект.НовыйСтатус Тогда
		Сообщить("Новый статус совпадает со статусом выбранных спецификаций!");
		Возврат;
		КонецЕсли;
			Если ТекСтатус = Перечисления.СтатусыСпецификаций.ДоИсчерпанияЗапасов и Объект.НовыйСтатус <> Перечисления.СтатусыСпецификаций.Запрещённая Тогда
			Сообщить("Спецификацию до исчерпания запаса можно только запретить!");
			Возврат;
			КонецЕсли; 
				Если ТекСтатус = Перечисления.СтатусыСпецификаций.ПустаяСсылка() Тогда
				ИндексТекущегоСтатуса = -1;
				Иначе	
				ИндексТекущегоСтатуса = Перечисления.СтатусыСпецификаций.Индекс(ТекСтатус);
				КонецЕсли;
ИндексНовогоСтатуса = Перечисления.СтатусыСпецификаций.Индекс(Объект.НовыйСтатус);
ИндексНовогоСтатусаМПЗ = Перечисления.СтатусыМПЗ.Индекс(НовыйСтатусМПЗ);
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		Если ТЧ.Пометка Тогда
		ТЗ = табУзлы.Добавить();
		ТЗ.МПЗ = ТЧ.Спецификация;
		ТЗ.Статус = ПолучитьСтатус(ТЗ.МПЗ);
		ТЗ.Уникальный = Истина;
		РаскрытьНаМПЗ(ТЗ.МПЗ);
		КонецЕсли;
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ПроверитьУникальностьПФ(ТЧ)
ТЧ.Проверен = Истина;
флУникальный = Истина;

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	АналогиНормРасходов.Владелец КАК Владелец
	|ИЗ
	|	РегистрСведений.АналогиНормРасходов.СрезПоследних(&НаДату, ) КАК АналогиНормРасходовСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АналогиНормРасходов КАК АналогиНормРасходов
	|		ПО АналогиНормРасходовСрезПоследних.АналогНормыРасходов = АналогиНормРасходов.Ссылка
	|ГДЕ
	|	АналогиНормРасходов.Элемент = &Элемент
	|	И АналогиНормРасходовСрезПоследних.Норма > 0";
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("Элемент", ТЧ.МПЗ);
РезультатЗапроса = Запрос.Выполнить();
ТЧ.Аналог = Не РезультатЗапроса.Пустой();

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходовСрезПоследних.Владелец КАК Владелец
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(&НаДату, Элемент = &Элемент) КАК НормыРасходовСрезПоследних
	|ГДЕ
	|	НормыРасходовСрезПоследних.Норма > 0
	|	И НормыРасходовСрезПоследних.НормаРасходов.ПометкаУдаления = ЛОЖЬ";
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("Элемент", ТЧ.МПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Выборка = табУзлы.НайтиСтроки(Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.Владелец));	
		Если Выборка.Количество() > 0 Тогда
			Если Выборка[0].Проверен Тогда
				Если Не Выборка[0].Уникальный или Выборка[0].Аналог Тогда
				ТЧ.Уникальный = Ложь;
				Возврат;
				КонецЕсли;
			Иначе
			ПроверитьУникальностьПФ(Выборка[0]);			
				Если Не Выборка[0].Уникальный или Выборка[0].Аналог Тогда
				ТЧ.Уникальный = Ложь;
				Возврат;
				КонецЕсли; 
			КонецЕсли;
		Иначе
			Если ПолучитьСтатус(ВыборкаДетальныеЗаписи.Владелец) <> Перечисления.СтатусыСпецификаций.Запрещённая Тогда
			флУникальный = Ложь;
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
ТЧ.Уникальный = флУникальный;
КонецПроцедуры

&НаСервере
Функция ПроверитьУникальностьМПЗ(МПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходовСрезПоследних.Владелец КАК Владелец
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(&НаДату, Элемент = &Элемент) КАК НормыРасходовСрезПоследних
	|ГДЕ
	|	НормыРасходовСрезПоследних.Норма > 0
	|	И НормыРасходовСрезПоследних.НормаРасходов.ПометкаУдаления = ЛОЖЬ";
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("Элемент", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ПолучитьСтатус(ВыборкаДетальныеЗаписи.Владелец) = Перечисления.СтатусыСпецификаций.Запрещённая Тогда
		Продолжить;
		КонецЕсли;
	Выборка = табУзлы.НайтиСтроки(Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.Владелец));	
		Если Выборка.Количество() > 0 Тогда
			Если Не Выборка[0].Уникальный Тогда
			Возврат(Ложь);		
			КонецЕсли; 
		Иначе
		Возврат(Ложь);
		КонецЕсли;	
	КонецЦикла;
Возврат(Истина);
КонецФункции

&НаСервере
Функция ПроверитьНаАналоги(МПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	АналогиНормРасходов.Владелец КАК Владелец
	|ИЗ
	|	РегистрСведений.АналогиНормРасходов.СрезПоследних(&НаДату, ) КАК АналогиНормРасходовСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АналогиНормРасходов КАК АналогиНормРасходов
	|		ПО АналогиНормРасходовСрезПоследних.АналогНормыРасходов = АналогиНормРасходов.Ссылка
	|ГДЕ
	|	АналогиНормРасходов.Элемент = &Элемент
	|	И АналогиНормРасходовСрезПоследних.Норма > 0";
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("Элемент", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
Возврат(Не РезультатЗапроса.Пустой());
КонецФункции

&НаСервере
Процедура ПроверитьУникальность()
	Для каждого ТЧ Из табУзлы Цикл
		Если Не ТЧ.Проверен Тогда
		ПроверитьУникальностьПФ(ТЧ);
		КонецЕсли;
	КонецЦикла;
	 	Для каждого ТЧ Из табМПЗ Цикл
		ТЧ.Уникальный = ПроверитьУникальностьМПЗ(ТЧ.МПЗ);
		ТЧ.Аналог = ПроверитьНаАналоги(ТЧ.МПЗ);
		КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОпределитьНовыеСтатусы()
	Для каждого ТЧ Из табУзлы Цикл
	ИндексТекущегоСтатуса = ?(ТЧ.Статус = Перечисления.СтатусыСпецификаций.ПустаяСсылка(),-1,Перечисления.СтатусыСпецификаций.Индекс(ТЧ.Статус));				 
		Если (ТЧ.Статус <> Перечисления.СтатусыСпецификаций.ДоИсчерпанияЗапасов)и
			 (ТЧ.Статус <> Перечисления.СтатусыСпецификаций.Запрещённая) Тогда				
			Если ИндексТекущегоСтатуса > ИндексНовогоСтатуса Тогда
			ТЧ.НовыйСтатус = Объект.НовыйСтатус;
			Иначе
			ТЧ.НовыйСтатус = ТЧ.Статус;
			КонецЕсли;
		Иначе
		ТЧ.НовыйСтатус = ТЧ.Статус;
		КонецЕсли;		
	КонецЦикла;
	 	Для каждого ТЧ Из табМПЗ Цикл
		ИндексТекущегоСтатусаМПЗ = ?(ТЧ.Статус = Перечисления.СтатусыМПЗ.ПустаяСсылка(),-1,Перечисления.СтатусыМПЗ.Индекс(ТЧ.Статус));				 
			Если (ТЧ.Статус <> Перечисления.СтатусыМПЗ.ДоИсчерпанияЗапасов)и
				 (ТЧ.Статус <> Перечисления.СтатусыМПЗ.Запрещённая) Тогда				
				Если ИндексТекущегоСтатусаМПЗ > ИндексНовогоСтатусаМПЗ Тогда
				ТЧ.НовыйСтатус = НовыйСтатусМПЗ;
				Иначе
				ТЧ.НовыйСтатус = ТЧ.Статус;
				КонецЕсли;
			Иначе
			ТЧ.НовыйСтатус = ТЧ.Статус;
			КонецЕсли;
		КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОпределитьНовыеСтатусыУникальных()
	Для каждого ТЧ Из табУзлы Цикл
		Если ТЧ.Уникальный и Не ТЧ.Аналог Тогда
		ИндексТекущегоСтатуса = ?(ТЧ.Статус = Перечисления.СтатусыСпецификаций.ПустаяСсылка(),-1,Перечисления.СтатусыСпецификаций.Индекс(ТЧ.Статус));
			//Если ТЧ.Статус <> Перечисления.СтатусыСпецификаций.ДоИсчерпанияЗапасов Тогда				
				Если ИндексТекущегоСтатуса < ИндексНовогоСтатуса Тогда
				ТЧ.НовыйСтатус = Объект.НовыйСтатус;
				Иначе
				ТЧ.НовыйСтатус = ТЧ.Статус;
				КонецЕсли;
			//Иначе
			//ТЧ.НовыйСтатус = ТЧ.Статус;
			//КонецЕсли;
		Иначе
		ТЧ.НовыйСтатус = ТЧ.Статус;
		КонецЕсли;		
	КонецЦикла;
	 	Для каждого ТЧ Из табМПЗ Цикл
			Если ТЧ.Уникальный и Не ТЧ.Аналог Тогда
				Если НовыйСтатусМПЗ = Перечисления.СтатусыМПЗ.Запрещённая Тогда
				ТЧ.НовыйСтатус = Перечисления.СтатусыМПЗ.ПустаяСсылка();
				Продолжить;
				КонецЕсли;
			ИндексТекущегоСтатусаМПЗ = ?(ТЧ.Статус = Перечисления.СтатусыМПЗ.ПустаяСсылка(),-1,Перечисления.СтатусыМПЗ.Индекс(ТЧ.Статус));
				//Если ТЧ.Статус <> Перечисления.СтатусыМПЗ.ДоИсчерпанияЗапасов Тогда				
					Если ИндексТекущегоСтатусаМПЗ < ИндексНовогоСтатусаМПЗ Тогда
					ТЧ.НовыйСтатус = НовыйСтатусМПЗ;
					Иначе
					ТЧ.НовыйСтатус = ТЧ.Статус;
					КонецЕсли;
				//Иначе
				//ТЧ.НовыйСтатус = ТЧ.Статус;
				//КонецЕсли;
			Иначе
			ТЧ.НовыйСтатус = ТЧ.Статус;
			КонецЕсли;
		КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСостав(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	Состояние("Обработка...",,"Получение состава спецификаций");
	табМПЗ.Очистить();
	табУзлы.Очистить();
	ПолучитьСоставНаСервере();
	табМПЗ.Сортировать("МПЗ");
	//табУзлы.Сортировать("МПЗ");
		Если ИндексТекущегоСтатуса > ИндексНовогоСтатуса Тогда //если новый статус выше (например меняем ОНР на А)
		Элементы.табМПЗУникальный.Видимость = Ложь;
		Элементы.табУзлыУникальный.Видимость = Ложь;
		Элементы.табМПЗАналог.Видимость = Ложь;
		Элементы.табУзлыАналог.Видимость = Ложь;
		ОпределитьНовыеСтатусы();
		Иначе
		Состояние("Обработка...",,"Проверка уникальности");
		Элементы.табМПЗУникальный.Видимость = Истина;
		Элементы.табУзлыУникальный.Видимость = Истина;
		Элементы.табМПЗАналог.Видимость = Истина;
		Элементы.табУзлыАналог.Видимость = Истина;
		ПроверитьУникальность();
		ОпределитьНовыеСтатусыУникальных();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ИзменитьСтатусыНаСервере()
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1; 
		Для каждого ТЧ Из табМПЗ Цикл
			Если ТЧ.Статус <> ТЧ.НовыйСтатус Тогда
			Статус = РегистрыСведений.СтатусыМПЗ.СоздатьМенеджерЗаписи();
			Статус.Период = ТекущаяДата();
			Статус.МПЗ = ТЧ.МПЗ;
			Статус.Статус = ТЧ.НовыйСтатус;
			Статус.Записать();				 
			КонецЕсли;
		КонецЦикла; 
			Для каждого ТЧ Из табУзлы Цикл
				Если ТЧ.Статус <> ТЧ.НовыйСтатус Тогда
				Статус = РегистрыСведений.СтатусыМПЗ.СоздатьМенеджерЗаписи();
				Статус.Период = ТекущаяДата();
				Статус.МПЗ = ТЧ.МПЗ;
				Статус.Статус = ТЧ.НовыйСтатус;
				Статус.Записать();				 
				КонецЕсли;
			КонецЦикла;
				Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
					Если ТЧ.Пометка Тогда
					ТЧ.Статус = Объект.НовыйСтатус;
						Если Не ИзвещениеОбИзменениях.Пустая() Тогда
						ИОИ = РегистрыСведений.ИзвещенияОбИзменениях.СоздатьМенеджерЗаписи();
						ИОИ.Элемент = ТЧ.Спецификация;
						ИОИ.Извещение = ИзвещениеОбИзменениях;
						ИОИ.Записать();
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
					Если Не ИзвещениеОбИзменениях.Пустая() Тогда
                    НаборЗаписей = РегистрыСведений.ОтложенныеЗадания.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.Извещение.Установить(ИзвещениеОбИзменениях);
					НаборЗаписей.Записать();
					КонецЕсли;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСтатусы(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		Если табМПЗ.Количество() > 0 Тогда
		Состояние("Обработка...",,"Изменение статусов");
		ИзменитьСтатусыНаСервере();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВыбратьСоСтатусомНаСервере()
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		Если ТЧ.Статус = СтатусСпецификаций Тогда
		ТЧ.Пометка = Истина;
		Иначе
		ТЧ.Пометка = Ложь;
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСоСтатусом(Команда)
ВыбратьСоСтатусомНаСервере(); 
КонецПроцедуры

&НаСервере
Процедура НовыйСтатусПриИзмененииНаСервере()
	Если Объект.НовыйСтатус = Перечисления.СтатусыСпецификаций.ОНР Тогда
	НовыйСтатусМПЗ = Перечисления.СтатусыМПЗ.ОНР;
	ИначеЕсли Объект.НовыйСтатус = Перечисления.СтатусыСпецификаций.ДоИсчерпанияЗапасов Тогда
	НовыйСтатусМПЗ = Перечисления.СтатусыМПЗ.ДоИсчерпанияЗапасов;
	ИначеЕсли Объект.НовыйСтатус = Перечисления.СтатусыСпецификаций.Запрещённая Тогда
	НовыйСтатусМПЗ = Перечисления.СтатусыМПЗ.Запрещённая;
	Иначе
	НовыйСтатусМПЗ = Перечисления.СтатусыМПЗ.Основная;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура НовыйСтатусПриИзменении(Элемент)
табУзлы.Очистить();
табМПЗ.Очистить();
НовыйСтатусПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПометитьСтатус(Статус)
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл		
		Если ТЧ.Статус = Статус Тогда
		ТЧ.Пометка = Истина;	
		Иначе
		ТЧ.Пометка = Ложь;
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ЭтоЗапрещенныйСтатус(Статус)
Возврат(?(Статус = Перечисления.СтатусыСпецификаций.Запрещённая,Истина,Ложь));
КонецФункции 

&НаКлиенте
Процедура ТабличнаяЧастьПометкаПриИзменении(Элемент)
	Если Элементы.ТабличнаяЧасть.ТекущиеДанные.Пометка Тогда
		Если Не ЭтоЗапрещенныйСтатус(Элементы.ТабличнаяЧасть.ТекущиеДанные.Статус) Тогда
		табМПЗ.Очистить();
		табУзлы.Очистить();
		ПометитьСтатус(Элементы.ТабличнаяЧасть.ТекущиеДанные.Статус);
		Иначе
		Элементы.ТабличнаяЧасть.ТекущиеДанные.Пометка = Ложь;
		Сообщить("Нельзя выбирать запрещенные спецификации!");
		КонецЕсли;
	КонецЕсли;  
КонецПроцедуры

&НаСервере
Процедура ДобавитьНоменклатуру(Наименование)
Номен = Справочники.Номенклатура.НайтиПоНаименованию(Наименование,Истина);
	Если Не Номен.Пустая() Тогда
	НайденныеСпецификации = Объект.ТабличнаяЧасть.НайтиСтроки(Новый Структура("Спецификация",Номен));
		Если НайденныеСпецификации.Количество() = 0 Тогда
		ТЧ = Объект.ТабличнаяЧасть.Добавить();
		ТЧ.Спецификация = Номен;
		ТЧ.Статус = ПолучитьСтатус(Номен);			
		КонецЕсли;
	Иначе	
	Сообщить(Наименование+" - спецификация не найдена!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл cо спецификациями");
	Если Результат <> Неопределено Тогда
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок; 
	    Для к = 2 по КолСтрок Цикл
		Состояние("Обработка...",к*100/КолСтрок,"Загрузка номенклатуры из файла...");
		ДобавитьНоменклатуру(СокрЛП(ExcelЛист.Cells(к,1).Value)); 
	    КонецЦикла;
	Результат.Excel.Quit();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСпецификации(Команда)
Объект.ТабличнаяЧасть.Очистить();
табУзлы.Очистить();
табМПЗ.Очистить();
КонецПроцедуры
