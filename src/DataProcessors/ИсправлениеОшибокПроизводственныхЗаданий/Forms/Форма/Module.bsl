 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Период.ДатаНачала = НачалоМесяца(ТекущаяДата());
Период.ДатаОкончания = ТекущаяДата();
КонецПроцедуры
  
&НаСервере
Процедура ПолучитьВыпуски(ТЧ)
Запрос = Новый Запрос;

ДатаПП = ТекущаяДата();
                 
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаВПроизводство.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПередачаВПроизводство КАК ПередачаВПроизводство
	|ГДЕ
	|	ПередачаВПроизводство.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", ТЧ.ПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ.ПП = ВыборкаДетальныеЗаписи.Ссылка;
	ДатаПП = ВыборкаДетальныеЗаписи.Ссылка.Дата;	
	КонецЦикла;                           

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданий.РабочееМесто КАК РабочееМесто, 
	|	ЭтапыПроизводственныхЗаданий.Исполнитель КАК Исполнитель,
	|	ЭтапыПроизводственныхЗаданий.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданий.ПЗ = &ПЗ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтапыПроизводственныхЗаданий.Период";
Запрос.УстановитьПараметр("ПЗ", ТЧ.ПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
ГруппаРМ = Неопределено;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Выборка = ТЧ.ТаблицаВыпусков.НайтиСтроки(Новый Структура("ГруппаРМ",ВыборкаДетальныеЗаписи.РабочееМесто.ГруппаРабочихМест));
		Если Выборка.Количество() = 0 Тогда
		ТЧ_ТВ = ТЧ.ТаблицаВыпусков.Добавить();
		ТЧ_ТВ.ГруппаРМ = ВыборкаДетальныеЗаписи.РабочееМесто.ГруппаРабочихМест;
		ТЧ_ТВ.РабочееМесто = ВыборкаДетальныеЗаписи.РабочееМесто;	
		ТЧ_ТВ.ДатаОкончания = ВыборкаДетальныеЗаписи.ДатаОкончания;
		ТЧ_ТВ.Исполнитель = ВыборкаДетальныеЗаписи.Исполнитель;
		Иначе
		Выборка[0].РабочееМесто = ВыборкаДетальныеЗаписи.РабочееМесто;
       	Выборка[0].ДатаОкончания = ВыборкаДетальныеЗаписи.ДатаОкончания;
		Выборка[0].Исполнитель = ВыборкаДетальныеЗаписи.Исполнитель;
		КонецЕсли;	
	КонецЦикла;
		Для каждого ТЧ_ТВ Из ТЧ.ТаблицаВыпусков Цикл
		ТЧ_ТВ.Выпуск = Документы.ВыпускПродукции.НайтиПоНомеру(ТЧ.ПЗ.Номер+"-"+СокрЛП(ТЧ_ТВ.ГруппаРМ.Префикс),ТЧ_ТВ.ДатаОкончания);	
			Если Не ТЧ_ТВ.Выпуск.Пустая() Тогда
				Если ТЧ_ТВ.Выпуск.Дата < ДатаПП Тогда
				ТЧ.Ошибки = " есть выпуск раньше передачи";			
				КонецЕсли;
			КонецЕсли;		
		КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПолучитьПЗНаСервере()
ТаблицаПЗ.Очистить();

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачиВПроизводствоОстатки.Документ КАК Документ,
	|	ПередачиВПроизводствоОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ПередачиВПроизводство.Остатки КАК ПередачиВПроизводствоОстатки
	|ГДЕ
	|	ПередачиВПроизводствоОстатки.КоличествоОстаток <> 0
	|	И ПередачиВПроизводствоОстатки.Документ ССЫЛКА Документ.ПроизводственноеЗадание
	|	И ПередачиВПроизводствоОстатки.Документ.ДокументОснование.Статус = 3
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПередачиВПроизводствоОстатки.Документ.Дата,
	|	ПередачиВПроизводствоОстатки.Документ.Номер
	|ИТОГИ
	|	СУММА(КоличествоОстаток)
	|ПО
	|	Документ";
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДокумент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДокумент.Следующий() Цикл
	ТЧ = ТаблицаПЗ.Добавить();
	ТЧ.ПЗ = ВыборкаДокумент.Документ;
	ТЧ.Изделие = ВыборкаДокумент.Документ.Изделие;
	ПолучитьВыпуски(ТЧ);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПроверитьПЗ(ТЧ)
ТЧ.ТаблицаРасхода.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачиВПроизводствоОбороты.МПЗ КАК МПЗ,
	|	ПередачиВПроизводствоОбороты.КоличествоПриход КАК КоличествоПриход,
	|	ПередачиВПроизводствоОбороты.КоличествоРасход КАК КоличествоРасход,
	|	ПередачиВПроизводствоОбороты.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ПередачиВПроизводство.Обороты(, , Регистратор, ) КАК ПередачиВПроизводствоОбороты
	|ГДЕ
	|	ПередачиВПроизводствоОбороты.Документ = &Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	МПЗ
	|ИТОГИ
	|	СУММА(КоличествоПриход),
	|	СУММА(КоличествоРасход)
	|ПО
	|	МПЗ";
Запрос.УстановитьПараметр("Документ",ТЧ.ПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМПЗ.Следующий() Цикл
		Если ВыборкаМПЗ.КоличествоПриход <> ВыборкаМПЗ.КоличествоРасход Тогда
		ВыборкаДетальныхЗаписей = ВыборкаМПЗ.Выбрать();
			Пока ВыборкаДетальныхЗаписей.Следующий() Цикл
			ТЧ_ТР = ТЧ.ТаблицаРасхода.Добавить(); 
			ТЧ_ТР.МПЗ = ВыборкаМПЗ.МПЗ;
			ТЧ_ТР.Приход = ВыборкаДетальныхЗаписей.КоличествоПриход;
 			ТЧ_ТР.Расход = ВыборкаДетальныхЗаписей.КоличествоРасход;
			ТЧ_ТР.Выпуск = ВыборкаДетальныхЗаписей.Регистратор;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	
Возврат(?(ТЧ.ТаблицаРасхода.Количество()=0,Истина,Ложь));
КонецФункции

&НаКлиенте
Процедура ПолучитьПЗ(Команда)
ПолучитьПЗНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьСпецификациюЭтапов(ПЗ,РабочееМесто)
СписокЭтапов = Новый СписокЗначений;

	Для каждого ТЧ Из Этапы Цикл
	ЭтапРМ = РабочееМесто.ТабличнаяЧасть.Найти(ТЧ.ГруппаНоменклатуры,"ГруппаНоменклатуры");
		Если ЭтапРМ = Неопределено Тогда
		Продолжить;
		КонецЕсли;
			Если ЭтапРМ.Комплектация Тогда
			ОбщийМодульВызовСервера.ПолучитьКомплектацию(ТЧ.ЭтапСпецификации,ТЧ.ЭтапСпецификации,ТЧ.Количество,Истина,ТаблицаКомплектации,ПЗ.ДатаЗапуска);
			Иначе
			ОбщийМодульВызовСервера.ПолучитьКомплектацию(ТЧ.ЭтапСпецификации,ТЧ.ЭтапСпецификации,ТЧ.Количество,Ложь,ТаблицаКомплектации,ПЗ.ДатаЗапуска);
			Выборка = ТаблицаКомплектации.НайтиСтроки(Новый Структура("ЭтапСпецификации",ТЧ.ЭтапСпецификации));
				Если Выборка.Количество() = 0 Тогда	
				ТЧТК = ТаблицаКомплектации.Добавить();
				ТЧТК.ЭтапСпецификации = ТЧ.ЭтапСпецификации;
				КонецЕсли;
			СписокЭтапов.Добавить(ТЧ.ЭтапСпецификации);
			ОбщийМодульВызовСервера.ПолучитьСпецификациюСАналогами(Объект.Спецификация,ПЗ,ТЧ.ЭтапСпецификации,ТЧ.ЭтапСпецификации,ТЧ.Количество);	
			КонецЕсли; 	
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ИсправитьОшибкиНаСервере()
	Для каждого ТЧ Из ТаблицаПЗ Цикл
	ТЧ.Ошибки = "";
		Для каждого ТЧ_ТВ Из ТЧ.ТаблицаВыпусков Цикл
			Если ЗначениеЗаполнено(ТЧ_ТВ.Выпуск) Тогда 
				Попытка
	            Выпуск = ТЧ_ТВ.Выпуск.ПолучитьОбъект();
				Выпуск.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
				ТЧ.Ошибки = ОписаниеОшибки();
				Прервать;
				КонецПопытки;
			Иначе
				Если ОбщийМодульВызовСервера.СоздатьТаблицуЭтаповПроизводства(ТЧ.ПЗ,Этапы,ЭтапыАРМ,ТЧ_ТВ.РабочееМесто,ТЧ_ТВ.Исполнитель,Ложь) Тогда	
                ТаблицаКомплектации.Очистить();
                Объект.Спецификация.Очистить();
				ПолучитьСпецификациюЭтапов(ТЧ.ПЗ,ТЧ_ТВ.РабочееМесто);	
					Если Не ОбщийМодульСозданиеДокументов.СоздатьВыпускПродукции(ТЧ.ПЗ,ТЧ_ТВ.РабочееМесто,Объект.Спецификация,Этапы,ТЧ_ТВ.ДатаОкончания) Тогда
					ТЧ.Ошибки = "выпуск не создан";
					Прервать;
					КонецЕсли;
				Иначе			
                ТЧ.Ошибки = "не создана таблица этапов";
				Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
			Если Не ЗначениеЗаполнено(ТЧ.Ошибки) Тогда
				Если ПроверитьПЗ(ТЧ) Тогда
				ТЧ.Обработана = Истина;
				Иначе
	            ТЧ.Ошибки = "есть остатки в ПП";
				КонецЕсли;		
			КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ИсправитьОшибки(Команда)
ИсправитьОшибкиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИсправитьОшибкиВВыбраннойНаСервере(Стр)
ТЧ = ТаблицаПЗ.НайтиПоИдентификатору(Стр);
ТЧ.Ошибки = "";
	Для каждого ТЧ_ТВ Из ТЧ.ТаблицаВыпусков Цикл
		Если ЗначениеЗаполнено(ТЧ_ТВ.Выпуск) Тогда 
			Попытка
            Выпуск = ТЧ_ТВ.Выпуск.ПолучитьОбъект();
			Выпуск.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
			ТЧ.Ошибки = ОписаниеОшибки();
			Возврат;
			КонецПопытки;
		Иначе
			Если ОбщийМодульВызовСервера.СоздатьТаблицуЭтаповПроизводства(ТЧ.ПЗ,Этапы,ЭтапыАРМ,ТЧ_ТВ.РабочееМесто,ТЧ_ТВ.Исполнитель,Ложь) Тогда	
            ТаблицаКомплектации.Очистить();
            Объект.Спецификация.Очистить();
			ПолучитьСпецификациюЭтапов(ТЧ.ПЗ,ТЧ_ТВ.РабочееМесто);  
				Если Не ОбщийМодульСозданиеДокументов.СоздатьВыпускПродукции(ТЧ.ПЗ,ТЧ_ТВ.РабочееМесто,Объект.Спецификация,Этапы,ТЧ_ТВ.ДатаОкончания) Тогда
				ТЧ.Ошибки = "выпуск не создан"; 
				Возврат;
				КонецЕсли;				
			Иначе			
            ТЧ.Ошибки = "не создана таблица этапов"; 
			Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		Если Не ЗначениеЗаполнено(ТЧ.Ошибки) Тогда
			Если ПроверитьПЗ(ТЧ) Тогда
			ТЧ.Обработана = Истина;
			Иначе
            ТЧ.Ошибки = "есть остатки в ПП";
			КонецЕсли;		
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИсправитьОшибкиВВыбранной(Команда)
ИсправитьОшибкиВВыбраннойНаСервере(Элементы.ТаблицаПЗ.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ПолучитьПЗ2НаСервере()
ТаблицаПЗ2.Очистить();

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаВПроизводство.Ссылка КАК ПП,
	|	ПередачаВПроизводство.ДокументОснование КАК ПЗ
	|ИЗ
	|	Документ.ПередачаВПроизводство КАК ПередачаВПроизводство
	|ГДЕ
	|	ПередачаВПроизводство.ДокументОснование.ДатаЗапуска = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаПЗ2.Добавить();
	ТЧ.ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
	ТЧ.ПП = ВыборкаДетальныеЗаписи.ПП;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПЗ2(Команда)
ПолучитьПЗ2НаСервере();
КонецПроцедуры

&НаСервере
Процедура ИсправитьОшибки2НаСервере()
	Для каждого ТЧ Из ТаблицаПЗ2 Цикл
    ПЗ = ТЧ.ПЗ.ПолучитьОбъект();
	ПЗ.ДатаЗапуска = ТЧ.ПП.Дата;
	ПЗ.Записать(РежимЗаписиДокумента.Запись);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ИсправитьОшибки2(Команда)
ИсправитьОшибки2НаСервере();
КонецПроцедуры
 
&НаСервере        
Функция ПроверитьДокументыСозданы(ТЧ)
	Для каждого ТЧ_ТВ Из ТЧ.ТаблицаВыпусков Цикл
    	Если Не ЗначениеЗаполнено(ТЧ_ТВ.Выпуск) Тогда
		Возврат(Ложь);
		КонецЕсли;
	КонецЦикла;
Возврат(Истина);
КонецФункции

&НаСервере
Процедура ПерепровестиНаСервере()
	Для каждого ТЧ Из ТаблицаПЗ Цикл 
		Если ПроверитьДокументыСозданы(ТЧ) Тогда
			Для каждого ТЧ_ТВ Из ТЧ.ТаблицаВыпусков Цикл
				Попытка
	            Выпуск = ТЧ_ТВ.Выпуск.ПолучитьОбъект();
				Выпуск.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
				ТЧ.Ошибки = ОписаниеОшибки();
				КонецПопытки;
			КонецЦикла; 
		Иначе
		ТЧ.Ошибки = "есть несозданные выпуски";
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Перепровести(Команда)
ПерепровестиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьДокументыСОшибкамиНаСервере()
ТаблицаДокументов.Очистить();
Запрос = Новый Запрос;
СписокДокументов = Новый СписокЗначений;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписаниеМПЗПрочее.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СписаниеМПЗПрочее КАК СписаниеМПЗПрочее
	|ГДЕ
	|	СписаниеМПЗПрочее.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И СписаниеМПЗПрочее.Проведен = ИСТИНА";
Запрос.УстановитьПараметр("ДатаНач", Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон", Период.ДатаОкончания);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДокументы = РезультатЗапроса.Выбрать();
	Пока ВыборкаДокументы.Следующий() Цикл
    СписокДокументов.Добавить(ВыборкаДокументы.Ссылка);
	КонецЦикла;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДвижениеМПЗ.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ДвижениеМПЗ КАК ДвижениеМПЗ
	|ГДЕ
	|	ДвижениеМПЗ.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ДвижениеМПЗ.Проведен = ИСТИНА";
Запрос.УстановитьПараметр("ДатаНач", Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон", Период.ДатаОкончания);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДокументы = РезультатЗапроса.Выбрать();
	Пока ВыборкаДокументы.Следующий() Цикл
    СписокДокументов.Добавить(ВыборкаДокументы.Ссылка);
	КонецЦикла;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеНаЛинейку.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПоступлениеНаЛинейку КАК ПоступлениеНаЛинейку
	|ГДЕ
	|	ПоступлениеНаЛинейку.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ПоступлениеНаЛинейку.Проведен = ИСТИНА";
Запрос.УстановитьПараметр("ДатаНач", Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон", Период.ДатаОкончания);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДокументы = РезультатЗапроса.Выбрать();
	Пока ВыборкаДокументы.Следующий() Цикл
    СписокДокументов.Добавить(ВыборкаДокументы.Ссылка);
	КонецЦикла;
		Для каждого Док Из СписокДокументов Цикл
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	МестаХраненияОбороты.КоличествоПриход КАК КоличествоПриход,
			|	МестаХраненияОбороты.КоличествоРасход КАК КоличествоРасход,
			|	МестаХраненияОбороты.Регистратор КАК Регистратор
			|ИЗ
			|	РегистрНакопления.МестаХранения.Обороты(, , Регистратор, ) КАК МестаХраненияОбороты
			|ГДЕ
			|	МестаХраненияОбороты.Регистратор = &Регистратор
			|ИТОГИ
			|	СУММА(КоличествоПриход),
			|	СУММА(КоличествоРасход)
			|ПО
			|	Регистратор";
		Запрос.УстановитьПараметр("Регистратор", Док.Значение);
		РезультатЗапроса = Запрос.Выполнить();
			Если РезультатЗапроса.Пустой() Тогда
			ТЧ = ТаблицаДокументов.Добавить();
			ТЧ.Документ = Док.Значение;
			КонецЕсли;
		КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДокументыСОшибками(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	ПолучитьДокументыСОшибкамиНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПометитьДокументыНаУдалениеНаСервере()
	Для каждого ТЧ Из ТаблицаДокументов Цикл
	Док = ТЧ.Документ.ПолучитьОбъект();
	Док.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПометитьДокументыНаУдаление(Команда)
ПометитьДокументыНаУдалениеНаСервере();
КонецПроцедуры
