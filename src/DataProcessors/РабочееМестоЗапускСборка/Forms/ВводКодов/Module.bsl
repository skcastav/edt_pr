
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	БарКоды.MAC КАК MAC,
	|	БарКоды.IMEI КАК IMEI,
	|	БарКоды.КодDanfoss КАК КодDanfoss,
	|	БарКоды.BT КАК BT
	|ИЗ
	|	РегистрСведений.БарКоды КАК БарКоды
	|ГДЕ
	|	БарКоды.ПЗ = &ПЗ";
Запрос.УстановитьПараметр("ПЗ", Параметры.ПроизводственноеЗадание);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	КодDanfoss = ВыборкаДетальныеЗаписи.КодDanfoss;
	IMEI = ВыборкаДетальныеЗаписи.IMEI;
	MAC = ВыборкаДетальныеЗаписи.MAC;
	BT = ВыборкаДетальныеЗаписи.BT;
	КонецЦикла;
Элементы.КодDanfoss.Видимость = Параметры.ПроизводственноеЗадание.Изделие.Товар.ТребуетсяКодDanfoss;
Элементы.MAC.Видимость = Параметры.ПроизводственноеЗадание.Изделие.Товар.ТребуетсяMACАдрес;
Элементы.MAC.Доступность = Параметры.ПроизводственноеЗадание.Изделие.Товар.ТоварнаяГруппа.НумераторMAC.Пустая();
Элементы.BT.Видимость = Параметры.ПроизводственноеЗадание.Изделие.Товар.ТребуетсяBT_IMEI;
Элементы.IMEI.Видимость = Параметры.ПроизводственноеЗадание.Изделие.Товар.ТребуетсяBT_IMEI;
	Если Параметры.ПроизводственноеЗадание.Изделие.Товар.ТребуетсяIMEI Тогда
	Элементы.IMEI.Видимость = Истина;
	Элементы.IMEI.Доступность = Истина;
	КонецЕсли;
		Если Параметры.ПроизводственноеЗадание.Изделие.Товар.ТребуетсяBT_IMEI Тогда
		Элементы.IMEI.Видимость = Истина;
		Элементы.IMEI.Доступность = Ложь;
			Если Не ЗначениеЗаполнено(IMEI) Тогда
			IMEI = ПолучитьIMEI();
			КонецЕсли;
		КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьIMEI()
Код = "";
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1; 
	НаборЗаписей = РегистрыСведений.БарКоды.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПЗ.Установить(Параметры.ПроизводственноеЗадание);
	НаборЗаписей.Прочитать();
	    Для Каждого Запись Из НаборЗаписей Цикл
		Выборка = Справочники.КодыIMEI.Выбрать();
			Пока Выборка.Следующий() Цикл
			Код = Выборка.Код;
			Прервать;
			КонецЦикла; 
				Если ЗначениеЗаполнено(Код) Тогда
				Запись.IMEI = Код;						
				Иначе
				Сообщить("Нет свободных кодов IMEI!");
				ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
				Возврат("");						
				КонецЕсли;   
	    КонецЦикла;
	НаборЗаписей.Записать(Истина);
	КодIMEI = Справочники.КодыIMEI.НайтиПоКоду(Код);
		Если Не КодIMEI.Пустая() Тогда
		ЭлементУдаления = КодIMEI.ПолучитьОбъект();
		ЭлементУдаления.Удалить();
		КонецЕсли; 
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат("");
	КонецПопытки;		 
Возврат(Код);
КонецФункции

&НаСервере
Функция КнопкаЗаписатьНаСервере()
	Попытка				
	НаборЗаписей = РегистрыСведений.БарКоды.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПЗ.Установить(Параметры.ПроизводственноеЗадание);
	НаборЗаписей.Прочитать();
	    Для Каждого Запись Из НаборЗаписей Цикл 
		Запись.КодDanfoss = КодDanfoss;
		Запись.IMEI = IMEI;
		Запись.MAC = MAC;
		Запись.BT = BT; 
	    КонецЦикла;
	НаборЗаписей.Записать(Истина);
	Исключение
	Сообщить(ОписаниеОшибки());
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина);
КонецФункции

&НаКлиенте
Процедура КнопкаЗаписать(Команда)
	Если КнопкаЗаписатьНаСервере() Тогда
	ЭтаФорма.Закрыть(Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КнопкаОтмена(Команда)
ЭтаФорма.Закрыть(Неопределено);
КонецПроцедуры
