
&НаСервере
Процедура ИзменитьНаСервере(Запись)
Наимен = СтрЗаменить(Запись.Наименование,"?","±");
Выбор = Справочники.Материалы.НайтиПоНаименованию(Наимен,Истина);
	Если Не Выбор.Пустая() Тогда
	Мат = Выбор.ПолучитьОбъект();
	флИзменен = Ложь;
    ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("ГруппаПоЗакупкам",ЗначениеПараметра) Тогда
			Если ЗначениеПараметра = "A" Тогда
			ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.A;
			ИначеЕсли ЗначениеПараметра = "B" Тогда
			ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.B;	
			ИначеЕсли ЗначениеПараметра = "C" Тогда
			ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.C;
			ИначеЕсли ЗначениеПараметра = "D" Тогда
			ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.D;
			ИначеЕсли ЗначениеПараметра = "А" Тогда
			ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.A;
			ИначеЕсли ЗначениеПараметра = "В" Тогда
			ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.B;	
			ИначеЕсли ЗначениеПараметра = "С" Тогда
			ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.C;
			ИначеЕсли ЗначениеПараметра = "S" Тогда
			ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.S;
			ИначеЕсли ЗначениеПараметра = "Z" Тогда
			ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.Z;
			ИначеЕсли ЗначениеПараметра = "At" Тогда
			ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.At;
			ИначеЕсли ЗначениеПараметра = "Bt" Тогда
			ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.Bt;
			ИначеЕсли ЗначениеПараметра = "Ct" Тогда
			ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.Ct;
			ИначеЕсли ЗначениеПараметра = "AR" Тогда
			ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.AR;		
			ИначеЕсли ЗначениеПараметра = "BR" Тогда
			ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.BR;		
			ИначеЕсли ЗначениеПараметра = "CR" Тогда
			ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.CR;
			ИначеЕсли ЗначениеПараметра = "а" Тогда
			ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.а;	
			ИначеЕсли ЗначениеПараметра = "F" Тогда
			ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.F;	
			КонецЕсли; 
				Если Мат.ГруппаПоЗакупкам <> ГруппаПоЗакупкам Тогда
				Мат.ГруппаПоЗакупкам = ГруппаПоЗакупкам;
				флИзменен = Истина;			
				КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("Комментарий",ЗначениеПараметра) Тогда
			Если Мат.Комментарий <> ЗначениеПараметра Тогда
			Мат.Комментарий = ЗначениеПараметра;
			флИзменен = Истина;
			КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("Артикул",ЗначениеПараметра) Тогда
			Если Мат.Артикул <> ЗначениеПараметра Тогда
			Мат.Артикул = ЗначениеПараметра;
			флИзменен = Истина;
			КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("ОписаниеМодели",ЗначениеПараметра) Тогда
			Если Мат.ОписаниеМодели <> ЗначениеПараметра Тогда
			Мат.ОписаниеМодели = ЗначениеПараметра;
			флИзменен = Истина;
			КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("PartNumber",ЗначениеПараметра) Тогда
			Если Мат.PartNumber <> ЗначениеПараметра Тогда
			Мат.PartNumber = ЗначениеПараметра;
			флИзменен = Истина;
			КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено;			
    	Если Запись.Свойство("МинимальныйОстаток",ЗначениеПараметра) Тогда
			Если Мат.МинОстаток <> ЗначениеПараметра Тогда
			Мат.МинОстаток = ЗначениеПараметра;
			флИзменен = Истина;		
			КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено; 
    	Если Запись.Свойство("СрокПоставки",ЗначениеПараметра) Тогда
			Если Мат.СрокПоставки <> ЗначениеПараметра Тогда
			Мат.СрокПоставки = ЗначениеПараметра;
			флИзменен = Истина;
			КонецЕсли; 
		КонецЕсли; 
	ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("Кратность",ЗначениеПараметра) Тогда
			Если Мат.КратностьУпаковки <> ЗначениеПараметра Тогда
			Мат.КратностьУпаковки = ЗначениеПараметра;
			флИзменен = Истина;
			КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("МаксимальныйЗапас",ЗначениеПараметра) Тогда
			Если Мат.МаксимальныйЗапас <> ЗначениеПараметра Тогда
			Мат.МаксимальныйЗапас = ЗначениеПараметра;
			флИзменен = Истина;
			КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("СтраховойЗапас",ЗначениеПараметра) Тогда
			Если Мат.СтраховойЗапас <> ЗначениеПараметра Тогда
			Мат.СтраховойЗапас = ЗначениеПараметра;
			флИзменен = Истина;
			КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("СтраховойЗапас",ЗначениеПараметра) Тогда
			Если Мат.КоличествоКЗаказу <> ЗначениеПараметра Тогда
			Мат.КоличествоКЗаказу = ЗначениеПараметра;
			флИзменен = Истина;
			КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("ТочкаЗаказа",ЗначениеПараметра) Тогда
			Если Мат.ТочкаЗаказа <> ЗначениеПараметра Тогда
			Мат.ТочкаЗаказа = ЗначениеПараметра;
			флИзменен = Истина;
			КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("ИнтервалПроверки",ЗначениеПараметра) Тогда
			Если Мат.ИнтервалПроверки <> ЗначениеПараметра Тогда
			Мат.ИнтервалПроверки = ЗначениеПараметра;
			флИзменен = Истина;
			КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("ТипПоставки",ЗначениеПараметра) Тогда
			Если ЗначениеПараметра = "1" Тогда
			ТипыПоставки = Перечисления.ТипыПоставки.Короткие;
			ИначеЕсли ЗначениеПараметра = "2" Тогда
			ТипыПоставки = Перечисления.ТипыПоставки.Длинные;
			КонецЕсли;
				Если Мат.ТипПоставки <> ТипыПоставки Тогда
				Мат.ТипПоставки = ТипыПоставки;
				флИзменен = Истина;
				КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("ГруппаВариабельности",ЗначениеПараметра) Тогда
			Если ЗначениеПараметра = "Х" Тогда
			ГруппаВариабельности = Перечисления.ГруппыВариабельности.X;
			ИначеЕсли ЗначениеПараметра = "X" Тогда
			ГруппаВариабельности = Перечисления.ГруппыВариабельности.X;	
			ИначеЕсли ЗначениеПараметра = "Y" Тогда
			ГруппаВариабельности = Перечисления.ГруппыВариабельности.Y;
			ИначеЕсли ЗначениеПараметра = "Z" Тогда
			ГруппаВариабельности = Перечисления.ГруппыВариабельности.Z;			
			КонецЕсли; 
				Если Мат.ГруппаВариабельности <> ГруппаВариабельности Тогда
				Мат.ГруппаВариабельности = ГруппаВариабельности;
				флИзменен = Истина;			
				КонецЕсли; 
		КонецЕсли; 
	ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("ТипНормированияЗакупок",ЗначениеПараметра) Тогда
			Если ЗначениеПараметра = "1" Тогда
			ТипНормированияЗакупок = Перечисления.ТипыНормированияЗакупок.МинимальныйОбъем;
			ИначеЕсли ЗначениеПараметра = "2" Тогда
			ТипНормированияЗакупок = Перечисления.ТипыНормированияЗакупок.СрокПоставки;	
			ИначеЕсли ЗначениеПараметра = "3" Тогда
			ТипНормированияЗакупок = Перечисления.ТипыНормированияЗакупок.УсловияПоставщика;
			ИначеЕсли ЗначениеПараметра = "4" Тогда
			ТипНормированияЗакупок = Перечисления.ТипыНормированияЗакупок.ДляКЗ;			
			КонецЕсли; 
				Если Мат.ТипНормированияЗакупок <> ТипНормированияЗакупок Тогда
				Мат.ТипНормированияЗакупок = ТипНормированияЗакупок;
				флИзменен = Истина;			
				КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("ДатаПересмотра",ЗначениеПараметра) Тогда
			Если Мат.ДатаПересмотра <> ЗначениеПараметра Тогда
			Мат.ДатаПересмотра = ЗначениеПараметра;
			флИзменен = Истина;
			КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("Критичный",ЗначениеПараметра) Тогда
		Критичный = ?(ЗначениеПараметра = "1",Истина,Ложь);
			Если Мат.Критичный <> Критичный Тогда
			Мат.Критичный = Критичный;
			флИзменен = Истина;
			КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено;    
    	Если Запись.Свойство("ТипРиска",ЗначениеПараметра) Тогда
			Если ЗначениеПараметра = "0" Тогда
			ТипРиска = Перечисления.ТипыРиска.ПустаяСсылка();
			ИначеЕсли ЗначениеПараметра = "1" Тогда
			ТипРиска = Перечисления.ТипыРиска.Низкий;	
			ИначеЕсли ЗначениеПараметра = "2" Тогда
			ТипРиска = Перечисления.ТипыРиска.Высокий;
			ИначеЕсли ЗначениеПараметра = "3" Тогда
			ТипРиска = Перечисления.ТипыРиска.Средний;			
			КонецЕсли; 
				Если Мат.ТипРиска <> ТипРиска Тогда
				Мат.ТипРиска = ТипРиска;
				флИзменен = Истина;			
				КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("ПрослеживаемостьТовара",ЗначениеПараметра) Тогда
		ПрослеживаемыйТовар = ?(ЗначениеПараметра = "1",Истина,Ложь);
			Если Мат.ПрослеживаемыйТовар <> ПрослеживаемыйТовар Тогда
			Мат.ПрослеживаемыйТовар = ПрослеживаемыйТовар;
			флИзменен = Истина;
			РИД = РегистрыСведений.ИзменениеДанных.СоздатьМенеджерЗаписи();
			РИД.ИзменённыйОбъект = Мат.Ссылка;
			РИД.ИмяРеквизита = "ПрослеживаемыйТовар";
			РИД.Записать();
			КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("Фасовка",ЗначениеПараметра) Тогда
			Если Мат.Фасовка <> ЗначениеПараметра Тогда
			Мат.Фасовка = ЗначениеПараметра;
			флИзменен = Истина;
			КонецЕсли; 
		КонецЕсли;
	ЗначениеПараметра = Неопределено;
    	Если Запись.Свойство("КратностьИндивидуальнойУпаковки",ЗначениеПараметра) Тогда
			Если Мат.КратностьИндивидуальнойУпаковки <> ЗначениеПараметра Тогда
			Мат.КратностьИндивидуальнойУпаковки = ЗначениеПараметра;
			флИзменен = Истина;
			КонецЕсли; 
		КонецЕсли;
			Если флИзменен Тогда
			Мат.Записать();
			КонецЕсли;
	Иначе
    Сообщить(Запись.Наименование+" не найден!");
	КонецЕсли; 
КонецПроцедуры 

&НаСервере
Процедура ОчиститьНаСервере()
Выборка = Справочники.Материалы.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ЭтоГруппа Тогда
		Продолжить;		
		КонецЕсли; 
	Мат = Выборка.Ссылка.ПолучитьОбъект();
	Мат.ГруппаПоЗакупкам = Перечисления.ГруппыПоЗакупкам.ПустаяСсылка();
	Мат.МинОстаток = 0;
	Мат.Записать();
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура Изменить(Команда)
	Для каждого ТЧ Из ТаблицаПараметров Цикл
		Если СокрЛП(ТЧ.Параметр) = "выберите соответствие" Тогда
		Сообщить("Не все колонки идентифицированы!");
		Возврат;
		КонецЕсли;	
	КонецЦикла;
		Если ОчиститьВсеГруппыИЗагружатьНеснижаемыеЗапасы Тогда
		Состояние("Обработка...",,"Очистка параметров...");
		ОчиститьНаСервере();
		КонецЕсли;
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл c параметрами материалов",ИмяФайла);
	Если Результат <> Неопределено Тогда
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок;
	КолКолонок = Результат.КоличествоКолонок;
	    Для к = 2 по КолСтрок Цикл
		Состояние("Обработка...",к*100/КолСтрок,"Загрузка параметров из файла..."); 
		Запись = Новый Структура();

		Запись.Вставить("Наименование",СокрЛП(ExcelЛист.Cells(к,1).Value));
			Для л = 0 по КолКолонок - 2 Цикл
            Запись.Вставить(ТаблицаПараметров[л].Параметр,СокрЛП(ExcelЛист.Cells(к,л+2).Value));
			КонецЦикла;	
        ИзменитьНаСервере(Запись);
	    КонецЦикла;
	Результат.Excel.Quit();
	КонецЕсли;
 КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;            
ТаблицаПараметров.Очистить();
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл c параметрами материалов");
	Если Результат <> Неопределено Тогда
	ExcelЛист = Результат.ExcelЛист;
	ИмяФайла = Результат.ПолноеИмяФайла;
		Для к = 2 По Результат.КоличествоКолонок Цикл
		ТЧ = ТаблицаПараметров.Добавить();
		ТЧ.НомерКолонки = к;
		ТЧ.НаименованиеВфайле = СокрЛП(ExcelЛист.Cells(1,к).Value);
		ВыбЗнач = Элементы.ТаблицаПараметровПараметр.СписокВыбора.НайтиПоЗначению(ТЧ.НаименованиеВфайле);
			Если ВыбЗнач <> Неопределено Тогда
			ТЧ.Параметр = ВыбЗнач.Значение;
			Иначе
			ТЧ.Параметр = "выберите соответствие";			
			КонецЕсли;
		КонецЦикла;
	Результат.Excel.Quit();
	КонецЕсли;
КонецПроцедуры
