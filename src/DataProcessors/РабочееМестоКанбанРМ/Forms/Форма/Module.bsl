
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Объект.Исполнитель = ПараметрыСеанса.Пользователь;
	Если Объект.Исполнитель.Пустая() Тогда
	Элементы.РабочееМесто.Доступность = Ложь;
	Сообщить("Вы не внесены в справочник Сотрудников! Работа невозможна!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры
 
&НаСервере
Функция ПолучитьМестоХранения(Линейка)
Возврат(Линейка.МестоХраненияКанбанов);
КонецФункции 

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
	Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,";");
		Если Массив[0] = "3" Тогда
		ЗначениеПараметра1 = ОбщийМодульВызовСервера.ПолучитьЗначениеИзСтрокиВнутр(Массив[1]);
			Если ЗначениеПараметра1 = Неопределено Тогда
			Сообщить("Линейка или место хранения не найдена!");
			Возврат;	
			КонецЕсли; 
		МПЗ = ОбщийМодульВызовСервера.ПолучитьЗначениеИзСтрокиВнутр(Массив[3]);
			Если МПЗ = Неопределено Тогда
			Сообщить(Массив[3]+" - МПЗ не найдена!");
			Возврат;	
			КонецЕсли;
				Если ТипЗнч(ЗначениеПараметра1) = Тип("СправочникСсылка.Линейки") Тогда
				МестоХранения = ПолучитьМестоХранения(ЗначениеПараметра1);
				Иначе
				МестоХранения = ЗначениеПараметра1;			
				КонецЕсли;
		МестоХраненияОтправитель = ОбщийМодульВызовСервера.ПолучитьМестоХраненияПоКоду(Массив[2]);
		П = Новый Структура("МестоХраненияОтправитель,МестоХраненияКанбанов,МПЗ,НомерЯчейки,Сотрудник",МестоХраненияОтправитель,МестоХранения,МПЗ,Массив[5],Объект.Исполнитель);
		ОткрытьФорму("ОбщаяФорма.ОформлениеПустыхКанбанов",П,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе	
		Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,";");
		НомерВТ = Массив[0];
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево(ЭтапСпецификации)
Объект.Спецификация.Сортировать("ТипСправочника Убыв,ВидМПЗ,Позиция,МПЗ");
тДерево = РеквизитФормыВЗначение("ДеревоСпецификации");
тДерево.Строки.Очистить();
ТипСпр = "";
КолВсего = Объект.ПроизводственноеЗадание.ДокументОснование.Количество;
	Для каждого ТЧ Из Объект.Спецификация Цикл
		Если ТЧ.ЭтапСпецификации <> ЭтапСпецификации Тогда
		Продолжить;		
		КонецЕсли; 
			Если ТипСпр <> ТЧ.ТипСправочника Тогда
			Стр = тДерево.Строки.Добавить();
			Стр.ТипСправочника = ТЧ.ТипСправочника;
			ТипСпр = ТЧ.ТипСправочника;
			КонецЕсли; 
	СтрЗнч = Стр.Строки.Добавить();
	СтрЗнч.Позиция = ТЧ.Позиция;
	СтрЗнч.ВидЭлемента = ТЧ.ВидМПЗ;
	СтрЗнч.МПЗ = ТЧ.МПЗ;
	СтрЗнч.Количество = ТЧ.Количество;
	СтрЗнч.КоличествоВсего = ТЧ.Количество*КолВсего;
	СтрЗнч.ЕдиницаИзмерения = ТЧ.ЕдиницаИзмерения;
	СтрЗнч.Аналог = ТЧ.Аналог;
	СтрЗнч.Примечание = ТЧ.Примечание;
		Если ТЧ.Владелец <> Неопределено Тогда
		СтрЗнч.Владелец = ТЧ.Владелец.Элемент;
		КонецЕсли;		 
	КонецЦикла;
ЗначениеВРеквизитФормы(тДерево, "ДеревоСпецификации");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуТехОпераций()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходов.Элемент
	|ИЗ
	|	Справочник.НормыРасходов КАК НормыРасходов
	|ГДЕ
	|	НормыРасходов.Владелец = &Изделие
	|	И НормыРасходов.Элемент В ИЕРАРХИИ(&СписокТО)";
Запрос.УстановитьПараметр("Изделие", Объект.ПроизводственноеЗадание.Изделие);
Запрос.УстановитьПараметр("СписокТО", Объект.РабочееМесто.ТехОперации.ВыгрузитьКолонку("ТехОперация"));
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаТехОпераций.Добавить();
	ТЧ.ТехОперация = ВыборкаДетальныеЗаписи.Элемент;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКомплектацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
ЗаполнитьДерево(Элемент.ТекущиеДанные.ЭтапСпецификации);
РазвернутьДерево(Неопределено);
КонецПроцедуры

&НаСервере
Функция ПолучитьРабочееМестоПромывка()
РМ_Промывка = Справочники.РабочиеМестаЛинеек.ПустаяСсылка();
РМ = Справочники.РабочиеМестаЛинеек.Выбрать(,,Новый Структура("Линейка",Объект.РабочееМесто.Линейка));
	Пока РМ.Следующий() Цикл
		Если РМ.ЭтоГруппа Тогда
		Продолжить;		
		КонецЕсли;
			Если Найти(РМ.Наименование,"Промывка") > 0 Тогда
			РМ_Промывка = РМ.Ссылка;
			КонецЕсли; 
	КонецЦикла;
Возврат(РМ_Промывка);
КонецФункции

&НаСервере
Функция ПолучитьКоличествоВБраке()
Запрос = Новый Запрос;

Количество = 0;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	РемонтнаяКарта.КоличествоНеремонтопригодных КАК КоличествоНеремонтопригодных
	|ИЗ
	|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
	|ГДЕ
	|	РемонтнаяКарта.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", Объект.ПроизводственноеЗадание);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Количество = Количество + ВыборкаДетальныеЗаписи.КоличествоНеремонтопригодных;
	КонецЦикла;
Возврат(Количество);
КонецФункции 

&НаСервере
Функция ПеремещеноНаСкладЛинейки(МТК)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДвижениеМПЗ.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ДвижениеМПЗ КАК ДвижениеМПЗ
	|ГДЕ
	|	ДвижениеМПЗ.ДокументОснование.ДокументОснование = &ДокументОснование
	|	И ДвижениеМПЗ.Проведен = ИСТИНА";
Запрос.УстановитьПараметр("ДокументОснование", МТК);
РезультатЗапроса = Запрос.Выполнить();
Возврат(Не РезультатЗапроса.Пустой());
КонецФункции

&НаСервере
Функция ПолучитьВТ(МТК)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Ссылка КАК ПЗ
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", МТК);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл  
	Возврат(ВыборкаДетальныеЗаписи.ПЗ.ВозвратнаяТара);
	КонецЦикла;
Возврат("");
КонецФункции

&НаСервере
Процедура ПолучитьПодчиненныеДокументы(ПЗ)
ТаблицаПодчиненныхДокументов.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Ссылка КАК Ссылка,
	|	МаршрутнаяКарта.Номенклатура КАК Номенклатура
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", ПЗ.ДокументОснование);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаПодчиненныхДокументов.Добавить();
	ТЧ.ВозвратнаяТара = ПолучитьВТ(ВыборкаДетальныеЗаписи.Ссылка);
	ТЧ.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
		Если ВыборкаДетальныеЗаписи.Ссылка.Статус = 3 Тогда		
			Если Не ПеремещеноНаСкладЛинейки(ВыборкаДетальныеЗаписи.Ссылка) Тогда
			ТЧ.Незавершена = Истина;
			КонецЕсли 
		Иначе
		ТЧ.Незавершена = Истина;
		КонецЕсли;
	КонецЦикла;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка КАК Ссылка,
	|	ДвижениеМПЗТабличнаяЧасть.МПЗ КАК Номенклатура
	|ИЗ
	|	Документ.ДвижениеМПЗ.ТабличнаяЧасть КАК ДвижениеМПЗТабличнаяЧасть
	|ГДЕ
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", ПЗ.ДокументОснование);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаПодчиненныхДокументов.Добавить();
	ТЧ.ВозвратнаяТара = ВыборкаДетальныеЗаписи.Ссылка.ВозвратнаяТара;
	ТЧ.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьЗаданиеНаСервере()
НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
КолПЗ = 0;

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто = &РабочееМесто
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.Ремонт = ЛОЖЬ
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1,1,1,0,0,0)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.Статус <> 2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.НомерОчереди,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.Номер
	|ИТОГИ ПО
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование";	 
Запрос.УстановитьПараметр("РабочееМесто",Объект.РабочееМесто);
Результат = Запрос.Выполнить();

ВыборкаМТК = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМТК.Следующий() Цикл
	ВыборкаДетальныеЗаписи = ВыборкаМТК.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КолПЗ = КолПЗ + 1;
			Если Не ВыборкаДетальныеЗаписи.ПЗ.Изделие.Промывка <> 2 Тогда
			РабочееМестоПромывка = ПолучитьРабочееМестоПромывка();
				Если РабочееМестоПромывка.Пустая() Тогда
				ОбщийМодульВызовСервера.ОстановитьМТК(ВыборкаДетальныеЗаписи.ПЗ.ДокументОснование,Объект.Исполнитель,"Автоматическое сообщение! "+"Не найдено рабочее место <Промывка> для производства.");
				Прервать; //Переходим к следующей МТК				
				КонецЕсли; 
			КонецЕсли;
				Если Не ОбщийМодульВызовСервера.СоздатьТаблицуЭтаповПроизводства(ВыборкаДетальныеЗаписи.ПЗ,Этапы,ЭтапыАРМ,Объект.РабочееМесто,Объект.Исполнитель) Тогда	
				Прервать; //Переходим к следующей МТК			
				КонецЕсли;
		ПолучитьПодчиненныеДокументы(ВыборкаДетальныеЗаписи.ПЗ);
			Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ПЗ.ДатаЗапуска) Тогда
			Результат = ОбщийМодульВызовСервера.ЗапуститьВПроизводство(ВыборкаДетальныеЗаписи.ПЗ,Объект.РабочееМесто,Этапы);
				Если Результат = 0 Тогда
				Прервать; //Переходим к следующей МТК
				ИначеЕсли Результат = -1 Тогда
				Возврат(-1);
				КонецЕсли; 
			КонецЕсли;
		Парам = Новый Структура("РабочееМесто,Исполнитель,ДатаНачала",Объект.РабочееМесто,Объект.Исполнитель,ТекущаяДата());
		ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(ВыборкаДетальныеЗаписи.ПЗ,Парам);
		Объект.ПроизводственноеЗадание = ВыборкаДетальныеЗаписи.ПЗ;
		КоличествоПЗ = Объект.ПроизводственноеЗадание.Количество;
		КоличествоБрак = ПолучитьКоличествоВБраке();
		НомерВТ = ВыборкаДетальныеЗаписи.ПЗ.ВозвратнаяТара;
			Если Не ПолучитьСпецификациюЭтапов() Тогда
			Прервать; //Переходим к следующей МТК
			КонецЕсли;
		ОкончаниеЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
		ОбщийМодульРаботаСРегистрами.СборИнформацииПоАРМ(1,Объект.РабочееМесто,Объект.ПроизводственноеЗадание.Изделие,КолПЗ,(ОкончаниеЗамера - НачалоЗамера)/1000);
		Возврат(Истина);
		КонецЦикла;
	КонецЦикла;
ОкончаниеЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
ОбщийМодульРаботаСРегистрами.СборИнформацииПоАРМ(1,Объект.РабочееМесто,Справочники.Номенклатура.ПустаяСсылка(),КолПЗ,(ОкончаниеЗамера - НачалоЗамера)/1000);
Возврат(Ложь);
КонецФункции

&НаСервере
Функция ПолучитьСпецификациюЭтапов()
СписокЭтапов = Новый СписокЗначений;

	Для каждого ТЧ Из Этапы Цикл
	ЭтапРМ = Объект.РабочееМесто.ТабличнаяЧасть.Найти(ТЧ.ГруппаНоменклатуры,"ГруппаНоменклатуры");
		Если ЭтапРМ = Неопределено Тогда
		Продолжить;
		КонецЕсли;
			Если ЭтапРМ.Комплектация Тогда
			ОбщийМодульВызовСервера.ПолучитьКомплектацию(ТЧ.ЭтапСпецификации,ТЧ.ЭтапСпецификации,ТЧ.Количество,Истина,ТаблицаКомплектации,Объект.ПроизводственноеЗадание.ДатаЗапуска);
			Иначе
			ОбщийМодульВызовСервера.ПолучитьКомплектацию(ТЧ.ЭтапСпецификации,ТЧ.ЭтапСпецификации,ТЧ.Количество,Ложь,ТаблицаКомплектации,Объект.ПроизводственноеЗадание.ДатаЗапуска);
			Выборка = ТаблицаКомплектации.НайтиСтроки(Новый Структура("ЭтапСпецификации",ТЧ.ЭтапСпецификации));
				Если Выборка.Количество() = 0 Тогда	
				ТЧТК = ТаблицаКомплектации.Добавить();
				ТЧТК.ЭтапСпецификации = ТЧ.ЭтапСпецификации;
				КонецЕсли;
			СписокЭтапов.Добавить(ТЧ.ЭтапСпецификации);
			ОбщийМодульВызовСервера.ПолучитьСпецификациюСАналогами(Объект.Спецификация,Объект.ПроизводственноеЗадание,ТЧ.ЭтапСпецификации,ТЧ.ЭтапСпецификации,ТЧ.Количество);	
			КонецЕсли; 	
	КонецЦикла;
		Если ТаблицаПодчиненныхДокументов.Количество() > 0 Тогда	
			Для каждого ТЧ Из ТаблицаКомплектации Цикл
			Выборка = ТаблицаПодчиненныхДокументов.НайтиСтроки(Новый Структура("Номенклатура",ТЧ.Комплектация));
				Если Выборка.Количество() > 0 Тогда
					Для к = 0 По Выборка.ВГраница() Цикл
					ТЧ.ВозвратнаяТара = ТЧ.ВозвратнаяТара + Выборка[к].ВозвратнаяТара + ";";
					КонецЦикла;				
				КонецЕсли; 			
			КонецЦикла;
		КонецЕсли;
			Если ОбщийМодульВызовСервера.ПроверитьОстановкуКанбана(Объект.ПроизводственноеЗадание,Объект.Спецификация) Тогда
				Для каждого ТЧ Из ТаблицаКомплектации Цикл
				ТЧ.КоличествоВсего = ТЧ.Количество*Объект.ПроизводственноеЗадание.ДокументОснование.Количество;
				КонецЦикла;
			Объект.Спецификация.Сортировать("ЭтапСпецификации,ВидМПЗ,Позиция,МПЗ");
			Возврат(Истина);
			Иначе	
			Возврат(Ложь);
			КонецЕсли; 
КонецФункции

&НаСервере
Функция ЗаполненаДатаЗапуска()
Возврат(ЗначениеЗаполнено(Объект.ПроизводственноеЗадание.ДатаЗапуска));
КонецФункции  

&НаСервере
Функция ПолучитьДокументОснование(ПЗ)
Возврат(ПЗ.ДокументОснование);
КонецФункции

&НаСервере
Функция ПолучитьСпецификацию()
Возврат(Объект.ПроизводственноеЗадание.Изделие);
КонецФункции 

&НаСервере
Функция ТребуетсяВозвратнаяТара()
	Если Константы.КодБазы.Получить() = "БГР" Тогда
	Возврат(Объект.ПроизводственноеЗадание.Изделие.Канбан.Служебный); 
	КонецЕсли;
Возврат(Ложь);
КонецФункции 

&НаКлиенте
Процедура ПолучитьЗадание(Команда)
	Если ОбщийМодульВызовСервера.ЛинейкаОстановлена(ОбщийМодульВызовСервера.ПолучитьЛинейкуПоРабочемуМесту(Объект.РабочееМесто)) Тогда
	Возврат;
	КонецЕсли;
		Если Элементы.ПолучитьЗадание.Заголовок = "Получить задание (ПРОБЕЛ)" Тогда
		Результат = ПолучитьЗаданиеНаСервере(); 
			Если Результат = 1 Тогда 
				Если ТаблицаКомплектации.Количество() > 0 Тогда
				Элементы.ТаблицаКомплектации.ТекущаяСтрока = ТаблицаКомплектации[0].ПолучитьИдентификатор();
				ТаблицаКомплектацииВыбор(Элементы.ТаблицаКомплектации,Элементы.ТаблицаКомплектации.ТекущаяСтрока,,Истина);
				Иначе
				ЗаполнитьДерево(ПолучитьСпецификацию());
				РазвернутьДерево(Неопределено);			
				КонецЕсли;
			ЗаполнитьТаблицуТехОпераций(); 
			Элементы.ИзменитьКоличествоВМТК.Доступность = Истина;
			Элементы.ПолучитьЗадание.Заголовок = "Завершить и передать на другое АРМ (ПРОБЕЛ)";
			Элементы.НомерВТ.Видимость = ТребуетсяВозвратнаяТара(); 
			ИначеЕсли Результат = 0 Тогда		
			Предупреждение("Нет производственных заданий!");
			КонецЕсли; 
		Иначе
		НовоеРМ = ЗавершитьЗаданиеНаСервере();
			Если НовоеРМ <> "" Тогда
			ОчиститьСсылкуНаПЗ();
			ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Передайте изделие "+НовоеРМ,БиблиотекаКартинок.Пользователь);
			КонецЕсли;  	
		КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ОчиститьСсылкуНаПЗ()
Объект.ПроизводственноеЗадание = Документы.ПроизводственноеЗадание.ПустаяСсылка();
КоличествоПЗ = 0;
КоличествоБрак = 0;
НомерВТ = "";
Этапы.Очистить();
ЭтапыАРМ.Очистить();
ТаблицаКомплектации.Очистить();
Объект.Спецификация.Очистить();
ТаблицаТехОпераций.Очистить();
тДерево = РеквизитФормыВЗначение("ДеревоСпецификации");
тДерево.Строки.Очистить();
ЗначениеВРеквизитФормы(тДерево,"ДеревоСпецификации");
Элементы.ПолучитьЗадание.Заголовок = "Получить задание (ПРОБЕЛ)";
Элементы.ИзменитьКоличествоВМТК.Доступность = Ложь;
Элементы.НомерВТ.Видимость = Ложь;
КонецПроцедуры  

&НаСервере
Функция ЭтоРабочееМестоКанбана(ВыбранноеЗначение)
	Если ВыбранноеЗначение.Линейка.ВидЛинейки = Перечисления.ВидыЛинеек.Канбан Тогда
	Возврат(Истина);
	Иначе
	Возврат(Ложь);
	КонецЕсли;
КонецФункции 

&НаСервере
Функция МожноРаботатьВАРМ()
	Если ОбщийМодульВызовСервера.МожноВыполнить(Объект.РабочееМесто.Линейка) Тогда	
	Возврат(Истина);
	Иначе
	Объект.РабочееМесто = Справочники.РабочиеМестаЛинеек.ПустаяСсылка();
	Сообщить("Работа АРМ запрещена в этой базе!");
	Возврат(Ложь);
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура РабочееМестоПриИзменении(Элемент)
	Если Не МожноРаботатьВАРМ() Тогда
	Возврат;
	КонецЕсли;
ОчиститьСсылкуНаПЗ();
КонецПроцедуры

&НаСервере
Функция ЗавершитьЗаданиеНаСервере()
	//Если ТребуетсяВозвратнаяТара() Тогда
	//	Если Не ЗначениеЗаполнено(НомерВТ) Тогда
	//	Сообщить("Введите номер возвратной тары!");
	//	Возврат("");
	//	КонецЕсли; 
	//КонецЕсли;
 
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	НовоеРабочееМесто = Справочники.РабочиеМестаЛинеек.ПустаяСсылка();
	флТекущийЭтапПоследний = Ложь;
	ТекРМ = ЭтапыАРМ.НайтиПоЗначению(Объект.РабочееМесто);
		Если ТекРМ <> Неопределено Тогда
		НомСтр = ЭтапыАРМ.Индекс(ТекРМ)+1;
			Если НомСтр <> ЭтапыАРМ.Количество() Тогда
				Для к = НомСтр По ЭтапыАРМ.Количество()-1 Цикл
					Если ЭтапыАРМ[к].Значение.Авторизовано Тогда
					НовоеРабочееМесто = ЭтапыАРМ[к].Значение;
					Прервать;
					КонецЕсли; 
				КонецЦикла; 	
			Иначе
			флТекущийЭтапПоследний = Истина;			
			КонецЕсли; 
		Иначе
		Сообщить("В списке этапов рабочих мест этого изделия не найдено текущее рабочее место!");
		ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
		Возврат("");		
		КонецЕсли;
			Если НовоеРабочееМесто.Пустая() Тогда
				Если Не флТекущийЭтапПоследний Тогда
				Сообщить("Нет авторизованных рабочих мест!");
				ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
				Возврат("");
				КонецЕсли; 
			КонецЕсли;
				Если Найти(НовоеРабочееМесто.Наименование,"Промывка") > 0 Тогда
					Если Объект.ПроизводственноеЗадание.Изделие.Промывка = 2 Тогда
					флТекущийЭтапПоследний = Истина;
					КонецЕсли;				
				КонецЕсли; 
	ДатаОкончания = ТекущаяДата();
	НаборЗаписей = РегистрыСведений.ЭтапыПроизводственныхЗаданий.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПЗ.Установить(Объект.ПроизводственноеЗадание);
	НаборЗаписей.Прочитать();
	    Для Каждого Запись Из НаборЗаписей Цикл 
	    	Если Запись.РабочееМесто = Объект.РабочееМесто Тогда
			Запись.ДатаОкончания = ДатаОкончания;
			Прервать;
			КонецЕсли;  
	    КонецЦикла;
			Если Не флТекущийЭтапПоследний Тогда
			МестоПередачи = "на "+СокрЛП(НовоеРабочееМесто.Наименование);
			ЭПЗ = НаборЗаписей.Добавить();
			ЭПЗ.Период = ДатаОкончания;
			ЭПЗ.ПЗ = Объект.ПроизводственноеЗадание; 
			ЭПЗ.Линейка = Объект.ПроизводственноеЗадание.Линейка;
			ЭПЗ.Изделие = Объект.ПроизводственноеЗадание.Изделие;
			ЭПЗ.Количество = Объект.ПроизводственноеЗадание.ДокументОснование.Количество;
			ЭПЗ.БарКод = Объект.ПроизводственноеЗадание.БарКод;
			ЭПЗ.РабочееМесто = НовоеРабочееМесто;
			Иначе
				Если Объект.ПроизводственноеЗадание.ДокументОснование.Ремонт Тогда
				МестоПередачи = "ремонтнику";				
				Иначе	
				МестоПередачи = "на склад линейки";
				КонецЕсли;
					Если Не ОбщийМодульСозданиеДокументов.СоздатьВыпускПродукцииКанбан(Объект.ПроизводственноеЗадание,ДатаОкончания,КоличествоПЗ-КоличествоБрак) Тогда
					Сообщить("Документ выпуска по ПЗ "+Объект.ПроизводственноеЗадание.Номер+" не создан!");
					ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
					Возврат("");
					КонецЕсли;
						Если КоличествоБрак > 0 Тогда
							Если Не ОбщийМодульСозданиеДокументов.СоздатьВыпускПродукцииКанбан(Объект.ПроизводственноеЗадание,ДатаОкончания,КоличествоБрак,Истина) Тогда
							Сообщить("Документ выпуска в брак по ПЗ "+Объект.ПроизводственноеЗадание.Номер+" не создан!");
							ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
							Возврат("");
							КонецЕсли;
						КонецЕсли;							
			КонецЕсли;
	НаборЗаписей.Записать();
		Если ТребуетсяВозвратнаяТара() Тогда
			Если ЗначениеЗаполнено(НомерВТ) Тогда
			ПЗОбъект = Объект.ПроизводственноеЗадание.ПолучитьОбъект();
			ПЗОбъект.ВозвратнаяТара = НомерВТ;
			ПЗОбъект.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		КонецЕсли;
	Объект.ПроизводственноеЗадание = Документы.ПроизводственноеЗадание.ПустаяСсылка();
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(МестоПередачи);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат("");
	КонецПопытки;
КонецФункции

&НаСервере
Функция ПолучитьКодРМ()
Возврат(Объект.РабочееМесто.Код);
КонецФункции

&НаКлиенте
Процедура РабочееМестоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ЭтоРабочееМестоКанбана(ВыбранноеЗначение) Тогда
		Если Не Объект.ПроизводственноеЗадание.Пустая() Тогда
			Если Вопрос("Задание не завершено. Вы действительно хотите авторизоваться?",РежимДиалогаВопрос.ДаНет,,,"ВНИМАНИЕ!") = КодВозвратаДиалога.Нет Тогда
			СтандартнаяОбработка = Ложь;
			КонецЕсли; 
		КонецЕсли; 
	Иначе
	СтандартнаяОбработка = Ложь;
	Сообщить("Выберите рабочее место линейки канбана!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокЭтапов()
СписокЭтапов = Новый СписокЗначений;
	Для каждого ТЧ Из ТаблицаКомплектации Цикл
		Если СписокЭтапов.НайтиПоЗначению(ТЧ.ЭтапСпецификации) = Неопределено Тогда
		СписокЭтапов.Добавить(ТЧ.ЭтапСпецификации);
		КонецЕсли; 
	КонецЦикла;
Возврат(СписокЭтапов);
КонецФункции 

&НаСервере
Функция ПолучитьРабочееМесто()
Возврат(Объект.РабочееМесто);
КонецФункции 

&НаКлиенте
Процедура РазвернутьДерево(Команда)
тЭлементы = ДеревоСпецификации.ПолучитьЭлементы();
   Для Каждого тСтр Из тЭлементы Цикл
   	Элементы.ДеревоСпецификации.Развернуть(тСтр.ПолучитьИдентификатор(), Истина);
   КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СвернутьДерево(Команда)
тЭлементы = ДеревоСпецификации.ПолучитьЭлементы();
   Для Каждого тСтр Из тЭлементы Цикл
   Элементы.ДеревоСпецификации.Свернуть(тСтр.ПолучитьИдентификатор());
   КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	Если ТипЗнч(Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ) = Тип("СправочникСсылка.Документация") Тогда
	ОбщийМодульКлиент.ОткрытьФайлДокумента(Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ТипЗнч(Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ) = Тип("СправочникСсылка.Документация") Тогда
	ОбщийМодульКлиент.ОткрытьФайлДокумента(Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКомплектацииВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
ЗаполнитьДерево(Элемент.ТекущиеДанные.ЭтапСпецификации);
РазвернутьДерево(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ИзменитьКоличествоВМТКНаСервере(КолМТК)
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПередачаВПроизводство.Ссылка
		|ИЗ
		|	Документ.ПередачаВПроизводство КАК ПередачаВПроизводство
		|ГДЕ
		|	ПередачаВПроизводство.ДокументОснование = &ДокументОснование";
	Запрос.УстановитьПараметр("ДокументОснование", Объект.ПроизводственноеЗадание.ДокументОснование);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		УдаляемыйДок = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		УдаляемыйДок.Удалить();
		КонецЦикла;	
	ПЗ = Объект.ПроизводственноеЗадание.ПолучитьОбъект();	
	ПЗ.ДатаЗапуска = Дата(1,1,1);
	ПЗ.Количество = КолМТК;
	ПЗ.Записать(РежимЗаписиДокумента.Запись);	
	НаборЗаписей = РегистрыСведений.ЭтапыПроизводственныхЗаданий.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПЗ.Установить(Объект.ПроизводственноеЗадание);
	НаборЗаписей.Прочитать();
	    Для Каждого Запись Из НаборЗаписей Цикл 
		Запись.Количество = КолМТК;  
	    КонецЦикла;
	НаборЗаписей.Записать();
	МТК = Объект.ПроизводственноеЗадание.ДокументОснование.ПолучитьОбъект();
	МТК.Количество = КолМТК;
	МТК.Записать(РежимЗаписиДокумента.Проведение);	
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);	
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоВМТК()
Возврат(Объект.ПроизводственноеЗадание.ДокументОснование.Количество);		
КонецФункции

&НаКлиенте
Процедура ИзменитьКоличествоВМТК(Команда)
КоличествоПЗ = ПолучитьКоличествоВМТК();
	Если ВвестиЧисло(КоличествоПЗ,"Введите новое количество",9,3) Тогда
	ИзменитьКоличествоВМТКНаСервере(КоличествоПЗ);
	ОчиститьСсылкуНаПЗ();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОформитьНедостачу(Команда)
	Если ОбщийМодульАРМКлиент.ОформитьНедостачу(ЭтаФорма,Объект.РабочееМесто,Объект.ПроизводственноеЗадание) Тогда
	ОчиститьСсылкуНаПЗ();
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПечатьЭтикетки101х57НаСервере()
ТабДок = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("Этикетка101х57");

ОблЭтикетка = Макет.ПолучитьОбласть("Этикетка");

МТКГоловная = Объект.ПроизводственноеЗадание.ДокументОснование;
	Пока ТипЗнч(МТКГоловная.ДокументОснование) = Тип("ДокументСсылка.МаршрутнаяКарта") Цикл
		Если ЗначениеЗаполнено(МТКГоловная.ДокументОснование) Тогда
		МТКГоловная = МТКГоловная.ДокументОснование;
		КонецЕсли;
	КонецЦикла;
ОблЭтикетка.Параметры.МТКГоловная = МТКГоловная;
ОблЭтикетка.Параметры.Номенклатура = СокрЛП(МТКГоловная.Номенклатура.Наименование);
ОблЭтикетка.Параметры.Линейка = МТКГоловная.Линейка;
ОблЭтикетка.Параметры.МТКИзделия = Объект.ПроизводственноеЗадание.ДокументОснование;
ОблЭтикетка.Параметры.Изделие = СокрЛП(Объект.ПроизводственноеЗадание.Изделие.Наименование);
ОблЭтикетка.Параметры.Количество = Объект.ПроизводственноеЗадание.Количество;
QRCode = "4;"+ЗначениеВСтрокуВнутр(Объект.ПроизводственноеЗадание);				
ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRCode, 0, 100);	
	Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
	КартинкаQRКода = Новый Картинка(ДанныеQRКода);
	ОблЭтикетка.Рисунки.QRCode.Картинка = КартинкаQRКода;
	Иначе
	Сообщить("Не удалось сформировать QR-код!");
	КонецЕсли;
ТабДок.Вывести(ОблЭтикетка);
ТабДок.РазмерСтраницы = "Custom";
ТабДок.ВысотаСтраницы = 101;
ТабДок.ШиринаСтраницы = 57;
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьЭтикетки101х57(Команда)
ТД = ПечатьЭтикетки101х57НаСервере();
ТД.Показать("Этикетка 101х57");
КонецПроцедуры

&НаСервере
Функция ПечатьЭтикетки70х30НаСервере()
ТабДок = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("Этикетка70х30");

ОблЭтикетка = Макет.ПолучитьОбласть("Этикетка");

МТКГоловная = Объект.ПроизводственноеЗадание.ДокументОснование;
	Пока ТипЗнч(МТКГоловная.ДокументОснование) = Тип("ДокументСсылка.МаршрутнаяКарта") Цикл
		Если ЗначениеЗаполнено(МТКГоловная.ДокументОснование) Тогда
		МТКГоловная = МТКГоловная.ДокументОснование;
		КонецЕсли;
	КонецЦикла;
ОблЭтикетка.Параметры.МТКГоловная = МТКГоловная;
ОблЭтикетка.Параметры.Номенклатура = СокрЛП(МТКГоловная.Номенклатура.Наименование);
ОблЭтикетка.Параметры.Линейка = МТКГоловная.Линейка;
ОблЭтикетка.Параметры.МТКИзделия = Объект.ПроизводственноеЗадание.ДокументОснование;
ОблЭтикетка.Параметры.Изделие = СокрЛП(Объект.ПроизводственноеЗадание.Изделие.Наименование);
ОблЭтикетка.Параметры.Количество = Объект.ПроизводственноеЗадание.Количество;
ТабДок.Вывести(ОблЭтикетка);
ТабДок.РазмерСтраницы = "Custom";
ТабДок.ВысотаСтраницы = 70;
ТабДок.ШиринаСтраницы = 30;
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьЭтикетки70х30(Команда)
ТД = ПечатьЭтикетки70х30НаСервере();
ТД.Показать("Этикетка 70х30");
КонецПроцедуры

&НаСервере
Функция ПечатьБирки38х10НаСервере()
ТабДок = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("Бирка38х10");

ОблБирка = Макет.ПолучитьОбласть("Бирка");

ОблБирка.Параметры.Наимен = СокрЛП(Объект.ПроизводственноеЗадание.Изделие.Наименование);
ТабДок.Вывести(ОблБирка);
ТабДок.РазмерСтраницы = "Custom";
ТабДок.ВысотаСтраницы = 10;
ТабДок.ШиринаСтраницы = 38;
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьБирки38х10(Команда)
ТД = ПечатьБирки38х10НаСервере();
ТД.Показать("Бирка 38х10");
КонецПроцедуры

&НаСервере
Функция ПечатьБирки45х13QRНаСервере()
ТабДок = Новый ТабличныйДокумент;

МТКГоловная = Объект.ПроизводственноеЗадание.ДокументОснование;
	Пока ТипЗнч(МТКГоловная.ДокументОснование) = Тип("ДокументСсылка.МаршрутнаяКарта") Цикл
		Если ЗначениеЗаполнено(МТКГоловная.ДокументОснование) Тогда
		МТКГоловная = МТКГоловная.ДокументОснование;
		КонецЕсли;
	КонецЦикла;
Запрос = Новый Запрос;
                  
	Если МТКГоловная <> Объект.ПроизводственноеЗадание.ДокументОснование Тогда
	Макет = ПолучитьОбщийМакет("Бирка_45х13_QR");
	ОблБирка = Макет.ПолучитьОбласть("Бирка");
	                  
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПроизводственноеЗадание.БарКод КАК БарКод,
		|	ПроизводственноеЗадание.Изделие.Товар КАК Товар
		|ИЗ
		|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
		|ГДЕ
		|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование
		|
		|УПОРЯДОЧИТЬ ПО
		|	БарКод";
	Запрос.УстановитьПараметр("ДокументОснование", МТКГоловная);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        QRCode = ВыборкаДетальныеЗаписи.БарКод;
		ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRCode, 0, 100);	
			Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
			КартинкаQRКода = Новый Картинка(ДанныеQRКода);
			ОблБирка.Рисунки.QRCode.Картинка = КартинкаQRКода;
			Иначе
			Сообщить("Не удалось сформировать QR-код!");
			КонецЕсли;
		ОблБирка.Параметры.НаименМодиф = СокрЛП(ВыборкаДетальныеЗаписи.Товар.Наименование);
		ОблБирка.Параметры.Номер = ВыборкаДетальныеЗаписи.БарКод;
		ТабДок.Вывести(ОблБирка);
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЦикла;
	ТабДок.РазмерСтраницы = "Custom";
	ТабДок.ВысотаСтраницы = 13;
	ТабДок.ШиринаСтраницы = 45;
	ТабДок.ПолеСлева = 0;
	ТабДок.ПолеСверху = 0;
	ТабДок.ПолеСнизу = 0;
	ТабДок.ПолеСправа = 0;
	ТабДок.РазмерКолонтитулаСверху = 0;
	ТабДок.РазмерКолонтитулаСнизу = 0;
	КонецЕсли;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьБирка45х13QR(Команда)
ТД = ПечатьБирки45х13QRНаСервере();
ТД.Показать("Бирки 45х13 QR");
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоИзделия()
Возврат(Объект.ПроизводственноеЗадание.Количество);
КонецФункции

&НаКлиенте
Процедура Ремонт(Команда)
	Если Объект.ПроизводственноеЗадание.Пустая() Тогда
	Сообщить("Нет выбранного производственного задания!");
	Возврат;	
	КонецЕсли;
Результат = ОткрытьФормуМодально("ОбщаяФорма.ОформлениеРемонтКанбан",Новый Структура("РабочееМесто,ПЗ,КоличествоИзделия",Объект.РабочееМесто,Объект.ПроизводственноеЗадание,ПолучитьКоличествоИзделия()));
	Если Результат <> 0 Тогда
	ОчиститьСсылкуНаПЗ();		
	КонецЕсли;
КонецПроцедуры
