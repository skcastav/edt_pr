
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИспользоватьРучнуюНумерацию = Ложь;
	Элементы.НачальныйНомер.Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьГруппу(Команда)
	Состояние("Обработка...",,"Получение данных из бухгалтерской базы");
	СписокЭлементов = Новый СписокЗначений;
	ВыбратьЭлемент(СписокЭлементов, "Справочник.Номенклатура", Истина);
	Элемент = СписокЭлементов.ВыбратьЭлемент("Выберите группу номенклатуры", Элемент);
	Если Элемент <> Неопределено Тогда
		НаименованиеГруппыНоменклатуры = ПоказатьПредставлениеБезКода(Элемент.Представление);
		КодГруппыНоменклатуры = Элемент.Значение;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРучнуюНумерациюПриИзменении(Элемент)
	Если ИспользоватьРучнуюНумерацию Тогда
		Элементы.НачальныйНомер.Видимость = Истина;
	Иначе
		Элементы.НачальныйНомер.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция НайтиСоздатьНоменклатуру(Подключение, Элемент, бсдГруппаПоУмолчанию)
    
бсдГруппа = бсдГруппаПоУмолчанию;
	Если Элемент.Уровень()>1 Тогда
		г = Подключение.Справочники.Номенклатура.НайтиПоНаименованию(Элемент.Родитель.Наименование, Истина);
		Если г <> Подключение.Справочники.Номенклатура.ПустаяСсылка() Тогда
			бсдГруппа = г;	
		КонецЕсли;
	КонецЕсли;
	
	
	ПолныйКод = СтрЗаменить(Элемент.ПолныйКод(),"/","-");
	ПолныйКод = СтрЗаменить(ПолныйКод, Символы.НПП, "");
	Ном = Подключение.Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", ПолныйКод);
	Если Ном = Подключение.Справочники.Номенклатура.ПустаяСсылка() Тогда
		
		НомОбъект = Подключение.Справочники.Номенклатура.СоздатьЭлемент();
 		НомОбъект.Артикул 				= ПолныйКод;
	 	НомОбъект.Родитель 				= бсдГруппа;					
	  	НомОбъект.НаименованиеПолное 	= Элемент.ПолнНаименование;
	 	НомОбъект.Наименование 			= Элемент.Наименование;
	  	
	 	ЕдИзм = Подключение.Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию(Элемент.ЕдиницаИзмерения.Наименование);

	 	Если ЕдИзм = Подключение.Справочники.КлассификаторЕдиницИзмерения.ПустаяСсылка() Тогда
	 		ЕдИзмОбъект = Подключение.Справочники.КлассификаторЕдиницИзмерения.СоздатьЭлемент(); 		
	 	    ЕдИзмОбъект.Наименование 		= Элемент.ЕдиницаИзмерения.Наименование;
	 	    ЕдИзмОбъект.НаименованиеПолное 	= Элемент.ЕдиницаИзмерения.ПолнНаименование;
	 	    ЕдИзмОбъект.Код 				= Элемент.ЕдиницаИзмерения.Код;
	 		ЕдИзмОбъект.Записать();
	 		ЕдИзм = ЕдИзмОбъект.Ссылка;
	 	КонецЕсли;
	 	
	 	НомОбъект.ЕдиницаИзмерения = ЕдИзм;	
	 	//НомОбъект.СтавкаНДС =  Подключение.Перечисления.СтавкиНДС.НДС20;
		ТЧ = НомОбъект.ИсторияВидаСтавкиНДС.Добавить();
		ТЧ.Период = ТекущаяДата();
		ТЧ.ВидСтавкиНДС = Подключение.Перечисления.ВидыСтавокНДС.Общая;
	 	НомОбъект.Записать();
	 
	 	Сообщить("Выгружен МПЗ "+ НомОбъект.Наименование);
	 	
	 	Возврат НомОбъект.Ссылка;
 	Иначе
	 	Возврат Ном;
 	КонецЕсли;
	
КонецФункции

&НаСервере          
Функция ПроверитьЗаполнениеНаСервере()
	Если ПериодВыгрузки.ДатаНачала = Дата(1,1,1) Или ПериодВыгрузки.ДатаОкончания = Дата(1,1,1) Тогда
		Возврат "Не верно задан ""Период выгрузки"". Укажите ""Период выгрузки""."; 
	КонецЕсли;
	Если СокрЛП(ПодрКод) = "" Тогда
		Возврат "Не задано ""Подразделение затрат"". Выберите ""Подразделение затрат"".";
	КонецЕсли;
	Если СокрЛП(СтЗатрКод) = "" Тогда
		Возврат "Не задана ""Статья затрат"". Выберите ""Статью затрат"".";
	КонецЕсли;	
	Если СокрЛП(НомГруппаКод) = "" Тогда
		Возврат "Не задана ""Номенклатурная группа"". Выберите ""Номенклатурную группу"".";
	КонецЕсли;
	Возврат "";
КонецФункции

&НаСервере
Функция ПолучитьЗапросДокументовНаСервере()
Запрос = Новый Запрос;

Запрос.Текст =
	 "ВЫБРАТЬ
	 |	СписаниеМПЗПрочееТабличнаяЧасть.ВидМПЗ КАК ВидМПЗ,
	 |	СписаниеМПЗПрочееТабличнаяЧасть.МПЗ КАК МПЗ,
	 |	СписаниеМПЗПрочееТабличнаяЧасть.Количество КАК Количество,
	 |	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.МестоХранения КАК МестоХранения,
	 |	СписаниеМПЗПрочееТабличнаяЧасть.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	 |ИЗ
	 |	Документ.СписаниеМПЗПрочее.ТабличнаяЧасть КАК СписаниеМПЗПрочееТабличнаяЧасть
	 |ГДЕ
	 |	СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.Проведен
	 |	И НЕ СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.ПометкаУдаления
	 |	И СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	 |	И СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.МестоХранения В ИЕРАРХИИ(&СписокМестХранения)
	 |	И СписаниеМПЗПрочееТабличнаяЧасть.ВидМПЗ = &ВидМПЗ";
Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ПериодВыгрузки.ДатаНачала));
Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ПериодВыгрузки.ДатаОкончания));
Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения);
Запрос.УстановитьПараметр("ВидМПЗ", Перечисления.ВидыМПЗ.Материалы);
	Если СписокСтатей.Количество() > 0 Тогда
	Запрос.УстановитьПараметр("СписокСтатей", СписокСтатей);
	Запрос.Текст = Запрос.Текст + " И СписаниеМПЗПрочееТабличнаяЧасть.Ссылка.Статья В ИЕРАРХИИ(&СписокСтатей)";
	КонецЕсли;                       
Запрос.Текст = Запрос.Текст + " ИТОГИ
								 |	СУММА(Количество)
								 |ПО
								 |	МестоХранения,
								 |	МПЗ,
								 |	ЕдиницаИзмерения";
Возврат Запрос.Выполнить();
КонецФункции

&НаСервере
Процедура ВыполнитьВыгрузкуНаСервере()
БухБаза = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Объект.БазаДанных);
	Если БухБаза = Неопределено Тогда
	Сообщить("Не открыто соединение с бух. базой!");
	Возврат;
	КонецЕсли;
бсдМенеджерНоменклатура = БухБаза.Справочники.Номенклатура;
бсдМенеджерСклады		= БухБаза.Справочники.Склады;
бсдМенеджерДокументы	= БухБаза.Документы.ТребованиеНакладная;
бсдМенеджерСтЗатр		= БухБаза.Справочники.СтатьиЗатрат;
бсдМенеджерПодр			= БухБаза.Справочники.ПодразделенияОрганизаций;
бсдМенеджерНомГрупп		= БухБаза.Справочники.НоменклатурныеГруппы;
	Если Не СокрЛП(КодГруппыНоменклатуры) = "" Тогда
	бсдГрНомПоУмолчанию = бсдМенеджерНоменклатура.НайтиПоНаименованию(СокрЛП(НаименованиеГруппыНоменклатуры));
	Иначе
	бсдГрНомПоУмолчанию = бсдМенеджерНоменклатура.ПустаяСсылка();	
	КонецЕсли; 
Результат = ПолучитьЗапросДокументовНаСервере();
	Если Результат.Пустой() Тогда
	Сообщить("Нет документов для выгрузки по заданным параметрам!");
	Возврат;
	КонецЕсли;	
ВыборкаМХ = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМХ.Следующий() Цикл
	Склад	= бсдМенеджерСклады.НайтиПоКоду(СокрЛП(ВыборкаМХ.МестоХранения.КодВБухБазе));
		Если Не Склад.Пустая() Тогда
		бсдНовДок = бсдМенеджерДокументы.СоздатьДокумент();
		бсдНовДок.Склад = Склад;
		БухБаза.ЗаполнениеДокументов.Заполнить(бсдНовДок);
		БухБаза.ЗаполнениеДокументов.ЗаполнитьПодразделениеЗатрат(бсдНовДок.ПодразделениеЗатрат, бсдНовДок.Организация);		
			Если ИспользоватьРучнуюНумерацию Тогда
			НомерДок=""+Формат(НачальныйНомер,"Ч(0)6");
			Иначе
			НомерДок="";	
			КонецЕсли;		
		бсдНовДок.Дата = КонецМесяца(ПериодВыгрузки.ДатаОкончания);
		бсдНовДок.СчетЗатрат = БухБаза.ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
		бсдНовДок.ПодразделениеЗатрат = бсдМенеджерПодр.НайтиПоКоду(СокрЛП(ПодрКод));
		бсдНовДок.Комментарий 	= "#Выгрузка из производства v8 документов ""Списаний МПЗ"" за период с "+ПериодВыгрузки.ДатаНачала+" по "+ПериодВыгрузки.ДатаОкончания;
		бсдНовДок.НДСвСтоимостиТоваров = БухБаза.Перечисления.ДействиеНДСВСтоимостиТоваров.НеИзменять;
		бсдНовДок.Субконто1 = бсдМенеджерНомГрупп.НайтиПоКоду(СокрЛП(НомГруппаКод));
		бсдНовДок.Субконто2	= бсдМенеджерСтЗатр.НайтиПоКоду(СокрЛП(СтЗатрКод));		
		бсдДанныеОб = БухБаза.NewObject("Структура");
		бсдДанныеОб.Вставить("Организация",			бсдНовДок.организация);
		бсдДанныеОб.Вставить("Дата", 				бсдНовДок.Дата);
		бсдДанныеОб.Вставить("Склад", 				бсдНовДок.Склад);
		Иначе
		Сообщить("Склад с кодом "+СокрЛП(ВыборкаМХ.МестоХранения.КодВБухБазе)+" не найден в бух. базе!");
		Продолжить;
		КонецЕсли; 
	ВыборкаМПЗ = ВыборкаМХ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаМПЗ.Следующий() Цикл
		бсдНоменклатура = НайтиСоздатьНоменклатуру(БухБаза, ВыборкаМПЗ.МПЗ, бсдГрНомПоУмолчанию);			
			Если бсдНоменклатура = БухБаза.Справочники.Номенклатура.ПустаяСсылка() Тогда
			Сообщить("Не найден МПЗ " + ВыборкаМПЗ.МПЗ.Наименование);
			Продолжить;	                                     
			КонецЕсли;
		Количество = 0;
		ВыборкаЕИ = ВыборкаМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаЕИ.Следующий() Цикл
			Количество = Количество + ПолучитьБазовоеКоличество(ВыборкаЕИ.Количество,ВыборкаЕИ.ЕдиницаИзмерения);
			КонецЦикла; 		
		бсдНовСтрока = бсдНовДок.Материалы.Добавить();		
		бсдНовСтрока.Номенклатура 	= бсдНоменклатура;
		бсдНомСв = БухБаза.БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(бсдНоменклатура, бсдДанныеОб);
		бсдНовСтрока.Количество 	= Количество;
		//бсдНовСтрока.Количество 	= СписокТовары.Количество; 
		//бсдНовСтрока.Цена 			= СписокТовары.Цена;
		//бсдНовСтрока.Сумма 			= СписокТовары.Стоимость;		
		БухБаза.Документы.ТребованиеНакладная.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(бсдНовДок, бсдНовСтрока, "Материалы", бсдНомСв); 
		КонецЦикла;
			Если бсдНовДок.Материалы.Количество() > 0 Тогда
			бсдНовДок.Записать();
			Сообщить("Создан документ Требование-накладная №"+бсдНовДок.Номер+" от "+бсдНовДок.Дата);
			Иначе
			Сообщить("Документ ""Требование-накладная"" не создан из-за отсутствия МПЗ в базе!!!");
			КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВыгрузку(Команда)
РезультатПроверки  = ПроверитьЗаполнениеНаСервере();
	Если Не РезультатПроверки = "" Тогда
		ПоказатьПредупреждение(,РезультатПроверки , , );
		Возврат;
	КонецЕсли;
ВыполнитьВыгрузкуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПодрНаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
Состояние("Обработка...",,"Получение данных из бухгалтерской базы");
СписокЭлементов = Новый СписокЗначений;
ВыбратьЭлемент(СписокЭлементов, "Справочник.ПодразделенияОрганизаций");
Элемент = СписокЭлементов.ВыбратьЭлемент("Выберите подразделение",Элемент);
	Если Элемент <> Неопределено Тогда
		ПодрНаименование = ПоказатьПредставлениеБезКода(Элемент.Представление);
		ПодрКод = Элемент.Значение;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПоказатьПредставлениеБезКода(ТекстПредставления)
	ВозВрат Сред(ТекстПредставления, СтрНайти(ТекстПредставления, "|") + 2); 
КонецФункции

&НаСервере
Процедура ВыбратьЭлемент(СписокЭлементов, Таблица, ТолькоГруппы = Ложь)	
БухБаза = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Объект.БазаДанных);
	Если БухБаза = Неопределено Тогда
	Сообщить("Не открыто соединение с бух. базой!");
	Возврат;
	КонецЕсли;

	ТекстУсловия = ?(БухБаза.String(БухБаза.Метаданные.НайтиПоПолномуИмени(Таблица).ВидИерархии) = "ИерархияГруппИЭлементов",
				   ?(Не ТолькоГруппы,"И НЕ  Таблица.ЭтоГруппа","И Таблица.ЭтоГруппа"), "");
	бсдЗапрос = БухБаза.NewObject("Запрос");
	бсдЗапрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Код + "" | "" + Таблица.Наименование КАК Представление,
	|	Таблица.Код КАК Код,
	|	Таблица.Наименование КАК Наименование
	|ИЗ
	|	"+Таблица+" КАК Таблица
	|ГДЕ
	|	НЕ Таблица.ПометкаУдаления
	|	"+ТекстУсловия+"
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";	
	бсдВыборка = бсдЗапрос.Выполнить().Выбрать();
	Пока бсдВыборка.Следующий() Цикл
		СписокЭлементов.Добавить(бсдВыборка.Код,бсдВыборка.Представление);
	КонецЦикла;		
КонецПроцедуры

&НаКлиенте
Процедура СтЗатрНаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
Состояние("Обработка...",,"Получение данных из бухгалтерской базы");
СписокЭлементов = Новый СписокЗначений;
ВыбратьЭлемент(СписокЭлементов, "Справочник.СтатьиЗатрат");
Элемент = СписокЭлементов.ВыбратьЭлемент("Выберите статью затрат", Элемент);
	Если Элемент <> Неопределено Тогда
		СтЗатрНаименование = ПоказатьПредставлениеБезКода(Элемент.Представление);
		СтЗатрКод = Элемент.Значение;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НомГруппаНаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
Состояние("Обработка...",,"Получение данных из бухгалтерской базы");
СписокЭлементов = Новый СписокЗначений;
ВыбратьЭлемент(СписокЭлементов, "Справочник.НоменклатурныеГруппы");
Элемент = СписокЭлементов.ВыбратьЭлемент("Выберите номенклатурную группу", Элемент);
	Если Элемент <> Неопределено Тогда
		НомГруппаНаименование = ПоказатьПредставлениеБезКода(Элемент.Представление);
		НомГруппаКод = Элемент.Значение;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция НастройкиНаСервере()
Настройки = Новый Структура;
Настройки.Вставить("СписокМестХранения",СписокМестХранения);
Настройки.Вставить("СписокСтатей",СписокСтатей);
Настройки.Вставить("ПодрНаименование",ПодрНаименование);
Настройки.Вставить("ПодрКод",ПодрКод);
Настройки.Вставить("НомГруппаНаименование",НомГруппаНаименование);
Настройки.Вставить("НомГруппаКод",НомГруппаКод);
Настройки.Вставить("СтЗатрНаименование",СтЗатрНаименование);
Настройки.Вставить("СтЗатрКод",СтЗатрКод);
Возврат(Новый Структура("КлючНазначенияИспользования,Настройки","ВыгрузкаСписанийПрочих",Настройки));
КонецФункции

&НаКлиенте
Процедура Настройки(Команда)
Результат = ОткрытьФормуМодально("ОбщаяФорма.НастройкиФорм",НастройкиНаСервере());
	Если Результат <> Неопределено Тогда
	СписокМестХранения = Результат.СписокМестХранения;
	СписокСтатей = Результат.СписокСтатей;	
	ПодрНаименование = Результат.ПодрНаименование;
	ПодрКод = Результат.ПодрКод;
	НомГруппаНаименование = Результат.НомГруппаНаименование;
	НомГруппаКод = Результат.НомГруппаКод;
	СтЗатрНаименование = Результат.СтЗатрНаименование;
	СтЗатрКод = Результат.СтЗатрКод;
	КонецЕсли;
КонецПроцедуры
