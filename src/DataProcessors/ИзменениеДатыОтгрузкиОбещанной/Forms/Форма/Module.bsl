
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
СортироватьПо = 0;
КонецПроцедуры

&НаСервере
Функция ПолучитьСрокПоставкиВЗНП(ЗНП,Товар)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоЗаказ.СрокПоставки КАК СрокПоставки
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Заказ КАК ЗаказНаПроизводствоЗаказ
	|ГДЕ
	|	ЗаказНаПроизводствоЗаказ.Ссылка = &Ссылка
	|	И ЗаказНаПроизводствоЗаказ.Товар = &Товар";
Запрос.УстановитьПараметр("Ссылка",ЗНП);
Запрос.УстановитьПараметр("Товар",Товар);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.СрокПоставки);
	КонецЦикла;
Возврат(0);
КонецФункции

&НаСервере
Процедура ПолучитьДанныеПоИзменениям(ТЧ,ТНП = Ложь)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИзменениеДатыОтгрузкиОбещанной.ДатаОтгрузкиОбещанная КАК ДатаОтгрузкиОбещанная,
	|	ИзменениеДатыОтгрузкиОбещанной.ДатаОтгрузкиНовая КАК ДатаОтгрузкиНовая,
	|	ИзменениеДатыОтгрузкиОбещанной.Период КАК Период
	|ИЗ
	|	РегистрСведений.ИзменениеДатыОтгрузкиОбещанной КАК ИзменениеДатыОтгрузкиОбещанной
	|ГДЕ
	|	ИзменениеДатыОтгрузкиОбещанной.ЗНП = &ЗНП
	|	И ИзменениеДатыОтгрузкиОбещанной.Товар = &Товар
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
Запрос.УстановитьПараметр("ЗНП",ТЧ.ЗНП);
Запрос.УстановитьПараметр("Товар",ТЧ.Продукция.Товар);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
флПервая = Ложь;
КоличествоИзменений = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если Не флПервая Тогда
		ТЧ.ДатаОтгрузкиПервая = ВыборкаДетальныеЗаписи.ДатаОтгрузкиОбещанная;
	    флПервая = Истина;
		КонецЕсли;
			Если ТНП Тогда
			ТЧ.ДатаОтгрузкиНовая = ВыборкаДетальныеЗаписи.ДатаОтгрузкиНовая;
			КонецЕсли;
	ТЧ.ДатаПоследнегоИзменения = ВыборкаДетальныеЗаписи.Период;
	КоличествоИзменений = КоличествоИзменений + 1;
	КонецЦикла;
ТЧ.КоличествоИзменений = КоличествоИзменений;
КонецПроцедуры
   
&НаСервере
Функция ПолучитьПЗвЛО(Изделие)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЛьготнаяОчередь.ПЗ КАК ПЗ
	|ИЗ
	|	РегистрСведений.ЛьготнаяОчередь КАК ЛьготнаяОчередь
	|ГДЕ
	|	ЛьготнаяОчередь.Изделие = &Изделие
	|	И ЛьготнаяОчередь.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
Запрос.УстановитьПараметр("Изделие",Изделие);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.ПЗ);
	КонецЦикла;
Возврат(Неопределено);
КонецФункции
     
&НаСервере    
Функция ЕстьРемонт(МТК)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РемонтнаяКарта.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
	|ГДЕ
	|	РемонтнаяКарта.ДокументОснование.ДокументОснование = &ДокументОснование
	|	И РемонтнаяКарта.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
Запрос.УстановитьПараметр("ДокументОснование", МТК);
РезультатЗапроса = Запрос.Выполнить();
Возврат(Не РезультатЗапроса.Пустой());
КонецФункции

&НаСервере
Процедура ПолучитьПоНоменклатуреНаСервере()
ТаблицаНоменклатуры.Очистить();
Запрос = Новый Запрос;
СписокИзделийЛО = Новый СписокЗначений;
                     
Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Ссылка КАК Ссылка,
	|	МаршрутнаяКарта.Номенклатура КАК Номенклатура,
	|	МаршрутнаяКарта.ДатаОтгрузки КАК ДатаОтгрузки
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	И МаршрутнаяКарта.Статус <> 3
	|	И ТИПЗНАЧЕНИЯ(МаршрутнаяКарта.ДокументОснование) = ТИП(Документ.ЗаказНаПроизводство)
	|ИТОГИ ПО
	|	Номенклатура";
Запрос.УстановитьПараметр("СписокЛинеек", СписокЛинеек);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
	ПЗ = ПолучитьПЗвЛО(ВыборкаНоменклатура.Номенклатура);
		Если ПЗ <> Неопределено Тогда
		ВыборкаИздЛО = СписокИзделийЛО.НайтиПоЗначению(ВыборкаНоменклатура.Номенклатура);
			Если ВыборкаИздЛО = Неопределено Тогда
			ИЛО = ОбщийМодульВызовСервера.ИстиннаяЛьготнаяОчередь(ПЗ);
			СписокИзделийЛО.Добавить(ВыборкаНоменклатура.Номенклатура,,ИЛО);
			Иначе
			ИЛО = ВыборкаИздЛО.Пометка;
			КонецЕсли;
		КонецЕсли;	
	ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Ссылка.ДокументОснование) Тогда
			КоличествоНезапущенных = ОбщийМодульВызовСервера.ПолучитьНезапущенноеКоличество(ВыборкаДетальныеЗаписи.Ссылка);	
				Если КоличествоНезапущенных > 0 Тогда
					Если ПЗ <> Неопределено Тогда
						Если ВидИЛО = 1 Тогда
							Если Не ИЛО Тогда
							Продолжить;
							КонецЕсли;				
						ИначеЕсли ВидИЛО = 2 Тогда	
							Если ИЛО Тогда
							Продолжить;
							КонецЕсли;				
						КонецЕсли;
					Иначе
						Если ВидИЛО = 1 Тогда
						Продолжить;				
						КонецЕсли;				
					КонецЕсли;				
				Иначе	
					Если ВидИЛО = 1 Тогда
					Продолжить;				
					КонецЕсли;				
				КонецЕсли;
			ТЧ = ТаблицаНоменклатуры.Добавить();
			ТЧ.ЗНП = ВыборкаДетальныеЗаписи.Ссылка.ДокументОснование;
			ТЧ.МТК = ВыборкаДетальныеЗаписи.Ссылка;
			ТЧ.ДатаМТК = ВыборкаДетальныеЗаписи.Ссылка.Дата;
			ТЧ.НомерОчереди = ВыборкаДетальныеЗаписи.Ссылка.НомерОчереди;
				Если ТЧ.НомерОчереди = 0 Тогда
				ТЧ.Приоритет = "Р";
				ИначеЕсли ТЧ.НомерОчереди = 1 Тогда
				ТЧ.Приоритет = "СЦ";			
				ИначеЕсли ТЧ.НомерОчереди < 0 Тогда
				ТЧ.Приоритет = "П";
				Иначе
				ТЧ.Приоритет = "";	
				КонецЕсли;
			ТЧ.Продукция = ВыборкаДетальныеЗаписи.Ссылка.Номенклатура;
			ТЧ.ДатаОтгрузкиОбещанная = ВыборкаДетальныеЗаписи.Ссылка.ДатаОтгрузки;
			ТЧ.КоличествоНевыполненных = ОбщийМодульВызовСервера.ПолучитьНезавершённоеКоличество(ТекущаяДата(),ВыборкаДетальныеЗаписи.Ссылка);
				Если ВыборкаДетальныеЗаписи.Ссылка.Статус = 2 Тогда
				ТЧ.Остановка = Истина;
				КонецЕсли;
					Если КоличествоНезапущенных > 0 Тогда
						Если ПЗ <> Неопределено Тогда
						ТЧ.ЛО = Не ИЛО;
						ТЧ.ИЛО = ИЛО;
						КонецЕсли; 
					КонецЕсли;
			ТЧ.Ремонт = ЕстьРемонт(ТЧ.МТК);
			ТЧ.СрокПоставки = ПолучитьСрокПоставкиВЗНП(ТЧ.ЗНП,ВыборкаДетальныеЗаписи.Ссылка.Номенклатура.Товар);
			ПолучитьДанныеПоИзменениям(ТЧ);
				Если ТЧ.КоличествоИзменений = 0 Тогда
				ТЧ.ДатаОтгрузкиПервая = ВыборкаДетальныеЗаписи.ДатаОтгрузки;			
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
СортироватьПоПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПоНоменклатуре(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	ПолучитьПоНоменклатуреНаСервере();
	КонецЕсли;
КонецПроцедуры
             
&НаСервере
Функция ПолучитьКрайнююДатуОбещаннойОтгрузки(ЗНП,Продукция)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыНаПроизводствоОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПроизводство.Остатки(
	|			,
	|			Документ = &Документ
	|				И Продукция = &Продукция) КАК ЗаказыНаПроизводствоОстатки";
Запрос.УстановитьПараметр("Документ", ЗНП);
Запрос.УстановитьПараметр("Продукция", Продукция);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.КоличествоОстаток = 0 Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	МаршрутнаяКарта.ДатаОтгрузки КАК ДатаОтгрузки
			|ИЗ
			|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
			|ГДЕ
			|	МаршрутнаяКарта.ДокументОснование = &ДокументОснование
			|	И МаршрутнаяКарта.Номенклатура = &Номенклатура
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДатаОтгрузки УБЫВ";
		Запрос.УстановитьПараметр("ДокументОснование", ЗНП);
		Запрос.УстановитьПараметр("Номенклатура", Продукция);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Возврат(ВыборкаДетальныеЗаписи.ДатаОтгрузки);
			КонецЦикла;				
		КонецЕсли;
	КонецЦикла;
Возврат(Неопределено);
КонецФункции

&НаСервере
Процедура ИзменитьПоНоменклатуреНаСервере()
ДатаИзменения = ТекущаяДата();
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;		
		Для каждого ТЧ Из ТаблицаНоменклатуры Цикл
			Если ЗначениеЗаполнено(ТЧ.ДатаОтгрузкиНовая) Тогда
			Товар = ТЧ.МТК.Номенклатура.Товар;
			МТК = ТЧ.МТК.ПолучитьОбъект();
			МТК.ДатаОтгрузки = ТЧ.ДатаОтгрузкиНовая;
			МТК.Записать(РежимЗаписиДокумента.Запись);
			ЗНП = ТЧ.ЗНП.ПолучитьОбъект();
			Выборка = ЗНП.Заказ.Найти(Товар,"Товар");
				Если Выборка.КрупныйЗаказ Тогда
					Если Выборка.ДатаОтгрузкиОбещанная < ТЧ.ДатаОтгрузкиНовая Тогда
					НоваяДатаОтгрузки = ТЧ.ДатаОтгрузкиНовая;
					ДатаОтгрузкиОбещанная = Выборка.ДатаОтгрузкиОбещанная; 
					Выборка.ДатаОтгрузкиОбещанная = НоваяДатаОтгрузки;
					ЗНП.Записать(РежимЗаписиДокумента.Запись); 
					ИначеЕсли Выборка.ДатаОтгрузкиОбещанная > ТЧ.ДатаОтгрузкиНовая Тогда
					НоваяДатаОтгрузки = ПолучитьКрайнююДатуОбещаннойОтгрузки(ТЧ.ЗНП,ТЧ.Продукция);
						Если НоваяДатаОтгрузки <> Неопределено Тогда
							Если НоваяДатаОтгрузки <> Выборка.ДатаОтгрузкиОбещанная Тогда
							ДатаОтгрузкиОбещанная = Выборка.ДатаОтгрузкиОбещанная; 
							Выборка.ДатаОтгрузкиОбещанная = НоваяДатаОтгрузки;
							ЗНП.Записать(РежимЗаписиДокумента.Запись);							
							КонецЕсли;
						Иначе 
						ТЧ.ДатаОтгрузкиОбещанная = ТЧ.ДатаОтгрузкиНовая;
						ТЧ.ДатаОтгрузкиНовая = Дата(1,1,1);
						ТЧ.Причина = Справочники.ПричиныУвеличенияСроковПоставки.ПустаяСсылка();
						Продолжить;						
						КонецЕсли;
					Иначе                                     
					ТЧ.ДатаОтгрузкиНовая = Дата(1,1,1);
					ТЧ.Причина = Справочники.ПричиныУвеличенияСроковПоставки.ПустаяСсылка();
					Продолжить;
					КонецЕсли;
				Иначе
				НоваяДатаОтгрузки = ТЧ.ДатаОтгрузкиНовая;
				ДатаОтгрузкиОбещанная = Выборка.ДатаОтгрузкиОбещанная;
				Выборка.ДатаОтгрузкиОбещанная = ТЧ.ДатаОтгрузкиНовая;
				ЗНП.Записать(РежимЗаписиДокумента.Запись);
				КонецЕсли;
			ИДО = РегистрыСведений.ИзменениеДатыОтгрузкиОбещанной.СоздатьМенеджерЗаписи();
			ИДО.Период = ДатаИзменения;
			ИДО.ЗНП = ТЧ.ЗНП;
			ИДО.Товар = Товар;
			ИДО.ДатаОтгрузкиОбещанная = ДатаОтгрузкиОбещанная;
			ИДО.ДатаОтгрузкиНовая = НоваяДатаОтгрузки;
			ИДО.ДатаОбработки = Дата(1,1,1);
			ИДО.Причина = ТЧ.Причина;
			ИДО.Записать(Истина);		
			ТЧ.ДатаОтгрузкиОбещанная = ТЧ.ДатаОтгрузкиНовая;
			ТЧ.ДатаОтгрузкиНовая = Дата(1,1,1);
			ТЧ.Причина = Справочники.ПричиныУвеличенияСроковПоставки.ПустаяСсылка();
			ТЧ.ДатаПоследнегоИзменения = ИДО.Период;
			КонецЕсли;	
		КонецЦикла;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	//ТаблицаНоменклатуры.Очистить();
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ПроверитьЗаполнениеТаблицыИзменений()
	Для каждого ТЧ Из ТаблицаНоменклатуры Цикл
		Если ЗначениеЗаполнено(ТЧ.ДатаОтгрузкиНовая) Тогда
			Если Не ЗначениеЗаполнено(ТЧ.Причина) Тогда				
			Сообщить("По "+ТЧ.ЗНП+" не заполнена причина изменения!");
			Возврат(Ложь);
			КонецЕсли; 		
		КонецЕсли;	
	КонецЦикла;
Возврат(Истина);
КонецФункции

&НаКлиенте
Процедура ИзменитьПоНоменклатуре(Команда)
	Если ПроверитьЗаполнениеТаблицыИзменений() Тогда
	ИзменитьПоНоменклатуреНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоЗарезервированоВсего(ЗНП,Продукция)
Запрос = Новый Запрос;
СписокМестХранения = Новый СписокЗначений;

СписокМестХранения.Добавить(Константы.МестоХраненияТНП.Получить());
СписокМестХранения.Добавить(Константы.МестоХраненияНеликвидов.Получить());
СписокМестХранения.Добавить(Константы.МестоХраненияПерепрогон.Получить());

КоличествоЗарезервировано = 0;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	РезервированиеГПОбороты.Продукция КАК Продукция,
	|	РезервированиеГПОбороты.КоличествоПриход КАК КоличествоПриход
	|ИЗ
	|	РегистрНакопления.РезервированиеГП.Обороты(
	|			,
	|			,
	|			,
	|			МестоХранения В (&СписокМестХранения)
	|				И Продукция = &Продукция
	|				И Документ = &Документ) КАК РезервированиеГПОбороты
	|ГДЕ
	|	РезервированиеГПОбороты.КоличествоПриход > 0";
Запрос.УстановитьПараметр("Документ", ЗНП);
Запрос.УстановитьПараметр("Продукция", Продукция);
Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	КоличествоЗарезервировано = КоличествоЗарезервировано + ВыборкаДетальныеЗаписи.КоличествоПриход;
	КонецЦикла;
Возврат(КоличествоЗарезервировано);
КонецФункции

&НаСервере
Процедура ПолучитьПоТНПНаСервере()
ТаблицаТНП.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыНаПроизводствоОстатки.Документ КАК Документ,
	|	ЗаказыНаПроизводствоОстатки.Продукция КАК Продукция,
	|	ЗаказыНаПроизводствоОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПроизводство.Остатки(
	|			,
	|			Документ.Закрыт = ЛОЖЬ
	|				И ТИПЗНАЧЕНИЯ(Продукция) = ТИП(Справочник.Материалы)) КАК ЗаказыНаПроизводствоОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказыНаПроизводствоОстатки.Документ.Дата,
	|	ЗаказыНаПроизводствоОстатки.Документ.Номер";	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Продукция = ВыборкаДетальныеЗаписи.Продукция;
	ТЧ_Заказ = ВыборкаДетальныеЗаписи.Документ.Заказ.Найти(Продукция,"Продукция");
		Если ТЧ_Заказ = Неопределено Тогда
		Продолжить;
		КонецЕсли;
	КоличествоВЗаказе = ТЧ_Заказ.КоличествоВЗаказе - ОбщийМодульВызовСервера.ПолучитьКорректировкуЗНП(ВыборкаДетальныеЗаписи.Документ,Продукция);
	КоличествоЗарезервировано = ПолучитьКоличествоЗарезервированоВсего(ВыборкаДетальныеЗаписи.Документ,Продукция);
		Если (КоличествоВЗаказе - КоличествоЗарезервировано) = 0 Тогда
		Продолжить;
		КонецЕсли; 				
    ТЧ = ТаблицаТНП.Добавить();
	ТЧ.ЗНП = ВыборкаДетальныеЗаписи.Документ;
	ТЧ.Продукция = Продукция;
	ТЧ.КоличествоДолг = КоличествоВЗаказе - КоличествоЗарезервировано;
	ТЧ.ДатаОтгрузкиОбещанная = ТЧ_Заказ.ДатаОтгрузкиОбещанная;
	ТЧ.КоличествоСвободныйОстаток = ОбщийМодульВызовСервера.ПолучитьНезарезервированныйОстатокПоМестуХранения(Константы.МестоХраненияТНП.Получить(),Продукция,ТекущаяДата());
	ТЧ.СрокПоставки = ПолучитьСрокПоставкиВЗНП(ТЧ.ЗНП,ТЧ_Заказ.Товар);
	ПолучитьДанныеПоИзменениям(ТЧ,Истина);
		Если ТЧ.КоличествоИзменений = 0 Тогда
		ТЧ.ДатаОтгрузкиПервая = ТЧ_Заказ.ДатаОтгрузкиОбещанная;			
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьДатуПоставки(ЗаказПоставщику,МПЗ)
Возврат(ЗаказПоставщику.ТабличнаяЧасть.Найти(МПЗ,"МПЗ").ДатаПоставки);
КонецФункции

&НаСервере
Процедура РаспределитьЗаказыНаПроизводство()
Запрос = Новый Запрос;
ТаблицаОстатков = Новый ТаблицаЗначений;

ТаблицаОстатков.Колонки.Добавить("ДатаПоставки");
ТаблицаОстатков.Колонки.Добавить("МПЗ");
ТаблицаОстатков.Колонки.Добавить("Количество");

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ЗаказыПоставщикамОстатки.МПЗ КАК МПЗ,
	|	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|			&НаДату,
	|			ТИПЗНАЧЕНИЯ(МПЗ) = ТИП(Справочник.Материалы)
	|				И МПЗ.Товар <> &Товар) КАК ЗаказыПоставщикамОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику
	|ИТОГИ
	|	СУММА(КоличествоОстаток)
	|ПО
	|	ЗаказПоставщику,
	|	МПЗ";
Запрос.УстановитьПараметр("НаДату",ТекущаяДата());
Запрос.УстановитьПараметр("Товар",Справочники.Товары.ПустаяСсылка());	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаЗП = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЗП.Следующий() Цикл
	ВыборкаМПЗ = ВыборкаЗП.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаМПЗ.Следующий() Цикл
		ТЧ = ТаблицаОстатков.Добавить();
		ТЧ.МПЗ = ВыборкаМПЗ.МПЗ;
		ТЧ.Количество = ВыборкаМПЗ.КоличествоОстаток;
		ТЧ.ДатаПоставки = ПолучитьДатуПоставки(ВыборкаЗП.ЗаказПоставщику,ВыборкаМПЗ.МПЗ);		 
		КонецЦикла;
	КонецЦикла;
ТаблицаОстатков.Свернуть("ДатаПоставки,МПЗ","Количество");
ТаблицаОстатков.Сортировать("ДатаПоставки,МПЗ");
	Для каждого ТЧ Из ТаблицаОстатков Цикл
	МПЗ = ТЧ.МПЗ;
	КоличествоНераспределено = ТЧ.Количество;
	Выборка = ТаблицаТНП.НайтиСтроки(Новый Структура("Продукция",МПЗ));
		Для к = 0 По Выборка.ВГраница() Цикл 
			Если Выборка[к].КоличествоСвободныйОстаток >= Выборка[к].КоличествоДолг Тогда
			Продолжить;
			КонецЕсли; 	
				Если КоличествоНераспределено > 0 Тогда
				КоличествоДолг = Выборка[к].КоличествоДолг - Выборка[к].КоличествоВЗаказеПоставшику;
					Если КоличествоДолг > 0 Тогда
						Если КоличествоДолг >= КоличествоНераспределено Тогда
						Выборка[к].КоличествоВЗаказеПоставшику = Выборка[к].КоличествоВЗаказеПоставшику + КоличествоНераспределено;
							Если Выборка[к].ДатаОтгрузкиОбещанная <> ТЧ.ДатаПоставки Тогда
							Выборка[к].ДатаОтгрузкиНовая = ТЧ.ДатаПоставки;
							Выборка[к].Причина = Справочники.ПричиныУвеличенияСроковПоставки.НайтиПоНаименованию("Дефицит материала на складе",Истина);
							Иначе
							Выборка[к].ДатаОтгрузкиНовая = Дата(1,1,1);
						    Выборка[к].Причина = Справочники.ПричиныУвеличенияСроковПоставки.ПустаяСсылка();
							КонецЕсли;
						КоличествоНераспределено = 0;
						Иначе
						Выборка[к].КоличествоВЗаказеПоставшику = Выборка[к].КоличествоВЗаказеПоставшику + КоличествоДолг;
							Если Выборка[к].ДатаОтгрузкиОбещанная <> ТЧ.ДатаПоставки Тогда
							Выборка[к].ДатаОтгрузкиНовая = ТЧ.ДатаПоставки;
							Выборка[к].Причина = Справочники.ПричиныУвеличенияСроковПоставки.НайтиПоНаименованию("Дефицит материала на складе",Истина);
							Иначе
							Выборка[к].ДатаОтгрузкиНовая = Дата(1,1,1);
						    Выборка[к].Причина = Справочники.ПричиныУвеличенияСроковПоставки.ПустаяСсылка();
							КонецЕсли;
						КоличествоНераспределено = КоличествоНераспределено - КоличествоДолг;						
						КонецЕсли;				
					КонецЕсли;
				Иначе
				Прервать;				
				КонецЕсли; 			
		КонецЦикла;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПоТНП(Команда)
ПолучитьПоТНПНаСервере();
РаспределитьЗаказыНаПроизводство();
КонецПроцедуры

&НаСервере
Процедура ИзменитьПоТНПНаСервере()
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;		
		Для каждого ТЧ Из ТаблицаТНП Цикл
			Если ЗначениеЗаполнено(ТЧ.ДатаОтгрузкиНовая) Тогда	
				//Если ТЧ.ДатаОтгрузкиНовая < ТЧ.ДатаОтгрузкиОбещанная Тогда
				//Продолжить;
				//КонецЕсли; 
			Товар = ТЧ.Продукция.Товар; 
			ИДО = РегистрыСведений.ИзменениеДатыОтгрузкиОбещанной.СоздатьМенеджерЗаписи();
			ИДО.Период = ТекущаяДата();
			ИДО.ЗНП = ТЧ.ЗНП;
			ИДО.Товар = Товар;
			ИДО.ДатаОтгрузкиОбещанная = ТЧ.ДатаОтгрузкиОбещанная;
			ИДО.ДатаОтгрузкиНовая = ТЧ.ДатаОтгрузкиНовая;
			ИДО.Причина = ТЧ.Причина;
			ИДО.Записать();
			ЗНП = ТЧ.ЗНП.ПолучитьОбъект();
			Выборка = ЗНП.Заказ.Найти(Товар,"Товар");
			Выборка.ДатаОтгрузкиОбещанная = ТЧ.ДатаОтгрузкиНовая;
			ЗНП.Записать(РежимЗаписиДокумента.Запись);		
			КонецЕсли;	
		КонецЦикла;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	ТаблицаТНП.Очистить();
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ПроверитьЗаполнениеТаблицыТНП()
	Для каждого ТЧ Из ТаблицаТНП Цикл
		Если ЗначениеЗаполнено(ТЧ.ДатаОтгрузкиНовая) Тогда
			Если Не ЗначениеЗаполнено(ТЧ.Причина) Тогда				
			Сообщить("По "+ТЧ.ЗНП+" не заполнена причина изменения!");
			Возврат(Ложь);
			КонецЕсли; 		
		КонецЕсли;	
	КонецЦикла;
Возврат(Истина);
КонецФункции

&НаКлиенте
Процедура ИзменитьПоТНП(Команда)
	Если ПроверитьЗаполнениеТаблицыТНП() Тогда
	ИзменитьПоТНПНаСервере(); 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьПоСтроке(Команда)
Элементы.ТаблицаТНП.ОтборСтрок = Новый ФиксированнаяСтруктура("Продукция", Элементы.ТаблицаТНП.ТекущиеДанные.Продукция);
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьОтбор(Команда)
Элементы.ТаблицаТНП.ОтборСтрок = Неопределено;
КонецПроцедуры

&НаСервере
Процедура СортироватьПоПриИзмененииНаСервере()
	Если СортироватьПо = 0 Тогда
	ТаблицаНоменклатуры.Сортировать("Продукция,НомерОчереди,ДатаОтгрузкиОбещанная,ДатаМТК");			
	ИначеЕсли СортироватьПо = 1 Тогда
	ТаблицаНоменклатуры.Сортировать("НомерОчереди,ДатаОтгрузкиОбещанная,ДатаМТК");
	Иначе 
	ТаблицаНоменклатуры.Сортировать("ДатаОтгрузкиПервая,НомерОчереди,ДатаОтгрузкиОбещанная,ДатаМТК");
	КонецЕсли;
ДолгПоМТК = 0;
	Для каждого ТЧ Из ТаблицаНоменклатуры Цикл
	ТЧ.ДолгПоМТК = ДолгПоМТК;
	ДолгПоМТК = ДолгПоМТК + ТЧ.КоличествоНевыполненных;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПоПриИзменении(Элемент)
СортироватьПоПриИзмененииНаСервере();
КонецПроцедуры
     
&НаСервере      
Функция ПолучитьПричиныИЛО(Номенклатура)
СписокПричинЛО = Новый СписокЗначений;

ПЗ = ПолучитьПЗвЛО(Номенклатура);
	Если ПЗ <> Неопределено Тогда
	ИЛО = ОбщийМодульВызовСервера.ИстиннаяЛьготнаяОчередь(ПЗ,СписокПричинЛО);
	КонецЕсли;
Возврат(СписокПричинЛО);
КонецФункции

&НаСервере      
Функция ПолучитьПричиныЛО(Номенклатура)
СписокПричинЛО = Новый СписокЗначений;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЛьготнаяОчередь.НормаРасходов.Элемент КАК Элемент
	|ИЗ
	|	РегистрСведений.ЛьготнаяОчередь КАК ЛьготнаяОчередь
	|ГДЕ
	|	ЛьготнаяОчередь.Изделие = &Изделие
	|	И ЛьготнаяОчередь.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
Запрос.УстановитьПараметр("Изделие",Номенклатура);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокПричинЛО.Добавить(ВыборкаДетальныеЗаписи.Элемент);
	КонецЦикла;
Возврат(СписокПричинЛО);
КонецФункции

&НаКлиенте
Процедура ТаблицаНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "ТаблицаНоменклатурыИЛО" Тогда
	СписокПричинЛО = ПолучитьПричиныИЛО(Элементы.ТаблицаНоменклатуры.ТекущиеДанные.Продукция);
	СписокПричинЛО.ВыбратьЭлемент(); 
	ИначеЕсли Поле.Имя = "ТаблицаНоменклатурыЛО" Тогда
	СписокПричинЛО = ПолучитьПричиныЛО(Элементы.ТаблицаНоменклатуры.ТекущиеДанные.Продукция);
	СписокПричинЛО.ВыбратьЭлемент();
	КонецЕсли;
КонецПроцедуры
