
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не Параметры.Материал.ЭтоГруппа Тогда
	Материал = Параметры.Материал;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьНормуРасходов(ЭтапСпецификации,Позиция)
ВыборкаНР = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н_М(ЭтапСпецификации,ТекущаяДата());
	Пока ВыборкаНР.Следующий() Цикл
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
			Если СокрЛП(ВыборкаНР.Позиция) = Позиция Тогда
			Возврат(ВыборкаНР.Ссылка);
			КонецЕсли; 
		Иначе
			Если ВыборкаНР.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Основа Тогда
			Элемент = ПолучитьНормуРасходов(ВыборкаНР.Элемент,Позиция);
				Если ТипЗнч(Элемент) = Тип("СправочникСсылка.НормыРасходов") Тогда
				Возврат(Элемент);
				КонецЕсли; 
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
Возврат(Справочники.НормыРасходов.ПустаяСсылка());
КонецФункции 

&НаСервере
Функция ПолучитьПараметр(НаименованиеПараметра)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыМатериалов.Ссылка КАК Ссылка
	|ИЗ
	|	ПланВидовХарактеристик.ПараметрыМатериалов КАК ПараметрыМатериалов
	|ГДЕ
	|	ПараметрыМатериалов.Наименование ПОДОБНО &Наименование
	|	И ПараметрыМатериалов.Запрещенный = ЛОЖЬ
	|	И ПараметрыМатериалов.РучнаяПроверка = ИСТИНА";
Запрос.УстановитьПараметр("Наименование", НаименованиеПараметра);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
Возврат(ПланыВидовХарактеристик.ПараметрыМатериалов.ПустаяСсылка());
КонецФункции 

&НаСервере
Процедура ПолучитьПараметрыШаблона()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ШаблоныПараметровМатериалов.ПараметрМатериала КАК ПараметрМатериала
	|ИЗ
	|	Справочник.ШаблоныПараметровМатериалов КАК ШаблоныПараметровМатериалов
	|ГДЕ
	|	ШаблоныПараметровМатериалов.Владелец = &Владелец";
Запрос.УстановитьПараметр("Владелец", Материал.ВидМатериала);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаПараметров.Добавить();
	ТЧ.Наименование = ВыборкаДетальныеЗаписи.ПараметрМатериала.Наименование;
	ТЧ.Параметр = ВыборкаДетальныеЗаписи.ПараметрМатериала;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьПрараметр(СтрокаПараметра)
	Если Найти(СтрокаПараметра,"ID_template") > 0 Тогда
	Возврат;
	КонецЕсли;
Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(СтрокаПараметра,":");
НаименованиеПараметра = СокрЛП(Массив[0]); 
Выборка = ТаблицаПараметров.НайтиСтроки(Новый Структура("Наименование",НаименованиеПараметра));
	Если Выборка.Количество() = 0 Тогда
	ТЧ_П = ТаблицаПараметров.Добавить();
	ТЧ_П.НаименованиеИзФайла = НаименованиеПараметра;
	ТЧ_П.Параметр = ПолучитьПараметр(НаименованиеПараметра);
	Иначе
	ТЧ_П = Выборка[0];
    ТЧ_П.НаименованиеИзФайла = НаименованиеПараметра;
	КонецЕсли;
Значение1 = "";
Значение2 = "";
	Если Массив.Количество() = 2 Тогда
	Значение1 = СокрЛП(Массив[1]);
	ИначеЕсли Массив.Количество() = 3 Тогда	
	Значение1 = СокрЛП(Массив[1]);
	Значение2 = СокрЛП(Массив[2]);
	КонецЕсли; 
		Если ЗначениеЗаполнено(ТЧ_П.Параметр) Тогда
			Если Строка(ТЧ_П.Параметр.ТипЗначения) = "Число" Тогда
			ТЧ_П.Значение1 = ?(ЗначениеЗаполнено(Значение1),Число(Значение1),0);
			ТЧ_П.Значение2 = ?(ЗначениеЗаполнено(Значение2),Число(Значение2),0);
			ИначеЕсли Строка(ТЧ_П.Параметр.ТипЗначения) = "Виды корпусов" Тогда
			ТЧ_П.Значение1 = Справочники.ВидыКорпусов.НайтиПоНаименованию(Значение1,Истина);
			Иначе	
			ТЧ_П.Значение1 = Значение1;
			ТЧ_П.Значение2 = Значение2;	
			КонецЕсли;
		Иначе
		ТЧ_П.Значение1 = Значение1;
		ТЧ_П.Значение2 = Значение2;	
		КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ЗаполненВидМатериала()
Возврат(Не Материал.ВидМатериала.Пустая());
КонецФункции

&НаКлиенте
Процедура Загрузить(Команда)
	Если ЗаполненВидМатериала() Тогда
	ПолучитьПараметрыШаблона();
	Иначе
	Сообщить("У материала не заполнен вид материала!");
	Возврат;
	КонецЕсли; 

Текст = Новый ЧтениеТекста;

ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие); 
ДиалогОткрытияФайла.Фильтр = "Текстовый файл|*.txt";
ДиалогОткрытияФайла.МножественныйВыбор   = Ложь; 
ДиалогОткрытияФайла.Заголовок            = "Выберите файл для загрузки"; 
	Если Не ДиалогОткрытияФайла.Выбрать() Тогда 
	Сообщить("Файл не выбран!");
    Возврат;
    КонецЕсли;
Текст.Открыть(ДиалогОткрытияФайла.ВыбранныеФайлы[0]);              
Строка = Текст.ПрочитатьСтроку();
	Пока Строка <> Неопределено Цикл            
	ДобавитьПрараметр(Строка);
	Строка = Текст.ПрочитатьСтроку();             
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьВМатериалНаСервере()
	Если Материал.ВидМатериала.Пустая() Тогда
	Сообщить("Материалу не присвоен вид материала!");
	Возврат;
	КонецЕсли; 
НаборЗаписей = РегистрыСведений.КорневыеХарактеристикиМатериала.СоздатьНаборЗаписей();
НаборЗаписей.Отбор.Материал.Установить(Материал);
НаборЗаписей.Записать();
	Для каждого ТЧ Из ТаблицаПараметров Цикл
		Если ЗначениеЗаполнено(ТЧ.Параметр) Тогда
			Если ЗначениеЗаполнено(ТЧ.Значение1) Тогда
			ПМ = РегистрыСведений.КорневыеХарактеристикиМатериала.СоздатьМенеджерЗаписи();
			ПМ.Материал = Материал;
			ПМ.ПараметрМатериала = ТЧ.Параметр;
			ПМ.Значение1 = ТЧ.Значение1;
			ПМ.Значение2 = ТЧ.Значение2;
			ПМ.Записать(Истина);					
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла; 	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВМатериал(Команда)
ДобавитьВМатериалНаСервере();
КонецПроцедуры
