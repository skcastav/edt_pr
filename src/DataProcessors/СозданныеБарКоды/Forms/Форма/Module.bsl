
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Объект.ДатаВыпуска = ТекущаяДата();
Объект.ДатаПоверки = ТекущаяДата();
Объект.КоличествоКопий = 1;
	Если Параметры.Свойство("ПЗ") Тогда
	Объект.Документ = Параметры.ПЗ;
	Объект.Изделие = Параметры.ПЗ.Изделие;
	Линейка = Параметры.РабочееМесто.Линейка;
	ДокументПриИзмененииНаСервере();
		Для каждого ТЧ Из Объект.ПечатныеДокументы Цикл
		Выборка = Линейка.Принтеры.НайтиСтроки(Новый Структура("ШаблонДокумента",ТЧ.Шаблон));
			Если Выборка.Количество() > 0 Тогда
				Для к = 0 По Выборка.ВГраница() Цикл
					Если Выборка[к].РабочееМесто = Параметры.РабочееМесто Тогда
						Если ТЧ.Шаблон.Родитель.Код = 7 Тогда
						ТЧ.Пометка = ?(ОбщийМодульВызовСервера.ПолучитьНезавершённоеКоличество(ТекущаяДата(),Объект.Документ.ДокументОснование) < 2,Истина,Ложь);
						Иначе
						ТЧ.Пометка = Истина;
						КонецЕсли;				
					Прервать;
					Иначе
					ТЧ.Пометка = Ложь;
					КонецЕсли;
				КонецЦикла;
			Иначе
			ТЧ.Пометка = Ложь;
			КонецЕсли;
		КонецЦикла; 
	АвтоматическаяПечать = Истина;
	ИначеЕсли Параметры.Свойство("СписокПЗ") Тогда
	Объект.Изделие = Параметры.СписокПЗ[0].Значение.Изделие;
	Линейка = Параметры.РабочееМесто.Линейка;
	СоздатьТаблицуБарКодовПоСпискуПЗ(Параметры.СписокПЗ); 
		Для каждого ТЧ Из Объект.ПечатныеДокументы Цикл
		Выборка = Линейка.Принтеры.НайтиСтроки(Новый Структура("ШаблонДокумента",ТЧ.Шаблон));
			Если Выборка.Количество() > 0 Тогда
				Для к = 0 По Выборка.ВГраница() Цикл
					Если Выборка[к].РабочееМесто = Параметры.РабочееМесто Тогда
					ТЧ.Пометка = Истина;
					Прервать;
					Иначе
					ТЧ.Пометка = Ложь;
					КонецЕсли;
				КонецЦикла;
			Иначе
			ТЧ.Пометка = Ложь;
			КонецЕсли;
		КонецЦикла; 
	АвтоматическаяПечать = Истина;
	ИначеЕсли Параметры.Свойство("Перепрогон") Тогда
	Объект.Документ = Параметры.Перепрогон;
	ДокументПриИзмененииНаСервере();
	АвтоматическаяПечать = Истина;
	ИначеЕсли Параметры.Свойство("ПоступлениеМПЗ") Тогда
	Объект.КоличествоКопий = Параметры.КоличествоКопий;
	Объект.Документ = Параметры.ПоступлениеМПЗ;
	ДокументПриИзмененииНаСервере();
	АвтоматическаяПечать = Истина;
	КонецЕсли;
		Если Параметры.Свойство("ДатаВыпуска") Тогда
		Объект.ДатаВыпуска = Параметры.ДатаВыпуска;
		Объект.ДатаПоверки = Параметры.ДатаВыпуска;		
		КонецЕсли;
			Если Параметры.Свойство("ДатаПоверки") Тогда
			Объект.ДатаПоверки = Параметры.ДатаПоверки;		
			КонецЕсли;	
				Если Параметры.Свойство("Комплект") Тогда
				СписокКомплекта = Параметры.Комплект;
					Для каждого Комплект Из СписокКомплекта Цикл
					ДобавитьТоварВКомплект(Комплект.Значение);
					КонецЦикла; 		
				КонецЕсли;  
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   	Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
    ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
    ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
    Сообщить(ТекстСообщения);
   	КонецЕсли;
		Если АвтоматическаяПечать Тогда
		Печать("");
		ЭтаФорма.Закрыть();
		КонецЕсли; 
КонецПроцедуры
	
&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
Объект.БарКоды.Очистить();
КонецПроцедуры

&НаСервере
Процедура ВыбратьВсеНаСервере()
	Для каждого ТЧ Из Объект.БарКоды Цикл
	ТЧ.Пометка = Истина;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
ВыбратьВсеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтменитьВсеНаСервере()
	Для каждого ТЧ Из Объект.БарКоды Цикл
	ТЧ.Пометка = Ложь;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсе(Команда)
ОтменитьВсеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыбратьВсе1НаСервере()
	Для каждого ТЧ Из Объект.ПечатныеДокументы Цикл
	ТЧ.Пометка = Истина;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе1(Команда)
ВыбратьВсе1НаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтменитьВсе1НаСервере()
	Для каждого ТЧ Из Объект.ПечатныеДокументы Цикл
	ТЧ.Пометка = Ложь;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсе1(Команда)
ОтменитьВсе1НаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДокументПриИзменении(Элемент)
ДокументПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДокументПриИзмененииНаСервере()
	Если Объект.Документ.Пустая() Тогда
	Возврат;	
	КонецЕсли;
Объект.Период = Неопределено;
Объект.Изделие = Неопределено;
Объект.БарКоды.Очистить();
Объект.ПечатныеДокументы.Очистить();
ТоварнаяГруппа = Справочники.ТоварныеГруппы.ПустаяСсылка();
	Если ТипЗнч(Объект.Документ) = Тип("ДокументСсылка.МаршрутнаяКарта") Тогда
	Объект.Изделие = Объект.Документ.Номенклатура;
	ИначеЕсли ТипЗнч(Объект.Документ) <> Тип("ДокументСсылка.ПоступлениеМПЗ") Тогда	
	Объект.Изделие = Объект.Документ.Изделие;
	КонецЕсли;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	БарКоды.Изделие,
	|	БарКоды.БарКод,
	|	БарКоды.Товар,
	|	БарКоды.Период,
	|	БарКоды.ПЗ,
	|	БарКоды.MAC,
	|	БарКоды.КодDanfoss,
	|	БарКоды.СерийныйНомерEnLogic,
	|	БарКоды.IMEI
	|ИЗ
	|	РегистрСведений.БарКоды КАК БарКоды";
	Если ТипЗнч(Объект.Документ) = Тип("ДокументСсылка.МаршрутнаяКарта") Тогда
	Запрос.Текст = Запрос.Текст + " ГДЕ БарКоды.ПЗ.ДокументОснование = &Документ";
	Иначе	
	Запрос.Текст = Запрос.Текст + " ГДЕ БарКоды.ПЗ = &Документ";
	КонецЕсли; 
Запрос.УстановитьПараметр("Документ", Объект.Документ);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТЧ = Объект.БарКоды.Добавить();
		ТЧ.Пометка = Истина;
		ТЧ.ДатаСоздания = ВыборкаДетальныеЗаписи.Период;
		ТЧ.Изделие = ВыборкаДетальныеЗаписи.Изделие;
		ТЧ.Товар = ВыборкаДетальныеЗаписи.Товар;
		ТЧ.БарКод = ВыборкаДетальныеЗаписи.БарКод;
		ТЧ.MAC = ВыборкаДетальныеЗаписи.MAC;
		ТЧ.IMEI = ВыборкаДетальныеЗаписи.IMEI;
		ТЧ.КодDanfoss = ВыборкаДетальныеЗаписи.КодDanfoss;
		ТЧ.СерийныйНомерEnLogic = ВыборкаДетальныеЗаписи.СерийныйНомерEnLogic;
		ТЧ.ПЗ = ВыборкаДетальныеЗаписи.ПЗ; 
		КонецЦикла;
	Иначе
	ТЧ = Объект.БарКоды.Добавить();
	ТЧ.Пометка = Истина;
	ТЧ.Изделие = Объект.Изделие;
	ТЧ.Товар = Объект.Изделие.Товар;				
	КонецЕсли;
		Если Объект.Изделие <> Неопределено Тогда
			Если Не Объект.Изделие.Товар.Пустая() Тогда
			ТоварнаяГруппа = Объект.Изделие.Товар.ТоварнаяГруппа; 
			Иначе
				Если Объект.БарКоды.Количество() > 0 Тогда
				ТоварнаяГруппа = Объект.БарКоды[0].Товар.ТоварнаяГруппа; 			
				КонецЕсли;
			КонецЕсли;	
		Иначе
			Если Объект.БарКоды.Количество() > 0 Тогда
			ТоварнаяГруппа = Объект.БарКоды[0].Товар.ТоварнаяГруппа; 			
			КонецЕсли;
		КонецЕсли;
			Если Не ТоварнаяГруппа.Пустая() Тогда
				Для каждого ТЧ Из ТоварнаяГруппа.ШаблоныПечатныхДокументов Цикл
				ТЧПД = Объект.ПечатныеДокументы.Добавить();
				ТЧПД.Пометка = Истина;
				ТЧПД.Шаблон = ТЧ.Шаблон;
				КонецЦикла;
			КонецЕсли; 	
КонецПроцедуры

&НаКлиенте
Процедура ИзделиеПриИзменении(Элемент)
	Если Не Объект.Изделие.Пустая() Тогда
	ИзделиеПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ИзделиеПриИзмененииНаСервере()
Объект.БарКоды.Очистить();
Объект.ПечатныеДокументы.Очистить();
Объект.Документ = Неопределено;
ТоварнаяГруппа = Справочники.ТоварныеГруппы.ПустаяСсылка();
	Если Объект.Изделие.Товар.Пустая() Тогда
	Сообщить("Номенклатура не привязана к товару!");
	Возврат;
	КонецЕсли;
		Если Не ЗначениеЗаполнено(Объект.Период.ДатаНачала) Тогда
		Объект.Период.ДатаНачала = НачалоКвартала(ТекущаяДата());
		Объект.Период.ДатаОкончания = ТекущаяДата();
		КонецЕсли; 
ТоварнаяГруппа = Объект.Изделие.Товар.ТоварнаяГруппа;
ШаблонПД = Объект.Изделие.Товар.ТоварнаяГруппа.ШаблоныПечатныхДокументов;	
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	БарКоды.Изделие,
	|	БарКоды.БарКод,
	|	БарКоды.Товар,
	|	БарКоды.Период,
	|	БарКоды.ПЗ,
	|	БарКоды.MAC,
	|	БарКоды.КодDanfoss,
	|	БарКоды.СерийныйНомерEnLogic,
	|	БарКоды.IMEI
	|ИЗ
	|	РегистрСведений.БарКоды КАК БарКоды
	|ГДЕ
	|	БарКоды.Изделие = &Изделие
	|	И БарКоды.Период МЕЖДУ &ДатаНач И &ДатаКон";	
Запрос.УстановитьПараметр("Изделие", Объект.Изделие);
Запрос.УстановитьПараметр("ДатаНач", Объект.Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон", Объект.Период.ДатаОкончания);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТЧ = Объект.БарКоды.Добавить();
		ТЧ.Пометка = Истина;
		ТЧ.ДатаСоздания = ВыборкаДетальныеЗаписи.Период;
		ТЧ.Изделие = ВыборкаДетальныеЗаписи.Изделие;
		ТЧ.Товар = ВыборкаДетальныеЗаписи.Товар;
		ТЧ.БарКод = ВыборкаДетальныеЗаписи.БарКод;
		ТЧ.MAC = ВыборкаДетальныеЗаписи.MAC;
		ТЧ.IMEI = ВыборкаДетальныеЗаписи.IMEI;
		ТЧ.КодDanfoss = ВыборкаДетальныеЗаписи.КодDanfoss;
		ТЧ.СерийныйНомерEnLogic = ВыборкаДетальныеЗаписи.СерийныйНомерEnLogic;
		ТЧ.ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
		КонецЦикла;
	Иначе
	ТЧ = Объект.БарКоды.Добавить();
	ТЧ.Пометка = Истина;
	ТЧ.Изделие = Объект.Изделие;
	ТЧ.Товар = Объект.Изделие.Товар;
	КонецЕсли;
		Для каждого ТЧ Из ШаблонПД Цикл
		ТЧПД = Объект.ПечатныеДокументы.Добавить();
		ТЧПД.Пометка = Истина;
		ТЧПД.Шаблон = ТЧ.Шаблон;
		КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
ИзделиеПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьТаблицуБарКодовПоСпискуПЗ(СписокПЗ)
	Если Объект.Изделие.Товар.Пустая() Тогда
	Возврат;
	КонецЕсли; 
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	БарКоды.Изделие,
	|	БарКоды.БарКод,
	|	БарКоды.Товар,
	|	БарКоды.Период,
	|	БарКоды.ПЗ,
	|	БарКоды.MAC,
	|	БарКоды.КодDanfoss,
	|	БарКоды.СерийныйНомерEnLogic,
	|	БарКоды.IMEI
	|ИЗ
	|	РегистрСведений.БарКоды КАК БарКоды
	|ГДЕ
	|	БарКоды.ПЗ В(&СписокПЗ)";	
Запрос.УстановитьПараметр("СписокПЗ", СписокПЗ);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = Объект.БарКоды.Добавить();
	ТЧ.Пометка = Истина;
	ТЧ.ДатаСоздания = ВыборкаДетальныеЗаписи.Период;
	ТЧ.Изделие = ВыборкаДетальныеЗаписи.Изделие;
	ТЧ.Товар = ВыборкаДетальныеЗаписи.Товар;
	ТЧ.БарКод = ВыборкаДетальныеЗаписи.БарКод;
	ТЧ.MAC = ВыборкаДетальныеЗаписи.MAC;
	ТЧ.IMEI = ВыборкаДетальныеЗаписи.IMEI;
	ТЧ.КодDanfoss = ВыборкаДетальныеЗаписи.КодDanfoss;
	ТЧ.СерийныйНомерEnLogic = ВыборкаДетальныеЗаписи.СерийныйНомерEnLogic;
	ТЧ.ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
	КонецЦикла;
ТоварнаяГруппа = Объект.Изделие.Товар.ТоварнаяГруппа;
ШаблонПД = Объект.Изделие.Товар.ТоварнаяГруппа.ШаблоныПечатныхДокументов;
	Для каждого ТЧ Из ШаблонПД Цикл
		Если Не ТЧ.Шаблон.Групповой Тогда
		ТЧПД = Объект.ПечатныеДокументы.Добавить();
		ТЧПД.Пометка = Истина;
		ТЧПД.Шаблон = ТЧ.Шаблон;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Функция ПечатьНаСервере(Шаблон)
ТД = Новый ТабличныйДокумент;
 
	Если Шаблон.Родитель.Код = 1 Тогда //Бирки
		Если Шаблон.Шаблон = "Бирка_38х10_МногозонныеДатчики" Тогда
		ТД = БиркиМногозонные(Шаблон);		
		Иначе	
		ТД = Бирки(Шаблон);		
		КонецЕсли; 
	ИначеЕсли Шаблон.Родитель.Код = 2 Тогда //Паспорта и ГТ
		Если СокрЛП(Шаблон.Шаблон) = "ГТ_RU" Тогда
		ТД = ГТ_А4(Шаблон);
		ИначеЕсли Найти(Шаблон.Шаблон,"ПС_ГТ") > 0 Тогда
		ТД = ПСиГТ_А4(Шаблон);
		ИначеЕсли Найти(Шаблон.Шаблон,"ПС_INDIV") > 0 Тогда
		ТД = ПС_Danfoss_А4(Шаблон);
		КонецЕсли; 
	ИначеЕсли Шаблон.Родитель.Код = 3 Тогда //Этикетки на индивидуальную упаковку
	ТД = Этикетки(Шаблон); 
	ИначеЕсли Шаблон.Родитель.Код = 4 Тогда //QR-коды
	ТД = QRКоды_10х17(Шаблон); 
	ИначеЕсли Шаблон.Родитель.Код = 5 Тогда	//Этикетки групповой упаковки
		Если Шаблон.РазмерСтраницы = "A4" Тогда
		ТД = ЭтикеткаГрупповойУпаковки_A4(Шаблон);
		ИначеЕсли Шаблон.РазмерСтраницы = "Custom" Тогда
		ТД = ЭтикеткаГрупповойУпаковки_Zebra(Шаблон);
		КонецЕсли;
	ИначеЕсли Шаблон.Родитель.Код = 6 Тогда	//Протоколы испытаний	
	ИначеЕсли Шаблон.Родитель.Код = 7 Тогда	//Упаковочные листы
		Если ЗначениеЗаполнено(Объект.БарКоды[0].ПЗ) Тогда
			Если ОбщийМодульВызовСервера.ПолучитьНезавершённоеКоличество(ТекущаяДата(),Объект.БарКоды[0].ПЗ.ДокументОснование) < 2 Тогда
			ТД = УпаковочныйЛист_A4(Шаблон);
			КонецЕсли;
		КонецЕсли;		
	КонецЕсли;
ТД.РазмерСтраницы = Шаблон.РазмерСтраницы;
ТД.ВысотаСтраницы = Шаблон.ВысотаСтраницы;
ТД.ШиринаСтраницы = Шаблон.ШиринаСтраницы;
ТД.ПолеСлева = Шаблон.ПолеСлева;
ТД.ПолеСверху = Шаблон.ПолеСверху;
ТД.ПолеСнизу = Шаблон.ПолеСнизу;
ТД.ПолеСправа = Шаблон.ПолеСправа;
ТД.РазмерКолонтитулаСверху = 0;
ТД.РазмерКолонтитулаСнизу = 0;
	Если ЗначениеЗаполнено(Объект.БарКоды[0].ПЗ) Тогда
	Принтеры = Объект.БарКоды[0].ПЗ.Линейка.Принтеры.НайтиСтроки(Новый Структура("ШаблонДокумента",Шаблон));
		Для к = 0 По Принтеры.ВГраница() Цикл
			Если Принтеры[к].РабочееМесто = Параметры.РабочееМесто Тогда
			ТД.ИмяПринтера = Принтеры[к].Принтер;
			Прервать;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Если ТипЗнч(Объект.Документ) = Тип("ДокументСсылка.Перепрогон") Тогда
		ТД.ИмяПринтера = Шаблон.ПринтерДляПерепрогона;
		КонецЕсли;	 
	КонецЕсли; 
Возврат(ТД); 
КонецФункции

&НаКлиенте
Процедура Печать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		Для каждого ТЧ из Объект.ПечатныеДокументы Цикл
			Если ТЧ.Пометка Тогда
			ТД = ПечатьНаСервере(ТЧ.Шаблон);
			ТД.Показать(ТЧ.Шаблон);
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыШаблона(ОбластьТабДокумента)
МассивИменПараметров = Новый Массив;

    Для НомерСтроки = 1 По ОбластьТабДокумента.ВысотаТаблицы Цикл
        Для НомерКолонки = 1 По ОбластьТабДокумента.ШиринаТаблицы Цикл
        Ячейка = ОбластьТабДокумента.Область(НомерСтроки, НомерКолонки, НомерСтроки, НомерКолонки);
            Если Ячейка.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Параметр Тогда
                Если МассивИменПараметров.Найти(Ячейка.Параметр) = Неопределено тогда
                МассивИменПараметров.Добавить(Ячейка.Параметр);
                КонецЕсли;
            ИначеЕсли Ячейка.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Шаблон Тогда
                ТекстШаблона = Ячейка.Текст;
                ТекстШаблона = СтрЗаменить(ТекстШаблона, "[", Символы.ПС + "[");
                ТекстШаблона = СтрЗаменить(ТекстШаблона, "]", Символы.ПС);
                Для Счетчик = 1 По СтрЧислоСтрок(ТекстШаблона) Цикл
                ТекСтрока = СтрПолучитьСтроку(ТекстШаблона, Счетчик);
                    Если Лев(ТекСтрока, 1) = "[" тогда
                    ИмяПараметра = Сред(ТекСтрока, 2);
                        Если МассивИменПараметров.Найти(ИмяПараметра) = Неопределено Тогда
                        МассивИменПараметров.Добавить(ИмяПараметра);
                        КонецЕсли;
                    КонецЕсли;
                КонецЦикла; 
            КонецЕсли;
        КонецЦикла;
    КонецЦикла;
		Для каждого ТЧ Из ОбластьТабДокумента.Рисунки Цикл
			Если ТЧ.ТипРисунка = ТипРисункаТабличногоДокумента.Картинка Тогда
			Продолжить;
			КонецЕсли; 	
	       	Если ТЧ.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Параметр Тогда
	            Если МассивИменПараметров.Найти(ТЧ.Параметр) = Неопределено тогда
	            МассивИменПараметров.Добавить(ТЧ.Параметр);
	            КонецЕсли;
	        ИначеЕсли ТЧ.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Шаблон Тогда
	            ТекстШаблона = ТЧ.Текст;
	            ТекстШаблона = СтрЗаменить(ТекстШаблона, "[", Символы.ПС + "[");
	            ТекстШаблона = СтрЗаменить(ТекстШаблона, "]", Символы.ПС);
	            Для Счетчик = 1 По СтрЧислоСтрок(ТекстШаблона) Цикл
	            ТекСтрока = СтрПолучитьСтроку(ТекстШаблона, Счетчик);
	                Если Лев(ТекСтрока, 1) = "[" тогда
	                ИмяПараметра = Сред(ТекСтрока, 2);
	                    Если МассивИменПараметров.Найти(ИмяПараметра) = Неопределено Тогда
	                    МассивИменПараметров.Добавить(ИмяПараметра);
	                    КонецЕсли;
	                КонецЕсли;
	            КонецЦикла; 
	        КонецЕсли;
		КонецЦикла;
Возврат МассивИменПараметров;
КонецФункции

&НаСервере
Функция ЗаполнитьПараметрыШаблона(ИменаПараметров,ТЧ)
Парам = Новый Структура();

Товар = ТЧ.Товар;
	Для к = 0 По ИменаПараметров.ВГраница() Цикл
	Ключ = ИменаПараметров.Получить(к);
	Значение  = "-";
		Если Ключ = "Наимен" Тогда
		Значение = СокрЛП(Товар.Наименование);
			Если Найти(Значение,"[") > 0 Тогда                         
			Значение = СокрП(Сред(Значение,1,Найти(Значение,"[")-1)); 
			КонецЕсли;
		ИначеЕсли Ключ = "Наимен_БезОВЕН" Тогда
		Значение = СокрЛП(СтрЗаменить(Товар.Наименование,"ОВЕН",""));
			Если Найти(Значение,"[") > 0 Тогда                         
			Значение = СокрП(Сред(Значение,1,Найти(Значение,"[")-1)); 
			КонецЕсли;
		ИначеЕсли Ключ = "ПолнНаименование" Тогда
		Значение = СокрЛП(Товар.ПолнНаименование);
		ИначеЕсли Ключ = "КраткоеФункциональноеНаименование" Тогда
		Значение = СокрЛП(ВРег(Товар.КраткоеФункциональноеНаименование));
		ИначеЕсли Ключ = "Модиф" Тогда
		Наимен = СокрЛП(Товар.Наименование);
			Если Найти(Наимен,"[") > 0 Тогда                         
			Значение = Сред(Наимен,Найти(Наимен,"[")+1);	
			Значение = Лев(Значение,Найти(Значение,"]")-1);
			Иначе
			Значение = ""; 
			КонецЕсли;
		ИначеЕсли Ключ = "Модиф2" Тогда
		Наимен = СокрЛП(Товар.Наименование);
			Если Найти(Наимен,"[") > 0 Тогда                         
			Значение = Сред(Наимен,Найти(Наимен,"["));	
			Значение = Лев(Значение,Найти(Значение,"]"));
			Иначе
			Значение = ""; 
			КонецЕсли;
		ИначеЕсли Ключ = "НаименМодиф" Тогда
		Значение = СокрЛП(Товар.Наименование);
		ИначеЕсли Ключ = "ОсобаяОтметка" Тогда
		Значение = ТЧ.ПЗ.ДокументОснование.СтандартныйКомментарий.ОсобаяОтметка;
		ИначеЕсли Ключ = "Номер" Тогда
		Значение = ТЧ.БарКод;	
		ИначеЕсли Ключ = "Номер_6" Тогда
		Значение = Прав(ТЧ.БарКод,6);
		ИначеЕсли Ключ = "НомерМТК" Тогда
		Значение = СокрЛП(ТЧ.ПЗ.ДокументОснование.Номер);
		ИначеЕсли Ключ = "ДатаВыпуска" Тогда
		Значение = Формат(Объект.ДатаВыпуска,"ДФ=dd.MM.yyyy");
		ИначеЕсли Ключ = "ГодВыпуска" Тогда
		Значение = Формат(Год(Объект.ДатаВыпуска),"ЧЦ=4; ЧГ=; ДФ=")+" г.";
		ИначеЕсли Ключ = "ГодВыпускаUA" Тогда
		Значение = Формат(Год(Объект.ДатаВыпуска),"ЧЦ=4; ЧГ=; ДФ=")+" р.";
		ИначеЕсли Ключ = "ГодВыпускаЦифра" Тогда
		Значение = Формат(Год(Объект.ДатаВыпуска),"ЧЦ=4; ЧГ=; ДФ=");
		ИначеЕсли Ключ = "МесяцГодВыпуска" Тогда
		Значение = Формат(Год(Объект.ДатаВыпуска),"ЧЦ=4; ЧГ=; ДФ=MM.yyyy");
		ИначеЕсли Ключ = "АдресОрганизации" Тогда
		Значение = Константы.АдресОрганизацииДляЭтикеток.Получить();
		ИначеЕсли Ключ = "Заказной" Тогда
		Значение = ?(ЗначениеЗаполнено(ТЧ.ПЗ.ДокументОснование.Счёт),"ЗАК","");
		ИначеЕсли Ключ = "ЗаказнойUA" Тогда
		Значение = ?(ЗначениеЗаполнено(ТЧ.ПЗ.ДокументОснование.Счёт),"ЗАМ","");
		ИначеЕсли Ключ = "КодДанфосс" Тогда
		Значение = Товар.КодДанфосс;
		ИначеЕсли Ключ = "КодDanfoss" Тогда	
		Значение = ОбщийМодульВызовСервера.ПолучитьКодDanfoss(ТЧ.БарКод);
		ИначеЕсли Ключ = "MAC" Тогда
		Значение = ?(ЗначениеЗаполнено(ТЧ.MAC),"MAC:"+MACАдресНаПечать(ТЧ.MAC),"");
		ИначеЕсли Ключ = "IMEI" Тогда
		Значение = ?(ЗначениеЗаполнено(ТЧ.IMEI),ТЧ.IMEI,"");
		ИначеЕсли Ключ = "U" Тогда
		ДХТ = Справочники.ДополнительныеХарактеристикиТовара.Выбрать(,Товар);
			Пока ДХТ.Следующий() Цикл
				Если СокрЛП(ДХТ.Наименование) = "U" Тогда	
				Значение = СокрЛП(ДХТ.Значение);
				КонецЕсли;	
			КонецЦикла;
		ИначеЕсли Ключ = "I" Тогда
		ДХТ = Справочники.ДополнительныеХарактеристикиТовара.Выбрать(,Товар);
			Пока ДХТ.Следующий() Цикл
				Если СокрЛП(ДХТ.Наименование) = "I" Тогда	
				Значение = СокрЛП(ДХТ.Значение);
				КонецЕсли;	
			КонецЦикла;	
		ИначеЕсли Ключ = "ПоступлениеМПЗ" Тогда
		Значение = Объект.Документ;
		ИначеЕсли Ключ = "Контрагент" Тогда
		Значение = Объект.Документ.Контрагент;
		КонецЕсли;
	Парам.Вставить(Ключ,Значение); 
	КонецЦикла;
Возврат(Парам); 
КонецФункции 

&НаСервере
Процедура ПолучитьВерсиюПО(ЭтапСпецификации,ДатаЗапуска,ВерсияПО)
ВыборкаНР = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н_Д(ЭтапСпецификации,ДатаЗапуска);
	Пока ВыборкаНР.Следующий() Цикл
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Документация") Тогда
			Если ВыборкаНР.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Программа Тогда
				Если Найти(ВыборкаНР.Элемент.Наименование,"ПО_embSoft_") > 0 Тогда
				Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(СокрЛП(ВыборкаНР.Элемент.Наименование),"_");
				ВерсияПО = Массив[Массив.ВГраница()];
				Возврат;
				КонецЕсли; 
			КонецЕсли; 					
		Иначе
		ПолучитьВерсиюПО(ВыборкаНР.Элемент,ДатаЗапуска,ВерсияПО);
		КонецЕсли;
			Если ЗначениеЗаполнено(ВерсияПО) Тогда
			Возврат;
			КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция Бирки(Шаблон)
ТабДок = Новый ТабличныйДокумент;
  
Макет = ПолучитьОбщийМакет(СокрЛП(Шаблон.Шаблон));
ИменаПараметров = ПолучитьПараметрыШаблона(Макет);
ОблБирка = Макет.ПолучитьОбласть("Бирка");
	Для каждого ТЧ Из Объект.БарКоды Цикл
	ПараметрыТоварнойГруппы = ПолучитьПараметрыТоварнойГруппы(ТЧ.Товар);
	ДХТ = ПолучитьДополнительныеХарактеристикиТовара(ТЧ.Товар);
	 	Если ТЧ.Пометка Тогда
            Если Шаблон.ЕстьQRКод тогда
	        QRCode = ТЧ.БарКод;
			ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRCode, 0, 100);	
				Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
				КартинкаQRКода = Новый Картинка(ДанныеQRКода);
				ОблБирка.Рисунки.QRCode.Картинка = КартинкаQRКода;
				Иначе
				Сообщить("Не удалось сформировать QR-код!");
				КонецЕсли;		
			КонецЕсли; 
	    ОблБирка.Параметры.Заполнить(ЗаполнитьПараметрыШаблона(ИменаПараметров,ТЧ));
		ПараметрыТоварнойГруппы.Вставить("ДиапазонПреобразования",ПолучитьДиапазонПреобразования(ТЧ.Товар)); //для датчиков с токовым выходом
			Если ЗначениеЗаполнено(ПараметрыТоварнойГруппы.ДиапазонПреобразования) Тогда
				Если ПараметрыТоварнойГруппы.Свойство("ДиапазонТемператур") Тогда
				ПараметрыТоварнойГруппы.ДиапазонТемператур = ПараметрыТоварнойГруппы.ДиапазонПреобразования;
				КонецЕсли;
			КонецЕсли;
		ДопПарам = ПолучитьДополнительныеПараметрыДатчиковЕХ(ТЧ.Товар); 
		ПараметрыТоварнойГруппы.Вставить("МаркировкаВзрывозащиты",ДопПарам.МаркировкаВзрывозащиты);
		ОблБирка.Параметры.Заполнить(ПараметрыТоварнойГруппы);
		ОблБирка.Параметры.Заполнить(ДХТ);
			Если ИменаПараметров.Найти("ВерсияПО") <> Неопределено Тогда
			ВерсияПО = "";
			ПолучитьВерсиюПО(ТЧ.Изделие,ТЧ.ПЗ.ДатаЗапуска,ВерсияПО);
			ОблБирка.Параметры.ВерсияПО = "Версия ПО: "+ВерсияПО;
			КонецЕсли; 
				Попытка	
					Если Не ТЧ.Товар.СИ Тогда
					СИ = ОблБирка.Рисунки.СИ;
					СИ.Картинка = Новый Картинка();
					СИ.ВыводитьНаПечать = Ложь;
					КонецЕсли;
				Исключение			
				КонецПопытки;
				Попытка	
					Если Не ТЧ.Товар.ЕАС Тогда
					ЕАС = ОблБирка.Рисунки.ЕАС;
					ЕАС.Картинка = Новый Картинка();
					ЕАС.ВыводитьНаПечать = Ложь;
					КонецЕсли;
				Исключение			
				КонецПопытки;
					Для к = 1 По Объект.КоличествоКопий Цикл
		    		ТабДок.Вывести(ОблБирка);
					ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЦикла;
		КонецЕсли; 
	КонецЦикла;
Возврат(ТабДок);  
КонецФункции

&НаСервере
Функция БиркиМногозонные(Шаблон)
ТабДок = Новый ТабличныйДокумент;
СписокЗон = Новый СписокЗначений; 

Макет = ПолучитьОбщийМакет(СокрЛП(Шаблон.Шаблон));
ОблБирка = Макет.ПолучитьОбласть("Бирка");
НаименованиеДатчика = Объект.БарКоды[0].Товар.Наименование;
СтрокаПараметров = Сред(НаименованиеДатчика,Найти(НаименованиеДатчика,"-")+1);
СтрокаПараметров = Сред(СтрокаПараметров,Найти(СтрокаПараметров,".")+1);
СтрокаПараметров = Сред(СтрокаПараметров,Найти(СтрокаПараметров,".")+1);
СтрокаПараметров = Лев(СтрокаПараметров,Найти(СтрокаПараметров,"/")-1);
	Пока Найти(СтрокаПараметров,".") > 0 Цикл
	СписокЗон.Добавить(Лев(СтрокаПараметров,Найти(СтрокаПараметров,".")-1));
	СтрокаПараметров = Сред(СтрокаПараметров,Найти(СтрокаПараметров,".")+1);		
	КонецЦикла;
СписокЗон.Добавить(СтрокаПараметров); 
	Для каждого ТЧ Из Объект.БарКоды Цикл
	 	Если ТЧ.Пометка Тогда
			Для каждого Стр Из СписокЗон Цикл
			ОблБирка.Параметры.НомерЗоны = Стр.ПолучитьИдентификатор()+1;
			ОблБирка.Параметры.ДлинаЗоны = Стр.Значение;
				Для к = 1 По Объект.КоличествоКопий Цикл
    			ТабДок.Вывести(ОблБирка);
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЦикла;			
			КонецЦикла;  
		КонецЕсли; 
	КонецЦикла;
Возврат(ТабДок);  
КонецФункции

&НаСервере
Функция QRКоды_10х17(Шаблон)
ТабДок = Новый ТабличныйДокумент;

Макет = ПолучитьОбщийМакет(СокрЛП(Шаблон.Шаблон));
ОблQRКод = Макет.ПолучитьОбласть("QRКод");
ТекТовар = Объект.БарКоды[0].Товар;
	Для каждого ТЧ Из Объект.БарКоды Цикл
	 	Если ТЧ.Пометка Тогда
        QRCode = ТЧ.БарКод;
		ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRCode, 0, 100);	
			Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
			КартинкаQRКода = Новый Картинка(ДанныеQRКода);
			ОблQRКод.Рисунки.QRCode.Картинка = КартинкаQRКода;
			Иначе
			Сообщить("Не удалось сформировать QR-код!");
			КонецЕсли;
				Для к = 1 По Объект.КоличествоКопий Цикл
				ТабДок.Вывести(ОблQRКод);
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЦикла;
		КонецЕсли; 
	КонецЦикла; 
ТабДок.РазмерСтраницы = "Custom";
ТабДок.ВысотаСтраницы = 10;
ТабДок.ШиринаСтраницы = 17;
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок);  
КонецФункции

&НаСервере
Функция ПолучитьДиапазонПреобразования(Товар)
ДиапазонПреобразования = "";
	Если Найти(ВРег(Товар.Наименование),".И") > 0 Тогда
	КодДиапазона = Сред(Товар.Наименование,Найти(Товар.Наименование,"[")+1);
	КодДиапазона = Лев(КодДиапазона,Найти(КодДиапазона,"]")-1); 
	ДиапазонПреобразования = СокрЛП(Справочники.ДиапазоныПреобразования.НайтиПоКоду(КодДиапазона).Наименование);
	КонецЕсли;
Возврат(ДиапазонПреобразования);
КонецФункции

&НаСервере
Функция ПолучитьДополнительныеПараметрыДатчиковЕХ(Товар)
Парам = Новый Структура("ТемпературныйКласс,МаркировкаВзрывозащиты");
ТемпературныйКласс = "";
Наимен = ВРег(Товар.Наименование);		
	Если Найти(Наимен,".ЕХ") > 0 Тогда
		Если Найти(Наимен,"-Т1") > 0 Тогда
		Парам.ТемпературныйКласс = "Т1 (425°C)";                      
			Если Найти(Наимен,".ЕХI") > 0 Тогда
			Парам.МаркировкаВзрывозащиты = "0Ех ia IIC T1 Ga X";
			ИначеЕсли Найти(Наимен,".ЕХD") > 0 Тогда
				Если Найти(Наимен,"5Д") > 0  Тогда 
					Если Найти(Наимен,"ДТС") > 0  Тогда
					Парам.МаркировкаВзрывозащиты = "1Ех db IIC T1 Gb X";					
					Иначе	
					Парам.МаркировкаВзрывозащиты = "1Ех d IIC T1 Gb X";					
					КонецЕсли;
				Иначе	
				Парам.МаркировкаВзрывозащиты = "0Ех d IIC T1 Ga X";
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Найти(Наимен,"-Т2") > 0 Тогда
		Парам.ТемпературныйКласс = "Т2 (275°C)"; 
			Если Найти(Наимен,".ЕХI") > 0 Тогда
			Парам.МаркировкаВзрывозащиты = "0Ех ia IIC T2 Ga X";
			ИначеЕсли Найти(Наимен,".ЕХD") > 0 Тогда
				Если Найти(Наимен,"5Д") > 0  Тогда
					Если Найти(Наимен,"ДТС") > 0  Тогда
					Парам.МаркировкаВзрывозащиты = "1Ех db IIC T2 Gb X";					
					Иначе	
					Парам.МаркировкаВзрывозащиты = "1Ех d IIC T2 Gb X";					
					КонецЕсли;
				Иначе	
				Парам.МаркировкаВзрывозащиты = "0Ех d IIC T2 Ga X";
				КонецЕсли;
			КонецЕсли;		
		ИначеЕсли Найти(Наимен,"-Т3") > 0 Тогда
		Парам.ТемпературныйКласс = "Т3 (195°C)";
			Если Найти(Наимен,".ЕХI") > 0 Тогда
			Парам.МаркировкаВзрывозащиты = "0Ех ia IIC T3 Ga X";
			ИначеЕсли Найти(Наимен,".ЕХD") > 0 Тогда
				Если Найти(Наимен,"5Д") > 0  Тогда
					Если Найти(Наимен,"ДТС") > 0  Тогда
					Парам.МаркировкаВзрывозащиты = "1Ех db IIC T3 Gb X";					
					Иначе	
					Парам.МаркировкаВзрывозащиты = "1Ех d IIC T3 Gb X";					
					КонецЕсли;
				Иначе	
				Парам.МаркировкаВзрывозащиты = "0Ех d IIC T3 Ga X";
				КонецЕсли;
			КонецЕсли;		
		ИначеЕсли Найти(Наимен,"-Т4") > 0 Тогда
		Парам.ТемпературныйКласс = "Т4 (130°C)"; 
			Если Найти(Наимен,".ЕХI") > 0 Тогда
			Парам.МаркировкаВзрывозащиты = "0Ех ia IIC T4 Ga X";
			ИначеЕсли Найти(Наимен,".ЕХD") > 0 Тогда
				Если Найти(Наимен,"5Д") > 0  Тогда
					Если Найти(Наимен,"ДТС") > 0  Тогда
					Парам.МаркировкаВзрывозащиты = "1Ех db IIC T4 Gb X";					
					Иначе	
					Парам.МаркировкаВзрывозащиты = "1Ех d IIC T4 Gb X";					
					КонецЕсли;
				Иначе	
				Парам.МаркировкаВзрывозащиты = "0Ех d IIC T4 Ga X";
				КонецЕсли;
			КонецЕсли;		
		ИначеЕсли Найти(Наимен,"-Т5") > 0 Тогда
		Парам.ТемпературныйКласс = "Т5 (95°C)";                            
			Если Найти(Наимен,".ЕХI") > 0 Тогда
			Парам.МаркировкаВзрывозащиты = "0Ех ia IIC T5 Ga X";
			ИначеЕсли Найти(Наимен,".ЕХD") > 0 Тогда
				Если Найти(Наимен,"5Д") > 0  Тогда
					Если Найти(Наимен,"ДТС") > 0  Тогда
					Парам.МаркировкаВзрывозащиты = "1Ех db IIC T5 Gb X";					
					Иначе	
					Парам.МаркировкаВзрывозащиты = "1Ех d IIC T5 Gb X";					
					КонецЕсли;
				Иначе	
				Парам.МаркировкаВзрывозащиты = "0Ех d IIC T5 Ga X";
				КонецЕсли;
			КонецЕсли;		
		ИначеЕсли Найти(Наимен,"-Т6") > 0 Тогда
		Парам.ТемпературныйКласс = "Т6 (80°C)";
			Если Найти(Наимен,".ЕХI") > 0 Тогда
			Парам.МаркировкаВзрывозащиты = "0Ех ia IIC T6 Ga X";
			ИначеЕсли Найти(Наимен,".ЕХD") > 0 Тогда
				Если Найти(Наимен,"5Д") > 0  Тогда
					Если Найти(Наимен,"ДТС") > 0  Тогда
					Парам.МаркировкаВзрывозащиты = "1Ех db IIC T6 Gb X";					
					Иначе	
					Парам.МаркировкаВзрывозащиты = "1Ех d IIC T6 Gb X";					
					КонецЕсли;
				Иначе	
				Парам.МаркировкаВзрывозащиты = "0Ех d IIC T6 Ga X";
				КонецЕсли;
			КонецЕсли;		
		КонецЕсли;
	ИначеЕсли Найти(ВРег(Наимен),"-ЕХ [М") > 0 Тогда
	Парам.МаркировкаВзрывозащиты = "0Ех ia IIC T4 Ga X";
	ИначеЕсли Найти(ВРег(Наимен),"-ЕХ") > 0 Тогда
	Парам.МаркировкаВзрывозащиты = "0Ех ia IIC T4 X";	
	КонецЕсли;
Возврат(Парам);
КонецФункции

&НаСервере
Функция ПолучитьДрагоценныеМеталлы(ПЗ)
Парам = Новый Структура("ДМ1,ДМ2,ДМ3");

ДМ = РегистрыСведений.ДрагоценныеМеталлы.СоздатьНаборЗаписей();
ДМ.Отбор.ПЗ.Установить(ПЗ);
ДМ.Прочитать();
    Для Каждого Запись Из ДМ Цикл 
	Парам.ДМ1 = Запись.ДМ1;
	Парам.ДМ2 = Запись.ДМ2;
	Парам.ДМ3 = Запись.ДМ3;
	КонецЦикла;
Возврат(Парам);
КонецФункции

&НаСервере
Функция ПолучитьДополнительныеХарактеристикиТовара(Товар)
Парам = Новый Структура();

ДХТ = Справочники.ДополнительныеХарактеристикиТовара.Выбрать(,Товар);
	Пока ДХТ.Следующий() Цикл
	Парам.Вставить(СокрЛП(ДХТ.Наименование),СокрЛП(ДХТ.Значение));
	КонецЦикла;
Возврат(Парам);
КонецФункции

&НаСервере
Функция ПолучитьПараметрыТоварнойГруппы(Товар)
ПараметрыТоварнойГруппы = Новый Структура();
	
	Если Товар.ТоварнаяГруппа.ИспользоватьТаблицуПараметровДатчиков Тогда
	СписокПараметров = ПолучитьСписокПараметровДатчика();
		Для Каждого Параметр Из СписокПараметров Цикл
		ПараметрыТоварнойГруппы.Вставить(Параметр.Представление,Параметр.Значение);
		КонецЦикла;			
	Иначе	
	ПТГ = РегистрыСведений.ПараметрыТоварныхГрупп.СоздатьНаборЗаписей();
	ПТГ.Отбор.ТоварнаяГруппа.Установить(Товар.ТоварнаяГруппа);
	ПТГ.Прочитать();
		Для Каждого Запись Из ПТГ Цикл
		ПараметрыТоварнойГруппы.Вставить(Запись.ПараметрТоварнойГруппы.Наименование,Запись.ЗначениеПараметра);
		КонецЦикла;	
	КонецЕсли;
Возврат(ПараметрыТоварнойГруппы);
КонецФункции

&НаСервере
Функция ПолучитьПараметрыТоварнойГруппыДТС()
ПараметрыТоварнойГруппы = Новый Структура();
Запрос = Новый Запрос;

ПараметрыИзделия = СокрЛП(Объект.Изделие.Товар.Наименование);
Тип = Лев(ПараметрыИзделия,Найти(ПараметрыИзделия,"-"));
Константы.ПроверкаДатчика.Установить(Тип);
Параметр1 = "";
Параметр2 = "";
Параметр3 = "";
Параметр4 = "";
Класс = "";
	Если Найти(Тип,"КДТС") > 0 Тогда
	Параметр1 = "КДТС";
		Если Найти(Тип,"4-") > 0 Тогда
		Параметр2 = "4-";
		ИначеЕсли Найти(Тип,"4Э-") > 0 Тогда
		Параметр2 = "4-";
		ИначеЕсли Найти(Тип,"5-") > 0 Тогда
		Параметр2 = "5-";
		ИначеЕсли Найти(Тип,"5Э-") > 0 Тогда
		Параметр2 = "5-";			
		ИначеЕсли Найти(Тип,"5Л-") > 0 Тогда
		Параметр2 = "5-";
		ИначеЕсли Найти(Тип,"5М-") > 0 Тогда
		Параметр2 = "5-";
		ИначеЕсли Найти(Тип,"5Е-") > 0 Тогда
		Параметр2 = "5Е-";
		ИначеЕсли Найти(Тип,"5Д-") > 0 Тогда
		Параметр2 = "5Д-";		
		КонецЕсли; 
	ИначеЕсли Найти(Тип,"ДТС125Л") > 0 Тогда
	Параметр1 = "ДТС125Л";
	ИначеЕсли Найти(Тип,"ДТС125М") > 0 Тогда
	Параметр1 = "ДТС125М";
	ИначеЕсли Найти(Тип,"ДТС125") > 0 Тогда
	Параметр1 = "ДТС125";
	Иначе
	Параметр1 = "ДТС";
		Если Найти(Тип,"4-") > 0 Тогда
		Параметр2 = "4-";
		ИначеЕсли Найти(Тип,"4Э-") > 0 Тогда
		Параметр2 = "4-";
		ИначеЕсли Найти(Тип,"5-") > 0 Тогда
		Параметр2 = "5-";
		ИначеЕсли Найти(Тип,"5Э-") > 0 Тогда
		Параметр2 = "5-";			
		ИначеЕсли Найти(Тип,"5Л-") > 0 Тогда
		Параметр2 = "5-";
		ИначеЕсли Найти(Тип,"5М-") > 0 Тогда
		Параметр2 = "5-";
		ИначеЕсли Найти(Тип,"5Е-") > 0 Тогда
		Параметр2 = "5Е-";
		ИначеЕсли Найти(Тип,"5Д-") > 0 Тогда
		Параметр2 = "5Д-";		
		КонецЕсли; 
	КонецЕсли;		
ПараметрыИзделия = Сред(ПараметрыИзделия,Найти(ПараметрыИзделия,"-")+1);

Параметр3 = Лев(ПараметрыИзделия,Найти(ПараметрыИзделия,".")-1);
ПараметрыИзделия = Сред(ПараметрыИзделия,Найти(ПараметрыИзделия,".")+1);
Класс = Лев(ПараметрыИзделия,Найти(ПараметрыИзделия,".")-1);
	Если (Найти(Класс,"А") = 1)или(Найти(Класс,"В") = 1)или(Найти(Класс,"С") = 1) Тогда
	Класс = Сред(Класс,1,1);	
	КонецЕсли;
		Если Найти(ПараметрыИзделия,".И") > 1 Тогда
		Параметр4 = "И";
		ИначеЕсли Найти(ПараметрыИзделия,".RS") > 1 Тогда
		Параметр4 = "RS";	
		КонецЕсли; 
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыДатчиковДТС.Класс,
	|	ПараметрыДатчиковДТС.Диапазон,
	|	ПараметрыДатчиковДТС.ТУ,
	|	ПараметрыДатчиковДТС.МП
	|ИЗ
	|	Справочник.ПараметрыДатчиковДТС КАК ПараметрыДатчиковДТС
	|ГДЕ
	|	ПараметрыДатчиковДТС.Параметр1 = &Параметр1
	|	И ПараметрыДатчиковДТС.Параметр2 = &Параметр2
	|	И ПараметрыДатчиковДТС.Параметр3 = &Параметр3
	|	И ПараметрыДатчиковДТС.Параметр4 = &Параметр4
	|	И ПараметрыДатчиковДТС.Класс ПОДОБНО &Класс";
Запрос.УстановитьПараметр("Параметр1", Параметр1);
Запрос.УстановитьПараметр("Параметр2", Параметр2);
Запрос.УстановитьПараметр("Параметр3", Параметр3);
Запрос.УстановитьПараметр("Параметр4", Параметр4);
Запрос.УстановитьПараметр("Класс", "%"+Класс+"%");
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ПараметрыТоварнойГруппы.Вставить("КлассДопуска",ВыборкаДетальныеЗаписи.Класс);
	ПараметрыТоварнойГруппы.Вставить("ТУ",ВыборкаДетальныеЗаписи.ТУ);
	ПараметрыТоварнойГруппы.Вставить("МП",ВыборкаДетальныеЗаписи.МП);
		Если Параметр4 = "И" Тогда
		ПараметрыТоварнойГруппы.Вставить("Диапазон",ПолучитьДиапазонПреобразования(Объект.Изделие));
		Иначе	
		ПараметрыТоварнойГруппы.Вставить("Диапазон",ВыборкаДетальныеЗаписи.Диапазон);		
		КонецЕсли; 
	Прервать;
	КонецЦикла;
Возврат(ПараметрыТоварнойГруппы);
КонецФункции

&НаСервере
Функция ПолучитьСписокПараметровДатчика()
Наимен = Объект.БарКоды[0].Товар.Наименование;
ТипДатчика = Лев(Наимен,Найти(Наимен,"-")-1);
Наимен = Сред(Наимен,Найти(Наимен,"-")+1);
НСХ = Лев(Наимен,Найти(Наимен,".")-1);
Наимен = Сред(Наимен,Найти(Наимен,".")+1);
КлассДопуска = Сред(Наимен,Найти(Наимен,".")-1);
	Если (Найти(КлассДопуска,"А") > 0)или
		 (Найти(КлассДопуска,"В") > 0)или
		 (Найти(КлассДопуска,"С") > 0) Тогда
	КлассДопуска = Лев(КлассДопуска,1);
	КонецЕсли; 

СписокПараметров = Новый СписокЗначений;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПараметровДатчиков.ДиапазонТемператур,
	|	ТаблицаПараметровДатчиков.ДиапазонИзмерения,
	|	ТаблицаПараметровДатчиков.ТУ,
	|	ТаблицаПараметровДатчиков.МП
	|ИЗ
	|	Справочник.ТаблицаПараметровДатчиков КАК ТаблицаПараметровДатчиков
	|ГДЕ
	|	ТаблицаПараметровДатчиков.Наименование = &ТипДатчика
	|	И ТаблицаПараметровДатчиков.НСХ = &НСХ
	|	И ТаблицаПараметровДатчиков.КлассДопуска = &КлассДопуска";
Запрос.УстановитьПараметр("ТипДатчика", ТипДатчика);
Запрос.УстановитьПараметр("НСХ", НСХ);
Запрос.УстановитьПараметр("КлассДопуска", КлассДопуска);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокПараметров.Добавить(ВыборкаДетальныеЗаписи.ДиапазонТемператур,"ДиапазонТемператур");
	СписокПараметров.Добавить(ВыборкаДетальныеЗаписи.ДиапазонИзмерения,"ДиапазонИзмерения");
	СписокПараметров.Добавить(ВыборкаДетальныеЗаписи.ТУ,"ТУ");
	СписокПараметров.Добавить(ВыборкаДетальныеЗаписи.МП,"МП");
	КонецЦикла;
Возврат(СписокПараметров);
КонецФункции

&НаСервере
Функция ПСиГТ_А4(Шаблон)
ТабДок = Новый ТабличныйДокумент; 

ДанныеЗаполнения = Новый Структура("Номер,Наимен,ПолнНаимен,АдресОрганизации,СервисЦентры,Количество");

Наимен = Объект.БарКоды[0].Товар.Наименование;
Наимен = СокрП(Сред(Наимен,1,Найти(Наимен,"[")-1));
ДанныеЗаполнения.Наимен = Наимен;
ДанныеЗаполнения.ПолнНаимен = СокрЛП(ВРег(Объект.БарКоды[0].Товар.ПолнНаименование));
ДанныеЗаполнения.АдресОрганизации = СокрЛП(Константы.АдресОрганизацииДляПаспортов.Получить());

ДанныеЗаполнения.СервисЦентры = ПолучитьСервисЦентры();
	Если Шаблон.Внешний Тогда
	Макет = Новый ТабличныйДокумент;
	
	Макет.Прочитать(Константы.КаталогДокументовИПрограмм.Получить()+"532 (Паспорта)\Шаблоны\Шаблоны1С8\"+СокрЛП(Шаблон.Шаблон));
	Иначе	
	Макет = ПолучитьОбщийМакет(СокрЛП(Шаблон.Шаблон));
	КонецЕсли;
ИменаПараметров = ПолучитьПараметрыШаблона(Макет);
		Если Объект.БарКоды[0].Товар.Комплект Тогда
		Комплект = "";
			Для каждого ТЧ Из ТаблицаКомплекта Цикл
			Комплект = Комплект+СокрЛП(ТЧ.Изделие.Наименование)+" Зав.№"+СокрЛП(ТЧ.БарКод)+" - 1 шт."+Символы.ПС;					
			КонецЦикла; 
		ДанныеЗаполнения.Вставить("Комплект",Комплект);				
		КонецЕсли;  
ОблПС1 = Макет.ПолучитьОбласть("ПС1");
ОблПС2 = Макет.ПолучитьОбласть("ПС2");                                     
	Для каждого ТЧ Из Объект.БарКоды Цикл
		Если ТЧ.Пометка Тогда
			Если Найти(Шаблон.Шаблон,"ПС_ГТ_ДТХ") > 0 Тогда
				Если Найти(Наимен,"ДТС") > 0 Тогда
				ПараметрыТоварнойГруппы = ПолучитьПараметрыТоварнойГруппыДТС();
				КонецЕсли;
			Иначе
			ПараметрыТоварнойГруппы = ПолучитьПараметрыТоварнойГруппы(ТЧ.Товар);
			ПараметрыТоварнойГруппы.Вставить("ДиапазонПреобразования",ПолучитьДиапазонПреобразования(ТЧ.Товар));
			ДопПарам = ПолучитьДополнительныеПараметрыДатчиковЕХ(ТЧ.Товар);
			ПараметрыТоварнойГруппы.Вставить("ТемпературныйКласс",ДопПарам.ТемпературныйКласс);
			ПараметрыТоварнойГруппы.Вставить("МаркировкаВзрывозащиты","Маркировка взрывозащиты:"+Символы.ПС+ДопПарам.МаркировкаВзрывозащиты);
			КонецЕсли;
		ДХТ = ПолучитьДополнительныеХарактеристикиТовара(ТЧ.Товар);
			Если Найти(ТЧ.Товар.Наименование,"Н]") > 0 Тогда
			ПараметрыТоварнойГруппы.Вставить("Протокол","HART");
			Иначе	
			ПараметрыТоварнойГруппы.Вставить("Протокол","-");
			КонецЕсли; 
		ДанныеЗаполнения.Номер = ТЧ.БарКод;
		ДанныеЗаполнения.Количество = ТЧ.ПЗ.Количество;
		ОблПС1.Параметры.Заполнить(ЗаполнитьПараметрыШаблона(ИменаПараметров,ТЧ)); 
		ОблПС1.Параметры.Заполнить(Объект);
		ОблПС1.Параметры.Заполнить(ДанныеЗаполнения); 
		ОблПС1.Параметры.Заполнить(ТЧ.Товар.ТоварнаяГруппа);
		ОблПС1.Параметры.Заполнить(ПараметрыТоварнойГруппы);
		ОблПС1.Параметры.Заполнить(ДХТ);
		ОблПС1.Параметры.Заполнить(ПолучитьДрагоценныеМеталлы(ТЧ.ПЗ));
		Индекс = 0;
			Для каждого Парам Из ОблПС1.Параметры Цикл
			ОблПС1.Параметры.Установить(Индекс,СокрЛП(Парам));
				Если Найти(ОблПС1.Параметры.Получить(Индекс),"0:00:00") > 0 Тогда
				ОблПС1.Параметры.Установить(Индекс,Формат(Парам,"ДФ=dd.MM.yyyy"));
				КонецЕсли; 
			Индекс = Индекс + 1;
			КонецЦикла;	
					Если Не ТЧ.Товар.СИ Тогда
						Попытка
						СИ = ОблПС1.Рисунки.СИ;
						СИ.Картинка = Новый Картинка();
						СИ.ВыводитьНаПечать = Ложь;
						Исключение			
						КонецПопытки;
							Попытка
							ОблПС1.Области.НомерВГосреестре.Текст = "";
							Исключение			
							КонецПопытки;
					КонецЕсли;
						Если Не ТЧ.Товар.ЕАС Тогда
							Попытка
							ЕАС = ОблПС1.Рисунки.ЕАС;
							ЕАС.Картинка = Новый Картинка();
							ЕАС.ВыводитьНаПечать = Ложь;
							Исключение			
							КонецПопытки;
						КонецЕсли;
							Для к = 1 По Объект.КоличествоКопий Цикл
							ТабДок.Вывести(ОблПС1);
							ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
							КонецЦикла;
		ОблПС2.Параметры.Заполнить(ЗаполнитьПараметрыШаблона(ИменаПараметров,ТЧ));
		ОблПС2.Параметры.Заполнить(Объект);
		ОблПС2.Параметры.Заполнить(ТЧ.Товар.ТоварнаяГруппа);
		ОблПС2.Параметры.Заполнить(ПараметрыТоварнойГруппы); 
		ОблПС2.Параметры.Заполнить(ДанныеЗаполнения);
		Индекс = 0;
			Для каждого Парам Из ОблПС2.Параметры Цикл
			ОблПС2.Параметры.Установить(Индекс,СокрЛП(Парам));
				Если Найти(ОблПС2.Параметры.Получить(Индекс),"0:00:00") > 0 Тогда
				ОблПС2.Параметры.Установить(Индекс,Формат(Парам,"ДФ=dd.MM.yyyy"));
				КонецЕсли;
			Индекс = Индекс + 1;
			КонецЦикла;
				Для к = 1 По Объект.КоличествоКопий Цикл
				ТабДок.Вывести(ОблПС2);
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЦикла;
		КонецЕсли; 
	КонецЦикла;
ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
ТабДок.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
Возврат(ТабДок); 
КонецФункции

&НаСервере
Функция ГТ_А4(Шаблон)
ТабДок = Новый ТабличныйДокумент; 

ТекТовар = Объект.БарКоды[0].Товар;
Макет = ПолучитьОбщийМакет(СокрЛП(Шаблон.Шаблон));
ОблГТ1 = Макет.ПолучитьОбласть("ГТ1");
ОблГТ2 = Макет.ПолучитьОбласть("ГТ2");                                     
	Для каждого ТЧ Из Объект.БарКоды Цикл
		Если ТЧ.Пометка Тогда    
		Наимен = ТЧ.Товар.Наименование;
		Наимен = СокрП(Сред(Наимен,1,Найти(Наимен,"[")-1));
		ОблГТ1.Параметры.Наимен = СокрЛП(Наимен);
		ОблГТ1.Параметры.Номер = ТЧ.БарКод;
			Для к = 1 По Объект.КоличествоКопий Цикл
			ТабДок.Вывести(ОблГТ1);
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЦикла;
		ОблГТ2.Параметры.Заполнить(ТЧ.Товар.ТоварнаяГруппа); 
		Индекс = 0;
			Для каждого Парам Из ОблГТ2.Параметры Цикл
			ОблГТ2.Параметры.Установить(Индекс,СокрЛП(Парам));
			Индекс = Индекс + 1;
			КонецЦикла; 
				Для к = 1 По Объект.КоличествоКопий Цикл
				ТабДок.Вывести(ОблГТ2);
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЦикла;
		КонецЕсли; 
	КонецЦикла;
ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
ТабДок.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
Возврат(ТабДок); 
КонецФункции

&НаСервере
Функция ПС_Danfoss_А4(Шаблон)
ТабДок = Новый ТабличныйДокумент; 

ТекТовар = Объект.БарКоды[0].Товар;
Макет = ПолучитьОбщийМакет(СокрЛП(Шаблон.Шаблон));
ОблПС1 = Макет.ПолучитьОбласть("ПС1");
ОблПС2 = Макет.ПолучитьОбласть("ПС2");                                     
	Для каждого ТЧ Из Объект.БарКоды Цикл
		Если ТЧ.Пометка Тогда    
		ОблПС1.Параметры.Номер = ТЧ.КодDanfoss;
		ОблПС1.Параметры.Заполнить(Объект);
		Индекс = 0;
			Для каждого Парам Из ОблПС1.Параметры Цикл
				Если Найти(ОблПС1.Параметры.Получить(Индекс),"0:00:00") > 0 Тогда
				ОблПС1.Параметры.Установить(Индекс,Формат(Парам,"ДФ=dd.MM.yyyy"));
				КонецЕсли; 
			Индекс = Индекс + 1;
			КонецЦикла;
				Для к = 1 По Объект.КоличествоКопий Цикл
				ТабДок.Вывести(ОблПС1);
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц(); 
				ТабДок.Вывести(ОблПС2);
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЦикла;	
		КонецЕсли; 
	КонецЦикла; 
ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
ТабДок.ДвусторонняяПечать = ТипДвустороннейПечати.ПереворотВлево;
Возврат(ТабДок); 
КонецФункции

&НаСервере
Функция ПолучитьДиапазонБарКодов()
Запрос = Новый Запрос;
Результат = Новый Структура("НомерПервый,НомерПоследний",0,0);

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.БарКод
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", Объект.Документ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
НомСтр = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если НомСтр = 1 Тогда
		Результат.НомерПервый = ВыборкаДетальныеЗаписи.БарКод;
		Результат.НомерПоследний = ВыборкаДетальныеЗаписи.БарКод;
		Иначе	
		Результат.НомерПоследний = ВыборкаДетальныеЗаписи.БарКод;		
		КонецЕсли; 
	НомСтр = НомСтр + 1;
	КонецЦикла;
Возврат(Результат);
КонецФункции

&НаСервере
Функция Этикетки(Шаблон)
ТабДок = Новый ТабличныйДокумент;

Макет = ПолучитьОбщийМакет(СокрЛП(Шаблон.Шаблон));
ИменаПараметров = ПолучитьПараметрыШаблона(Макет);
КоличествоРядов = Шаблон.КоличествоРядов;
	Если КоличествоРядов > 1 Тогда
	ОблЭтикетка = Макет.ПолучитьОбласть("Этикетка|Секция");
	Иначе	
	ОблЭтикетка = Макет.ПолучитьОбласть("Этикетка");
	КонецЕсли;
Ряд = 1;
	Для каждого ТЧ Из Объект.БарКоды Цикл
	 	Если ТЧ.Пометка Тогда
		ПТГ = ПолучитьПараметрыТоварнойГруппы(ТЧ.Товар);
		ДХТ = ПолучитьДополнительныеХарактеристикиТовара(ТЧ.Товар);
            Если Шаблон.ЕстьQRКод тогда
	        QRCode = ТЧ.БарКод;
			ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRCode, 0, 100);	
				Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
				КартинкаQRКода = Новый Картинка(ДанныеQRКода);
				ОблЭтикетка.Рисунки.QRCode.Картинка = КартинкаQRКода;
				Иначе
				Сообщить("Не удалось сформировать QR-код!");
				КонецЕсли;		
			КонецЕсли; 
	    ОблЭтикетка.Параметры.Заполнить(ЗаполнитьПараметрыШаблона(ИменаПараметров,ТЧ));
	    ОблЭтикетка.Параметры.Заполнить(ПТГ);
	    ОблЭтикетка.Параметры.Заполнить(ДХТ);
			Если Не ТЧ.Товар.СИ Тогда
				Попытка	
				СИ = ОблЭтикетка.Рисунки.СИ;
				СИ.Картинка = Новый Картинка();
				СИ.ВыводитьНаПечать = Ложь;
				Исключение			
				КонецПопытки;
			КонецЕсли;	
				Если Не ТЧ.Товар.ЕАС Тогда
					Попытка
					ЕАС = ОблЭтикетка.Рисунки.ЕАС;
					ЕАС.Картинка = Новый Картинка();
					ЕАС.ВыводитьНаПечать = Ложь;
					Исключение			
					КонецПопытки;
				КонецЕсли;
					Если КоличествоРядов > 1 Тогда
						Если Ряд = 1 Тогда
						ТабДок.Вывести(ОблЭтикетка);
						Иначе
						ТабДок.Присоединить(ОблЭтикетка); 
						КонецЕсли; 	
							Если Ряд = КоличествоРядов Тогда 
							Ряд = 1;
							Иначе
							Ряд = Ряд + 1;
							КонецЕсли;			
					Иначе
						Для к = 1 По Объект.КоличествоКопий Цикл
						ТабДок.Вывести(ОблЭтикетка);	
						ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
						КонецЦикла;
					КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
Возврат(ТабДок);  
КонецФункции

&НаСервере
Функция ЭтикеткаГрупповойУпаковки_A4(Шаблон)
ТабДок = Новый ТабличныйДокумент; 

Макет = ПолучитьОбщийМакет(СокрЛП(Шаблон.Шаблон));
ОблЭтикетка = Макет.ПолучитьОбласть("Этикетка");
ТекТовар = Объект.БарКоды[0].Товар;
ТекНаимен = СокрЛП(ТекТовар.Наименование);
Модиф = "";
	Если Найти(ТекНаимен,"[") > 0 Тогда                         
	Модиф = Сред(ТекНаимен,Найти(ТекНаимен,"[")+1);	
	Модиф = Лев(Модиф,Найти(Модиф,"]")-1);
	ТекНаимен = СокрП(Сред(ТекНаимен,1,Найти(ТекНаимен,"[")-1)); 
	КонецЕсли;
		Для каждого ТЧ Из Объект.БарКоды Цикл
		 	Если ТЧ.Пометка Тогда
			ОблЭтикетка.Параметры.ТекНаименование = ТекНаимен;
			ОблЭтикетка.Параметры.Модиф = Модиф;
			ОблЭтикетка.Параметры.ПолнНаименование = СокрЛП(ТекТовар.ПолнНаименование);
			ОблЭтикетка.Параметры.КодDanfoss = ТекТовар.КодДанфосс;
			ОблЭтикетка.Параметры.Количество = ТекТовар.КоличествоГрупповойУпаковки;
			ОблЭтикетка.Параметры.ДатаВыпуска = Формат(Объект.ДатаВыпуска,"ДФ=dd.MM.yyyy");
				Для к = 1 По Объект.КоличествоКопий Цикл
	    		ТабДок.Вывести(ОблЭтикетка);
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЦикла;
			КонецЕсли; 
		КонецЦикла;
ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
Возврат(ТабДок);  
КонецФункции

&НаСервере
Функция ЭтикеткаГрупповойУпаковки_Zebra(Шаблон)
ТабДок = Новый ТабличныйДокумент; 

Макет = ПолучитьОбщийМакет(СокрЛП(Шаблон.Шаблон));
ОблЭтикетка = Макет.ПолучитьОбласть("Этикетка");
ТекТовар = Объект.БарКоды[0].Товар;
ТекНаимен = СокрЛП(ТекТовар.Наименование);
Модиф = "";
	Если Найти(ТекНаимен,"[") > 0 Тогда                         
	Модиф = Сред(ТекНаимен,Найти(ТекНаимен,"[")+1);	
	Модиф = Лев(Модиф,Найти(Модиф,"]")-1);
	ТекНаимен = СокрП(Сред(ТекНаимен,1,Найти(ТекНаимен,"[")-1)); 
	КонецЕсли;
		Для каждого ТЧ Из Объект.БарКоды Цикл
		 	Если ТЧ.Пометка Тогда
			ОблЭтикетка.Параметры.ТекНаименование = ТекНаимен;
			ОблЭтикетка.Параметры.Модиф = Модиф;
			ОблЭтикетка.Параметры.ПолнНаименование = СокрЛП(ТекТовар.ПолнНаименование);
			ОблЭтикетка.Параметры.КодDanfoss = ТекТовар.КодДанфосс;
			ОблЭтикетка.Параметры.Количество = ТекТовар.КоличествоГрупповойУпаковки;
			ОблЭтикетка.Параметры.ДатаВыпуска = Формат(Объект.ДатаВыпуска,"ДФ=dd.MM.yyyy");
				Для к = 1 По Объект.КоличествоКопий Цикл
	    		ТабДок.Вывести(ОблЭтикетка);
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЦикла;
			КонецЕсли; 
		КонецЦикла;
Возврат(ТабДок);  
КонецФункции

&НаСервере
Функция УпаковочныйЛист_A4(Шаблон)
ТабДок = Новый ТабличныйДокумент; 

Макет = ПолучитьОбщийМакет(СокрЛП(Шаблон.Шаблон));
ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблБарКод = Макет.ПолучитьОбласть("БарКод");
ОблКонец = Макет.ПолучитьОбласть("Конец");

МТК = Объект.БарКоды[0].ПЗ.ДокументОснование;

Лист = 1;
	Если МТК.Количество > 36 Тогда
	Листов = 2;
	Иначе
	Листов = 1;
    КонецЕсли;

ОблШапка.Параметры.Наимен = СокрЛП(Объект.БарКоды[0].Товар.Наименование);
ОблШапка.Параметры.Номер = МТК.Номер;
ОблШапка.Параметры.Количество = МТК.Количество;
ТабДок.Вывести(ОблШапка);
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.БарКод КАК БарКод
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	БарКод";
Запрос.УстановитьПараметр("ДокументОснование", МТК);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
к = 0;
л = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	к = к + 1;
	л = л + 1;  
		Если к = 37 Тогда    	
		Лист = 2;
		   	Если л = 1 Тогда 
			ОблБарКод.Параметры.БарКод1 = "*"+ВыборкаДетальныеЗаписи.БарКод+"*";
			ОблБарКод.Параметры.Номер1 = "Зав.№"+ВыборкаДетальныеЗаписи.БарКод;
			ОблБарКод.Параметры.БарКод2 = "";			
			ОблБарКод.Параметры.Номер2 = "";
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			ОблШапка.Параметры.Наимен = СокрЛП(Объект.БарКоды[0].Товар.Наименование);
			ОблШапка.Параметры.Номер = МТК.Номер;
			ОблШапка.Параметры.Количество = МТК.Количество;
			ТабДок.Вывести(ОблШапка);
			ИначеЕсли л = 2 Тогда
			ОблБарКод.Параметры.БарКод2 = "*"+ВыборкаДетальныеЗаписи.БарКод+"*";
			ОблБарКод.Параметры.Номер2 = "Зав.№"+ВыборкаДетальныеЗаписи.БарКод; 
			ТабДок.Вывести(ОблБарКод);	
			л = 0;
			КонецЕсли;	
		Иначе	
			Если л = 1 Тогда               
			ОблБарКод.Параметры.БарКод1 = "*"+ВыборкаДетальныеЗаписи.БарКод+"*";
			ОблБарКод.Параметры.Номер1 = "Зав.№"+ВыборкаДетальныеЗаписи.БарКод;
			ОблБарКод.Параметры.БарКод2 = "";			
			ОблБарКод.Параметры.Номер2 = "";
			ИначеЕсли л = 2 Тогда
			ОблБарКод.Параметры.БарКод2 = "*"+ВыборкаДетальныеЗаписи.БарКод+"*";
			ОблБарКод.Параметры.Номер2 = "Зав.№"+ВыборкаДетальныеЗаписи.БарКод;
			ТабДок.Вывести(ОблБарКод);	
			л = 0;
		    КонецЕсли; 
				Если к = 36 Тогда
				ОблКонец.Параметры.Лист = Лист;
				ОблКонец.Параметры.Листов = Листов;
				ТабДок.Вывести(ОблКонец);
				КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		Если ОблБарКод.Параметры.Номер2 = "" Тогда
		ТабДок.Вывести(ОблБарКод);
	КонецЕсли;
ОблКонец.Параметры.Лист = Лист;
ОблКонец.Параметры.Листов = Листов;
ТабДок.Вывести(ОблКонец);	
ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
Возврат(ТабДок);  
КонецФункции

&НаСервере
Процедура НайтиПоБарКодуНаСервере(БарКод)
Объект.Документ = Неопределено;
Объект.БарКоды.Очистить();
Объект.Изделие = Справочники.Номенклатура.ПустаяСсылка();
Объект.ПечатныеДокументы.Очистить();
Запрос = Новый Запрос;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	БарКоды.Изделие,
	|	БарКоды.БарКод,
	|	БарКоды.Товар,
	|	БарКоды.Период,
	|	БарКоды.ПЗ,
	|	БарКоды.MAC,
	|	БарКоды.КодDanfoss,
	|	БарКоды.СерийныйНомерEnLogic,
	|	БарКоды.IMEI
	|ИЗ
	|	РегистрСведений.БарКоды КАК БарКоды
	|ГДЕ
	|	БарКоды.БарКод = &БарКод";	
Запрос.УстановитьПараметр("БарКод", БарКод);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТЧ = Объект.БарКоды.Добавить();
		ТЧ.Пометка = Истина;
		ТЧ.ДатаСоздания = ВыборкаДетальныеЗаписи.Период;
		ТЧ.Изделие = ВыборкаДетальныеЗаписи.Изделие;
		ТЧ.Товар = ВыборкаДетальныеЗаписи.Товар;
		ТЧ.БарКод = ВыборкаДетальныеЗаписи.БарКод;
		ТЧ.MAC = ВыборкаДетальныеЗаписи.MAC;
		ТЧ.IMEI = ВыборкаДетальныеЗаписи.IMEI;
		ТЧ.ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
		ТЧ.КодDanfoss = ВыборкаДетальныеЗаписи.КодDanfoss;
		ТЧ.СерийныйНомерEnLogic = ВыборкаДетальныеЗаписи.СерийныйНомерEnLogic;
		Объект.Изделие = ВыборкаДетальныеЗаписи.Изделие;
		ТоварнаяГруппа = Объект.Изделие.Товар.ТоварнаяГруппа;
		ШаблонПД = ВыборкаДетальныеЗаписи.Товар.ТоварнаяГруппа.ШаблоныПечатныхДокументов;
		КонецЦикла;
			Для каждого ТЧ Из ШаблонПД Цикл
				Если Не ТЧ.Шаблон.Групповой Тогда
				ТЧПД = Объект.ПечатныеДокументы.Добавить();
				ТЧПД.Пометка = Истина;
				ТЧПД.Шаблон = ТЧ.Шаблон;
				КонецЕсли;
			КонецЦикла;	
	Иначе	
		Если СтрДлина(СокрЛП(БарКод)) = 18 Тогда
		КодТовара = Лев(БарКод,6);
		Иначе	
		КодТовара = Лев(БарКод,5);	
		КонецЕсли;
	Товар = Справочники.Товары.НайтиПоКоду(Число(КодТовара));
		Если Не Товар.Пустая() Тогда
		ТЧ = Объект.БарКоды.Добавить();
		ТЧ.Пометка = Истина;
		ТЧ.Товар = Товар.Ссылка;
		ТЧ.БарКод = БарКод;
		ТоварнаяГруппа = Товар.ТоварнаяГруппа;
		ШаблонПД = Товар.ТоварнаяГруппа.ШаблоныПечатныхДокументов;
			Для каждого ТЧ Из ШаблонПД Цикл
				Если Не ТЧ.Шаблон.Групповой Тогда
				ТЧПД = Объект.ПечатныеДокументы.Добавить();
				ТЧПД.Пометка = Истина;
				ТЧПД.Шаблон = ТЧ.Шаблон;
				КонецЕсли;
			КонецЦикла;			
		Иначе
		Сообщить("Товар не найден!");
		КонецЕсли; 
	КонецЕсли; 	
КонецПроцедуры 

&НаСервере
Функция ПолучитьСписокТоваров(БарКод)
СписокТоваров = Новый СписокЗначений;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БарКоды.Товар
	|ИЗ
	|	РегистрСведений.БарКоды КАК БарКоды
	|ГДЕ
	|	БарКоды.БарКод ПОДОБНО &БарКод";	
Запрос.УстановитьПараметр("БарКод", "%" + БарКод + "%");	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокТоваров.Добавить(ВыборкаДетальныеЗаписи.Товар);
	КонецЦикла;
СписокТоваров.СортироватьПоЗначению();	
Возврат(СписокТоваров);
КонецФункции

&НаСервере
Процедура НайтиПоЧастиБарКодаНаСервере(ВыбТовар,БарКод)
Объект.Документ = Неопределено;
Объект.БарКоды.Очистить();
Объект.Изделие = Справочники.Номенклатура.ПустаяСсылка();
Объект.ПечатныеДокументы.Очистить();
Запрос = Новый Запрос;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	БарКоды.Изделие,
	|	БарКоды.БарКод,
	|	БарКоды.Товар,
	|	БарКоды.Период,
	|	БарКоды.ПЗ,
	|	БарКоды.MAC,
	|	БарКоды.КодDanfoss,
	|	БарКоды.СерийныйНомерEnLogic,
	|	БарКоды.IMEI
	|ИЗ
	|	РегистрСведений.БарКоды КАК БарКоды
	|ГДЕ
	|	БарКоды.БарКод ПОДОБНО &БарКод
	|	И БарКоды.Товар = &Товар";	
Запрос.УстановитьПараметр("БарКод", "%" + БарКод + "%");
Запрос.УстановитьПараметр("Товар", ВыбТовар);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = Объект.БарКоды.Добавить();
	ТЧ.Пометка = Истина;
	ТЧ.ДатаСоздания = ВыборкаДетальныеЗаписи.Период;
	ТЧ.Изделие = ВыборкаДетальныеЗаписи.Изделие;
	ТЧ.Товар = ВыборкаДетальныеЗаписи.Товар;
	ТЧ.БарКод = ВыборкаДетальныеЗаписи.БарКод;
	ТЧ.MAC = ВыборкаДетальныеЗаписи.MAC;
	ТЧ.IMEI = ВыборкаДетальныеЗаписи.IMEI;
	ТЧ.ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
	ТЧ.КодDanfoss = ВыборкаДетальныеЗаписи.КодDanfoss;
	ТЧ.СерийныйНомерEnLogic = ВыборкаДетальныеЗаписи.СерийныйНомерEnLogic;
	Объект.Изделие = ВыборкаДетальныеЗаписи.Изделие;
	ТоварнаяГруппа = Объект.Изделие.Товар.ТоварнаяГруппа;
	ШаблонПД = ВыборкаДетальныеЗаписи.Товар.ТоварнаяГруппа.ШаблоныПечатныхДокументов;
	КонецЦикла;
		Для каждого ТЧ Из ШаблонПД Цикл
			Если Не ТЧ.Шаблон.Групповой Тогда
			ТЧПД = Объект.ПечатныеДокументы.Добавить();
			ТЧПД.Пометка = Истина;
			ТЧПД.Шаблон = ТЧ.Шаблон;
			КонецЕсли;
		КонецЦикла; 	
КонецПроцедуры

&НаКлиенте
Процедура НайтиПоБарКоду(Команда)
БарКод = "";
	Если ВвестиСтроку(БарКод,"Введите бар-код",18) Тогда
		Если СтрДлина(СокрЛП(БарКод)) > 16 Тогда
		НайтиПоБарКодуНаСервере(БарКод);
		Иначе
		СписокТоваров = ПолучитьСписокТоваров(БарКод);
			Если СписокТоваров.Количество() > 0 Тогда
				Если СписокТоваров.Количество() = 1 Тогда
				НайтиПоЧастиБарКодаНаСервере(СписокТоваров[0].Значение,БарКод);
				Иначе
				ВыбТовар = СписокТоваров.ВыбратьЭлемент("Выберите товар",ВыбТовар);
					Если ВыбТовар <> Неопределено Тогда
					НайтиПоЧастиБарКодаНаСервере(ВыбТовар.Значение,БарКод);
					КонецЕсли; 
				КонецЕсли;
			Иначе 
			Сообщить("Часть бар-кода не найдена ни в одном товаре!");
			КонецЕсли; 
		КонецЕсли; 	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ДобавитьТоварВКомплект(БарКод)
	Если СтрДлина(СокрЛП(БарКод)) = 18 Тогда
	КодТовара = Лев(БарКод,6);
	Иначе	
	КодТовара = Лев(БарКод,5);	
	КонецЕсли;
Товар = Справочники.Товары.НайтиПоКоду(КодТовара);
ТЧ = ТаблицаКомплекта.Добавить();
ТЧ.Изделие = Товар;
ТЧ.БарКод = БарКод;
КонецПроцедуры

&НаСервере
Функция ЭтоКомплект()
Возврат(Объект.БарКоды[0].Товар.Комплект);
КонецФункции

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда	
		Если Объект.БарКоды.Количество() > 0 Тогда
			Если ЭтоКомплект() Тогда	
			ДобавитьТоварВКомплект(Данные);
			Иначе
	        НайтиПоБарКодуНаСервере(Данные);
			КонецЕсли;
		Иначе
		НайтиПоБарКодуНаСервере(Данные);
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьШаблоныПДНаСервере()
	Если Не Объект.Изделие.Пустая() Тогда
	Объект.ПечатныеДокументы.Очистить();
		Если Объект.Изделие.Пустая() Тогда
			Если Объект.БарКоды.Количество() > 0 Тогда
			ТоварнаяГруппа = Объект.БарКоды[0].Товар.ТоварнаяГруппа;
			КонецЕсли;
		Иначе	
		ТоварнаяГруппа = Объект.Изделие.Товар.ТоварнаяГруппа;
		КонецЕсли;
	ШаблонПД = ТоварнаяГруппа.ШаблоныПечатныхДокументов;
		Для каждого ТЧ Из ШаблонПД Цикл
			Если Не ТЧ.Шаблон.Групповой Тогда
			ТЧПД = Объект.ПечатныеДокументы.Добавить();
			ТЧПД.Пометка = Истина;
			ТЧПД.Шаблон = ТЧ.Шаблон;			
			КонецЕсли; 
		КонецЦикла;	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьШаблоныПД(Команда)
ОбновитьШаблоныПДНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПрисвоитьMACНаСервере()
	Для каждого ТЧ Из Объект.БарКоды Цикл
		Если Не ТЧ.Товар.Пустая() Тогда
			Если Не ЗначениеЗаполнено(ТЧ.MAC) Тогда
				Попытка
				НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
				MAC = Неопределено;
				НумераторMAC = ТЧ.Товар.ТоварнаяГруппа.НумераторMAC;
					Если Не НумераторMAC.Пустая() Тогда
					MAC = глНовыйMACАдрес(НумераторMAC,ТЧ.Товар.ТоварнаяГруппа.КоличествоMACАдресов);
						Если MAC <> Неопределено Тогда
						НаборЗаписей = РегистрыСведений.БарКоды.СоздатьНаборЗаписей();
						НаборЗаписей.Отбор.ПЗ.Установить(ТЧ.ПЗ);
						НаборЗаписей.Прочитать();
						    Для Каждого Запись Из НаборЗаписей Цикл
							Запись.MAC = MAC;  
						    КонецЦикла;
						НаборЗаписей.Записать(Истина);
						ТЧ.MAC = MAC;
						Иначе
						ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
						Возврат;
						КонецЕсли; 
					КонецЕсли;	
				ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
				Исключение
				ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
				Возврат;
				КонецПопытки;
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ПрисвоитьMAC(Команда)
ПрисвоитьMACНаСервере();
КонецПроцедуры

&НаСервере
Процедура НайтиПоКодуDanfossНаСервере(КодDanfoss)
Объект.Документ = Неопределено;
Объект.БарКоды.Очистить();
Объект.Изделие = Справочники.Номенклатура.ПустаяСсылка();
Объект.ПечатныеДокументы.Очистить();
Запрос = Новый Запрос;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	БарКоды.Изделие,
	|	БарКоды.БарКод,
	|	БарКоды.Товар,
	|	БарКоды.Период,
	|	БарКоды.ПЗ,
	|	БарКоды.MAC,
	|	БарКоды.КодDanfoss,
	|	БарКоды.СерийныйНомерEnLogic,
	|	БарКоды.IMEI
	|ИЗ
	|	РегистрСведений.БарКоды КАК БарКоды
	|ГДЕ
	|	БарКоды.КодDanfoss = &КодDanfoss";	
Запрос.УстановитьПараметр("КодDanfoss", КодDanfoss);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТЧ = Объект.БарКоды.Добавить();
		ТЧ.Пометка = Истина;
		ТЧ.ДатаСоздания = ВыборкаДетальныеЗаписи.Период;
		ТЧ.Изделие = ВыборкаДетальныеЗаписи.Изделие;
		ТЧ.Товар = ВыборкаДетальныеЗаписи.Товар;
		ТЧ.БарКод = ВыборкаДетальныеЗаписи.БарКод;
		ТЧ.КодDanfoss = ВыборкаДетальныеЗаписи.КодDanfoss;
		ТЧ.СерийныйНомерEnLogic = ВыборкаДетальныеЗаписи.СерийныйНомерEnLogic;
		ТЧ.MAC = ВыборкаДетальныеЗаписи.MAC;
		ТЧ.IMEI = ВыборкаДетальныеЗаписи.IMEI;
		ТЧ.ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
		ШаблонПД = ВыборкаДетальныеЗаписи.Товар.ТоварнаяГруппа.ШаблоныПечатныхДокументов;
		КонецЦикла;
			Для каждого ТЧ Из ШаблонПД Цикл
				Если Не ТЧ.Шаблон.Групповой Тогда
				ТЧПД = Объект.ПечатныеДокументы.Добавить();
				ТЧПД.Пометка = Истина;
				ТЧПД.Шаблон = ТЧ.Шаблон;
				КонецЕсли;
			КонецЦикла; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НайтиПоКодуDanfoss(Команда)
КодDanfoss = "";
	Если ВвестиСтроку(КодDanfoss,"Введите код Danfoss",8) Тогда
	НайтиПоКодуDanfossНаСервере(КодDanfoss);	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПрисвоитьКодыDanfossНаСервере()
	Для каждого ТЧ Из Объект.БарКоды Цикл
		Если Не ТЧ.Товар.Пустая() Тогда
			Если Не ЗначениеЗаполнено(ТЧ.КодDanfoss) Тогда
			НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
				Попытка
				КодDanfoss = "";
				НумераторDanfoss = ТЧ.Товар.НумераторDanfoss;
					Если Не НумераторDanfoss.Пустая() Тогда
					КодDanfoss = НумераторDanfoss.СледующийНомер;
					Нумератор = НумераторDanfoss.ПолучитьОбъект();
					Нумератор.СледующийНомер = Нумератор.СледующийНомер+1;
					Нумератор.Записать();
					КонецЕсли; 
				НаборЗаписей = РегистрыСведений.БарКоды.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ПЗ.Установить(ТЧ.ПЗ);
				НаборЗаписей.Прочитать();
				    Для Каждого Запись Из НаборЗаписей Цикл
					Запись.КодDanfoss = Формат(КодDanfoss,"ЧЦ=8; ЧВН=; ЧГ=0");  
				    КонецЦикла;
				НаборЗаписей.Записать(Истина);
				ТЧ.КодDanfoss = Формат(КодDanfoss,"ЧЦ=8; ЧВН=; ЧГ=0"); 
				Исключение
				ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
				КонецПопытки;
			ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПрисвоитьКодыDanfoss(Команда)
ПрисвоитьКодыDanfossНаСервере();
КонецПроцедуры

&НаСервере
Функция ПолучитьСервисЦентры()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	СервисЦентры.Город КАК Город,
	|	СервисЦентры.Наименование КАК Наименование,
	|	СервисЦентры.Адрес КАК Адрес,
	|	СервисЦентры.Телефоны КАК Телефоны,
	|	СервисЦентры.Email КАК Email
	|ИЗ
	|	Справочник.СервисЦентры КАК СервисЦентры
	|ГДЕ
	|	СервисЦентры.ПометкаУдаления = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	СервисЦентры.Город";
РезультатЗапроса = Запрос.Выполнить();
СписокСЦ = "";
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//СписокСЦ = СписокСЦ+СокрЛП(ВыборкаДетальныеЗаписи.Город)+": "+СокрЛП(ВыборкаДетальныеЗаписи.Наименование)+", "+СокрЛП(ВыборкаДетальныеЗаписи.Адрес)+", тел. "+СокрЛП(ВыборкаДетальныеЗаписи.Телефоны)+", "+СокрЛП(ВыборкаДетальныеЗаписи.Email)+Символы.ПС;//+Символы.ПС;
	СписокСЦ = СписокСЦ+СокрЛП(ВыборкаДетальныеЗаписи.Город)+": "+СокрЛП(ВыборкаДетальныеЗаписи.Наименование)+", тел. "+СокрЛП(ВыборкаДетальныеЗаписи.Телефоны)+Символы.ПС+Символы.ПС;
	КонецЦикла;
		Если Константы.КодБазы.Получить() = "БГР" Тогда
		СписокСЦ = СписокСЦ+"	Получить более подробную информацию о сервисных центрах ОВЕН, а так же ознакомиться с правилами передачи изделий в ремонт можно на сайте ОВЕН 
		|в разделе «сервисные центры»: https://owen.ru/servisnie_centri . Кроме этого, на странице сервисного центра вы можете заказать дубликат паспорта,
		|узнать состояние переданного в ремонт изделия, гарантийный срок и межповерочный интервал любого изделия ОВЕН.
		|	Все сервисные центры ОВЕН имеют одинаковый статус и осуществляют ремонт любой продукции торговой марки ОВЕН на одинаковых условиях.
		|Пользователь может обращаться в любой сервисный центр по своему выбору, независимо  от места приобретения  продукции  торговой марки ОВЕН.
		|Вопросы по режиму работы и условиям технического обслуживания пользователь может задать по телефону или электронной почте любого сервисного центра.
		|Замечания и пожелания к качеству услуг, предоставляемых сервисными центрами ОВЕН, необходимо направлять в Центральный офис компании ОВЕН по e-mail: rem@owen.ru или по факсу: (495)728-41-45.
		|Внимание! 
		|Руководство по эксплуатации, диск, крепежные элементы, съемные клеммные колодки вкладывать в коробку с прибором НЕ нужно.";		
		Иначе	
		СписокСЦ = СписокСЦ+"	Всі сервісні центри ОВЕН мають однаковий статус і здійснюють ремонт будь-якої продукції торгової марки ОВЕН на однакових умовах.
		|Зауваження та побажання до якості послуг , що надаються РБЦ компанії ОВЕН , необхідно направляти на підприємство-виробник «ВО ОВЕН» по тел. : (057)720-91-19
	    |Користувач може звертатися в будь-який сервісний центр за своїм вибором, незалежно від місця придбання продукції торгової марки ОВЕН.
	    |Питання з приводу режиму роботи і умов технічного обслуговування користувач може запитати по телефону або електронній пошті будь-якого сервісного центру.
	    |У разі відсутності паспорта гарантійний термін рахується від дати виробництва вироба.
	    |Увага!
	    |Керівництво по експлуатації, диск, елементи кріплення, знімні клемні колодки вкладати в коробку з приладом НЕ потрібно.";		
		КонецЕсли;
Возврат(СписокСЦ);
КонецФункции

&НаСервере
Функция ПолучитьПЗПоБарКоду(БарКод)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	БарКоды.ПЗ
	|ИЗ
	|	РегистрСведений.БарКоды КАК БарКоды
	|ГДЕ
	|	БарКоды.БарКод = &БарКод";
Запрос.УстановитьПараметр("БарКод",БарКод);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.ПЗ);
	КонецЦикла;
Возврат(Документы.ПроизводственноеЗадание.ПустаяСсылка());
КонецФункции

&НаКлиенте
Процедура ОтчётПоРемонту(Команда)
ПЗ = ПолучитьПЗПоБарКоду(Элементы.БарКоды.ТекущиеДанные.БарКод);
	Если Не ПЗ.Пустая() Тогда
	ОткрытьФорму("Отчет.ОтчетПоРемонту.Форма.ФормаОтчета",Новый Структура("ПЗ",ПЗ));
	Иначе
	Сообщить("Производственное задание не найдено!");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПолучитьШаблоныТовараНаСервере(Товар)
Объект.БарКоды.Очистить();
Объект.ПечатныеДокументы.Очистить();
ТЧ = Объект.БарКоды.Добавить();
ТЧ.Товар = Товар;
ТЧ.Пометка = Истина;
ТоварнаяГруппа = Товар.ТоварнаяГруппа;
	Для каждого ТЧ Из Товар.ТоварнаяГруппа.ШаблоныПечатныхДокументов Цикл
		Если Не ТЧ.Шаблон.Групповой Тогда
		ТЧПД = Объект.ПечатныеДокументы.Добавить();
		ТЧПД.Пометка = Истина;
		ТЧПД.Шаблон = ТЧ.Шаблон;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьШаблоныТовара(Команда)
Товар = Неопределено;
	Если ВвестиЗначение(Товар,"Выберите товар",Новый ОписаниеТипов("СправочникСсылка.Товары")) Тогда
	ПолучитьШаблоныТовараНаСервере(Товар);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПроизводственноеЗадание(Команда)
ОткрытьФорму("Документ.ПроизводственноеЗадание.Форма.ФормаДокумента",Новый Структура("Ключ",Элементы.БарКоды.ТекущиеДанные.ПЗ));
КонецПроцедуры

&НаКлиенте
Процедура СоздатьБарКоды(Команда)
Изделие = ОткрытьФормуМодально("Обработка.СозданныеБарКоды.Форма.СозданиеБарКодов");
	Если Изделие <> Неопределено Тогда
	Объект.Период.ДатаНачала = ТекущаяДата();
	Объект.Период.ДатаОкончания = ТекущаяДата();
	Объект.Изделие = Изделие;
	ИзделиеПриИзмененииНаСервере();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьКомплект(Команда)
ТаблицаКомплекта.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВКомплект(Команда)
БарКод = "";
	Если ВвестиСтроку(БарКод,"Введите бар-код",18) Тогда
	ДобавитьТоварВКомплект(БарКод);
	КонецЕсли; 
КонецПроцедуры
