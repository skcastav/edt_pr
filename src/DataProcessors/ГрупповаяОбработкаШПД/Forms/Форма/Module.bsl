
&НаСервере
Процедура ПолучитьКоличествоВыбранных()
КоличествоВыбранныхСтрок = 0;
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		Если ТЧ.Пометка Тогда
		КоличествоВыбранныхСтрок = КоличествоВыбранныхСтрок + 1;
		КонецЕсли;	
	КонецЦикла; 
КонецПроцедуры  

&НаСервере
Процедура ДобавитьНаСервере()
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1; 
		Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл	
			Если ТЧ.Пометка Тогда
			флНайден = Ложь;
				Для каждого ТЧ_ШПД Из ТЧ.ТоварнаяГруппа.ШаблоныПечатныхДокументов Цикл
					Если ТЧ_ШПД.Шаблон = Объект.ШаблонНовый Тогда	
					флНайден = Истина;
					Прервать;
					КонецЕсли;
				КонецЦикла;
					Если Не флНайден Тогда
					ТГ = ТЧ.ТоварнаяГруппа.ПолучитьОбъект();
					ТЧ_ШПД = ТГ.ШаблоныПечатныхДокументов.Добавить();
					ТЧ_ШПД.Шаблон = Объект.ШаблонНовый;
					ТГ.Записать();
					КонецЕсли; 
			КонецЕсли;
		КонецЦикла;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура ИзменитьНаСервере()
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1; 
		Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл	
			Если ТЧ.Пометка Тогда
			ТГ = ТЧ.ТоварнаяГруппа.ПолучитьОбъект();
				Для каждого ТЧ_ШПД Из ТГ.ШаблоныПечатныхДокументов Цикл
					Если ТЧ_ШПД.Шаблон = Объект.Шаблон Тогда	
					ТЧ_ШПД.Шаблон = Объект.ШаблонНовый;
					КонецЕсли;
				КонецЦикла;
			ТГ.Записать();			
			КонецЕсли; 
		КонецЦикла;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура УдалитьНаСервере()
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1; 
		Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл	
			Если ТЧ.Пометка Тогда
			ТГ = ТЧ.ТоварнаяГруппа.ПолучитьОбъект();
				Для каждого ТЧ_ШПД Из ТГ.ШаблоныПечатныхДокументов Цикл
					Если ТЧ_ШПД.Шаблон = Объект.Шаблон Тогда	
					ТГ.ШаблоныПечатныхДокументов.Удалить(ТЧ_ШПД);
					Прервать;
					КонецЕсли;
				КонецЦикла;
			ТГ.Записать();			
			КонецЕсли;
		КонецЦикла;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура Обработать(Команда)
	Если ВидОперации = 1 Тогда
	Состояние("Обработка...",,"Добавление шаблона...");
	ДобавитьНаСервере();
	ИначеЕсли ВидОперации = 2 Тогда
	Состояние("Обработка...",,"Изменение шаблона...");
    ИзменитьНаСервере();
	ИначеЕсли ВидОперации = 3 Тогда
	Состояние("Обработка...",,"Удаление шаблона...");
    УдалитьНаСервере();
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ВыбратьТоварыНаСервере()
Объект.ТабличнаяЧасть.Очистить();

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварныеГруппыШаблоныПечатныхДокументов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ТоварныеГруппы.ШаблоныПечатныхДокументов КАК ТоварныеГруппыШаблоныПечатныхДокументов
	|ГДЕ
	|	ТоварныеГруппыШаблоныПечатныхДокументов.Шаблон = &Шаблон
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварныеГруппыШаблоныПечатныхДокументов.Ссылка.Наименование";
Запрос.УстановитьПараметр("Шаблон", Объект.Шаблон);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныхЗаписей = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныхЗаписей.Следующий() Цикл
	ТЧ = Объект.ТабличнаяЧасть.Добавить();
	ТЧ.ТоварнаяГруппа = ВыборкаДетальныхЗаписей.Ссылка;
	КонецЦикла;
Объект.ТабличнаяЧасть.Сортировать("ТоварнаяГруппа");
КоличествоСтрок = Объект.ТабличнаяЧасть.Количество();
КонецПроцедуры

&НаСервере
Процедура ВыделитьВсеНаСервере(Фл)
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл	
	ТЧ.Пометка = Фл;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьВсе(Команда)
ВыделитьВсеНаСервере(Истина);
ПолучитьКоличествоВыбранных(); 
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсе(Команда)
ВыделитьВсеНаСервере(Ложь);
ПолучитьКоличествоВыбранных(); 
КонецПроцедуры

&НаСервере
Процедура ВыделитьПоПризнакуНаСервере(Признак,Фл)
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл	
		Если Найти(ТЧ.ТоварнаяГруппа.Наименование,Признак) > 0 Тогда
		ТЧ.Пометка = Фл;
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьПоПризнаку(Команда)
Признак = "";
	Если ВвестиСтроку(Признак,"Введите признак",100) Тогда
	ВыделитьПоПризнакуНаСервере(Признак,Истина);	
	КонецЕсли; 
ПолучитьКоличествоВыбранных();
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПоПризнаку(Команда)
Признак = "";
	Если ВвестиСтроку(Признак,"Введите признак",100) Тогда
	ВыделитьПоПризнакуНаСервере(Признак,Ложь);	
	КонецЕсли;
ПолучитьКоличествоВыбранных();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
ВидОперации = 1; 
КонецПроцедуры

&НаКлиенте
Процедура ШаблонНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
КоличествоВыбранныхСтрок = 0;
КонецПроцедуры

&НаКлиенте
Процедура ШаблонПриИзменении(Элемент)
ВыбратьТоварыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
ОткрытьФорму("Справочник.ТоварныеГруппы.ФормаСписка",Новый Структура("ТекущаяСтрока",Элементы.ТабличнаяЧасть.ТекущиеДанные.ТоварнаяГруппа));
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПометкаПриИзменении(Элемент)
ПолучитьКоличествоВыбранных();
КонецПроцедуры

&НаСервере
Процедура ДобавитьИзГруппыНаСервере(ГруппаТоварныхГрупп)
Объект.ТабличнаяЧасть.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварныеГруппы.Ссылка
	|ИЗ
	|	Справочник.ТоварныеГруппы КАК ТоварныеГруппы
	|ГДЕ
	|	ТоварныеГруппы.ПометкаУдаления = ЛОЖЬ
	|	И ТоварныеГруппы.ЭтоГруппа = ЛОЖЬ
	|	И ТоварныеГруппы.Ссылка В ИЕРАРХИИ(&ГруппаТоварныхГрупп)";
Запрос.УстановитьПараметр("ГруппаТоварныхГрупп", ГруппаТоварныхГрупп);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = Объект.ТабличнаяЧасть.Добавить();
	ТЧ.ТоварнаяГруппа = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзГруппы(Команда)
Результат = ОткрытьФормуМодально("Справочник.ТоварныеГруппы.ФормаВыбораГруппы");
	Если Результат <> Неопределено Тогда
	ДобавитьИзГруппыНаСервере(Результат);
	КонецЕсли;
КонецПроцедуры
