
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Исполнитель = ПараметрыСеанса.Пользователь;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаСервере
Процедура ПолучитьНаСборкуНаСервере()
Запрос = Новый Запрос;
СписокСтатусов = Новый СписокЗначений;

СписокСтатусов.Добавить(Перечисления.СтатусыНакладнойНаСборку.Создан);
СписокСтатусов.Добавить(Перечисления.СтатусыНакладнойНаСборку.НаСборке);

	Если ЗонаКомплектации = Перечисления.ЗоныКомплектации.ТНП Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НакладнаяНаСборкуТабличнаяЧасть.Ссылка КАК Ссылка,
		|	НакладнаяНаСборкуТабличнаяЧасть.Товар КАК Товар,
		|	НакладнаяНаСборкуТабличнаяЧасть.Продукция КАК Продукция,
		|	НакладнаяНаСборкуТабличнаяЧасть.Количество КАК Количество,
		|	НакладнаяНаСборкуТабличнаяЧасть.ЗаказНаПроизводство КАК ЗаказНаПроизводство
		|ИЗ
		|	Документ.НакладнаяНаСборку.ТабличнаяЧасть КАК НакладнаяНаСборкуТабличнаяЧасть
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыНакладныхНаСборку.СрезПоследних КАК СтатусыНакладныхНаСборкуСрезПоследних
		|		ПО НакладнаяНаСборкуТабличнаяЧасть.Ссылка = СтатусыНакладныхНаСборкуСрезПоследних.НакладнаяНаСборку
		|ГДЕ
		|	НакладнаяНаСборкуТабличнаяЧасть.Ссылка.Дата >= &ВыбДата
		|	И НакладнаяНаСборкуТабличнаяЧасть.Ссылка.Проведен = ИСТИНА
		|	И СтатусыНакладныхНаСборкуСрезПоследних.Статус В(&СписокСтатусов)
		|	И (ТИПЗНАЧЕНИЯ(НакладнаяНаСборкуТабличнаяЧасть.Продукция) = ТИП(Справочник.Материалы)
		|			ИЛИ НакладнаяНаСборкуТабличнаяЧасть.Продукция.Линейка.ЗонаКомплектации = &ЗонаКомплектации)";	
	Иначе	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НакладнаяНаСборкуТабличнаяЧасть.Ссылка КАК Ссылка,
		|	НакладнаяНаСборкуТабличнаяЧасть.Товар КАК Товар,
		|	НакладнаяНаСборкуТабличнаяЧасть.Продукция КАК Продукция,
		|	НакладнаяНаСборкуТабличнаяЧасть.Количество КАК Количество,
		|	НакладнаяНаСборкуТабличнаяЧасть.ЗаказНаПроизводство КАК ЗаказНаПроизводство
		|ИЗ
		|	Документ.НакладнаяНаСборку.ТабличнаяЧасть КАК НакладнаяНаСборкуТабличнаяЧасть
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыНакладныхНаСборку.СрезПоследних КАК СтатусыНакладныхНаСборкуСрезПоследних
		|		ПО НакладнаяНаСборкуТабличнаяЧасть.Ссылка = СтатусыНакладныхНаСборкуСрезПоследних.НакладнаяНаСборку
		|ГДЕ
		|	НакладнаяНаСборкуТабличнаяЧасть.Ссылка.Дата >= &ВыбДата
		|	И НакладнаяНаСборкуТабличнаяЧасть.Ссылка.Проведен = ИСТИНА
		|	И СтатусыНакладныхНаСборкуСрезПоследних.Статус В(&СписокСтатусов)
		|	И НакладнаяНаСборкуТабличнаяЧасть.Продукция.Линейка.ЗонаКомплектации = &ЗонаКомплектации";	
	КонецЕсли;
		Если ОбрабатываемаяДата = 0 Тогда	
		Запрос.Текст = Запрос.Текст + " И НакладнаяНаСборкуТабличнаяЧасть.Ссылка.ДатаОтгрузки = &ДатаОтгрузки";
		Иначе
		Запрос.Текст = Запрос.Текст + " И НакладнаяНаСборкуТабличнаяЧасть.Ссылка.ДатаОтгрузки <> &ДатаОтгрузки";
		КонецЕсли;
Запрос.Текст = Запрос.Текст + " ИТОГИ ПО Ссылка"; 
Запрос.УстановитьПараметр("ДатаОтгрузки", НачалоДня(ТекущаяДата()));
Запрос.УстановитьПараметр("ВыбДата", Дата(2021,2,17,0,0,0));
Запрос.УстановитьПараметр("ЗонаКомплектации", ЗонаКомплектации);
Запрос.УстановитьПараметр("СписокСтатусов", СписокСтатусов);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСсылка.Следующий() Цикл
	ВыборкаЗК = ВыборкаСсылка.Ссылка.ЗоныКомплектации.Найти(ЗонаКомплектации,"ЗонаКомплектации");
		Если ВыборкаЗК <> Неопределено Тогда
			Если Не ЗначениеЗаполнено(ВыборкаЗК.ДатаОкончания) Тогда
			ТЧ = ТаблицаНаСборку.Добавить();
			ТЧ.ННС = ВыборкаСсылка.Ссылка;
			ТЧ.Номер = СокрЛП(ТЧ.ННС.Номер);
			ТЧ.ДатаОтгрузки = ТЧ.ННС.ДатаОтгрузки;
			ТЧ.ДатаНачала = ВыборкаЗК.ДатаНачала;
				Если ТЧ.ННС.ЛинейкаУпаковки = 4 Тогда
				ТЧ.Приоритет = -1;				
				КонецЕсли; 
			ВыборкаДетальныеЗаписи = ВыборкаСсылка.Выбрать();
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
				ТЧ_Т = ТЧ.ТаблицаТоваров.Добавить();
				ТЧ_Т.Товар = ВыборкаДетальныеЗаписи.Товар;
				ТЧ_Т.Продукция = ВыборкаДетальныеЗаписи.Продукция;
				ТЧ_Т.Количество = ВыборкаДетальныеЗаписи.Количество;
				ТЧ_Т.ЗНП = ВыборкаДетальныеЗаписи.ЗаказНаПроизводство;
				КонецЦикла;
			КонецЕсли;
		Иначе
		Сообщить("В ННС №"+ВыборкаСсылка.Ссылка.Номер+" не определены зоны комплектации!");
		КонецЕсли;
	КонецЦикла;
ТаблицаНаСборку.Сортировать("Приоритет,ДатаОтгрузки,Номер");
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьНаСборку(Команда)
	Если Не ЗонаКомплектации.Пустая() Тогда
	ТаблицаНаСборку.Очистить();
	ПолучитьНаСборкуНаСервере();
	Иначе
	Сообщить("Выберите зону комплектации!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПечатьННСНаСервере()
ТабДок = Новый ТабличныйДокумент;
ТаблицаННС = Новый ТаблицаЗначений;
СписокСчетов = Новый СписокЗначений;

ТаблицаННС.Колонки.Добавить("Товар");
ТаблицаННС.Колонки.Добавить("Продукция");
ТаблицаННС.Колонки.Добавить("ГруппаЛинеек");
ТаблицаННС.Колонки.Добавить("Порядок");
ТаблицаННС.Колонки.Добавить("Количество");

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблТовар = Макет.ПолучитьОбласть("Товар");
ОблКонец = Макет.ПолучитьОбласть("Конец");
	Для каждого ТЧ Из ТаблицаНаСборку Цикл
		Если ЗначениеЗаполнено(ТЧ.ДатаНачала) Тогда
		Продолжить;
		КонецЕсли; 
	ТаблицаННС.Очистить();
	СписокСчетов.Очистить();
		Для каждого ТЧ_ТЧ Из ТЧ.ТаблицаТоваров Цикл	
		ТЧ_ННС = ТаблицаННС.Добавить();
		ТЧ_ННС.Товар = ТЧ_ТЧ.Товар;	
		ТЧ_ННС.Продукция = ТЧ_ТЧ.Продукция;	
		ТЧ_ННС.ГруппаЛинеек = ТЧ_ТЧ.Продукция.Линейка.Родитель;
		ТЧ_ННС.Порядок = ТЧ_ТЧ.Продукция.Линейка.Родитель.Порядок;
		ТЧ_ННС.Количество =ТЧ_ТЧ.Количество;
		Выборка = СписокСчетов.НайтиПоЗначению(СокрЛП(ТЧ_ТЧ.ЗНП.Номер));
			Если Выборка = Неопределено Тогда
			СписокСчетов.Добавить(СокрЛП(ТЧ_ТЧ.ЗНП.Номер));		
			КонецЕсли;
		КонецЦикла;
	ТаблицаННС.Свернуть("Порядок,ГруппаЛинеек,Товар,Продукция","Количество");
	ТаблицаННС.Сортировать("Порядок,ГруппаЛинеек,Товар,Продукция");
	КоличествоВсего = 0;
	ОблШапка.Параметры.Контрагент = ТЧ.ННС.Контрагент;
	ОблШапка.Параметры.ТранспортнаяКомпания = ТЧ.ННС.КартаДоставки.ТрансКом;
	ОблШапка.Параметры.Город = ТЧ.ННС.КартаДоставки.Город;
	ОблШапка.Параметры.Номер = ТЧ.ННС.Номер;
	ОблШапка.Параметры.ДатаОтгрузки = Формат(ТЧ.ННС.Ссылка.ДатаОтгрузки,"ДЛФ=DD")+" ("+Формат(ТЧ.ННС.Ссылка.ДатаОтгрузки,"ДФ=дддд")+")";
	ОблШапка.Параметры.НомерЛинейкиУпаковки = ТЧ.ННС.ЛинейкаУпаковки;
	ОблШапка.Параметры.НомераСчетов = СписокСчетов;
	ТабДок.Вывести(ОблШапка);
	QRCode = СокрЛП(ТЧ.ННС.Номер)+";"+ЗначениеВСтрокуВнутр(ТЧ.ННС)+";"+Строка(Перечисления.ЗоныКомплектации.Индекс(ЗонаКомплектации));
		Для каждого ТЧ_ННС Из ТаблицаННС Цикл
			Если ТипЗнч(ТЧ_ННС.Продукция) = Тип("СправочникСсылка.Материалы") Тогда
            ОблТовар.Параметры.Линейка = "ТНП";
			Иначе
			ОблТовар.Параметры.Линейка = ТЧ_ННС.ГруппаЛинеек;
			КонецЕсли;		
		ОблТовар.Параметры.Товар = ТЧ_ННС.Товар;
		ОблТовар.Параметры.Артикул = ТЧ_ННС.Товар.Код;
		ОблТовар.Параметры.Количество = ТЧ_ННС.Количество;
		ОблТовар.Параметры.ЕдиницаИзмерения = СокрЛП(ТЧ_ННС.Продукция.ЕдиницаИзмерения.Наименование);
		ОблТовар.Параметры.Стеллаж = "";
		ОблТовар.Параметры.Стойка = "";
		ОблТовар.Параметры.Полка = "";
		ОблТовар.Параметры.Ячейка = "";
		ЯчейкиХранения = РегистрыСведений.ЯчейкиХранения.Выбрать(Новый Структура("МПЗ",ТЧ_ННС.Продукция));
			Пока ЯчейкиХранения.Следующий() Цикл
			ОблТовар.Параметры.Стеллаж = ЯчейкиХранения.Стеллаж;
			ОблТовар.Параметры.Стойка = ЯчейкиХранения.Стойка;
			ОблТовар.Параметры.Полка = ЯчейкиХранения.Полка;
			ОблТовар.Параметры.Ячейка = ЯчейкиХранения.Ячейка;		
			КонецЦикла;		
		ТабДок.Вывести(ОблТовар);
		QRCode = QRCode+";"+ТЧ_ННС.Товар.Код+";"+ТЧ_ННС.Количество;
		КоличествоВсего = КоличествоВсего + ТЧ_ННС.Количество;
		КонецЦикла;
	ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRCode, 0, 500);	
		Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
		КартинкаQRКода = Новый Картинка(ДанныеQRКода);
		ОблКонец.Рисунки.QRCode.Картинка = КартинкаQRКода;
		Иначе
		Сообщить("Не удалось сформировать QR-код!");
		КонецЕсли;
	ОблКонец.Параметры.Количество = КоличествоВсего;
	ОблКонец.Параметры.Комментарий = ТЧ.ННС.Комментарий;
	ТабДок.Вывести(ОблКонец);
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
ТабДок.ПолеСлева =0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок); 
КонецФункции

&НаКлиенте
Процедура Печать(Команда)
ТД = ПечатьННСНаСервере();
ТД.Показать("Накладные на сборку");
КонецПроцедуры

&НаСервере
Функция ПечатьПовторнаяНаСервере(Стр)
ТЧ = ТаблицаНаСборку.НайтиПоИдентификатору(Стр);
ТабДок = Новый ТабличныйДокумент;
ТаблицаННС = Новый ТаблицаЗначений;
СписокСчетов = Новый СписокЗначений;

ТаблицаННС.Колонки.Добавить("Товар");
ТаблицаННС.Колонки.Добавить("Продукция");
ТаблицаННС.Колонки.Добавить("ГруппаЛинеек");
ТаблицаННС.Колонки.Добавить("Порядок");
ТаблицаННС.Колонки.Добавить("Количество");

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблТовар = Макет.ПолучитьОбласть("Товар");
ОблКонец = Макет.ПолучитьОбласть("Конец");
	Для каждого ТЧ_ТЧ Из ТЧ.ТаблицаТоваров Цикл	
	ТЧ_ННС = ТаблицаННС.Добавить();
	ТЧ_ННС.Товар = ТЧ_ТЧ.Товар;	
	ТЧ_ННС.Продукция = ТЧ_ТЧ.Продукция;	
	ТЧ_ННС.ГруппаЛинеек = ТЧ_ТЧ.Продукция.Линейка.Родитель;
	ТЧ_ННС.Порядок = ТЧ_ТЧ.Продукция.Линейка.Родитель.Порядок;
	ТЧ_ННС.Количество =ТЧ_ТЧ.Количество;
	Выборка = СписокСчетов.НайтиПоЗначению(СокрЛП(ТЧ_ТЧ.ЗНП.Номер));
		Если Выборка = Неопределено Тогда
		СписокСчетов.Добавить(СокрЛП(ТЧ_ТЧ.ЗНП.Номер));		
		КонецЕсли;
	КонецЦикла;
ТаблицаННС.Свернуть("Порядок,ГруппаЛинеек,Товар,Продукция","Количество");
ТаблицаННС.Сортировать("Порядок,ГруппаЛинеек,Товар,Продукция");
КоличествоВсего = 0;
ОблШапка.Параметры.Контрагент = ТЧ.ННС.Контрагент;
ОблШапка.Параметры.ТранспортнаяКомпания = ТЧ.ННС.КартаДоставки.ТрансКом;
ОблШапка.Параметры.Город = ТЧ.ННС.КартаДоставки.Город;
ОблШапка.Параметры.Номер = ТЧ.ННС.Номер;
ОблШапка.Параметры.ДатаОтгрузки = Формат(ТЧ.ННС.Ссылка.ДатаОтгрузки,"ДЛФ=DD")+" ("+Формат(ТЧ.ННС.Ссылка.ДатаОтгрузки,"ДФ=дддд")+")";
ОблШапка.Параметры.НомерЛинейкиУпаковки = ТЧ.ННС.ЛинейкаУпаковки;
ОблШапка.Параметры.НомераСчетов = СписокСчетов;
ТабДок.Вывести(ОблШапка);
QRCode = СокрЛП(ТЧ.ННС.Номер)+";"+ЗначениеВСтрокуВнутр(ТЧ.ННС)+";"+Строка(Перечисления.ЗоныКомплектации.Индекс(ЗонаКомплектации));
	Для каждого ТЧ_ННС Из ТаблицаННС Цикл
		Если ТипЗнч(ТЧ_ННС.Продукция) = Тип("СправочникСсылка.Материалы") Тогда
        ОблТовар.Параметры.Линейка = "ТНП";
		Иначе
		ОблТовар.Параметры.Линейка = ТЧ_ННС.ГруппаЛинеек;
		КонецЕсли;		
	ОблТовар.Параметры.Товар = ТЧ_ННС.Товар;
	ОблТовар.Параметры.Артикул = ТЧ_ННС.Товар.Код;
	ОблТовар.Параметры.Количество = ТЧ_ННС.Количество;
	ОблТовар.Параметры.ЕдиницаИзмерения = СокрЛП(ТЧ_ННС.Продукция.ЕдиницаИзмерения.Наименование);
	ОблТовар.Параметры.Стеллаж = "";
	ОблТовар.Параметры.Стойка = "";
	ОблТовар.Параметры.Полка = "";
	ОблТовар.Параметры.Ячейка = "";
	ЯчейкиХранения = РегистрыСведений.ЯчейкиХранения.Выбрать(Новый Структура("МПЗ",ТЧ_ННС.Продукция));
		Пока ЯчейкиХранения.Следующий() Цикл
		ОблТовар.Параметры.Стеллаж = ЯчейкиХранения.Стеллаж;
		ОблТовар.Параметры.Стойка = ЯчейкиХранения.Стойка;
		ОблТовар.Параметры.Полка = ЯчейкиХранения.Полка;
		ОблТовар.Параметры.Ячейка = ЯчейкиХранения.Ячейка;		
		КонецЦикла;		
	ТабДок.Вывести(ОблТовар);
	QRCode = QRCode+";"+ТЧ_ННС.Товар.Код+";"+ТЧ_ННС.Количество;
	КоличествоВсего = КоличествоВсего + ТЧ_ННС.Количество;
	КонецЦикла;
ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRCode, 0, 500);	
	Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
	КартинкаQRКода = Новый Картинка(ДанныеQRКода);
	ОблКонец.Рисунки.QRCode.Картинка = КартинкаQRКода;
	Иначе
	Сообщить("Не удалось сформировать QR-код!");
	КонецЕсли;
ОблКонец.Параметры.Количество = КоличествоВсего;
ОблКонец.Параметры.Комментарий = ТЧ.ННС.Комментарий;
ТабДок.Вывести(ОблКонец);
ТабДок.ПолеСлева =0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьПовторная(Команда)
ТД = ПечатьПовторнаяНаСервере(Элементы.ТаблицаНаСборку.ТекущаяСтрока);
ТД.Показать("Накладная на сборку");
КонецПроцедуры

&НаСервере
Процедура ИзменитьНаСборкуНаСервере()
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;		
		Для каждого ТЧ Из ТаблицаНаСборку Цикл
		ННС = ТЧ.ННС.ПолучитьОбъект();
		ВыборкаЗК = ННС.ЗоныКомплектации.Найти(ЗонаКомплектации,"ЗонаКомплектации");
		ВыборкаЗК.Исполнитель = Исполнитель;
			Если Не ЗначениеЗаполнено(ВыборкаЗК.ДатаНачала) Тогда
			ВыборкаЗК.ДатаНачала = ТекущаяДата();
			КонецЕсли;
		ННС.Записать(РежимЗаписиДокумента.Запись);
		СтатусыННС = РегистрыСведений.СтатусыНакладныхНаСборку.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("НакладнаяНаСборку",ТЧ.ННС));
			Если СтатусыННС.Статус = Перечисления.СтатусыНакладнойНаСборку.Создан Тогда			
			СННС = РегистрыСведений.СтатусыНакладныхНаСборку.СоздатьМенеджерЗаписи();
			СННС.Период = ТекущаяДата();
			СННС.НакладнаяНаСборку = ТЧ.ННС;
			СННС.Статус = Перечисления.СтатусыНакладнойНаСборку.НаСборке;
			СННС.Записать();		
			КонецЕсли; 
		КонецЦикла;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Сообщить(ОписаниеОшибки());
	КонецПопытки; 
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьНаСборку(Команда)
ИзменитьНаСборкуНаСервере();
ТаблицаНаСборку.Очистить();
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанные(Данные)
Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,";");
ННС = ЗначениеИзСтрокиВнутр(Массив[1]);
Объект.ЗонаКомплектации = Перечисления.ЗоныКомплектации.Получить(Число(Массив[2]));
	Если ПроверитьСтатусННС(ННС) Тогда
	Объект.НакладнаяНаСборку = ННС;
	флЧётность = Ложь;
		Для к = 3 По Массив.ВГраница() Цикл
			Если флЧётность Тогда
			флЧётность = Ложь;
			Иначе
			ТЧ = Объект.ТабличнаяЧасть.Добавить();
			ТЧ.Товар = Справочники.Товары.НайтиПоКоду(Число(Массив[к]));
			ТЧ.Количество = Число(Массив[к+1]);	
			флЧётность = Истина;
			КонецЕсли;	
		КонецЦикла;
	Иначе
	Сообщить("Отсканируйте документ в статусе На сборке!");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьСотрудника(Данные)
Возврат(ЗначениеИзСтрокиВнутр(Данные));
КонецФункции

&НаСервере
Процедура ДобавитьТару(Данные)
Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,";");
Тара = ЗначениеИзСтрокиВнутр(Массив[1]);
	Если НомераТары.НайтиПоЗначению(Тара) = Неопределено Тогда
		Если Объект.НакладнаяНаСборку.Тары.Найти(Тара,"Тара") = Неопределено Тогда
		НомераТары.Добавить(Тара);
		Иначе
		Сообщить("Тара уже добавлена в накладную на сборку!");
		КонецЕсли;
	Иначе
	Сообщить("Тара уже отсканирована!");
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
		Если Найти(Данные,"Тара") > 0 Тогда
		ДобавитьТару(Данные); 
		ИначеЕсли Найти(Данные,";") > 0 Тогда
		ПолучитьДанные(Данные);
		ИначеЕсли Найти(Данные,"{") > 0 Тогда	
		Объект.Исполнитель = ПолучитьСотрудника(Данные);
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьДанные(Команда)
		Если Найти(ДанныеСканера,"Тара") > 0 Тогда
		ДобавитьТару(ДанныеСканера); 
		ИначеЕсли Найти(ДанныеСканера,";") > 0 Тогда
		ПолучитьДанные(ДанныеСканера);
		ИначеЕсли Найти(ДанныеСканера,"{") > 0 Тогда	
		Объект.Исполнитель = ПолучитьСотрудника(ДанныеСканера);
		КонецЕсли;
ДанныеСканера = "";
КонецПроцедуры

&НаСервере
Процедура ДобавитьТоварыВТаблицу()
Объект.ТабличнаяЧасть.Очистить();
	Для каждого ТЧ Из Объект.НакладнаяНаСборку.ТабличнаяЧасть Цикл
		Если ТипЗнч(ТЧ.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
			Если ТЧ.Продукция.Линейка.ЗонаКомплектации = Объект.ЗонаКомплектации Тогда
			ТЧ_ТЧ = Объект.ТабличнаяЧасть.Добавить();
			ТЧ_ТЧ.Товар = ТЧ.Товар;
			ТЧ_ТЧ.Количество = ТЧ.Количество;
			КонецЕсли;
		Иначе
			Если Объект.ЗонаКомплектации = Перечисления.ЗоныКомплектации.ТНП Тогда
			ТЧ_ТЧ = Объект.ТабличнаяЧасть.Добавить();
			ТЧ_ТЧ.Товар = ТЧ.Товар;
			ТЧ_ТЧ.Количество = ТЧ.Количество;			
			КонецЕсли; 		
		КонецЕсли; 			
	КонецЦикла;  
КонецПроцедуры
 
&НаСервере
Функция ПроверитьСтатусННС(НакладнаяНаСборку)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатусыНакладныхНаСборкуСрезПоследних.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.СтатусыНакладныхНаСборку.СрезПоследних(&НаДату, НакладнаяНаСборку = &НакладнаяНаСборку) КАК СтатусыНакладныхНаСборкуСрезПоследних";
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("НакладнаяНаСборку", НакладнаяНаСборку);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Статус = Перечисления.СтатусыНакладнойНаСборку.НаСборке Тогда
		Возврат(Истина);
		Иначе
		Возврат(Ложь);
		КонецЕсли; 
	КонецЦикла;
Возврат(Ложь);
КонецФункции

&НаКлиенте
Процедура НакладнаяНаСборкуПриИзменении(Элемент)
	Если ПроверитьСтатусННС(Объект.НакладнаяНаСборку) Тогда	
	ДобавитьТоварыВТаблицу();
	Иначе
	Сообщить("Выберите документ в статусе На сборке!");
	Объект.НакладнаяНаСборку = "";
	КонецЕсли; 	
КонецПроцедуры

&НаСервере
Процедура ЗавершитьЗаданиеНаСервере()
ДатаОкончания = ТекущаяДата();
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	ННС = Объект.НакладнаяНаСборку.ПолучитьОбъект();
	ВыборкаЗК = ННС.ЗоныКомплектации.Найти(Объект.ЗонаКомплектации,"ЗонаКомплектации");
	ВыборкаЗК.ДатаОкончания = ТекущаяДата();
	ВыборкаЗК.Исполнитель = Объект.Исполнитель;
		Для каждого НомерТары Из НомераТары Цикл 
		ВыборкаТ = ННС.Тары.НайтиСтроки(Новый Структура("ЗонаКомплектации,Тара",Объект.ЗонаКомплектации,НомерТары.Значение));
			Если ВыборкаТ.Количество() = 0 Тогда
			ТЧ_Т = ННС.Тары.Добавить();
			ТЧ_Т.Тара = НомерТары.Значение;
			ТЧ_Т.ЗонаКомплектации = Объект.ЗонаКомплектации;
			ТЧ_Т.ДатаНачала = ТекущаяДата();			
			Иначе	
			ВыборкаТ[0].ДатаНачала = ТекущаяДата();			
			КонецЕсли;		 		
		КонецЦикла;	
	ННС.Записать(РежимЗаписиДокумента.Запись);
	Объект.ЗонаКомплектации = Перечисления.ЗоныКомплектации.ПустаяСсылка();
	Объект.НакладнаяНаСборку = Документы.НакладнаяНаСборку.ПустаяСсылка();
	НомераТары.Очистить();
	Объект.ТабличнаяЧасть.Очистить();
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Сообщить(ОписаниеОшибки());
	КонецПопытки; 
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьЗадание(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	ЗавершитьЗаданиеНаСервере();
	КонецЕсли;
КонецПроцедуры
