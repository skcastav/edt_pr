
&НаСервере
Процедура ВыгрузитьНаСервере()
ТабДок.Очистить();
БазаАршин = Справочники.ОбменДанными.НайтиПоНаименованию("База Аршин",Истина);
	Если Не БазаАршин.Пустая() Тогда
	ПутьКБазеАршин = СокрЛП(БазаАршин.ПутьКБазеДанных);
		Если СторонняяПоверка Тогда
		ИмяФайла = ПутьКБазеАршин+"Выгрузка СП от "+Формат(Период.ДатаОкончания,"ДФ=ddMMyyyy")+".xlsx";		
		Иначе	
		ИмяФайла = ПутьКБазеАршин+"Выгрузка от "+Формат(Период.ДатаОкончания,"ДФ=ddMMyyyy")+".xlsx";		
		КонецЕсли;
	Иначе	
	Сообщить("Не найдена База Аршин в справочнике обмена данными!");
	Возврат;	
	КонецЕсли;
БазаУК = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Справочники.ОбменДанными.НайтиПоНаименованию("База управления качеством",Истина));
	Если БазаУК = Неопределено Тогда
	Сообщить("Не установлена связь с базой УК");
	Возврат;
	КонецЕсли;
БазаУТ = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Справочники.ОбменДанными.НайтиПоНаименованию(Константы.БазаДанных1ССбыт.Получить(),Истина));
	Если БазаУТ = Неопределено Тогда
	Сообщить("Не установлена связь с базой УТ");
	Возврат;
	КонецЕсли;
Файл = Новый Файл(ПутьКБазеАршин);

	Если Не Файл.Существует() Тогда
	Сообщить("Каталог "+ПутьКБазеАршин+" - не доступен!");
	Возврат;
	КонецЕсли;
Макет = ПолучитьОбщийМакет("ВыгрузкаСИвБазуАршин");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблСтрока = Макет.ПолучитьОбласть("Строка");

ТабДок.Вывести(ОблШапка);

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОбороты.Регистратор.ДокументОснование КАК Документ,
	|	МестаХраненияОбороты.МПЗ КАК МПЗ,
	|	МестаХраненияОбороты.Регистратор.Дата КАК Дата
	|ИЗ
	|	РегистрНакопления.МестаХранения.Обороты(&ДатаНач, &ДатаКон, Регистратор, МестоХранения В ИЕРАРХИИ (&СписокМестХранения)) КАК МестаХраненияОбороты
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(МестаХраненияОбороты.Регистратор) = ТИП(Документ.ВыпускПродукции)
	|	И МестаХраненияОбороты.МПЗ.Товар.СИ = ИСТИНА
	|	И МестаХраненияОбороты.МПЗ.Товар.СторонняяПоверка = &СторонняяПоверка";
	Если СписокТоваров.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И МестаХраненияОбороты.МПЗ.Товар В ИЕРАРХИИ(&СписокТоваров)";
	Запрос.УстановитьПараметр("СписокТоваров", СписокТоваров);
	КонецЕсли; 
Запрос.УстановитьПараметр("ДатаНач", Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон", Период.ДатаОкончания);
Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения);
Запрос.УстановитьПараметр("СторонняяПоверка", СторонняяПоверка);
Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО
								|	МестаХраненияОбороты.МПЗ.Товар.Наименование
								|ИТОГИ ПО
								|	МПЗ";
ОбщийМодульРегламентныеЗадания.ОбработкаЗапроса(БазаУТ,БазаУК,Запрос,ТабДок,ОблСтрока,Ложь);
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.ДокументОснование КАК Документ,
	|	ДвижениеМПЗТабличнаяЧасть.МПЗ КАК МПЗ,
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.Дата КАК Дата
	|ИЗ
	|	Документ.ДвижениеМПЗ.ТабличнаяЧасть КАК ДвижениеМПЗТабличнаяЧасть
	|ГДЕ
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ТИПЗНАЧЕНИЯ(ДвижениеМПЗТабличнаяЧасть.Ссылка.ДокументОснование) = ТИП(Документ.Перепрогон)
	|	И ДвижениеМПЗТабличнаяЧасть.Ссылка.ДокументОснование.Статус = 1
	|	И ДвижениеМПЗТабличнаяЧасть.Ссылка.Проведен = ИСТИНА
	|	И ДвижениеМПЗТабличнаяЧасть.МПЗ.Товар.СИ = ИСТИНА
	|	И ДвижениеМПЗТабличнаяЧасть.МПЗ.Товар.СторонняяПоверка = &СторонняяПоверка";
	Если СписокТоваров.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ДвижениеМПЗТабличнаяЧасть.МПЗ.Товар В ИЕРАРХИИ(&СписокТоваров)";
	Запрос.УстановитьПараметр("СписокТоваров", СписокТоваров);
	КонецЕсли;
Запрос.Текст = Запрос.Текст + "	УПОРЯДОЧИТЬ ПО
								|	ДвижениеМПЗТабличнаяЧасть.МПЗ.Товар.Наименование
								|ИТОГИ ПО
								|	МПЗ КАК МПЗ";
ОбщийМодульРегламентныеЗадания.ОбработкаЗапроса(БазаУТ,БазаУК,Запрос,ТабДок,ОблСтрока,Истина);
ТабДок.ФиксацияСверху = 1;
ТабДок.Записать(ИмяФайла,ТипФайлаТабличногоДокумента.XLSX);
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	Состояние("Обработка...",,"Выгрузка в файл для базы Аршин...");
	ВыгрузитьНаСервере();
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьБарКоды(СписокБарКодов)
ТабДок.Очистить();
БазаАршин = Справочники.ОбменДанными.НайтиПоНаименованию("База Аршин",Истина);
	Если Не БазаАршин.Пустая() Тогда
	ПутьКБазеАршин = СокрЛП(БазаАршин.ПутьКБазеДанных);
	ИмяФайла = ПутьКБазеАршин+"Выгрузка списка бар-кодов.xlsx";	
	Иначе	
	Сообщить("Не найдена База Аршин в справочнике обмена данными!");
	Возврат;	
	КонецЕсли;
БазаУК = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Справочники.ОбменДанными.НайтиПоНаименованию("База управления качеством",Истина));
	Если БазаУК = Неопределено Тогда
	Сообщить("Не установлена связь с базой УК");
	Возврат;
	КонецЕсли;
БазаУТ = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Справочники.ОбменДанными.НайтиПоНаименованию(Константы.БазаДанных1ССбыт.Получить(),Истина));
	Если БазаУТ = Неопределено Тогда
	Сообщить("Не установлена связь с базой УТ");
	Возврат;
	КонецЕсли;
Файл = Новый Файл(ПутьКБазеАршин);

	Если Не Файл.Существует() Тогда
	Сообщить("Каталог "+ПутьКБазеАршин+" - не доступен!");
	Возврат;
	КонецЕсли;
Макет = ПолучитьОбщийМакет("ВыгрузкаСИвБазуАршин");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблСтрока = Макет.ПолучитьОбласть("Строка");

ТабДок.Вывести(ОблШапка);

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииПоступление.Ссылка.ДокументОснование.БарКод КАК БарКод,
	|	ВыпускПродукцииПоступление.Номенклатура.Товар КАК Товар,
	|	ВыпускПродукцииПоступление.Ссылка.Дата КАК Дата
	|ИЗ
	|	Документ.ВыпускПродукции.Поступление КАК ВыпускПродукцииПоступление
	|ГДЕ
	|	ВыпускПродукцииПоступление.Ссылка.НаСклад = ИСТИНА
	|	И ВыпускПродукцииПоступление.Ссылка.ДокументОснование.БарКод В(&СписокБарКодов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товар";
Запрос.УстановитьПараметр("СписокБарКодов", СписокБарКодов);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Товар = ВыборкаДетальныеЗаписи.Товар;
	ДанныеИзУТ = ОбщийМодульРегламентныеЗадания.ПолучитьДанныеИзУТ(БазаУТ,Товар);
	МИ = ОбщийМодульРегламентныеЗадания.ПолучитьМИ(Товар,ДанныеИзУТ.МИ);
	МП = ОбщийМодульРегламентныеЗадания.ПолучитьМП(Товар);
	Наименование = СокрЛП(Товар.Наименование);
		Если Найти(Наименование,"[") > 0 Тогда                         
		Наименование = СокрП(Сред(Наименование,1,Найти(Наименование,"[")-1)); 
		КонецЕсли;
	БарКод = ВыборкаДетальныеЗаписи.БарКод;
	КодDanfoss = ОбщийМодульВызовСервера.ПолучитьКодDanfoss(БарКод);
	ДанныеИзУК = ОбщийМодульРегламентныеЗадания.ПолучитьДанныеИзУК(БазаУК,БарКод,КодDanfoss,Товар,ВыборкаДетальныеЗаписи.Дата); 
	ОблСтрока.Параметры.modification = Наименование;
	ОблСтрока.Параметры.signCipher = "ГМД";
	ОблСтрока.Параметры.miOwner = "ООО "+""""+"Завод № 423"+"""";
	ОблСтрока.Параметры.signMi = "false";
	ОблСтрока.Параметры.calibration = "false";
	ОблСтрока.Параметры.type = ?(ДанныеИзУК.ПервичнаяПоверка,"первичная","периодическая");
	ОблСтрока.Параметры.signPass = ?(ДанныеИзУК.ПервичнаяПоверка,"true","false");
	ОблСтрока.Параметры.manufactureNum = ?(ЗначениеЗаполнено(КодDanfoss),КодDanfoss,БарКод);
	ОблСтрока.Параметры.mitypeNumber = ?(ЗначениеЗаполнено(ДанныеИзУК.НомерВРеестре),ДанныеИзУК.НомерВРеестре,ДанныеИзУТ.НомерВРеестре);
	ОблСтрока.Параметры.vrfDate = Формат(ВыборкаДетальныеЗаписи.Дата,"ДФ=yyyy-MM-dd");
	ОблСтрока.Параметры.validDate = Формат(ДобавитьМесяц(ВыборкаДетальныеЗаписи.Дата,МИ*12)-86400,"ДФ=yyyy-MM-dd");
	ОблСтрока.Параметры.metrologist = ДанныеИзУК.Поверитель;
		Если ЗначениеЗаполнено(ДанныеИзУК.МП) Тогда
		ОблСтрока.Параметры.docTitle = ДанныеИзУК.МП;			
		ИначеЕсли ЗначениеЗаполнено(МП) Тогда	
		ОблСтрока.Параметры.docTitle = МП;
		Иначе
		ОблСтрока.Параметры.docTitle = ДанныеИзУТ.МП;
		КонецЕсли;
	ОблСтрока.Параметры.number = ДанныеИзУК.ПЭ;
	ОблСтрока.Параметры.typeNum = ДанныеИзУК.Вспомогательные;
	ОблСтрока.Параметры.temperature = ДанныеИзУК.Температура;
	ОблСтрока.Параметры.pressure = ДанныеИзУК.Давление;
	ОблСтрока.Параметры.hymidity = ДанныеИзУК.Влажность;
	ТабДок.Вывести(ОблСтрока);
	КонецЦикла;
ТабДок.ФиксацияСверху = 1;
ТабДок.Записать(ИмяФайла,ТипФайлаТабличногоДокумента.XLSX);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл c бар-кодами");
	Если Результат <> Неопределено Тогда
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок;
	СписокБарКодов = Новый СписокЗначений;
 
	    Для к = 2 по КолСтрок Цикл
		Состояние("Обработка...",к*100/КолСтрок,"Загрузка из файла...");
		СписокБарКодов.Добавить(СокрЛП(ExcelЛист.Cells(к,1).Value)); 
	    КонецЦикла;
	Результат.Excel.Quit();
	Состояние("Обработка...",,"Выгрузка в файл для базы Аршин...");
	ВыгрузитьБарКоды(СписокБарКодов);
	КонецЕсли;
КонецПроцедуры
