
&НаСервере
Функция ПолучитьМестоХраненияКанбанов(ПЗ)
ДокОсн = ПЗ.ДокументОснование;
	Пока ТипЗнч(ДокОсн.ДокументОснование) = Тип("ДокументСсылка.МаршрутнаяКарта") Цикл
		Если ЗначениеЗаполнено(ДокОсн.ДокументОснование) Тогда
		ДокОсн = ДокОсн.ДокументОснование;
		КонецЕсли;
	КонецЦикла;
		Если ТипЗнч(ДокОсн.ДокументОснование) = Тип("ДокументСсылка.РемонтнаяКарта") Тогда	
			Если ЗначениеЗаполнено(ДокОсн.ДокументОснование) Тогда
			Возврат(ДокОсн.ДокументОснование.Линейка.МестоХраненияКанбанов);
			КонецЕсли;		
		КонецЕсли;
Возврат(ДокОсн.Линейка.МестоХраненияКанбанов);
КонецФункции 

&НаСервере
Функция СоздатьПеремещениеНаСервере()
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Перемещение = Документы.ДвижениеМПЗ.СоздатьДокумент();
	Перемещение.Дата = ТекущаяДата();
	Перемещение.УстановитьНовыйНомер(ПрисвоитьПрефикс(ПроизводственноеЗадание.Линейка.Подразделение));
	Перемещение.Автор = ПараметрыСеанса.Пользователь;
	Перемещение.ДокументОснование = ПроизводственноеЗадание;
	Перемещение.Подразделение = ПроизводственноеЗадание.Линейка.Подразделение;
	Перемещение.МестоХранения = ПроизводственноеЗадание.Линейка.МестоХраненияГП;
	Перемещение.МестоХраненияВ = ПолучитьМестоХраненияКанбанов(ПроизводственноеЗадание);
	ТЧ = Перемещение.ТабличнаяЧасть.Добавить();
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
	ТЧ.МПЗ = ПроизводственноеЗадание.Изделие;
	ТЧ.Количество = ПроизводственноеЗадание.Количество;
	ТЧ.ЕдиницаИзмерения = ПроизводственноеЗадание.Изделие.ОсновнаяЕдиницаИзмерения;	
	Перемещение.Записать(РежимЗаписиДокумента.Проведение);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	ПроизводственноеЗадание = Документы.ПроизводственноеЗадание.ПустаяСсылка();
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина);	
КонецФункции

&НаКлиенте
Процедура СоздатьПеремещение(Команда)
	Если Не ПроверитьПеремещение() Тогда
		Если СоздатьПеремещениеНаСервере() Тогда
		ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Создано перемещение!",БиблиотекаКартинок.Пользователь); 
		КонецЕсли;		
	Иначе	
	ПроизводственноеЗадание = ПолучитьПустоеПЗ();
	Сообщить("Перемещение существует!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаСервере
Функция ПолучитьПЗ(Значение)
ПЗ = ЗначениеИзСтрокиВнутр(Значение);
Возврат(ПЗ);
КонецФункции

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
	Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,";");
		Если Массив[0] = "4" Тогда
		ПроизводственноеЗадание = ПолучитьПЗ(Массив[1]);
		МестоХраненияПотребитель = ПолучитьМестоХраненияКанбанов(ПроизводственноеЗадание);		
		Иначе
		Сообщить("Неверный QRCode!");	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПроверитьПеремещение()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДвижениеМПЗ.Ссылка
	|ИЗ
	|	Документ.ДвижениеМПЗ КАК ДвижениеМПЗ
	|ГДЕ
	|	ДвижениеМПЗ.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", ПроизводственноеЗадание);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(Истина);
	КонецЦикла;
Возврат(Ложь);
КонецФункции

&НаСервере
Функция ПолучитьПустоеПЗ()
Возврат(Документы.ПроизводственноеЗадание.ПустаяСсылка());
КонецФункции

&НаКлиенте
Процедура ПроизводственноеЗаданиеПриИзменении(Элемент)
	Если ПроверитьПеремещение() Тогда
	ПроизводственноеЗадание = ПолучитьПустоеПЗ();
	Сообщить("Перемещение существует!");
	КонецЕсли;
КонецПроцедуры
