
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Объект.Исполнитель = ПараметрыСеанса.Пользователь;
	Если Объект.Исполнитель.Пустая() Тогда
	Элементы.РабочееМесто.Доступность = Ложь;
	Сообщить("Вы не внесены в справочник Сотрудников! Работа невозможна!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаКлиенте
Процедура СписокРабочихМестПриИзменении(Элемент)
ОчиститьСсылкуНаПЗ();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево(ЭтапСпецификации)
Объект.Спецификация.Сортировать("ТипСправочника Убыв,ВидМПЗ,Позиция,МПЗ");
тДерево = РеквизитФормыВЗначение("ДеревоСпецификации");
тДерево.Строки.Очистить();
ТипСпр = "";
КолВсего = Объект.ПроизводственноеЗадание.ДокументОснование.Количество;
	Для каждого ТЧ Из Объект.Спецификация Цикл
		Если ТЧ.ЭтапСпецификации <> ЭтапСпецификации Тогда
		Продолжить;		
		КонецЕсли; 
			Если ТипСпр <> ТЧ.ТипСправочника Тогда
			Стр = тДерево.Строки.Добавить();
			Стр.ТипСправочника = ТЧ.ТипСправочника;
			ТипСпр = ТЧ.ТипСправочника;
			КонецЕсли; 
	СтрЗнч = Стр.Строки.Добавить();
	СтрЗнч.Позиция = ТЧ.Позиция;
	СтрЗнч.ВидЭлемента = ТЧ.ВидМПЗ;
	СтрЗнч.МПЗ = ТЧ.МПЗ;
	СтрЗнч.Количество = ТЧ.Количество;
	СтрЗнч.КоличествоВсего = ТЧ.Количество*КолВсего;
	СтрЗнч.ЕдиницаИзмерения = ТЧ.ЕдиницаИзмерения;
	СтрЗнч.Аналог = ТЧ.Аналог;
	СтрЗнч.Примечание = ТЧ.Примечание;
		Если ТЧ.Владелец <> Неопределено Тогда
		СтрЗнч.Владелец = ТЧ.Владелец.Элемент;
		КонецЕсли; 		 
	КонецЦикла;
ЗначениеВРеквизитФормы(тДерево, "ДеревоСпецификации");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуТехОпераций(Владелец)
ВыборкаДетальныеЗаписи = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н_ТО(Владелец,Объект.ПроизводственноеЗадание.ДатаЗапуска);
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Набор Тогда
		ЗаполнитьТаблицуТехОпераций(ВыборкаДетальныеЗаписи.Элемент);
		ИначеЕсли ВыборкаДетальныеЗаписи.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.ТехОперация Тогда	
			Если Объект.РабочееМесто.ТехОперации.Найти(ВыборкаДетальныеЗаписи.Элемент,"ТехОперация") <> Неопределено Тогда
			ТЧ = ТаблицаТехОпераций.Добавить();
			ТЧ.ТехОперация = ВыборкаДетальныеЗаписи.Элемент;
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКомплектацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
ЗаполнитьДерево(Элемент.ТекущиеДанные.ЭтапСпецификации);
РазвернутьДерево(Неопределено);
КонецПроцедуры

&НаСервере
Функция ПолучитьРабочееМестоПромывка()
РМ_Промывка = Справочники.РабочиеМестаЛинеек.ПустаяСсылка();
РМ = Справочники.РабочиеМестаЛинеек.Выбрать(,,Новый Структура("Линейка",Объект.РабочееМесто.Линейка));
	Пока РМ.Следующий() Цикл
		Если РМ.ЭтоГруппа Тогда
		Продолжить;		
		КонецЕсли;
			Если Найти(РМ.Наименование,"Промывка") > 0 Тогда
			РМ_Промывка = РМ.Ссылка;
			КонецЕсли; 
	КонецЦикла;
Возврат(РМ_Промывка);
КонецФункции

&НаСервере
Функция ПолучитьКоличествоВБраке()
Запрос = Новый Запрос;

Количество = 0;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	РемонтнаяКарта.КоличествоНеремонтопригодных КАК КоличествоНеремонтопригодных
	|ИЗ
	|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
	|ГДЕ
	|	РемонтнаяКарта.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", Объект.ПроизводственноеЗадание);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Количество = Количество + ВыборкаДетальныеЗаписи.КоличествоНеремонтопригодных;
	КонецЦикла;
Возврат(Количество);
КонецФункции 

&НаСервере
Функция ПолучитьЗаданиеНаСервере()
НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
КолПЗ = 0;

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ КАК ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала КАК ДатаНачала,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто КАК РабочееМесто,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование КАК МТК
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто В(&СписокРабочихМест)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.Ремонт = ЛОЖЬ
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.Статус <> 2";
	Если СписокРабочихМест[0].Значение.ОбработкаЗаданийПоВремениПоступления Тогда
	Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ЭтапыПроизводственныхЗаданийСрезПоследних.Период
									|ИТОГИ ПО МТК";
	Иначе                           
	Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.НомерОчереди,
									|ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.Номер
									|ИТОГИ ПО МТК";
	КонецЕсли;	 
Запрос.УстановитьПараметр("СписокРабочихМест",СписокРабочихМест);
Результат = Запрос.Выполнить();

ВыборкаМТК = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМТК.Следующий() Цикл
	ВыборкаДетальныеЗаписи = ВыборкаМТК.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КолПЗ = КолПЗ + 1;
		Объект.РабочееМесто = ВыборкаДетальныеЗаписи.РабочееМесто;
			Если Не ОбщийМодульВызовСервера.СоздатьТаблицуЭтаповПроизводства(ВыборкаДетальныеЗаписи.ПЗ,Этапы,ЭтапыАРМ,Объект.РабочееМесто,Объект.Исполнитель) Тогда	
			Прервать; //Переходим к следующей МТК			
			КонецЕсли; 
				Если Объект.РабочееМесто.Код = 1 Тогда
					Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ПЗ.ДатаЗапуска) Тогда
					Результат = ОбщийМодульВызовСервера.ЗапуститьВПроизводство(ВыборкаДетальныеЗаписи.ПЗ,Объект.РабочееМесто,Этапы);
							Если Результат = 0 Тогда
							Прервать; //Переходим к следующей МТК
							ИначеЕсли Результат = -1 Тогда
							Возврат(-1);
							Иначе
								Если Найти(ВыборкаДетальныеЗаписи.ПЗ.Изделие.Канбан.Наименование,"нестандарт") = 0 Тогда
								ОбщийМодульРаботаСРегистрами.ОформитьПринятиеКанбана(СписокРабочихМест[0].Значение.Линейка.МестоХраненияГП,ВыборкаДетальныеЗаписи.ПЗ.ДокументОснование.МестоХраненияПотребитель,ВыборкаДетальныеЗаписи.ПЗ.Изделие,ВыборкаДетальныеЗаписи.ПЗ.ДокументОснование.НомерЯчейки,Объект.Исполнитель)
								КонецЕсли;
							КонецЕсли; 
					КонецЕсли;
				Иначе
				Парам = Новый Структура("РабочееМесто,Исполнитель,ДатаНачала",Объект.РабочееМесто,Объект.Исполнитель,ТекущаяДата());
				ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(ВыборкаДетальныеЗаписи.ПЗ,Парам);
				КонецЕсли; 
		Объект.ПроизводственноеЗадание = ВыборкаДетальныеЗаписи.ПЗ;
		КоличествоПЗ = Объект.ПроизводственноеЗадание.Количество;
		КоличествоБрак = ПолучитьКоличествоВБраке();
		НомерВТ = ВыборкаДетальныеЗаписи.ПЗ.ВозвратнаяТара;
			Если Не ПолучитьСпецификациюЭтапов() Тогда
			Прервать; //Переходим к следующей МТК
			КонецЕсли;
		ОкончаниеЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
		ОбщийМодульРаботаСРегистрами.СборИнформацииПоАРМ(1,Объект.РабочееМесто,Объект.ПроизводственноеЗадание.Изделие,КолПЗ,(ОкончаниеЗамера - НачалоЗамера)/1000);
		Возврат(Истина);
		КонецЦикла;
	КонецЦикла;
ОкончаниеЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
ОбщийМодульРаботаСРегистрами.СборИнформацииПоАРМ(1,Объект.РабочееМесто,Справочники.Номенклатура.ПустаяСсылка(),КолПЗ,(ОкончаниеЗамера - НачалоЗамера)/1000);
Возврат(Ложь);
КонецФункции

&НаСервере
Функция ПолучитьСпецификациюЭтапов()
СписокЭтапов = Новый СписокЗначений;

	Для каждого ТЧ Из Этапы Цикл
	ЭтапРМ = Объект.РабочееМесто.ТабличнаяЧасть.Найти(ТЧ.ГруппаНоменклатуры,"ГруппаНоменклатуры");
		Если ЭтапРМ = Неопределено Тогда
		Продолжить;
		КонецЕсли;
			Если ЭтапРМ.Комплектация Тогда
			ОбщийМодульВызовСервера.ПолучитьКомплектацию(ТЧ.ЭтапСпецификации,ТЧ.ЭтапСпецификации,ТЧ.Количество,Истина,ТаблицаКомплектации,Объект.ПроизводственноеЗадание.ДатаЗапуска);
			Иначе
			ОбщийМодульВызовСервера.ПолучитьКомплектацию(ТЧ.ЭтапСпецификации,ТЧ.ЭтапСпецификации,ТЧ.Количество,Ложь,ТаблицаКомплектации,Объект.ПроизводственноеЗадание.ДатаЗапуска);
			Выборка = ТаблицаКомплектации.НайтиСтроки(Новый Структура("ЭтапСпецификации",ТЧ.ЭтапСпецификации));
				Если Выборка.Количество() = 0 Тогда	
				ТЧТК = ТаблицаКомплектации.Добавить();
				ТЧТК.ЭтапСпецификации = ТЧ.ЭтапСпецификации;
				КонецЕсли;
			СписокЭтапов.Добавить(ТЧ.ЭтапСпецификации);
			ОбщийМодульВызовСервера.ПолучитьСпецификациюСАналогами(Объект.Спецификация,Объект.ПроизводственноеЗадание,ТЧ.ЭтапСпецификации,ТЧ.ЭтапСпецификации,ТЧ.Количество);	
			КонецЕсли; 	
	КонецЦикла;
		Если ОбщийМодульВызовСервера.ПроверитьОстановкуКанбана(Объект.ПроизводственноеЗадание,Объект.Спецификация) Тогда
			Для каждого ТЧ Из ТаблицаКомплектации Цикл
			ТЧ.КоличествоВсего = ТЧ.Количество*Объект.ПроизводственноеЗадание.ДокументОснование.Количество;
			КонецЦикла;
		Объект.Спецификация.Сортировать("ЭтапСпецификации,ВидМПЗ,Позиция,МПЗ");
		Возврат(Истина);
		Иначе	
		Возврат(Ложь);
		КонецЕсли; 
КонецФункции

&НаСервере
Функция ЗаполненаДатаЗапуска()
Возврат(ЗначениеЗаполнено(Объект.ПроизводственноеЗадание.ДатаЗапуска));
КонецФункции  

&НаСервере
Функция ПолучитьДокументОснование(ПЗ)
Возврат(ПЗ.ДокументОснование);
КонецФункции

&НаСервере
Функция ПолучитьСпецификацию()
Возврат(Объект.ПроизводственноеЗадание.Изделие);
КонецФункции 

&НаКлиенте
Процедура ПолучитьЗадание(Команда)
	Если ОбщийМодульВызовСервера.ЛинейкаОстановлена(ОбщийМодульВызовСервера.ПолучитьЛинейкуПоРабочемуМесту(Объект.РабочееМесто)) Тогда
	Возврат;
	КонецЕсли;
		Если Элементы.ПолучитьЗадание.Заголовок = "Получить задание (ПРОБЕЛ)" Тогда
		Результат = ПолучитьЗаданиеНаСервере(); 
			Если Результат = 1 Тогда 
				Если ТаблицаКомплектации.Количество() > 0 Тогда
				Элементы.ТаблицаКомплектации.ТекущаяСтрока = ТаблицаКомплектации[0].ПолучитьИдентификатор();
				ТаблицаКомплектацииВыбор(Элементы.ТаблицаКомплектации,Элементы.ТаблицаКомплектации.ТекущаяСтрока,,Истина);
				Иначе
				ЗаполнитьДерево(ПолучитьСпецификацию());
				РазвернутьДерево(Неопределено);			
				КонецЕсли;
			ЗаполнитьТаблицуТехОпераций(ПолучитьСпецификацию()); 
			Элементы.ИзменитьКоличествоВМТК.Доступность = Истина;
			Элементы.ПолучитьЗадание.Заголовок = "Завершить и передать на другое АРМ (ПРОБЕЛ)"; 
			ИначеЕсли Результат = 0 Тогда		
			Предупреждение("Нет производственных заданий!");
			КонецЕсли; 
		Иначе
		НовоеРМ = ЗавершитьЗаданиеНаСервере();
			Если НовоеРМ <> "" Тогда
			ОчиститьСсылкуНаПЗ();
			ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Передайте изделие "+НовоеРМ,БиблиотекаКартинок.Пользователь);
			КонецЕсли;  	
		КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ОчиститьСсылкуНаПЗ()
Объект.ПроизводственноеЗадание = Документы.ПроизводственноеЗадание.ПустаяСсылка();
Объект.РабочееМесто = Справочники.РабочиеМестаЛинеек.ПустаяСсылка();
КоличествоПЗ = 0;
КоличествоБрак = 0;
НомерВТ = "";
Этапы.Очистить();
ЭтапыАРМ.Очистить();
ТаблицаКомплектации.Очистить();
Объект.Спецификация.Очистить();
ТаблицаТехОпераций.Очистить();
тДерево = РеквизитФормыВЗначение("ДеревоСпецификации");
тДерево.Строки.Очистить();
ЗначениеВРеквизитФормы(тДерево,"ДеревоСпецификации");
Элементы.ПолучитьЗадание.Заголовок = "Получить задание (ПРОБЕЛ)";
Элементы.ИзменитьКоличествоВМТК.Доступность = Ложь;
КонецПроцедуры  

&НаСервере
Функция ЗавершитьЗаданиеНаСервере()
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	НовоеРабочееМесто = ОбщийМодульВызовСервера.ПолучитьСледующееРабочееМесто(Объект.РабочееМесто); 
	ДатаОкончания = ТекущаяДата();
	НаборЗаписей = РегистрыСведений.ЭтапыПроизводственныхЗаданий.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПЗ.Установить(Объект.ПроизводственноеЗадание);
	НаборЗаписей.Прочитать();
	    Для Каждого Запись Из НаборЗаписей Цикл 
	    	Если Запись.РабочееМесто = Объект.РабочееМесто Тогда
			Запись.ДатаОкончания = ДатаОкончания;
			Прервать;
			КонецЕсли;  
	    КонецЦикла;
			Если Не НовоеРабочееМесто.Пустая() Тогда
			МестоПередачи = "на "+СокрЛП(НовоеРабочееМесто.Наименование);
			ЭПЗ = НаборЗаписей.Добавить();
			ЭПЗ.Период = ДатаОкончания;
			ЭПЗ.ПЗ = Объект.ПроизводственноеЗадание; 
			ЭПЗ.Линейка = Объект.ПроизводственноеЗадание.Линейка;
			ЭПЗ.Изделие = Объект.ПроизводственноеЗадание.Изделие;
			ЭПЗ.Количество = Объект.ПроизводственноеЗадание.ДокументОснование.Количество;
			ЭПЗ.БарКод = Объект.ПроизводственноеЗадание.БарКод;
			ЭПЗ.РабочееМесто = НовоеРабочееМесто;
			Иначе
			МестоПередачи = "на склад линейки";
				Если Не ОбщийМодульСозданиеДокументов.СоздатьВыпускПродукцииКанбан(Объект.ПроизводственноеЗадание,ДатаОкончания,КоличествоПЗ-КоличествоБрак) Тогда
				Сообщить("Документ выпуска по ПЗ "+Объект.ПроизводственноеЗадание.Номер+" не создан!");
				ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
				Возврат("");
				КонецЕсли;
					Если КоличествоБрак > 0 Тогда
						Если Не ОбщийМодульСозданиеДокументов.СоздатьВыпускПродукцииКанбан(Объект.ПроизводственноеЗадание,ДатаОкончания,КоличествоБрак,Истина) Тогда
						Сообщить("Документ выпуска в брак по ПЗ "+Объект.ПроизводственноеЗадание.Номер+" не создан!");
						ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
						Возврат("");
						КонецЕсли;
					КонецЕсли;							
			КонецЕсли;
	НаборЗаписей.Записать();
	Объект.ПроизводственноеЗадание = Документы.ПроизводственноеЗадание.ПустаяСсылка();
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(МестоПередачи);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат("");
	КонецПопытки;
КонецФункции

&НаСервере
Функция ПолучитьСписокЭтапов()
СписокЭтапов = Новый СписокЗначений;
	Для каждого ТЧ Из ТаблицаКомплектации Цикл
		Если СписокЭтапов.НайтиПоЗначению(ТЧ.ЭтапСпецификации) = Неопределено Тогда
		СписокЭтапов.Добавить(ТЧ.ЭтапСпецификации);
		КонецЕсли; 
	КонецЦикла;
Возврат(СписокЭтапов);
КонецФункции 

&НаСервере
Функция ПолучитьРабочееМесто()
Возврат(Объект.РабочееМесто);
КонецФункции 

&НаКлиенте
Процедура РазвернутьДерево(Команда)
тЭлементы = ДеревоСпецификации.ПолучитьЭлементы();
   Для Каждого тСтр Из тЭлементы Цикл
   	Элементы.ДеревоСпецификации.Развернуть(тСтр.ПолучитьИдентификатор(), Истина);
   КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СвернутьДерево(Команда)
тЭлементы = ДеревоСпецификации.ПолучитьЭлементы();
   Для Каждого тСтр Из тЭлементы Цикл
   Элементы.ДеревоСпецификации.Свернуть(тСтр.ПолучитьИдентификатор());
   КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ТипЗнч(Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ) = Тип("СправочникСсылка.Документация") Тогда
	ОбщийМодульКлиент.ОткрытьФайлДокумента(Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКомплектацииВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
ЗаполнитьДерево(Элемент.ТекущиеДанные.ЭтапСпецификации);
РазвернутьДерево(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ИзменитьКоличествоВМТКНаСервере(КолМТК)
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПередачаВПроизводство.Ссылка
		|ИЗ
		|	Документ.ПередачаВПроизводство КАК ПередачаВПроизводство
		|ГДЕ
		|	ПередачаВПроизводство.ДокументОснование = &ДокументОснование";
	Запрос.УстановитьПараметр("ДокументОснование", Объект.ПроизводственноеЗадание.ДокументОснование);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		УдаляемыйДок = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		УдаляемыйДок.Удалить();
		КонецЦикла;	
	ПЗ = Объект.ПроизводственноеЗадание.ПолучитьОбъект();	
	ПЗ.ДатаЗапуска = Дата(1,1,1);
	ПЗ.Количество = КолМТК;
	ПЗ.Записать(РежимЗаписиДокумента.Запись);	
	НаборЗаписей = РегистрыСведений.ЭтапыПроизводственныхЗаданий.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПЗ.Установить(Объект.ПроизводственноеЗадание);
	НаборЗаписей.Прочитать();
	    Для Каждого Запись Из НаборЗаписей Цикл 
		Запись.Количество = КолМТК;  
	    КонецЦикла;
	НаборЗаписей.Записать();
	МТК = Объект.ПроизводственноеЗадание.ДокументОснование.ПолучитьОбъект();
	МТК.Количество = КолМТК;
	МТК.Записать(РежимЗаписиДокумента.Проведение);	
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);	
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоВМТК()
Возврат(Объект.ПроизводственноеЗадание.ДокументОснование.Количество);		
КонецФункции

&НаКлиенте
Процедура ИзменитьКоличествоВМТК(Команда)
КоличествоПЗ = ПолучитьКоличествоВМТК();
	Если ВвестиЧисло(КоличествоПЗ,"Введите новое количество",9,3) Тогда
	ИзменитьКоличествоВМТКНаСервере(КоличествоПЗ);
	ОчиститьСсылкуНаПЗ();
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ЭтоКанбанБезРезервирования(МПЗ)	
	Если Не МПЗ.Канбан.Пустая() Тогда
	 	Если Не МПЗ.Канбан.РезервироватьВПроизводстве Тогда
		Возврат(Истина);
		КонецЕсли;
	КонецЕсли; 
Возврат(Ложь);
КонецФункции 

&НаКлиенте
Процедура ОформитьПустойКанбан(Команда)
	Если Этаформа.ТекущийЭлемент = Этаформа.Элементы.ДеревоСпецификации Тогда
	МПЗ = Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ;
	Иначе
	МПЗ = Элементы.ТаблицаКомплектации.ТекущиеДанные.Комплектация;
	КонецЕсли;
		Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
			Если ОбщийМодульВызовСервера.МожноОформитьПустойКанбан(МПЗ) Тогда
			П = Новый Структура("МестоХраненияКанбанов,МПЗ",ОбщийМодульВызовСервера.ПолучитьМестоХраненияПоРабочемуМесту(Объект.РабочееМесто),МПЗ);
			ОткрытьФорму("ОбщаяФорма.ОформлениеПустыхКанбанов",П,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
			КонецЕсли;
		КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЭтоКанбан(МПЗ)
Возврат(МПЗ.Канбан);
КонецФункции 

&НаКлиенте
Процедура ОформитьНедостачу(Команда)
	Если Этаформа.ТекущийЭлемент = Этаформа.Элементы.ДеревоСпецификации Тогда
	МПЗ = Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ;
	Иначе
	МПЗ = Элементы.ТаблицаКомплектации.ТекущиеДанные.Комплектация;
	КонецЕсли;
		Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
			Если ЭтоКанбан(МПЗ).Пустая() Тогда	
			Сообщить("Выберите МПЗ ячейки канбана!");
			Возврат;
			КонецЕсли;
		ИначеЕсли ТипЗнч(МПЗ) <> Тип("СправочникСсылка.Материалы")Тогда	
		Сообщить("Выберите МПЗ ячейки канбана!");
		Возврат;
		КонецЕсли; 
П = Новый Структура("ВидОперации,МестоХраненияКанбанов,ПЗ,МПЗ",1,ОбщийМодульВызовСервера.ПолучитьМестоХраненияПоРабочемуМесту(Объект.РабочееМесто),Объект.ПроизводственноеЗадание,МПЗ);
	Если ОткрытьФормуМодально("ОбщаяФорма.ОформлениеНедостачиИзлишков",П) Тогда
		Если ОбщийМодульВызовСервера.МТКОстановлена(Объект.ПроизводственноеЗадание) Тогда
		ОчиститьСсылкуНаПЗ();
		ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"МТК остановлена по причине недостачи комплектации. Отложите изготавливаемый полуфабрикат!",БиблиотекаКартинок.Пользователь);
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОформитьИзлишки(Команда)
	Если Этаформа.ТекущийЭлемент = Этаформа.Элементы.ДеревоСпецификации Тогда
	МПЗ = Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ;
	Иначе
	МПЗ = Элементы.ТаблицаКомплектации.ТекущиеДанные.Комплектация;
	КонецЕсли;
		Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
			Если ЭтоКанбан(МПЗ).Пустая() Тогда	
			Сообщить("Выберите МПЗ ячейки канбана!");
			Возврат;
			КонецЕсли;
		ИначеЕсли ТипЗнч(МПЗ) <> Тип("СправочникСсылка.Материалы")Тогда	
		Сообщить("Выберите МПЗ ячейки канбана!");
		Возврат;
		КонецЕсли; 
П = Новый Структура("ВидОперации,МестоХраненияКанбанов,ПЗ,МПЗ",2,ОбщийМодульВызовСервера.ПолучитьМестоХраненияПоРабочемуМесту(Объект.РабочееМесто),Объект.ПроизводственноеЗадание,МПЗ);
ОткрытьФорму("ОбщаяФорма.ОформлениеНедостачиИзлишков",П,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОформитьБрак(Команда)
	Если Этаформа.ТекущийЭлемент = Этаформа.Элементы.ДеревоСпецификации Тогда
	МПЗ = Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ;
	Количество = Элементы.ДеревоСпецификации.ТекущиеДанные.Количество;
	Иначе
	МПЗ = Элементы.ТаблицаКомплектации.ТекущиеДанные.Комплектация;
	Количество = Элементы.ТаблицаКомплектации.ТекущиеДанные.Количество;
	КонецЕсли;
		Если ОбщийМодульВызовСервера.МожноПеремещатьВБрак(МПЗ) Тогда
		П = Новый Структура("РабочееМесто,ПЗ,ЭтапСпецификации,МПЗ,Количество",Объект.РабочееМесто,Объект.ПроизводственноеЗадание,Элементы.ТаблицаКомплектации.ТекущиеДанные.ЭтапСпецификации,МПЗ,Количество);
		ОткрытьФорму("ОбщаяФорма.ОформлениеБракаНовый",П,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
		Иначе
		Сообщить("Выбранную МПЗ запрещено перемещать в брак!");
		КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ОстановкаЛинейкиНаСервере(МПЗ)
ОбщийМодульРаботаСРегистрами.ОстановитьЛинейку(Объект.РабочееМесто.Линейка,МПЗ);
КонецФункции

&НаКлиенте
Процедура ОстановкаЛинейки(Команда)
	Если Этаформа.ТекущийЭлемент = Этаформа.Элементы.ДеревоСпецификации Тогда
	МПЗ = Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ;
	Иначе
	МПЗ = Элементы.ТаблицаКомплектации.ТекущиеДанные.Комплектация;
	КонецЕсли;
		Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
			Если ЭтоКанбанБезРезервирования(МПЗ) Тогда
				Если Вопрос("Вы уверены, что хотите остановить линейку?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				ОстановкаЛинейкиНаСервере(МПЗ);
				КонецЕсли;
			Иначе
			Сообщить("Выберите МПЗ ячейки канбана без резервирования!");
			КонецЕсли;
		Иначе	
		Сообщить("Выберите МПЗ ячейки канбана без резервирования!");
		КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПечатьЭтикеткиНаСервере()
ТабДок = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("Этикетка");

ОблЭтикетка = Макет.ПолучитьОбласть("Этикетка");

МТКГоловная = Объект.ПроизводственноеЗадание.ДокументОснование;
	Пока ТипЗнч(МТКГоловная.ДокументОснование) = Тип("ДокументСсылка.МаршрутнаяКарта") Цикл
		Если ЗначениеЗаполнено(МТКГоловная.ДокументОснование) Тогда
		МТКГоловная = МТКГоловная.ДокументОснование;
		КонецЕсли;
	КонецЦикла;
ОблЭтикетка.Параметры.МТКГоловная = МТКГоловная;
ОблЭтикетка.Параметры.Номенклатура = СокрЛП(МТКГоловная.Номенклатура.Наименование);
ОблЭтикетка.Параметры.Линейка = МТКГоловная.Линейка;
ОблЭтикетка.Параметры.МТКИзделия = Объект.ПроизводственноеЗадание.ДокументОснование;
ОблЭтикетка.Параметры.Изделие = СокрЛП(Объект.ПроизводственноеЗадание.Изделие.Наименование);
ОблЭтикетка.Параметры.Количество = Объект.ПроизводственноеЗадание.Количество;
QRCode = "4;"+ЗначениеВСтрокуВнутр(Объект.ПроизводственноеЗадание);
ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRCode, 0, 100);	
	Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
	КартинкаQRКода = Новый Картинка(ДанныеQRКода);
	ОблЭтикетка.Рисунки.QRCode.Картинка = КартинкаQRКода;
	Иначе
	Сообщить("Не удалось сформировать QR-код!");
	КонецЕсли;
ТабДок.Вывести(ОблЭтикетка);
ТабДок.РазмерСтраницы = "Custom";
ТабДок.ВысотаСтраницы = 101;
ТабДок.ШиринаСтраницы = 57;
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьЭтикетки(Команда)
ТД = ПечатьЭтикеткиНаСервере();
ТД.Показать("Этикетка");
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСпецификаций(Команда)
ОткрытьФорму("Отчет.ПечатьСпецификацииСУчётомАналогов.Форма.ФормаОтчета",Новый Структура("ПЗ",Объект.ПроизводственноеЗадание));
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	Если ТипЗнч(Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ) = Тип("СправочникСсылка.Документация") Тогда
	ОбщийМодульКлиент.ОткрытьФайлДокумента(Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьМестоХранения(Линейка)
Возврат(Линейка.МестоХраненияКанбанов);
КонецФункции 

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
	Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,";");
		Если Массив[0] = "3" Тогда
		ЗначениеПараметра1 = ОбщийМодульВызовСервера.ПолучитьЗначениеИзСтрокиВнутр(Массив[1]);
			Если ЗначениеПараметра1 = Неопределено Тогда
			Сообщить("Линейка или место хранения не найдена!");
			Возврат;	
			КонецЕсли; 
		МПЗ = ОбщийМодульВызовСервера.ПолучитьЗначениеИзСтрокиВнутр(Массив[3]);
			Если МПЗ = Неопределено Тогда
			Сообщить(Массив[3]+" - МПЗ не найдена!");
			Возврат;	
			КонецЕсли;
				Если ТипЗнч(ЗначениеПараметра1) = Тип("СправочникСсылка.Линейки") Тогда
				МестоХранения = ПолучитьМестоХранения(ЗначениеПараметра1);
				Иначе
				МестоХранения = ЗначениеПараметра1;			
				КонецЕсли;
		МестоХраненияОтправитель = ОбщийМодульВызовСервера.ПолучитьМестоХраненияПоКоду(Массив[2]);
		П = Новый Структура("МестоХраненияОтправитель,МестоХраненияКанбанов,МПЗ,НомерЯчейки,Сотрудник",МестоХраненияОтправитель,МестоХранения,МПЗ,Массив[5],Объект.Исполнитель);
		ОткрытьФорму("ОбщаяФорма.ОформлениеПустыхКанбанов",П,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
