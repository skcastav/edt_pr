
&НаСервере
Функция СписатьНедостачуНаСервере(ВыбСтатья)
Выборка = ТаблицаМПЗ.НайтиСтроки(Новый Структура("Пометка",Истина));
	Если Выборка.Количество() > 0 Тогда
		Для к = 0 По Выборка.Количество() - 1 Цикл
			Если Выборка[к].Количество = 0 Тогда
			Сообщить("Не указано количество МПЗ "+Выборка[к].МПЗ);
			Возврат(Неопределено);
			ИначеЕсли Выборка[к].Количество > Выборка[к].КоличествоСклад Тогда
			Сообщить("Выбранное количество превышает количество на складе "+Выборка[к].МПЗ+"!");
			Возврат(Неопределено);			
			КонецЕсли; 
		КонецЦикла; 
	Иначе
	Сообщить("Нет помеченных МПЗ!");
	Возврат(Неопределено);
	КонецЕсли; 
ПаспортЛинейки = РегистрыСведений.ПаспортЛинейки.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("Линейка",Линейка));
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Списание = Документы.СписаниеМПЗПрочее.СоздатьДокумент();
	Списание.Дата = ТекущаяДата();
	Списание.УстановитьНовыйНомер(ПрисвоитьПрефикс(Линейка.Подразделение));
	Списание.Автор = ПараметрыСеанса.Пользователь;
	Списание.Подразделение = Линейка.Подразделение;
	Списание.МестоХранения = Линейка.МестоХраненияКанбанов;
	Списание.Статья = ВыбСтатья;
	Списание.Утвердил = ПаспортЛинейки.Мастер;
	Списание.Комментарий = "Недостача на линейке";
		Для каждого ТЧ_МПЗ Из ТаблицаМПЗ Цикл
			Если ТЧ_МПЗ.Пометка Тогда
			ТЧ = Списание.ТабличнаяЧасть.Добавить();
			ТЧ.ВидМПЗ = ТЧ_МПЗ.ВидМПЗ;
			ТЧ.МПЗ = ТЧ_МПЗ.МПЗ;
			ТЧ.Количество = ТЧ_МПЗ.Количество;
			ТЧ.ЕдиницаИзмерения =  ТЧ_МПЗ.ЕдиницаИзмерения;					
			КонецЕсли; 	
		КонецЦикла;	
	Списание.Записать(РежимЗаписиДокумента.Проведение);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(Списание.Ссылка);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Неопределено);
	КонецПопытки;
КонецФункции

&НаКлиенте
Процедура СписатьНедостачу(Команда)
Ф = ПолучитьФорму("Справочник.СтатьиПоступленийСписанийПрочих.ФормаВыбора");
ЭлементОтбора = Ф.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Родитель");
ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
ЭлементОтбора.Использование = Истина;
ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
ЭлементОтбора.ПравоеЗначение = ПолучитьГруппуСтатейСписания("Инвентаризации");
Ф.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
ВыбСтатья = Ф.ОткрытьМодально();
	Если ВыбСтатья <> Неопределено Тогда
	Результат = СписатьНедостачуНаСервере(ВыбСтатья);	
		Если Результат <> Неопределено Тогда
		ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Создан документ "+Результат,БиблиотекаКартинок.Пользователь);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПереместитьВБракНаСервере(ВыбСтатья,Комментарий)
Перемещение = Документы.ДвижениеМПЗ;
ТаблицаМПЗ.Сортировать("Подразделение,ВидМПЗ,МПЗ");
ПаспортЛинейки = РегистрыСведений.ПаспортЛинейки.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("Линейка",Линейка));
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	ТекПодразделение = Справочники.Подразделения.ПустаяСсылка();
		Для каждого ТЧ_МПЗ Из ТаблицаМПЗ Цикл
			Если ТЧ_МПЗ.Пометка Тогда
				Если ТекПодразделение <> ТЧ_МПЗ.Подразделение Тогда
					Если Не ТекПодразделение.Пустая() Тогда
					Перемещение.Записать(РежимЗаписиДокумента.Проведение);
					КонецЕсли; 			
				ТекПодразделение = ТЧ_МПЗ.Подразделение;
				Перемещение = Документы.ДвижениеМПЗ.СоздатьДокумент();
				Перемещение.Дата = ТекущаяДата();
				Перемещение.УстановитьНовыйНомер(ПрисвоитьПрефикс(Линейка.Подразделение));
				Перемещение.Автор = ПараметрыСеанса.Пользователь;
				Перемещение.Подразделение = Линейка.Подразделение;
				Перемещение.ДокументОснование = ПроизводственноеЗадание;
				Перемещение.МестоХранения = Линейка.МестоХраненияКанбанов;
				Перемещение.Сотрудник = ПаспортЛинейки.Мастер;
					Если ЗначениеЗаполнено(ТЧ_МПЗ.Подразделение) Тогда
					Перемещение.МестоХраненияВ = ТЧ_МПЗ.Подразделение.МестоХраненияБрака;
					Иначе
					Перемещение.МестоХраненияВ = Объект.Линейка.Подразделение.МестоХраненияБрака;
					КонецЕсли; 
				Перемещение.Комментарий = СокрЛП(ВыбСтатья.Наименование)+" ("+СокрЛП(Комментарий)+")";					
				КонецЕсли;
			ТЧ = Перемещение.ТабличнаяЧасть.Добавить();
			ТЧ.ВидМПЗ = ТЧ_МПЗ.ВидМПЗ;
			ТЧ.МПЗ = ТЧ_МПЗ.МПЗ;
			ТЧ.Количество = ТЧ_МПЗ.Количество;
			ТЧ.ЕдиницаИзмерения =  ТЧ_МПЗ.ЕдиницаИзмерения;	
			КонецЕсли;	
		КонецЦикла;
	Перемещение.Записать(РежимЗаписиДокумента.Проведение); 
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(Перемещение.Ссылка);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Неопределено);
	КонецПопытки;
КонецФункции

&НаСервере
Функция ПереместитьВРемонтНаСервере(ВыбСтатья)
ПаспортЛинейки = РегистрыСведений.ПаспортЛинейки.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("Линейка",Линейка));
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Перемещение = Документы.ДвижениеМПЗ.СоздатьДокумент();
	Перемещение.Дата = ТекущаяДата();
	Перемещение.УстановитьНовыйНомер(ПрисвоитьПрефикс(Линейка.Подразделение));
	Перемещение.Автор = ПараметрыСеанса.Пользователь;
	Перемещение.Подразделение = Линейка.Подразделение;
	Перемещение.ДокументОснование = ПроизводственноеЗадание;
	Перемещение.МестоХранения = Линейка.МестоХраненияКанбанов;			
	Перемещение.МестоХраненияВ = Справочники.МестаХранения.НайтиПоКоду("44");
	Перемещение.Сотрудник = ПаспортЛинейки.Мастер;
	Перемещение.Комментарий = СокрЛП(ВыбСтатья.Наименование);
		Для каждого ТЧ_МПЗ Из ТаблицаМПЗ Цикл
			Если ТЧ_МПЗ.Пометка Тогда
			ТЧ = Перемещение.ТабличнаяЧасть.Добавить();
			ТЧ.ВидМПЗ = ТЧ_МПЗ.ВидМПЗ;
			ТЧ.МПЗ = ТЧ_МПЗ.МПЗ;
			ТЧ.Количество = ТЧ_МПЗ.Количество;
			ТЧ.ЕдиницаИзмерения =  ТЧ_МПЗ.ЕдиницаИзмерения;	
			КонецЕсли;	
		КонецЦикла;	
	Перемещение.Записать(РежимЗаписиДокумента.Проведение);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(Перемещение.Ссылка);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Неопределено);
	КонецПопытки;
КонецФункции

&НаСервере
Функция ПолучитьПустуюСтатьюСписания()
Возврат(Справочники.СтатьиПоступленийСписанийПрочих.ПустаяСсылка());
КонецФункции

&НаСервере
Функция ПолучитьГруппуСтатейСписания(НаименованиеГруппа)
Возврат(Справочники.СтатьиПоступленийСписанийПрочих.НайтиПоНаименованию(НаименованиеГруппа,Истина));
КонецФункции

&НаСервере
Функция МожноПереместитьВБрак()
Выборка = ТаблицаМПЗ.НайтиСтроки(Новый Структура("Пометка",Истина));
	Если Выборка.Количество() > 0 Тогда
		Для к = 0 По Выборка.Количество() - 1 Цикл
			Если Выборка[к].Количество = 0 Тогда
			Сообщить("Не указано количество "+Выборка[к].МПЗ);
			Возврат(Ложь);
			ИначеЕсли Выборка[к].ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты Тогда
				Если ЗначениеЗаполнено(Выборка[к].МПЗ.Канбан) Тогда
					Если Выборка[к].МПЗ.Канбан.ЗапрещеноПеремещениеВБрак Тогда
					Сообщить("Выбранный канбан запрещено перемещать в брак!");
					Возврат(Ложь);					
					КонецЕсли; 
				Иначе      	
				Сообщить("В брак можно перемещать только канбаны!");
				Возврат(Ложь);				
				КонецЕсли;
			ИначеЕсли Выборка[к].Количество > Выборка[к].КоличествоСклад Тогда
			Сообщить("Выбранное количество превышает количество на складе - "+Выборка[к].МПЗ+"!");
			Возврат(Ложь);
			КонецЕсли; 
		КонецЦикла; 
	Иначе
	Сообщить("Нет помеченных элементов!");
	Возврат(Ложь);
	КонецЕсли; 
Возврат(Истина);
КонецФункции

&НаКлиенте
Процедура ПереместитьВБрак(Команда)
	Если МожноПереместитьВБрак() Тогда		
	Ф = ПолучитьФорму("Справочник.СтатьиПоступленийСписанийПрочих.ФормаВыбора");
	ГруппаОтбораИ =  Ф.Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбораИ.Использование = Истина;
	ГруппаОтбораИ.ТипГруппы     = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	ГруппаОтбораИ.Представление = "Программный отбор";
	ГруппаОтбораИ.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;

	ЭлементОтбора = ГруппаОтбораИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбора.ПравоеЗначение = ПолучитьГруппуСтатейСписания("Брак");

	ЭлементОтбора = ГруппаОтбораИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЗапретитьСписаниеНаЛинейках");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбора.ПравоеЗначение = Ложь;

	Ф.Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	ВыбСтатья = Ф.ОткрытьМодально();
		Если ВыбСтатья <> Неопределено Тогда
		Комментарий = "";
			Если ВвестиСтроку(Комментарий,"Введите комментарий",0,Истина) Тогда
			Результат = ПереместитьВБракНаСервере(ВыбСтатья,Комментарий);
				Если Результат <> Неопределено Тогда
				ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Создан документ "+Результат,БиблиотекаКартинок.Пользователь);
				КонецЕсли;			
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;  	 
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Линейка = Параметры.РабочееМесто.Линейка;
ПроизводственноеЗадание = Параметры.ПЗ;
РабочееМесто = Параметры.РабочееМесто;
ПП = Документы.ПередачаВПроизводство.НайтиПоНомеру(ПроизводственноеЗадание.Номер,ПроизводственноеЗадание.ДатаЗапуска);
	Если Не ПП.Пустая() Тогда
		Для каждого ТЧ_ПП Из ПП.Спецификация Цикл
			Если ТипЗнч(ТЧ_ПП.МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
			Подразделение = Справочники.Подразделения.НайтиПоНаименованию("Богородицк УПЭА",Истина);
			ИначеЕсли ТипЗнч(ТЧ_ПП.МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
			Подразделение = ТЧ_ПП.МПЗ.Канбан.Подразделение;
			КонецЕсли;	
		ТЧ = ТаблицаМПЗ.Добавить();
		ТЧ.ВидМПЗ = ТЧ_ПП.ВидМПЗ;
		ТЧ.МПЗ = ТЧ_ПП.МПЗ;
		ТЧ.КоличествоПП = ТЧ_ПП.Количество;
		ТЧ.ЕдиницаИзмерения = ТЧ_ПП.ЕдиницаИзмерения;
		Фильтр   = Новый Структура;
		Фильтр.Вставить("МестоХранения", Линейка.МестоХраненияКанбанов);
		Фильтр.Вставить("ВидМПЗ",ТЧ_ПП.ВидМПЗ);
		Фильтр.Вставить("МПЗ",ТЧ_ПП.МПЗ);	
		Остатки = РегистрыНакопления.МестаХранения.Остатки(ТекущаяДата(),Фильтр);
			Если Остатки.Количество() > 0 Тогда
			ТЧ.КоличествоСклад = Остатки[0].Количество/ТЧ_ПП.ЕдиницаИзмерения.Коэффициент;
			КонецЕсли;
		ТЧ.Подразделение = Подразделение;
		КонецЦикла;
	Иначе
	Сообщить("Документ передачи в производство по ПЗ "+ПроизводственноеЗадание.Номер+" не найден!");		
	КонецЕсли;                                                                                              
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМПЗКоличествоПриИзменении(Элемент)
	Если Элементы.ТаблицаМПЗ.ТекущиеДанные.Количество > Элементы.ТаблицаМПЗ.ТекущиеДанные.КоличествоСклад Тогда
	Элементы.ТаблицаМПЗ.ТекущиеДанные.Количество = 0;
	Сообщить("Количество не должно быть больше количества на складе!");	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьНомерРемонтнойКарты(ПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РемонтнаяКарта.Ссылка
	|ИЗ
	|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
	|ГДЕ
	|	РемонтнаяКарта.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", ПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
Возврат(ВыборкаДетальныеЗаписи.Количество()+1); 
КонецФункции

&НаСервере
Функция ОтправитьВРемонтНаСервере(ПричиныРемонта)
Запрос = Новый Запрос;

Выборка = ТаблицаМПЗ.НайтиСтроки(Новый Структура("Пометка",Истина));
Запрос.Текст = 
	"ВЫБРАТЬ
	|	РемонтнаяКарта.Ссылка
	|ИЗ
	|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
	|ГДЕ
	|	РемонтнаяКарта.ДокументОснование = &ДокументОснование
	|	И РемонтнаяКарта.Изделие = &Изделие";
Запрос.УстановитьПараметр("Изделие", Выборка[0].МПЗ);
Запрос.УстановитьПараметр("ДокументОснование", ПроизводственноеЗадание);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Количество() = 0 Тогда
		Попытка
		НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
		ВыбСтатья = ПолучитьПустуюСтатьюСписания();
		Результат = ПереместитьВРемонтНаСервере(ВыбСтатья);
			Если Результат = Неопределено Тогда
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			Возврат(Ложь);	
			КонецЕсли;
		РемонтнаяКарта = Документы.РемонтнаяКарта.СоздатьДокумент();
		РемонтнаяКарта.Номер = ПроизводственноеЗадание.Номер+"-"+ПолучитьНомерРемонтнойКарты(ПроизводственноеЗадание);
		РемонтнаяКарта.Дата = ТекущаяДата();
		РемонтнаяКарта.ДокументОснование = ПроизводственноеЗадание;
		РемонтнаяКарта.ВидРемонта = Перечисления.ВидыРемонта.Канбан;
		РемонтнаяКарта.Линейка = Линейка;
		РемонтнаяКарта.Подразделение = Линейка.Подразделение;
		РемонтнаяКарта.Изделие = Выборка[0].МПЗ;
	    РемонтнаяКарта.Количество = Выборка[0].Количество;
		РемонтнаяКарта.ПричинаРемонта = ПричиныРемонта.ПричинаРемонта;
		РемонтнаяКарта.Комментарий = ПричиныРемонта.Комментарий;
		РемонтнаяКарта.Записать(РежимЗаписиДокумента.Запись);
		ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
		Возврат(Истина);
		Исключение
		Сообщить(ОписаниеОшибки());
		ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
		Возврат(Ложь);		
		КонецПопытки;
	Иначе
	Сообщить("Выбранный полуфабрикат уже передавался в ремонт по данному производственному заданию!");	
	Возврат(Ложь);
	КонецЕсли; 
КонецФункции

&НаСервере
Функция МожноОтправлятьВРемонт()
Выборка = ТаблицаМПЗ.НайтиСтроки(Новый Структура("Пометка",Истина));
	Если Выборка.Количество() = 0 Тогда
	Сообщить("Нет помеченного элемента!");
	Возврат(Ложь);
	ИначеЕсли Выборка.Количество() > 1 Тогда
	Сообщить("Выбрано более одного элемента!");
	Возврат(Ложь);
	ИначеЕсли Выборка[0].Количество = 0 Тогда
	Сообщить("Не указано количество "+Выборка[0].МПЗ);
	Возврат(Ложь);
	ИначеЕсли Выборка[0].ВидМПЗ <> Перечисления.ВидыМПЗ.Полуфабрикаты Тогда
	Сообщить("В ремонт можно отправлять только полуфабрикат!");
	Возврат(Ложь);
	ИначеЕсли Выборка[0].ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты Тогда
		Если ЗначениеЗаполнено(Выборка[0].МПЗ.Канбан) Тогда
			Если Не Выборка[0].МПЗ.Канбан.ЗапрещеноПеремещениеВБрак Тогда
			Сообщить("Выбранный канбан запрещено отправлять в ремонт!");
			Возврат(Ложь);					
			КонецЕсли;				
		КонецЕсли;
	ИначеЕсли Выборка[0].Количество > Выборка[0].КоличествоСклад Тогда
	Сообщить("Выбранное количество превышает количество на складе - "+Выборка[0].МПЗ+"!");
	Возврат(Ложь);
	КонецЕсли;
Возврат(Истина);
КонецФункции

&НаКлиенте
Процедура ОтправитьВРемонт(Команда)
	Если МожноОтправлятьВРемонт() Тогда
	Результат = ОткрытьФормуМодально("ОбщаяФорма.ВыборПричинРемонта",Новый Структура("РабочееМесто",РабочееМесто));
		Если Результат <> Неопределено Тогда
			Если ОтправитьВРемонтНаСервере(Результат) Тогда
			ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Создан ремонт по "+ПроизводственноеЗадание,БиблиотекаКартинок.Пользователь);
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;  
КонецПроцедуры
