
&НаСервере
Процедура ЗаполнитьДерево(ЭтапСпецификации)
Объект.Спецификация.Сортировать("ТипСправочника Убыв,ВидМПЗ,Позиция,МПЗ");
тДерево = РеквизитФормыВЗначение("ДеревоСпецификации");
тДерево.Строки.Очистить();
ТипСпр = "";
	Для каждого ТЧ Из Объект.Спецификация Цикл
		Если ТЧ.ЭтапСпецификации <> ЭтапСпецификации Тогда
		Продолжить;		
		КонецЕсли; 
			Если ТипСпр <> ТЧ.ТипСправочника Тогда
			Стр = тДерево.Строки.Добавить();
			Стр.ТипСправочника = ТЧ.ТипСправочника;
			ТипСпр = ТЧ.ТипСправочника;
			КонецЕсли; 
	СтрЗнч = Стр.Строки.Добавить();
	СтрЗнч.Позиция = ТЧ.Позиция;
	СтрЗнч.ВидЭлемента = ТЧ.ВидМПЗ;
	СтрЗнч.МПЗ = ТЧ.МПЗ;
	СтрЗнч.Количество = ТЧ.Количество;
	СтрЗнч.ЕдиницаИзмерения = ТЧ.ЕдиницаИзмерения;
	СтрЗнч.Аналог = ТЧ.Аналог;
	СтрЗнч.Примечание = ТЧ.Примечание;
		Если ТЧ.Владелец <> Неопределено Тогда
		СтрЗнч.Владелец = ТЧ.Владелец.Элемент;
		КонецЕсли;
	КонецЦикла;
ЗначениеВРеквизитФормы(тДерево, "ДеревоСпецификации");
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКомплектацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
ЗаполнитьДерево(Элемент.ТекущиеДанные.ЭтапСпецификации);
РазвернутьДерево(Неопределено);
КонецПроцедуры

&НаСервере
Функция ПолучитьЗаданиеНаСервере()
Результат = ОбщийМодульВызовСервера.СоздатьТаблицуЭтаповПроизводства(Объект.ПроизводственноеЗадание,Этапы,ЭтапыАРМ,Объект.РабочееМесто,Объект.Исполнитель);
Возврат(Истина);
КонецФункции

&НаСервере
Процедура ПолучитьЭтапыСпецификации()
	Для каждого ТЧ Из Этапы Цикл
		Если Объект.РабочееМесто.ТабличнаяЧасть.Найти(ТЧ.ГруппаНоменклатуры,"ГруппаНоменклатуры") = Неопределено Тогда
		Продолжить;
		КонецЕсли;
	ОбщийМодульВызовСервера.ПолучитьСпецификациюСАналогами(Объект.Спецификация,Объект.ПроизводственноеЗадание,ТЧ.ЭтапСпецификации,ТЧ.ЭтапСпецификации,ТЧ.Количество);	
	НормРасх = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н(ТЧ.ЭтапСпецификации,Объект.ПроизводственноеЗадание.ДатаЗапуска);
		Пока НормРасх.Следующий() Цикл			
        ТЧТК = ТаблицаКомплектации.Добавить();
		ТЧТК.ЭтапСпецификации = ТЧ.ЭтапСпецификации;
		ТЧТК.Комплектация = НормРасх.Элемент;
        ТЧТК.Количество = НормРасх.Норма*ТЧ.Количество;
		КонецЦикла;	
	КонецЦикла;
Объект.Спецификация.Сортировать("ЭтапСпецификации,ВидМПЗ,Позиция,МПЗ");
КонецПроцедуры
 
&НаСервере
Функция ПолучитьСпецификацию()
Возврат(Объект.ПроизводственноеЗадание.ДокументОснование.Номенклатура);	
КонецФункции

&НаСервере
Процедура ПолучитьMACАдрес()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	БарКоды.MAC,
	|	БарКоды.БарКод
	|ИЗ
	|	РегистрСведений.БарКоды КАК БарКоды
	|ГДЕ
	|	БарКоды.БарКод = &БарКод";
Запрос.УстановитьПараметр("БарКод", Объект.ПроизводственноеЗадание.БарКод);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	MAC = ВыборкаДетальныеЗаписи.MAC;
	КонецЦикла;
КонецПроцедуры 

&НаКлиенте
Процедура ПолучитьЗадание(Команда)
	Если ПолучитьЗаданиеНаСервере() Тогда
	ПолучитьMACАдрес();
	ПолучитьЭтапыСпецификации();
	Элементы.ТаблицаКомплектации.ТекущаяСтрока = ТаблицаКомплектации[0].ПолучитьИдентификатор();
	ТаблицаКомплектацииВыбор(Элементы.ТаблицаКомплектации,Элементы.ТаблицаКомплектации.ТекущаяСтрока,,Истина);
	Элементы.ПолучитьЗадание.Доступность = Ложь;
	Элементы.Завершить.Доступность = Истина;
	Иначе		
	Предупреждение("Нет производственных заданий!");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Объект.Исполнитель = ПараметрыСеанса.Пользователь;
	Если Объект.Исполнитель.Пустая() Тогда
	Элементы.РабочееМесто.Доступность = Ложь;
	Сообщить("Вы не внесены в справочник Сотрудников! Работа невозможна!");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ОчиститьСсылкуНаПЗ()
Объект.ПроизводственноеЗадание = Документы.ПроизводственноеЗадание.ПустаяСсылка();
MAC = "";
НомерВТ = "";
Этапы.Очистить();
ЭтапыАРМ.Очистить();
ТаблицаКомплектации.Очистить();
Объект.Спецификация.Очистить();
тДерево = РеквизитФормыВЗначение("ДеревоСпецификации");
тДерево.Строки.Очистить();
ЗначениеВРеквизитФормы(тДерево,"ДеревоСпецификации");
КонецПроцедуры  

&НаКлиенте
Процедура РабочееМестоПриИзменении(Элемент)
Элементы.ПолучитьЗадание.Доступность = Истина;
Элементы.Завершить.Доступность = Ложь;
ОчиститьСсылкуНаПЗ();
КонецПроцедуры

&НаСервере
Функция ЗавершитьЗаданиеНаСервере()
МестоПередачи = Объект.РабочееМесто.Наименование;
ДатаОкончания = Дата(1,1,1);
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	НаборЗаписей = РегистрыСведений.ЭтапыПроизводственныхЗаданий.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПЗ.Установить(Объект.ПроизводственноеЗадание);
	НаборЗаписей.Прочитать();
	    Для Каждого Запись Из НаборЗаписей Цикл 
	    	Если Запись.РабочееМесто = Объект.РабочееМесто Тогда
			ДатаОкончания = Запись.ДатаОкончания;
			Прервать;
			КонецЕсли;  
	    КонецЦикла;
			Если ЗначениеЗаполнено(ДатаОкончания) Тогда
				Если Не ОбщийМодульСозданиеДокументов.СоздатьВыпускПродукции(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,Объект.Спецификация,Этапы,ДатаОкончания) Тогда
				Сообщить("Документ выпуска не создан!");
				ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
				Возврат("");
				КонецЕсли;
			Иначе
			Сообщить("Дата окончания этапа не заполнена!");
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			Возврат("");			
			КонецЕсли; 
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Объект.ПроизводственноеЗадание = Документы.ПроизводственноеЗадание.ПустаяСсылка();
	Возврат(МестоПередачи);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат("");
	КонецПопытки;
КонецФункции

&НаСервере
Функция ПолучитьКодРМ()
Возврат(Объект.РабочееМесто.Код);
КонецФункции

&НаКлиенте
Процедура ЗавершитьЗадание(Команда)
НовоеРМ = ЗавершитьЗаданиеНаСервере();
	Если НовоеРМ <> "" Тогда
	Элементы.ПолучитьЗадание.Доступность = Истина;
	Элементы.Завершить.Доступность = Ложь;	
	ОчиститьСсылкуНаПЗ();
	ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Создан выпуск на "+НовоеРМ,БиблиотекаКартинок.Пользователь); 
	КонецЕсли;  
КонецПроцедуры

&НаКлиенте
Процедура РабочееМестоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не Объект.ПроизводственноеЗадание.Пустая() Тогда
		Если Вопрос("Задание не завершено. Вы действительно хотите авторизоваться?",РежимДиалогаВопрос.ДаНет,,,"ВНИМАНИЕ!") = КодВозвратаДиалога.Нет Тогда
		СтандартнаяОбработка = Ложь;
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокЭтапов()
СписокЭтапов = Новый СписокЗначений;
	Для каждого ТЧ Из ТаблицаКомплектации Цикл
		Если СписокЭтапов.НайтиПоЗначению(ТЧ.ЭтапСпецификации) = Неопределено Тогда
		СписокЭтапов.Добавить(ТЧ.ЭтапСпецификации);
		КонецЕсли; 
	КонецЦикла;
Возврат(СписокЭтапов);
КонецФункции 

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
ПриЗакрытииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
//РМ = Объект.РабочееМесто.ПолучитьОбъект();
//РМ.Авторизовано = Ложь;
//РМ.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ПечатьБарКода(Команда)
П = Новый Структура("ПЗ,БарКод,ПС,Этикетка",Объект.ПроизводственноеЗадание,Истина,Ложь,Ложь);
ОткрытьФорму("Обработка.СозданныеБарКоды.Форма.Форма",П); 
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДерево(Команда)
тЭлементы = ДеревоСпецификации.ПолучитьЭлементы();
   Для Каждого тСтр Из тЭлементы Цикл
   	Элементы.ДеревоСпецификации.Развернуть(тСтр.ПолучитьИдентификатор(), Истина);
   КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СвернутьДерево(Команда)
тЭлементы = ДеревоСпецификации.ПолучитьЭлементы();
   Для Каждого тСтр Из тЭлементы Цикл
   Элементы.ДеревоСпецификации.Свернуть(тСтр.ПолучитьИдентификатор());
   КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
ОбщийМодульКлиент.ОткрытьФайлДокумента(Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
ОткрытьДокумент("");
КонецПроцедуры

&НаКлиенте
Процедура Прошивка(Команда)
СписокЭтапов = Новый СписокЗначений;

СписокЭтапов = ПолучитьСписокЭтапов();
	Если СписокЭтапов.Количество() > 1 Тогда
	ВыбЭтап = СписокЭтапов.ВыбратьЭлемент("Выберите спецификацию");
	Иначе
	ВыбЭтап = СписокЭтапов[0];
	КонецЕсли;
П = Новый Структура("Спецификация",ВыбЭтап.Значение);
ОткрытьФорму("Обработка.ПрошивкаПриборов.Форма",П);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;
КонецПроцедуры
