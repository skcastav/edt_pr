
&НаСервере
Функция ПолучитьЦенуЦена(БазаСД,Н)
ТипЦен=БазаСД.Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("00-000001");
Запрос = БазаСД.NewObject("Запрос"); 

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныНоменклатуры.ТипЦен,
	|	ЦеныНоменклатуры.Номенклатура,
	|	ЦеныНоменклатуры.Цена
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|ГДЕ
	|	ЦеныНоменклатуры.Номенклатура = &Н
	|	И ЦеныНоменклатуры.ТипЦен = &ТипЦен
	|АВТОУПОРЯДОЧИВАНИЕ";
Запрос.УстановитьПараметр("Н", Н);
Запрос.УстановитьПараметр("ТипЦен", ТипЦен.Ссылка);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Цена=ВыборкаДетальныеЗаписи.Цена;
	КонецЦикла;
Возврат Цена;
КонецФункции

//Поиск номенклатуры по артикулу, если не найдена, добавление в группу "Новые"
&НаСервере
Функция ВыбратьДобавитьНоменклатуру(БазаСД,Товар)
Наименование = Товар.Наименование;	
Артикул = Формат(Товар.Код, "ЧДЦ=; ЧГ=0");
Артикул = СтрЗаменить(Артикул, " ", "");
	Пока СтрДлина(Артикул) < 9 Цикл
	Артикул = "0" + Артикул;
	Конеццикла;
Номенклатура =  БазаСД.Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",Артикул);
	// если не найден, то создать новую номенклатуру	
	Если Номенклатура = БазаСД.Справочники.Номенклатура.ПустаяСсылка() Тогда
	РодительНоменклатурыНов = БазаСД.Справочники.Номенклатура.НайтиПоНаименованию("Новые", Истина);
	Справ = БазаСД.Справочники.Номенклатура.СоздатьЭлемент();
	ГруппаНоменклатуры = БазаСД.Справочники.Номенклатура.НайтиПоНаименованию("Новые", Истина);
		Если ГруппаНоменклатуры = БазаСД.Справочники.Номенклатура.ПустаяСсылка() Тогда
		ГруппаНоменклатуры = БазаСД.Справочники.Номенклатура.СоздатьГруппу();
		ГруппаНоменклатуры.Наименование = "Новые";
		ГруппаНоменклатуры.Записать();
		КонецЕсли;
	ЕдиницаИзмерения = БазаСД.Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию("шт");
	Справ.Артикул = 			Артикул;
	Справ.Наименование = 		Наименование;
	Справ.НаименованиеПолное = 	Товар.ПолнНаименование;
	Справ.Родитель = 			ГруппаНоменклатуры;
	Справ.ВидСтавкиНДС = 		БазаСД.Перечисления.ВидыСтавокНДС.Общая;
	Справ.ЕдиницаИзмерения = 	ЕдиницаИзмерения;
	Справ.Записать();
	Сообщить("Создана новая номенклатура  " + Артикул + "   " + Наименование);
	Номенклатура = БазаСД.Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",Артикул);
	Иначе
		// если помечен на удаление, то сообщить	
		Если Номенклатура.ПометкаУдаления Тогда
	    Сообщить("Номенклатура помечена на удаление " + Артикул + "   " + Наименование);
		КонецЕсли;	
	КонецЕсли;	
Возврат Номенклатура;
КонецФункции

&НаСервере
Процедура ВыгрузитьНаСервере()
БазаСД = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Объект.БазаДанных);
	Если БазаСД = Неопределено Тогда
	Возврат;
	КонецЕсли;
Запрос = Новый Запрос;
ТЗ = Новый ТаблицаЗначений;

ТЗ.Колонки.Добавить("Товар");
ТЗ.Колонки.Добавить("Количество");

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииПоступление.Номенклатура КАК Номенклатура,
	|	ВыпускПродукцииПоступление.Количество КАК Количество
	|ИЗ
	|	Документ.ВыпускПродукции.Поступление КАК ВыпускПродукцииПоступление
	|ГДЕ
	|	ВыпускПродукцииПоступление.Ссылка.НаСклад = ИСТИНА
	|	И ВыпускПродукцииПоступление.Ссылка.ДокументОснование.ДокументОснование.Ремонт = ЛОЖЬ
	|	И ВыпускПродукцииПоступление.Ссылка.ДокументОснование.ДокументОснование.СтандартныйКомментарий.НеВыгружать = ЛОЖЬ
	|	И ВыпускПродукцииПоступление.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииПоступление.Ссылка.Подразделение = &Подразделение"; 
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Период.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Период.ДатаОкончания));
Запрос.УстановитьПараметр("Подразделение", Подразделение);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если Не ВыборкаДетальныеЗаписи.Номенклатура.Товар.Пустая() Тогда
		ТЧ = ТЗ.Добавить();
		ТЧ.Товар = ВыборкаДетальныеЗаписи.Номенклатура.Товар;
		ТЧ.Количество = ВыборкаДетальныеЗаписи.Количество;
		Иначе
		Сообщить("Не присвоен товар для "+ВыборкаДетальныеЗаписи.Номенклатура.Наименование);
		КонецЕсли;
	КонецЦикла;	
		Если ТЗ.Количество() > 0 Тогда
		ТЗ.Свернуть("Товар","Количество");
		ТЗ.Сортировать("Товар");
			Попытка
			бсНовДок = БазаСД.Документы.ОтчетПроизводстваЗаСмену.СоздатьДокумент();	
			бсНовДок.Дата = НачалоДня(Период.ДатаОкончания);
			бсНовДок.Организация = БазаСД.Справочники.Организации.НайтиПоРеквизиту("ИНН","7112011490");
			бсНовДок.СчетЗатрат =  БазаСД.ПланыСчетов.Хозрасчетный.НайтиПоКоду("20.01");
				Если Найти(Подразделение.Наименование,"Богородицк УПЭА") > 0 Тогда
				бсНовДок.ПодразделениеЗатрат = БазаСД.Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("Завод  УПЭА",Истина);
				бсНовДок.Склад = БазаСД.Справочники.Склады.НайтиПоНаименованию("Склад ГП УПЭА",Истина);
				Иначе	
				бсНовДок.ПодразделениеЗатрат = БазаСД.Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("Завод  УД",Истина);
				бсНовДок.Склад = БазаСД.Справочники.Склады.НайтиПоНаименованию("Склад ГП УД",Истина);			
				КонецЕсли;
			бсНовДок.НДСвСтоимостиТоваров = БазаСД.Перечисления.ДействиеНДСВСтоимостиТоваров.НеИзменять;
			бсНовДок.Комментарий = "Выгрузка из производственной базы за "+Формат(Период.ДатаНачала,"ДФ=dd.MM.yyyy");	
				Для Каждого ТЧ Из ТЗ Цикл			
				ТЧ_П = бсНовДок.Продукция.Добавить();
				ТЧ_П.Номенклатура = ВыбратьДобавитьНоменклатуру(БазаСД,ТЧ.Товар);
				ТЧ_П.НоменклатурнаяГруппа = ТЧ_П.Номенклатура.НоменклатурнаяГруппа;
				ТЧ_П.ЕдиницаИзмерения = ТЧ_П.Номенклатура.ЕдиницаИзмерения;
				ТЧ_П.Количество = ТЧ.Количество;
				ТЧ_П.ПлановаяСтоимость=ПолучитьЦенуЦена(БазаСД,ТЧ_П.Номенклатура);
				ТЧ_П.СуммаПлановая=ТЧ_П.Количество*ТЧ_П.ПлановаяСтоимость;
				ТЧ_П.Счет = БазаСД.ПланыСчетов.Хозрасчетный.ГотоваяПродукция;		
				КонецЦикла;
			//БазаСД.Документы.ОтчетПроизводстваЗаСмену.ЗаполнитьСчетаУчетаВТабличнойЧасти(бсНовДок, "Продукция");
			бсНовДок.Записать(БазаСД.РежимЗаписиДокумента.Проведение);
			Сообщить("В бух. базе создан документ №"+бсНовДок.Номер);
			Исключение
			Сообщить(ОписаниеОшибки());
			ОтменитьТранзакцию();
			КонецПопытки;
		КонецЕсли;    
КонецПроцедуры 

&НаКлиенте
Процедура Выгрузить(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	Состояние("Обработка...",,"Выгрузка в выбранную базу данных...");	
	ВыгрузитьНаСервере();	
	КонецЕсли;
КонецПроцедуры
