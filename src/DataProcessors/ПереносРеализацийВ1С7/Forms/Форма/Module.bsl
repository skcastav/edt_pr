
&НаСервере
Функция ПолучитьСписокРеализаций()
СписокРеализаций = Новый СписокЗначений;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Реализация.Ссылка
	|ИЗ
	|	Документ.Реализация КАК Реализация
	|ГДЕ
	|	Реализация.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И Реализация.Проведен = ИСТИНА
	|	И Реализация.Контрагент = &Контрагент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Реализация.Номер";
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.Период.ДатаНачала));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.Период.ДатаОкончания));
Запрос.УстановитьПараметр("Контрагент", Контрагент);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокРеализаций.Добавить(ВыборкаДетальныеЗаписи.Ссылка,ВыборкаДетальныеЗаписи.Ссылка.Номер);
	КонецЦикла;
Возврат(СписокРеализаций);
КонецФункции

&НаСервере
Функция ПолучитьДатуРеализации(Док)
Возврат(Док.Дата);
КонецФункции

&НаСервере
Функция ПолучитьКомментарийРеализации(Док)
Возврат(Док.Комментарий);
КонецФункции

&НаСервере
Функция ЗаполненДокументОснование(Док)
Возврат(ЗначениеЗаполнено(Док.ДокументОснование));
КонецФункции

&НаСервере
Функция ПолучитьНомерДокументаОснования(Док)
Возврат(Док.ДокументОснование.Номер);
КонецФункции

&НаСервере
Функция ПолучитьДатуДокументаОснования(Док)
Возврат(Док.ДокументОснование.Дата);
КонецФункции

&НаСервере
Функция ПолучитьМестоХраненияРеализации(Док)
Возврат(Док.МестоХранения);
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуМПЗ(Док)
ТаблицаМПЗ.Очистить();
	Для каждого ТЧ Из Док.ТабличнаяЧасть Цикл
	ТЧ_МПЗ = ТаблицаМПЗ.Добавить();
		Если ТЧ.ВидТовара = Перечисления.ВидыМПЗ.Материалы Тогда	
		ТЧ_МПЗ.ВидМПЗ = 1;
		ТЧ_МПЗ.МПЗ = СокрЛП(ТЧ.Товар.Наименование);
		Иначе 
		ТЧ_МПЗ.ВидМПЗ = 2;
			Если Док.МестоХранения = МестоХраненияДляСозданияМатериалов Тогда
				Если ТЧ.Товар.Товар.Пустая() Тогда
				ТЧ_МПЗ.МПЗ = СокрЛП(глНаименованиеВСкобкахБезЭтапа(ТЧ.Товар.Наименование));
				Иначе	
				ТЧ_МПЗ.МПЗ = СокрЛП(ТЧ.Товар.Товар.Наименование);
				КонецЕсли;	
			Иначе	
			ТЧ_МПЗ.МПЗ = СокрЛП(ТЧ.Товар.Наименование);
			КонецЕсли;
		КонецЕсли;
	ТЧ_МПЗ.Количество = ТЧ.Количество;
	ТЧ_МПЗ.ЕдиницаИзмерения = СокрЛП(ТЧ.ЕдиницаИзмерения.Наименование);
	ТЧ_МПЗ.Цена = ТЧ.Цена;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПоступлениеТоваров(V7,Проверить,Реализация,РеализацияНомер)
БСДДокОсн = V7.CreateObject("Документ.Заказ");	
БСДДок = V7.CreateObject("Документ.ПоступлениеТоваров");
БСДМат = V7.CreateObject("Справочник.Материалы");
БСДНом = V7.CreateObject("Справочник.Номенклатура");
ЕдИзмМат = V7.CreateObject("Справочник.ЕдиницыМатериалов");
ЕдИзмНом = V7.CreateObject("Справочник.ЕдиницыНоменклатуры");
СпрЕИ = V7.CreateObject("Справочник.ЕдиницыНоменклатуры");
СпрЕИМат = V7.CreateObject("Справочник.ЕдиницыМатериалов");
ВидНом = V7.CreateObject("Справочник.ВидыНоменклатуры");

РеализацияДата = ПолучитьДатуРеализации(Реализация);
МестоХранения = ПолучитьМестоХраненияРеализации(Реализация);

БСДДок.ВыбратьДокументы();
	Пока БСДДок.ПолучитьДокумент() = 1 Цикл
		Если СокрЛП(БСДДок.НомерДокВходящий) = СокрЛП(РеализацияНомер) Тогда
		Сообщить("Реализация №"+РеализацияНомер+" уже перенесён в Харьковскую базу.");
		Возврат;
		КонецЕсли;	
	КонецЦикла;
БСДДок.Новый();
	Если ИспользоватьРучнуюНумерацию Тогда
	БСДДок.НомерДок = Прав(Год(РеализацияДата),2)+"-"+Формат(ТекНомерП,"ЧЦ=4; ЧВН=; ЧГ=0");
	ТекНомерП = ТекНомерП + 1;
	Иначе
	БСДДок.УстановитьНовыйНомер(Прав(Год(РеализацияДата),2)+"-");	
	КонецЕсли; 
БСДДок.ДатаДок = РеализацияДата;	                      
БСДДок.НомерДокВходящий = РеализацияНомер;
БСДДок.ДатаДокВходящий = РеализацияДата;
БСДДок.Курс = 0.2;
БСДДок.ВариантРасчетаНалогов = V7.Константа.ОсновнойВариантРасчетаНалогов;
БСДДок.Комментарий = ПолучитьКомментарийРеализации(Реализация);
ЗаполнитьТаблицуМПЗ(Реализация);              
	Для каждого ТЧ Из ТаблицаМПЗ Цикл
		Если ТЧ.ВидМПЗ = 1 Тогда
			Если БСДМат.НайтиПоНаименованию(ТЧ.МПЗ,0,1) = 1 Тогда
			БСДДок.НоваяСтрока();
			БСДДок.ВидМПЗ = V7.Перечисление.ВидыМПЗ.Материалы;  
			БСДДок.Товар = БСДМат.ТекущийЭлемент();                
			БСДДок.Количество = ТЧ.Количество;                                 
			БСДДок.ЦенаВал = ТЧ.Цена;					
			ЕдИзмМат.ИспользоватьВладельца(БСДМат.ТекущийЭлемент());
				Если ЕдИзмМат.НайтиПоНаименованию(ТЧ.ЕдиницаИзмерения,1,1) = 1 Тогда
				БСДДок.ЕдиницаИзмерения = ЕдИзмМат.ТекущийЭлемент();						
				КонецЕсли;				
			Иначе
			Сообщить("Материал "+ТЧ.МПЗ+" - не найден в базе 1С7.7!");	
			КонецЕсли;
		Иначе
			Если МестоХранения = МестоХраненияДляСозданияМатериалов Тогда
				Если БСДМат.НайтиПоНаименованию(ТЧ.МПЗ,0,1) = 1 Тогда
				БСДДок.НоваяСтрока();
				БСДДок.ВидМПЗ = V7.Перечисление.ВидыМПЗ.Материалы; 
				БСДДок.Товар = БСДМат.ТекущийЭлемент();                
				БСДДок.Количество = ТЧ.Количество;                                 
				БСДДок.ЦенаВал = ТЧ.Цена;					
				ЕдИзмМат.ИспользоватьВладельца(БСДМат.ТекущийЭлемент());
					Если ЕдИзмМат.НайтиПоНаименованию(ТЧ.ЕдиницаИзмерения,1,1) = 1 Тогда
					БСДДок.ЕдиницаИзмерения = ЕдИзмМат.ТекущийЭлемент();						
					КонецЕсли;				
				Иначе
					Если СоздатьНедостающиеПолуфабрикаты Тогда
					БСДМат.НайтиПоНаименованию("Изделия для перепродажи",0,1);
					ТекГруппа = БСДМат.ТекущийЭлемент();
					БСДМат.ИспользоватьРодителя(ТекГруппа.ТекущийЭлемент());
					БСДМат.Новый();
					БСДМат.Родитель = ТекГруппа.ТекущийЭлемент();
					БСДМат.Код = СледующийКод;
					БСДМат.Наименование = ТЧ.МПЗ;
					БСДМат.ПолнНаименование = ТЧ.МПЗ;
					БСДМат.ЕдиницаИзмерения = V7.глЗначениеПоУмолчанию("ОсновнаяЕдиницаИзмерения");
					Сч = "10.1";			
					БСДМат.Субсчет = V7.EvalExpr("СчетПоКоду("+Сч+")");
					БСДМат.Записать();                                         
					БСДМат.СтавкаНДС.Установить(ТекущаяДата(),V7.глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС"));
					БСДМат.СтавкаНП.Установить(ТекущаяДата(),V7.глЗначениеПоУмолчанию("ОсновнаяСтавкаНП"));			
					СпрЕИМат.ИспользоватьВладельца(БСДМат.ТекущийЭлемент());
					СпрЕИМат.Новый();
					СпрЕИМат.ЕдиницаИзмерения = БСДМат.ЕдиницаИзмерения;
					СпрЕИМат.Коэффициент = 1;
					СпрЕИМат.Наименование = БСДМат.ЕдиницаИзмерения.Наименование;
					СпрЕИМат.Записать();
					БСДМат.ОсновнаяЕдиницаИзмерения = СпрЕИМат.ТекущийЭлемент();  
					БСДМат.Записать();	                                       
					Сообщить("Материал "+ТЧ.МПЗ+" - создан в базе 1С7.7!");
					СледующийКод = СледующийКод + 1;									
					Иначе	
					Сообщить("Полуфабрикат "+ТЧ.МПЗ+" - не найден в базе 1С7.7!");
					КонецЕсли;
				КонецЕсли;
			Иначе
				Если БСДНом.НайтиПоНаименованию(ТЧ.МПЗ,0,1) = 1 Тогда
				БСДДок.НоваяСтрока();
				БСДДок.ВидМПЗ = V7.Перечисление.ВидыМПЗ.Полуфабрикаты; 
				БСДДок.Товар = БСДНом.ТекущийЭлемент();                
				БСДДок.Количество = ТЧ.Количество;                                 
				БСДДок.ЦенаВал = ТЧ.Цена;					
				ЕдИзмНом.ИспользоватьВладельца(БСДНом.ТекущийЭлемент());
					Если ЕдИзмНом.НайтиПоНаименованию(ТЧ.ЕдиницаИзмерения,1,1) = 1 Тогда
					БСДДок.ЕдиницаИзмерения = ЕдИзмНом.ТекущийЭлемент();						
					КонецЕсли;				
				Иначе
					Если СоздатьНедостающиеПолуфабрикаты Тогда	
					ВидНом.НайтиПоНаименованию("Полуфабрикат",0,1);
					БСДНом.НайтиПоНаименованию("Товары для перепродажи",0,1);
					ТекГруппа = БСДНом.ТекущийЭлемент();
					БСДНом.Новый();
					БСДНом.Родитель = ТекГруппа.ТекущийЭлемент();
					БСДНом.Наименование = ТЧ.МПЗ;
					БСДНом.ПолнНаименование = ТЧ.МПЗ;
					БСДНом.Валюта = V7.глЗначениеПоУмолчанию("ОсновнаяВалюта");
					БСДНом.ВидНоменклатуры = ВидНом.ТекущийЭлемент();	
					БСДНом.ТипНоменклатуры = ВидНом.ТипНоменклатуры;
					БСДНом.ЕдиницаИзмерения = V7.глЗначениеПоУмолчанию("ОсновнаяЕдиницаИзмерения");			
					БСДНом.Записать();                                         
					БСДНом.СтавкаНДС.Установить(ТекущаяДата(),V7.глЗначениеПоУмолчанию("ОсновнаяСтавкаНДС"));
					БСДНом.СтавкаНП.Установить(ТекущаяДата(),V7.глЗначениеПоУмолчанию("ОсновнаяСтавкаНП"));			
					СпрЕИ.ИспользоватьВладельца(БСДНом.ТекущийЭлемент());
					СпрЕИ.Новый();
					СпрЕИ.ЕдиницаИзмерения = БСДНом.ЕдиницаИзмерения;
					СпрЕИ.Коэффициент = 1;
					СпрЕИ.Наименование = БСДНом.ЕдиницаИзмерения.Наименование;
					СпрЕИ.Записать();
					БСДНом.ОсновнаяЕдиницаИзмерения = СпрЕИ.ТекущийЭлемент();  
					БСДНом.Записать();	                                       
					Сообщить("Полуфабрикат "+ТЧ.МПЗ+" - создан в базе 1С7.7!");								
					Иначе	
					Сообщить("Полуфабрикат "+ТЧ.МПЗ+" - не найден в базе 1С7.7!");
					КонецЕсли; 
				КонецЕсли;	
			КонецЕсли;		
		КонецЕсли; 		
	КонецЦикла;
		Если Не Проверить Тогда
			Если БСДДок.КоличествоСтрок() > 0 Тогда
				Если ЗаполненДокументОснование(Реализация) Тогда
				БСДДокОсн.НайтиПоНомеру(ПолучитьНомерДокументаОснования(Реализация),ПолучитьДатуДокументаОснования(Реализация));
				БСДДок.ДокументОснование = БСДДокОсн.ТекущийДокумент();
				КонецЕсли;                         
			БСДДок.Записать();
			Сообщить("Реализация материалов №"+РеализацияНомер+" перенесён в Поступление МПЗ №"+СокрЛП(БСДДок.НомерДок));
			Иначе
			Сообщить("Реализация материалов №"+РеализацияНомер+" не перенесён из-за отсутствия элементов в базе.");
			КонецЕсли; 				
		КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура Соединиться(Команда,Проверить = Ложь)
	Если Не ЭтаФорма.ПроверитьЗаполнение() Тогда
	Возврат;
	КонецЕсли; 
НастройкиОбменаДанными = ОбщийМодульСинхронизации.ПолучитьНастройкиОбменаДанными(Объект.ОбменДанными);
V7 = ОбщийМодульКлиент.ПодключитьсяК1С77(НастройкиОбменаДанными.ПутьКБазеДанных,Объект.ИмяПользователя,Объект.Пароль);
	Если V7 = Неопределено Тогда
	Возврат;	
	КонецЕсли;
Состояние("Обработка...",,"Получение списка документов Реализация...");
СписокРеализаций = ПолучитьСписокРеализаций();
	Если Проверить Тогда
	стрДействие = "Проверка";
	Иначе
	стрДействие = "Выгрузка";
	КонецЕсли; 
к = 1;
	Для каждого Реализация Из СписокРеализаций Цикл	
	Состояние("Обработка...",к*100/СписокРеализаций.Количество(),стрДействие+" реализации "+Реализация.Представление+"...");
	ПоступлениеТоваров(V7,Проверить,Реализация.Значение,Реализация.Представление);
	к = к + 1;
	КонецЦикла;  
КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
Соединиться(Неопределено,Истина);
КонецПроцедуры
