
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
СортироватьПо = 1;
КонецПроцедуры

&НаСервере
Функция ПолучитьЛО(ПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЛьготнаяОчередьСрезПоследних.ПЗ
	|ИЗ
	|	РегистрСведений.ЛьготнаяОчередь.СрезПоследних КАК ЛьготнаяОчередьСрезПоследних
	|ГДЕ
	|	ЛьготнаяОчередьСрезПоследних.ПЗ = &ПЗ
	|	И ЛьготнаяОчередьСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
Запрос.УстановитьПараметр("ПЗ", ПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(Истина);
	КонецЦикла;
	Возврат(Ложь);
КонецФункции 

&НаСервере
Функция ПолучитьРемонт(ПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ = &ПЗ
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.Ремонт = ИСТИНА";
Запрос.УстановитьПараметр("ПЗ", ПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(Истина);
	КонецЦикла;
	Возврат(Ложь);
КонецФункции

&НаСервере
Функция ПолучитьТекущийЭтапПЗ(ПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ = &ПЗ";
Запрос.УстановитьПараметр("ПЗ", ПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(Новый Структура("РабочееМесто,ДатаНачала,ДатаОкончания",ВыборкаДетальныеЗаписи.РабочееМесто,ВыборкаДетальныеЗаписи.ДатаНачала,ВыборкаДетальныеЗаписи.ДатаОкончания));
	КонецЦикла;
КонецФункции

&НаСервере
Процедура ПолучитьПЗКанбан(МТК,СтрМТК)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Ссылка
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", МТК);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СтрПЗ = СтрМТК.Строки.Добавить();
	СтрПЗ.Документ = ВыборкаДетальныеЗаписи.Ссылка;
	СтрПЗ.ВозвратнаяТара = ВыборкаДетальныеЗаписи.Ссылка.ВозвратнаяТара;
	СтрПЗ.Количество = ВыборкаДетальныеЗаписи.Ссылка.Количество;
	СтрПЗ.Изделие = ВыборкаДетальныеЗаписи.Ссылка.Изделие;
	СтрПЗ.ЛО = ПолучитьЛО(ВыборкаДетальныеЗаписи.Ссылка);
	СтрПЗ.Ремонт = ПолучитьРемонт(ВыборкаДетальныеЗаписи.Ссылка);
	ЭПЗ = ПолучитьТекущийЭтапПЗ(ВыборкаДетальныеЗаписи.Ссылка);
	СтрПЗ.РабочееМесто = ЭПЗ.РабочееМесто;
	СтрПЗ.ДатаНачала = ЭПЗ.ДатаНачала;
	СтрПЗ.ДатаОкончания = ЭПЗ.ДатаОкончания;
	СтрПЗ.Статус = -1;
	КонецЦикла;
КонецПроцедуры 

&НаСервере
Функция ПолучитьНезавершённоеКоличествоПоПодчиненнымМТК(МТК)
Запрос = Новый Запрос;

Количество = 0;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Ссылка
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", МТК);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
Количество = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Количество = Количество + ОбщийМодульВызовСервера.ПолучитьНезавершённоеКоличество(ТекущаяДата(),ВыборкаДетальныеЗаписи.Ссылка);	
	КонецЦикла;
Возврат(Количество);
КонецФункции 

&НаСервере
Функция ПолучитьКоличествоПеремещённых(МТК)
Запрос = Новый Запрос;

Количество = 0;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДвижениеМПЗТабличнаяЧасть.Количество КАК Количество
	|ИЗ
	|	Документ.ДвижениеМПЗ.ТабличнаяЧасть КАК ДвижениеМПЗТабличнаяЧасть
	|ГДЕ
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.ДокументОснование = &ДокументОснование
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	ДвижениеМПЗТабличнаяЧасть.МПЗ";
Запрос.УстановитьПараметр("ДокументОснование", МТК);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
Количество = 0;
	Пока ВыборкаМПЗ.Следующий() Цикл
	Количество = Количество + ВыборкаМПЗ.Количество;	
	КонецЦикла;
Возврат(Количество);
КонецФункции 

&НаСервере
Процедура ОбновитьНаСервере()
тДерево = РеквизитФормыВЗначение("ДеревоМТК");
тДерево.Строки.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Ссылка
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.Линейка = &Линейка
	|	И МаршрутнаяКарта.Статус <> 3";
Запрос.УстановитьПараметр("Линейка", Объект.Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СтрМТК = тДерево.Строки.Добавить();
	СтрМТК.Документ = ВыборкаДетальныеЗаписи.Ссылка;
	СтрМТК.Статус = ВыборкаДетальныеЗаписи.Ссылка.Статус;
	СтрМТК.Количество = ВыборкаДетальныеЗаписи.Ссылка.Количество;
	СтрМТК.Изделие = ВыборкаДетальныеЗаписи.Ссылка.Номенклатура;
	СтрМТК.НомерОчереди = ВыборкаДетальныеЗаписи.Ссылка.НомерОчереди;
	СтрМТК.Счёт = ВыборкаДетальныеЗаписи.Ссылка.Счёт;
	СтрМТК.ДатаОтгрузки = ВыборкаДетальныеЗаписи.Ссылка.ДатаОтгрузки;
	СтрМТК.ЛО = ПолучитьЛО(ВыборкаДетальныеЗаписи.Ссылка);
		Если СозданыПодчиненныеМТК(ВыборкаДетальныеЗаписи.Ссылка) Тогда
		СтрМТК.КоличествоВыпущено = ВыборкаДетальныеЗаписи.Ссылка.Количество - ПолучитьНезавершённоеКоличествоПоПодчиненнымМТК(ВыборкаДетальныеЗаписи.Ссылка);
		Иначе	
		СтрМТК.КоличествоВыпущено = ПолучитьКоличествоПеремещённых(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЕсли;
	СтрМТК.Комментарий = ВыборкаДетальныеЗаписи.Ссылка.Комментарий;
	ПолучитьПЗКанбан(ВыборкаДетальныеЗаписи.Ссылка,СтрМТК);
	КонецЦикла;
ЗначениеВРеквизитФормы(тДерево, "ДеревоМТК"); 
СортироватьПоПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеПоЛинейке() Экспорт
ОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не Объект.Линейка.Пустая() Тогда
	ОбновитьНаСервере();
		Если Объект.ИнтервалОбновления > 0 Тогда
		ПодключитьОбработчикОжидания("ПолучитьДанныеПоЛинейке", Объект.ИнтервалОбновления*60);
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалОбновленияПриИзменении(Элемент)
	Если Не Объект.Линейка.Пустая() Тогда
	ОтключитьОбработчикОжидания("ПолучитьДанныеПоЛинейке");
		Если Объект.ИнтервалОбновления > 0 Тогда
		ПодключитьОбработчикОжидания("ПолучитьДанныеПоЛинейке", Объект.ИнтервалОбновления*60);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
ОбновитьНаСервере();
РазвернутьДерево(Неопределено);
КонецПроцедуры

&НаСервере
Функция ПолучитьСпецификациюКанбана(Номенклатура)
ВыборкаНР = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н(Номенклатура,ТекущаяДата());
	Пока ВыборкаНР.Следующий() Цикл
		Если ВыборкаНР.Элемент.Канбан = Объект.ВидКанбана Тогда	
		Возврат(ВыборкаНР.Элемент);
		КонецЕсли; 
	КонецЦикла;
Возврат(Неопределено);
КонецФункции 

&НаСервере
Функция СозданыПодчиненныеМТК(МТК)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Ссылка
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", МТК);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(Истина);
	КонецЦикла;
Возврат(Ложь);
КонецФункции 

&НаСервере
Процедура СоздатьМТККанбанаНаСервере(Документ)
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.МаршрутнаяКарта") Тогда
		Если Документ.Линейка.ВидЛинейки = Перечисления.ВидыЛинеек.Продукция Тогда
			Если Не СозданыПодчиненныеМТК(Документ) Тогда
			Канбан = ПолучитьСпецификациюКанбана(Документ.Номенклатура);
				Если Канбан <> Неопределено Тогда
				ОбщийМодульСозданиеДокументов.СоздатьМТККанбан(Объект.ЛинейкаКанбан,Справочники.МестаХранения.ПустаяСсылка(),0,Канбан,Документ.Количество,,Документ);
				Иначе
				Сообщить(СокрЛП(Документ.Номенклатура.Наименование)+" - не найдено выбранного вида канбана!");
				КонецЕсли; 
			КонецЕсли;
		Возврат;
		КонецЕсли; 	
	КонецЕсли;
Сообщить("Выберите МТК линейки производства продукции!"); 
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМТККанбана(Команда)
	Если Найти(Элементы.ДеревоМТК.ТекущиеДанные.Комментарий,"Дополнительная МТК") = 0 Тогда
	СоздатьМТККанбанаНаСервере(Элементы.ДеревоМТК.ТекущиеДанные.Документ);
	Обновить(Неопределено);
	Иначе
	Сообщить("На дополнительные МТК не создаются МТК канбана.");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура УдалитьМТК(Команда)
	Если ТипЗнч(Элементы.ДеревоМТК.ТекущиеДанные.Документ) = Тип("ДокументСсылка.МаршрутнаяКарта") Тогда
		Если Вопрос("Вы действительно хотите удалить МТК?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ОбщийМодульВызовСервера.УдалитьЦепочкуДокументов(Элементы.ДеревоМТК.ТекущиеДанные.Документ);
		Обновить(Неопределено);
		КонецЕсли;
	Иначе
	Сообщить("Выберите строку с маршрутной картой!");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура СортироватьПоПриИзмененииНаСервере()
тДерево = РеквизитФормыВЗначение("ДеревоМТК");
	Если СортироватьПо = 1 Тогда
	тДерево.Строки.Сортировать("НомерОчереди");
	ИначеЕсли СортироватьПо = 2 Тогда
	тДерево.Строки.Сортировать("Изделие");
	ИначеЕсли СортироватьПо = 3 Тогда
	тДерево.Строки.Сортировать("ДатаОкончания",Истина);
	ИначеЕсли СортироватьПо = 4 Тогда
	тДерево.Строки.Сортировать("ДатаОтгрузки",Истина);
	КонецЕсли;
ЗначениеВРеквизитФормы(тДерево, "ДеревоМТК"); 
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПоПриИзменении(Элемент)
СортироватьПоПриИзмененииНаСервере();
РазвернутьДерево(Неопределено); 
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДерево(Команда)
тЭлементы = ДеревоМТК.ПолучитьЭлементы();
   Для Каждого тСтр Из тЭлементы Цикл
   Элементы.ДеревоМТК.Развернуть(тСтр.ПолучитьИдентификатор(), Истина);
   КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СвернутьДерево(Команда)
тЭлементы = ДеревоМТК.ПолучитьЭлементы();
   Для Каждого тСтр Из тЭлементы Цикл
   Элементы.ДеревоМТК.Свернуть(тСтр.ПолучитьИдентификатор());
   КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗапуститьВПроизводствоНаСервере(Документ)
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.МаршрутнаяКарта") Тогда
		Если Документ.Линейка.ВидЛинейки = Перечисления.ВидыЛинеек.Продукция Тогда
		МТК = Документ.ПолучитьОбъект();
		МТК.Статус = 4;
		МТК.Записать(РежимЗаписиДокумента.Проведение);
		Возврат;
		КонецЕсли; 	
	КонецЕсли;
Сообщить("Выберите МТК линейки производства продукции!");
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьВПроизводство(Команда)
	Если Элементы.ДеревоМТК.ТекущиеДанные.Количество <> Элементы.ДеревоМТК.ТекущиеДанные.КоличествоВыпущено Тогда
		Если Вопрос("Требуемое количество по МТК продукции не равно количеству выпущенного канбана. 
					|Вы уверены, что хотите запустить МТК продукции в производство?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;
		КонецЕсли; 
	КонецЕсли; 
ЗапуститьВПроизводствоНаСервере(Элементы.ДеревоМТК.ТекущиеДанные.Документ);
Обновить(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНаличиеПФНаСкладе(Команда)
	Если ОткрытьФормуМодально("Обработка.РабочееМестоУД_МастерДД.Форма.ПроверкаНаличияПФ",Новый Структура("МТК,ВидКанбана",Элементы.ДеревоМТК.ТекущиеДанные.Документ,Объект.ВидКанбана)) <> Неопределено Тогда
	Обновить(Неопределено);
	КонецЕсли;  
КонецПроцедуры
