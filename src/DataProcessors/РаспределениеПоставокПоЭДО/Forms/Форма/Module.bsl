
&НаСервере
Процедура СозданиеТаблицыНезакрытыхЗаказовПоставщику()
Запрос = Новый Запрос;
СписокМПЗ = Новый СписокЗначений;

	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	СписокМПЗ.Добавить(ТЧ.МПЗ);
	КонецЦикла;
ТаблицаЗаказов.Очистить(); 
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику,
	|	ЗаказыПоставщикамОстатки.МПЗ,
	|	ЗаказыПоставщикамОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки КАК ЗаказыПоставщикамОстатки
	|ГДЕ
	|	ЗаказыПоставщикамОстатки.Контрагент = &Контрагент
	|	И ЗаказыПоставщикамОстатки.МПЗ В(&СписокМПЗ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Дата";
Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
Запрос.УстановитьПараметр("СписокМПЗ", СписокМПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаЗаказов.Добавить();
	ТЧ.ЗаказПоставщику = ВыборкаДетальныеЗаписи.ЗаказПоставщику;
	ТЧ.МПЗ = ВыборкаДетальныеЗаписи.МПЗ;
	ТЧ.Остаток = ВыборкаДетальныеЗаписи.КоличествоОстаток;
	КонецЦикла;
КонецПроцедуры

&НаСервере            
Функция ПолучитьСоздатьГТД(Страна,ГТД)
НомерГТД = Справочники.НомераГТД.НайтиПоНаименованию(СокрЛП(ГТД));
	Если НомерГТД.Пустая() Тогда
	НомерГТД = Справочники.НомераГТД.СоздатьЭлемент();
	НомерГТД.Наименование = ГТД;
	НомерГТД.Страна = Страна;
	НомерГТД.ДатаВнесения = ТекущаяДата();
	НомерГТД.Записать();
	Возврат(НомерГТД.Ссылка);
	Иначе
	Возврат(НомерГТД);
	КонецЕсли; 	
КонецФункции

&НаСервере
Процедура РаспределитьНаСервере()
Объект.РаспределённыеМПЗ.Очистить();
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		Если ТЧ.Остаток <= 0 Тогда
		Продолжить;
		КонецЕсли; 
	ВыборкаЗаказов = ТаблицаЗаказов.НайтиСтроки(Новый Структура("МПЗ",ТЧ.МПЗ));
		Если ВыборкаЗаказов.Количество() > 0 Тогда
			Для к = 0 по ВыборкаЗаказов.Количество()-1 Цикл
			Заказ = ВыборкаЗаказов[к];	
				Если Заказ.Остаток >= ТЧ.Остаток Тогда
				Заказ.Остаток = Заказ.Остаток - ТЧ.Остаток;
				ТЧ_МПЗ = Объект.РаспределённыеМПЗ.Добавить();
				ТЧ_МПЗ.МПЗ = ТЧ.МПЗ;
				ТЧ_МПЗ.Количество = ТЧ.Остаток;
				ТЧ_МПЗ.Цена = ТЧ.Цена;
				ТЧ_МПЗ.ЗаказПоставщику = Заказ.ЗаказПоставщику;
				ТЧ_МПЗ.ГТД = ПолучитьСоздатьГТД(Справочники.СтраныМира.НайтиПоНаименованию(ТЧ.Страна,Истина),ТЧ.ГТД);
				ТЧ.Остаток = 0;
				Прервать;
				ИначеЕсли Заказ.Остаток > 0 Тогда
				КолВЗаказе = Заказ.Остаток;
				ТЧ.Остаток = ТЧ.Остаток - КолВЗаказе;			
				Заказ.Остаток = 0;
				ТЧ_МПЗ = Объект.РаспределённыеМПЗ.Добавить();
				ТЧ_МПЗ.МПЗ = ТЧ.МПЗ;
				ТЧ_МПЗ.Количество = КолВЗаказе;
				ТЧ_МПЗ.Цена = ТЧ.Цена;
				ТЧ_МПЗ.ЗаказПоставщику = Заказ.ЗаказПоставщику;
				ТЧ_МПЗ.ГТД = ПолучитьСоздатьГТД(Справочники.СтраныМира.НайтиПоНаименованию(ТЧ.Страна,Истина),ТЧ.ГТД);
				КонецЕсли; 
			КонецЦикла;
		КонецЕсли; 
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура Распределить(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	Состояние("Обработка...",,"Создание таблицы незакрытых заказов поставщику...");
	СозданиеТаблицыНезакрытыхЗаказовПоставщику();
	Состояние("Обработка...",,"Распределение МПЗ по заказам поставщикам...");	
	РаспределитьНаСервере();
		Если Элементы.ТабличнаяЧасть.ТекущаяСтрока <> Неопределено Тогда
		Элементы.РаспределённыеМПЗ.ОтборСтрок = Новый ФиксированнаяСтруктура("МПЗ", Элементы.ТабличнаяЧасть.ТекущиеДанные.МПЗ);
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущаяСтрока <> Неопределено Тогда
	Элементы.РаспределённыеМПЗ.ОтборСтрок = Новый ФиксированнаяСтруктура("МПЗ", Элемент.ТекущиеДанные.МПЗ); 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УдалитьРаспределённыеМПЗ(МПЗ)
МассивСтрок = Объект.РаспределённыеМПЗ.НайтиСтроки(Новый Структура("МПЗ",МПЗ)); 
	Для каждого Стр Из МассивСтрок Цикл 
	Объект.РаспределённыеМПЗ.Удалить(Стр); 
	КонецЦикла;  
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПередУдалением(Элемент, Отказ)
УдалитьРаспределённыеМПЗ(Элемент.ТекущиеДанные.МПЗ);
КонецПроцедуры

&НаСервере
Функция СоздатьДокумент(ЗаказПоставщику,ТЗ)
	Попытка
	Поступление = Документы.ПоступлениеМПЗ.СоздатьДокумент();
	Поступление.Дата = ТекущаяДата();
	Поступление.Автор = ПараметрыСеанса.Пользователь;
	Поступление.ДокументОснование = ЗаказПоставщику;	
	Поступление.Подразделение = Объект.МестоХранения.Подразделение;
	Поступление.УстановитьНовыйНомер(ПрисвоитьПрефикс(Объект.МестоХранения.Подразделение));
	Поступление.МестоХранения = Объект.МестоХранения;
	Поступление.Контрагент = ЗаказПоставщику.Контрагент;
	Поступление.Договор = ЗаказПоставщику.Договор;
	Поступление.Курс = ЗаказПоставщику.Курс;
	Поступление.НомерДокВходящий = СокрЛП(Объект.НомерДокВходящий); 
	Поступление.ДатаДокВходящий = СокрЛП(Объект.ДатаДокВходящий);
		Если Значениезаполнено(Объект.НомерДокВходящий) Тогда
		Поступление.Комментарий = "Создан на основании ЭД № " + СокрЛП(Объект.НомерДокВходящий) + " от "+Объект.ДатаДокВходящий;
		КонецЕсли; 
			Для каждого ТЧ Из ТЗ Цикл
			ТЧПП = Поступление.ТабличнаяЧасть.Добавить();
			ТЧПП.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
			ТЧПП.МПЗ = ТЧ.МПЗ;	
			ТЧПП.ЕдиницаИзмерения = ПолучитьОсновнуюЕдиницуИзмеренияПоБазовой(ТЧ.МПЗ);
			ТЧПП.НЦ = ТЧ.НЦ;
			ТЧПП.Количество = ТЧ.Количество;
			ТЧПП.Цена = ТЧ.Цена;
			ТЧПП.Сумма = ТЧ.Цена*ТЧ.Количество;
				Если Не ЗаказПоставщику.Договор.БезНДС Тогда
				ТЧПП.СтавкаНДС = Константы.ОсновнаяСтавкаНДС.Получить();
				ТЧПП.НДС = ТЧПП.Сумма*ТЧПП.СтавкаНДС.Ставка/100;
				ТЧПП.Всего = ТЧПП.Сумма + ТЧПП.НДС;				
				Иначе
				ТЧПП.Всего = ТЧПП.Сумма; 	
				КонецЕсли;
			ТЧПП.ГТД = ТЧ.ГТД;
			КонецЦикла;	
    Поступление.Записать(РежимЗаписиДокумента.Запись);
	Возврат(Поступление.Ссылка);
	Исключение
	Сообщить(ОписаниеОшибки());
	Возврат(Неопределено);
	КонецПопытки;
КонецФункции
                           
&НаСервере
Функция ПолучитьНЦ(ЗаказПоставщику,МПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПоставщикуТабличнаяЧасть.МПЗ КАК МПЗ,
	|	ЗаказПоставщикуТабличнаяЧасть.НЦ КАК НЦ
	|ИЗ
	|	Документ.ЗаказПоставщику.ТабличнаяЧасть КАК ЗаказПоставщикуТабличнаяЧасть
	|ГДЕ
	|	ЗаказПоставщикуТабличнаяЧасть.Ссылка = &Ссылка
	|	И ЗаказПоставщикуТабличнаяЧасть.МПЗ = &МПЗ";
Запрос.УстановитьПараметр("МПЗ", МПЗ);
Запрос.УстановитьПараметр("Ссылка", ЗаказПоставщику);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.НЦ);
	КонецЦикла;
Возврат(Ложь);
КонецФункции

&НаСервере
Процедура СоздатьДокументыНаСервере()
ТЗ = Новый ТаблицаЗначений;

ТЗ.Колонки.Добавить("Идентификатор");
ТЗ.Колонки.Добавить("МПЗ");
ТЗ.Колонки.Добавить("Количество");
ТЗ.Колонки.Добавить("Цена");
ТЗ.Колонки.Добавить("ГТД");
ТЗ.Колонки.Добавить("НЦ");

Объект.РаспределённыеМПЗ.Сортировать("ЗаказПоставщику,МПЗ");
ТекЗаказ = Неопределено;
	Для каждого ТЧ Из Объект.РаспределённыеМПЗ Цикл	
		Если ТекЗаказ <> ТЧ.ЗаказПоставщику Тогда
			Если ТекЗаказ <> Неопределено Тогда
			Результат = СоздатьДокумент(ТекЗаказ,ТЗ);
				Если Результат <> Неопределено Тогда
					Для Каждого ТЧ_ТЗ Из ТЗ Цикл	
					Стр = Объект.РаспределённыеМПЗ.НайтиПоИдентификатору(ТЧ_ТЗ.Идентификатор);
					Стр.ПоступлениеМПЗ = Результат;
					КонецЦикла; 			
				КонецЕсли;
			ТЗ.Очистить();
			КонецЕсли;
		ТекЗаказ = ТЧ.ЗаказПоставщику;
		КонецЕсли; 
	ТЧ_МПЗ = ТЗ.Добавить();
	ТЧ_МПЗ.Идентификатор = ТЧ.ПолучитьИдентификатор();
	ТЧ_МПЗ.МПЗ = ТЧ.МПЗ;
	ТЧ_МПЗ.Количество = ТЧ.Количество;
	ТЧ_МПЗ.Цена = ТЧ.Цена;
	ТЧ_МПЗ.ГТД = ТЧ.ГТД;
	ТЧ_МПЗ.НЦ = ПолучитьНЦ(ТЧ.ЗаказПоставщику,ТЧ.МПЗ);
	КонецЦикла;
		Если ТекЗаказ <> Неопределено Тогда	
		Результат = СоздатьДокумент(ТекЗаказ,ТЗ);
			Если Результат <> Неопределено Тогда
				Для Каждого ТЧ_ТЗ Из ТЗ Цикл	
				Стр = Объект.РаспределённыеМПЗ.НайтиПоИдентификатору(ТЧ_ТЗ.Идентификатор);
				Стр.ПоступлениеМПЗ = Результат;
				КонецЦикла;			
			КонецЕсли;
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументы(Команда) 
СоздатьДокументыНаСервере();
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоМПЗ(МПЗ)
КоличествоИтого = 0;
	Для каждого ТЧ Из Объект.РаспределённыеМПЗ Цикл
		Если ТЧ.МПЗ = МПЗ Тогда	
		КоличествоИтого = КоличествоИтого + ТЧ.Количество;
		КонецЕсли; 
	КонецЦикла;
Возврат(КоличествоИтого);
КонецФункции

&НаСервере
Функция ПечатьНаСервере()
ТабДок = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблМПЗ = Макет.ПолучитьОбласть("МПЗ");
ОблДокумент = Макет.ПолучитьОбласть("Документ");
ОблКонец = Макет.ПолучитьОбласть("Конец");
ТабДок.Вывести(ОблШапка);
	Для каждого ТЧ_МПЗ Из Объект.ТабличнаяЧасть Цикл
	ОблМПЗ.Параметры.МПЗ = ТЧ_МПЗ.МПЗ;
	ОблМПЗ.Параметры.Количество = ПолучитьКоличествоМПЗ(ТЧ_МПЗ.МПЗ);
	ТабДок.Вывести(ОблМПЗ);
		Для каждого ТЧ Из Объект.РаспределённыеМПЗ Цикл
			Если ТЧ_МПЗ.МПЗ = ТЧ.МПЗ Тогда	
			ОблДокумент.Параметры.ЗаказПоставщику = ТЧ.ЗаказПоставщику;
			ОблДокумент.Параметры.Количество = ТЧ.Количество;
			ОблДокумент.Параметры.ПоступлениеМПЗПрочее = ТЧ.ПоступлениеМПЗПрочее;
			ТабДок.Вывести(ОблДокумент); 
			КонецЕсли; 
		КонецЦикла;
	КонецЦикла;
ОблКонец.Параметры.Количество = Объект.РаспределённыеМПЗ.Итог("Количество");
ТабДок.Вывести(ОблКонец);
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура Печать(Команда)
ТД = ПечатьНаСервере();
ТД.Показать("Распределение поставок по заказам поставщикам");
КонецПроцедуры

&НаСервере
Процедура ПолучитьДокументЭДОНаСервере()
Объект.ТабличнаяЧасть.Очистить();
БазаБух = ОбщийМодульСинхронизации.УстановитьCOMСоединение(БазаДанных);
	Если БазаБух = Неопределено Тогда
	Сообщить("Не открыто соединение с бух. базой!");
	КонецЕсли;
Запрос = БазаБух.NewObject("Запрос");

Запрос.Текст = 
	"ВЫБРАТЬ
	|	СообщениеЭДО.Ссылка КАК Ссылка,
	|	СообщениеЭДО.ЭлектронныйДокумент.Номер КАК ЭлектронныйДокументНомер,
	|	СообщениеЭДО.ЭлектронныйДокумент.НомерДокумента КАК ЭлектронныйДокументНомерДокумента,
	|	СообщениеЭДО.ЭлектронныйДокумент.Дата КАК ЭлектронныйДокументДата,
	|	СообщениеЭДО.ЭлектронныйДокумент.ВидДокумента КАК ЭлектронныйДокументВидДокумента,
	|	СообщениеЭДО.ОсновнойФайл КАК ОсновнойФайл
	|ИЗ
	|	Документ.СообщениеЭДО КАК СообщениеЭДО
	|ГДЕ
	|	СообщениеЭДО.ЭлектронныйДокумент.НомерДокумента = &НомерДокумента
	|	И СообщениеЭДО.ЭлектронныйДокумент.Контрагент.ИНН = &ИНН
	|	И СообщениеЭДО.Направление = &Направление
	|	И СообщениеЭДО.ТипЭлементаРегламента = &ТипЭлементаРегламента
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭлектронныйДокументДата";
Запрос.УстановитьПараметр("НомерДокумента", СокрЛП(Объект.НомерДокВходящий));
Запрос.УстановитьПараметр("ИНН", СокрЛП(Объект.Контрагент.ИНН)); 
Запрос.УстановитьПараметр("Направление", БазаБух.Перечисления.НаправленияЭДО.Входящий);
Запрос.УстановитьПараметр("ТипЭлементаРегламента", БазаБух.Перечисления.ТипыЭлементовРегламентаЭДО.ИнформацияОтправителя);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ПутьКФайлу = "\\sd-bgd.bogo.owen\files_for_sd\"+ВыборкаДетальныеЗаписи.ОсновнойФайл.ПутьКФайлу;
	Объект.ДатаДокВходящий = ВыборкаДетальныеЗаписи.ЭлектронныйДокументДата;
	КонецЦикла;
КонецПроцедуры
            
&НаСервере
Процедура СопоставитьНоменклатуру()
БазаБух = ОбщийМодульСинхронизации.УстановитьCOMСоединение(БазаДанных);
	Если БазаБух = Неопределено Тогда
	Сообщить("Не открыто соединение с бух. базой!");
	КонецЕсли;
Запрос = БазаБух.NewObject("Запрос");
               
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НоменклатураКонтрагентов.Номенклатура.Наименование КАК НоменклатураНаименование
		|ИЗ
		|	Справочник.НоменклатураКонтрагентов КАК НоменклатураКонтрагентов
		|ГДЕ
		|	НоменклатураКонтрагентов.ВладелецНоменклатуры.ИНН = &ИНН
		|	И НоменклатураКонтрагентов.НаименованиеНоменклатуры = &НаименованиеНоменклатуры";
	Запрос.УстановитьПараметр("ИНН", СокрЛП(Объект.Контрагент.ИНН));
	Запрос.УстановитьПараметр("НаименованиеНоменклатуры", СокрЛП(ТЧ.НаименованиеПоставщика));
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТЧ.МПЗ = Справочники.Материалы.НайтиПоНаименованию(СокрЛП(ВыборкаДетальныеЗаписи.НоменклатураНаименование),Истина);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьТовары()
ЧтениеТекста = Новый ЧтениеТекста(СокрЛП(ПутьКФайлу));

Стр = ЧтениеТекста.ПрочитатьСтроку();	
	Пока Стр <> Неопределено Цикл 
		Если Найти(Стр,"НаимТов=") > 0 Тогда 
		ТЧ = Объект.ТабличнаяЧасть.Добавить();
		Товар = Сред(Стр,Найти(Стр,"НаимТов=")+9);
		Товар = Лев(Товар,Найти(Товар,"""")-1);
		Количество = Сред(Стр,Найти(Стр,"КолТов=")+8);
		Количество = Лев(Количество,Найти(Количество,"""")-1);
		Цена = Сред(Стр,Найти(Стр,"ЦенаТов=")+9);
		Цена = Лев(Цена,Найти(Цена,"""")-1);                         
		ТЧ.НаименованиеПоставщика = СтрЗаменить(Товар,"&quot;","""");
		ТЧ.Количество = Число(Количество);
		ТЧ.Остаток = ТЧ.Количество;
		ТЧ.Цена = Число(Цена);
		ИначеЕсли Найти(Стр,"НомерТД=") > 0 Тогда
		ТД = Сред(Стр,Найти(Стр,"НомерТД=")+10);
		ТД = Лев(ТД,Найти(ТД,"""")-1);
       	ТЧ.ГТД = ТД;
		ИначеЕсли Найти(Стр,"КрНаимСтрПр=") > 0 Тогда
		Страна = Сред(Стр,Найти(Стр,"КрНаимСтрПр=")+13);
		Страна = Лев(Страна,Найти(Страна,"""")-1);
       	ТЧ.Страна = Страна;
		КонецЕсли; 
    Стр = ЧтениеТекста.ПрочитатьСтроку();
	КонецЦикла;
ЧтениеТекста.Закрыть();
	Если Объект.ТабличнаяЧасть.Количество() > 0 Тогда
	Состояние("Обработка...",,"Поиск соответствия номенклатуры...");
	СопоставитьНоменклатуру();
	КонецЕсли;
КонецПроцедуры
    
&НаСервере
Процедура ПроверитьРаспределение()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеМПЗТабличнаяЧасть.Ссылка КАК Ссылка,
	|	ПоступлениеМПЗТабличнаяЧасть.МПЗ КАК МПЗ,
	|	ПоступлениеМПЗТабличнаяЧасть.Количество КАК Количество,
	|	ПоступлениеМПЗТабличнаяЧасть.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПоступлениеМПЗТабличнаяЧасть.Цена КАК Цена,
	|	ПоступлениеМПЗТабличнаяЧасть.ГТД КАК ГТД
	|ИЗ
	|	Документ.ПоступлениеМПЗ.ТабличнаяЧасть КАК ПоступлениеМПЗТабличнаяЧасть
	|ГДЕ
	|	ПоступлениеМПЗТабличнаяЧасть.Ссылка.НомерДокВходящий = &НомерДокВходящий
	|	И ПоступлениеМПЗТабличнаяЧасть.Ссылка.ДатаДокВходящий = &ДатаДокВходящий
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоступлениеМПЗТабличнаяЧасть.Ссылка.Дата";
Запрос.УстановитьПараметр("НомерДокВходящий", СокрЛП(Объект.НомерДокВходящий));
Запрос.УстановитьПараметр("ДатаДокВходящий", Объект.ДатаДокВходящий);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Выборка = Объект.ТабличнаяЧасть.НайтиСтроки(Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.МПЗ));
		Если Выборка.Количество() > 0 Тогда 
		Количество = ПолучитьБазовоеКоличество(ВыборкаДетальныеЗаписи.Количество,ВыборкаДетальныеЗаписи.ЕдиницаИзмерения);
		Выборка[0].Остаток = Выборка[0].Остаток - Количество;			
		ТЧ_МПЗ = Объект.РаспределённыеМПЗ.Добавить();
		ТЧ_МПЗ.МПЗ = ВыборкаДетальныеЗаписи.МПЗ;
		ТЧ_МПЗ.Количество = Количество;
		ТЧ_МПЗ.Цена = ВыборкаДетальныеЗаписи.Цена;
		ТЧ_МПЗ.ЗаказПоставщику = ВыборкаДетальныеЗаписи.Ссылка.ДокументОснование;
		ТЧ_МПЗ.ГТД = ВыборкаДетальныеЗаписи.ГТД;
		ТЧ_МПЗ.ПоступлениеМПЗ = ВыборкаДетальныеЗаписи.Ссылка;		
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзБухБазы(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	ПутьКФайлу = "";
	Состояние("Обработка...",,"Получение файла XML...");
	ПолучитьДокументЭДОНаСервере();
		Если ЗначениеЗаполнено(ПутьКФайлу) Тогда
		Состояние("Обработка...",,"Чтение файла XML...");
		ПолучитьТовары();
		ПроверитьРаспределение();
		Иначе
		Сообщить("Не найден документ в бухгалтерской базе!");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
