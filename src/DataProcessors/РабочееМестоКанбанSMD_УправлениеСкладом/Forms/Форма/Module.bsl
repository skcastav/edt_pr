
&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаСервере
Функция НайтиМПЗ(НаименованиеSMD,Код)
	Для каждого ТЧ Из ТаблицаМПЗ Цикл
		Если СокрЛП(ТЧ.МПЗ.НаименованиеSMD) = НаименованиеSMD Тогда
			Если Найти(ТЧ.Код,Код) = 0 Тогда
			ТЧ.Код = ТЧ.Код + Код + ";";
			ТЧ.КоличествоКатушек = ТЧ.КоличествоКатушек + 1;
			ТЧ.КоличествоПеремещение = ТЧ.Количество;			
			Возврат(ТЧ.ПолучитьИдентификатор());
			Иначе
			Сообщить("Код уже отсканирован!");
			Возврат(Неопределено);
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
Возврат(Неопределено); 
КонецФункции

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
		Если Найти(Данные,"*") > 0 Тогда
		Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,"$");
		Результат = НайтиМПЗ(Сред(Массив[0],2),Массив[1]);	
			Если Результат <> Неопределено Тогда	
			Элементы.ТаблицаМПЗ.ТекущаяСтрока = Результат;
			Иначе
			Предупреждение("МПЗ не найден!");
			КонецЕсли; 
		Иначе
		Сообщить("Неверный QRCode!");
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПолучитьПотребностьИзПП(ТЗ)
Запрос = Новый Запрос;
ЗапросЭП = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Ссылка КАК Ссылка,
	|	ПроизводственноеЗадание.Линейка КАК Линейка
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование.Статус = 1
	|	И ПроизводственноеЗадание.Линейка В(&СписокЛинеек)";
Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ЗапросЭП.Текст = 
		"ВЫБРАТЬ
		|	ЭтапыПроизводственныхЗаданий.ПЗ.ДокументОснование КАК МТК
		|ИЗ
		|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
		|ГДЕ
		|	ЭтапыПроизводственныхЗаданий.ПЗ = &ПЗ
		|	И ЭтапыПроизводственныхЗаданий.РабочееМесто.Код = 3
		|	И ЭтапыПроизводственныхЗаданий.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	ЗапросЭП.УстановитьПараметр("ПЗ",ВыборкаДетальныеЗаписи.Ссылка);
	РезультатЗапроса = ЗапросЭП.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда	
		ВыборкаПП = Документы.ПередачаВПроизводство.Выбрать(,,Новый Структура("ДокументОснование",ВыборкаДетальныеЗаписи.Ссылка.ДокументОснование));
			Пока ВыборкаПП.Следующий() Цикл	
			ПП = ВыборкаПП.Ссылка; 
				Для каждого ТЧ Из ПП.Спецификация Цикл
				флНайден = Ложь;
					Для каждого Линейка Из СписокЛинеек Цикл
						Если ТЧ.МПЗ.СтационарныеПитатели.Найти(Линейка.Значение,"Линейка") <> Неопределено Тогда
						флНайден = Истина;
						Прервать;						 			
						КонецЕсли;	
					КонецЦикла;
						Если Не флНайден Тогда
						Выборка = ТЗ.НайтиСтроки(Новый Структура("МПЗ",ТЧ.МПЗ));
							Если Выборка.Количество() = 0 Тогда
							ТЧ_МПЗ = ТЗ.Добавить();
							ТЧ_МПЗ.МПЗ = ТЧ.МПЗ;
							ТЧ_МПЗ.КоличествоТребуется = ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения);
							Иначе
							Выборка[0].КоличествоТребуется = Выборка[0].КоличествоТребуется + ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения);
							КонецЕсли;						 			
						КонецЕсли;				
				КонецЦикла; 
			КонецЦикла;  
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПолучитьПотребностьПоОстановленным(ТЗ)
Запрос = Новый Запрос;
ЗапросЭП = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Ссылка КАК Ссылка,
	|	ПроизводственноеЗадание.Линейка КАК Линейка
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование.Статус = 2
	|	И ПроизводственноеЗадание.Линейка В(&СписокЛинеек)";
Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ЗапросЭП.Текст = 
		"ВЫБРАТЬ
		|	ЭтапыПроизводственныхЗаданий.ПЗ.ДокументОснование КАК МТК
		|ИЗ
		|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
		|ГДЕ
		|	ЭтапыПроизводственныхЗаданий.ПЗ = &ПЗ
		|	И ЭтапыПроизводственныхЗаданий.РабочееМесто.Код = 3
		|	И ЭтапыПроизводственныхЗаданий.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	ЗапросЭП.УстановитьПараметр("ПЗ",ВыборкаДетальныеЗаписи.Ссылка);
	РезультатЗапроса = ЗапросЭП.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда	
		ВыборкаПП = Документы.ПередачаВПроизводство.Выбрать(,,Новый Структура("ДокументОснование",ВыборкаДетальныеЗаписи.Ссылка.ДокументОснование));
			Пока ВыборкаПП.Следующий() Цикл	
			ПП = ВыборкаПП.Ссылка; 
				Для каждого ТЧ Из ПП.Спецификация Цикл
				флНайден = Ложь;
					Для каждого Линейка Из СписокЛинеек Цикл
						Если ТЧ.МПЗ.СтационарныеПитатели.Найти(Линейка.Значение,"Линейка") <> Неопределено Тогда
						флНайден = Истина;
						Прервать;						 			
						КонецЕсли;	
					КонецЦикла;
						Если Не флНайден Тогда
						Выборка = ТЗ.НайтиСтроки(Новый Структура("МПЗ",ТЧ.МПЗ));
							Если Выборка.Количество() = 0 Тогда
							ТЧ_МПЗ = ТЗ.Добавить();
							ТЧ_МПЗ.МПЗ = ТЧ.МПЗ;
							ТЧ_МПЗ.КоличествоТребуется = ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения);
							Иначе
							Выборка[0].КоличествоТребуется = Выборка[0].КоличествоТребуется + ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения);
							КонецЕсли;						 			
						КонецЕсли;				
				КонецЦикла; 
			КонецЦикла;  
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПолучитьСписокНестационарныхПитателей()
ТЗ = Новый ТаблицаЗначений;

ТЗ.Колонки.Добавить("ГруппаМПЗ");
ТЗ.Колонки.Добавить("МПЗ");
ТЗ.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3)));
ТЗ.Колонки.Добавить("КоличествоТребуется",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(14,3)));

ТаблицаМПЗ.Очистить();
ТабДок.Очистить();

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблМПЗ = Макет.ПолучитьОбласть("МПЗ");
ОблКонец = Макет.ПолучитьОбласть("Конец");
	
ОблШапка.Параметры.ДатаСоздания = ТекущаяДата();
ОблШапка.Параметры.Линейка = СписокЛинеек;
ТабДок.Вывести(ОблШапка);

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОстатки.МПЗ КАК МПЗ,
	|	МестаХраненияОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.МестаХранения.Остатки(&НаДату, МестоХранения = &МестоХранения) КАК МестаХраненияОстатки
	|ГДЕ
	|	МестаХраненияОстатки.ВидМПЗ = &ВидМПЗ";
	Если СписокГруппМПЗ.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И Не МестаХраненияОстатки.МПЗ.Ссылка В ИЕРАРХИИ(&СписокГруппМПЗ)";
	Запрос.УстановитьПараметр("СписокГруппМПЗ", СписокГруппМПЗ);
	КонецЕсли; 
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("МестоХранения", СписокЛинеек[0].Значение.МестоХраненияКанбанов);
Запрос.УстановитьПараметр("ВидМПЗ", Перечисления.ВидыМПЗ.Материалы);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	флНайден = Ложь;
		Для каждого Линейка Из СписокЛинеек Цикл
			Если ВыборкаДетальныеЗаписи.МПЗ.СтационарныеПитатели.Найти(Линейка.Значение,"Линейка") <> Неопределено Тогда
			флНайден = Истина;
			Прервать;						 			
			КонецЕсли;	
		КонецЦикла;
			Если Не флНайден Тогда
			ТЧ = ТЗ.Добавить();
			ТЧ.ГруппаМПЗ = ПолучитьВерхнегоРодителя(ВыборкаДетальныеЗаписи.МПЗ);
			ТЧ.МПЗ = ВыборкаДетальныеЗаписи.МПЗ;
			ТЧ.Количество = ВыборкаДетальныеЗаписи.КоличествоОстаток;
			КонецЕсли;  	 
	КонецЦикла;
ПолучитьПотребностьИзПП(ТЗ);
ПолучитьПотребностьПоОстановленным(ТЗ);
ТЗ.Сортировать("ГруппаМПЗ,МПЗ");
НомСтр = 1;
	Для каждого ТЧ Из ТЗ Цикл
		Если ТЧ.КоличествоТребуется > 0 Тогда
		Продолжить;
		КонецЕсли;
	ТЧ_МПЗ = ТаблицаМПЗ.Добавить();
	ТЧ_МПЗ.МПЗ = ТЧ.МПЗ;
	ТЧ_МПЗ.Количество = ТЧ.Количество;	
	ОблМПЗ.Параметры.НомСтр = НомСтр;
	ОблМПЗ.Параметры.ГруппаМПЗ = ТЧ.ГруппаМПЗ;		
	ОблМПЗ.Параметры.МПЗ = ТЧ.МПЗ;
	ОблМПЗ.Параметры.ЕдиницаИзмерения = ТЧ.МПЗ.ЕдиницаИзмерения;
	ОблМПЗ.Параметры.КолУчёт = ТЧ.Количество;
	ЯХ = ОбщийМодульРаботаСРегистрами.ПолучитьЯчейкуХранения(ТЧ.МПЗ,СписокЛинеек[0].Значение.Подразделение.МестоХраненияДополнительный);
		Если ЯХ <> Неопределено Тогда
		ОблМПЗ.Параметры.Стеллаж = ЯХ.Стеллаж;
		ОблМПЗ.Параметры.Стойка = ЯХ.Стойка;
		ОблМПЗ.Параметры.Полка = ЯХ.Полка;
		ОблМПЗ.Параметры.Ячейка = ЯХ.Ячейка;
		Иначе
		ОблМПЗ.Параметры.Стеллаж = "";
		ОблМПЗ.Параметры.Стойка = "";
		ОблМПЗ.Параметры.Полка = "";
		ОблМПЗ.Параметры.Ячейка = "";
		КонецЕсли;
	ТабДок.Вывести(ОблМПЗ);
	НомСтр = НомСтр + 1;	
	КонецЦикла; 
ТабДок.Вывести(ОблКонец);
ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.АвтоМасштаб = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСписок(Команда)
ПолучитьСписокНестационарныхПитателей();
КонецПроцедуры

&НаСервере
Функция СоздатьДвижениеМПЗНестационарныеПитатели()
Линейка = СписокЛинеек[0].Значение;
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;	
	Перемещение = Документы.ДвижениеМПЗ.СоздатьДокумент();
	Перемещение.Дата = ТекущаяДата()+1;
	Перемещение.УстановитьНовыйНомер(ПрисвоитьПрефикс(Линейка.Подразделение));
	Перемещение.Автор = ПараметрыСеанса.Пользователь;
	Перемещение.Подразделение = Линейка.Подразделение;
	Перемещение.МестоХранения = Линейка.МестоХраненияКанбанов;
	Перемещение.МестоХраненияВ = Линейка.Подразделение.МестоХраненияДополнительный;
		Для каждого ТЧ Из ТаблицаМПЗ Цикл
			Если ТЧ.КоличествоПеремещение > 0 Тогда
			ТЧ_МПЗ = Перемещение.ТабличнаяЧасть.Добавить();
			ТЧ_МПЗ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
			ТЧ_МПЗ.МПЗ = ТЧ.МПЗ;
			ТЧ_МПЗ.Количество = ТЧ.КоличествоПеремещение/ТЧ.МПЗ.ОсновнаяЕдиницаИзмерения.Коэффициент;
			ТЧ_МПЗ.ЕдиницаИзмерения =  ТЧ.МПЗ.ОсновнаяЕдиницаИзмерения;	
			КонецЕсли;
		КонецЦикла;
			Если Перемещение.ТабличнаяЧасть.Количество() > 0 Тогда
			Перемещение.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли; 	
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Неопределено);
	КонецПопытки;
Возврат(Перемещение.Ссылка);
КонецФункции

&НаСервере
Процедура УдалитьОбработанныеСтроки()
СписокСтрок = Новый СписокЗначений;

	Для каждого ТЧ Из ТаблицаМПЗ Цикл
		Если ТЧ.КоличествоПеремещение > 0 Тогда
		СписокСтрок.Добавить(ТЧ);
		КонецЕсли; 
	КонецЦикла;
		Для каждого Стр Из СписокСтрок Цикл 
		ТаблицаМПЗ.Удалить(Стр.Значение); 
		КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДвижениеМПЗ(Команда)
Результат = СоздатьДвижениеМПЗНестационарныеПитатели();	
	Если Результат <> Неопределено Тогда 		
	ОткрытьФорму("Документ.ДвижениеМПЗ.ФормаОбъекта",Новый Структура("Ключ",Результат));
	УдалитьОбработанныеСтроки();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМПЗКоличествоПотериПриИзменении(Элемент)
Элементы.ТаблицаМПЗ.ТекущиеДанные.КоличествоПеремещение = Элементы.ТаблицаМПЗ.ТекущиеДанные.Количество - Элементы.ТаблицаМПЗ.ТекущиеДанные.КоличествоПотери;
КонецПроцедуры
