
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Объект.НаДату = НачалоМесяца(ТекущаяДата());
ВидЭлемента1 = Перечисления.ВидыЭлементовНормРасходов.Набор;
ВидЭлемента2 = Перечисления.ВидыЭлементовНормРасходов.ТехОперация;
	Если ЭтаФорма.Параметры.Свойство("Спецификация") Тогда
	ДобавитьСпецификациюНаСервере(ЭтаФорма.Параметры.Спецификация);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ТаблицаТехОперацийСпецификации.Параметры.УстановитьЗначениеПараметра("ВидЭлемента1",ВидЭлемента1);
ТаблицаТехОперацийСпецификации.Параметры.УстановитьЗначениеПараметра("ВидЭлемента2",ВидЭлемента2);
ТаблицаТехОперацийСпецификации.Параметры.УстановитьЗначениеПараметра("МПЗ",Неопределено);
КонецПроцедуры

&НаСервере
Процедура ДобавитьВходящиеУзлы(ЭтапСпецификации,Стр)
ВыборкаДетальныеЗаписи =  ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н(ЭтапСпецификации,ТекущаяДата());
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Набор Тогда
		ДобавитьВходящиеУзлы(ВыборкаДетальныеЗаписи.Элемент,Стр);
		ИначеЕсли ВыборкаДетальныеЗаписи.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Основа Тогда
		Продолжить;
		Иначе
			Если Не ВыборкаДетальныеЗаписи.Элемент.Канбан.Пустая() Тогда
				Если Не ВыборкаДетальныеЗаписи.Элемент.Канбан.Служебный Тогда
				Продолжить;
				КонецЕсли; 			
			КонецЕсли; 
		СтрПодч = Стр.Строки.Добавить();
		СтрПодч.Спецификация = ВыборкаДетальныеЗаписи.Элемент;
		ДобавитьВходящиеУзлы(ВыборкаДетальныеЗаписи.Элемент,СтрПодч);
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьСпецификациюНаСервере(Спецификация)
тДеревоСпецификаций = РеквизитФормыВЗначение("ДеревоСпецификаций");
Стр = тДеревоСпецификаций.Строки.Добавить();
Стр.Спецификация = Спецификация;
ДобавитьВходящиеУзлы(Спецификация,Стр);
ЗначениеВРеквизитФормы(тДеревоСпецификаций, "ДеревоСпецификаций");
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСпецификацию(Команда)
ВыбСпецификация = Неопределено;
	Если ВвестиЗначение(ВыбСпецификация,"Выберите спецификацию",Тип("СправочникСсылка.Номенклатура")) Тогда
	ДобавитьСпецификациюНаСервере(ВыбСпецификация);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьИзГруппыНаСервере(ГруппаНоменклатуры)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ПометкаУдаления = ЛОЖЬ
	|	И Номенклатура.ЭтоГруппа = ЛОЖЬ
	|	И Номенклатура.Ссылка В ИЕРАРХИИ(&ГруппаНоменклатуры)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура.Наименование";
Запрос.УстановитьПараметр("ГруппаНоменклатуры", ГруппаНоменклатуры);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ДобавитьСпецификациюНаСервере(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзГруппы(Команда)
ГруппаНоменклатуры = Неопределено;
Результат = ОткрытьФормуМодально("Справочник.Номенклатура.ФормаВыбораГруппы");
	Если Результат <> Неопределено Тогда
	ДобавитьИзГруппыНаСервере(Результат);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьИзЛинейкиНаСервере(Линейка)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Номенклатура КАК Номенклатура
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.Статус = 0
	|	И МаршрутнаяКарта.Линейка = &Линейка
	|
	|УПОРЯДОЧИТЬ ПО
	|	МаршрутнаяКарта.Номенклатура.Наименование
	|ИТОГИ ПО
	|	Номенклатура";
Запрос.УстановитьПараметр("Линейка", Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ДобавитьСпецификациюНаСервере(ВыборкаДетальныеЗаписи.Номенклатура);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзЛинейки(Команда)
Линейка = Неопределено;
Результат = ОткрытьФормуМодально("Справочник.Линейки.ФормаВыбора");
	Если Результат <> Неопределено Тогда
	ДобавитьИзЛинейкиНаСервере(Результат);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацийПриАктивизацииСтроки(Элемент)
	Если Элементы.ДеревоСпецификаций.ТекущаяСтрока <> Неопределено Тогда
	ТаблицаТехОперацийСпецификации.Параметры.УстановитьЗначениеПараметра("ВидЭлемента1",ВидЭлемента1);
	ТаблицаТехОперацийСпецификации.Параметры.УстановитьЗначениеПараметра("ВидЭлемента2",ВидЭлемента2);
	ТаблицаТехОперацийСпецификации.Параметры.УстановитьЗначениеПараметра("МПЗ",Элементы.ДеревоСпецификаций.ТекущиеДанные.Спецификация);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьНаборТОНаСервере(Владелец,Спецификация,Количество)
НР = Справочники.НормыРасходов.СоздатьЭлемент();
НР.Владелец = Владелец;
НР.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Набор;
НР.Элемент = Спецификация;
НР.Наименование = "Набор, "+СокрЛП(Спецификация.Наименование);
НР.Записать();
РНР = РегистрыСведений.НормыРасходов.СоздатьМенеджерЗаписи();
РНР.Период = Объект.НаДату;
РНР.Владелец = НР.Владелец;
РНР.Элемент = НР.Элемент;
РНР.НормаРасходов = НР.Ссылка;
РНР.Норма = Количество;
РНР.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНаборТО(Команда)
ВыбСпецификация = ГруппаНоменклатуры;
	Если ВвестиЗначение(ВыбСпецификация,"Выберите набор ТО",Тип("СправочникСсылка.Номенклатура")) Тогда
	Количество = 1;
		Если ВвестиЧисло(Количество,"Введите кол-во",7,3) Тогда		
		ДобавитьНаборТОНаСервере(Элементы.ДеревоСпецификаций.ТекущиеДанные.Спецификация,ВыбСпецификация,Количество);
		ТаблицаТехОперацийСпецификации.Параметры.УстановитьЗначениеПараметра("ВидЭлемента1",ВидЭлемента1);
		ТаблицаТехОперацийСпецификации.Параметры.УстановитьЗначениеПараметра("ВидЭлемента2",ВидЭлемента2);
		ТаблицаТехОперацийСпецификации.Параметры.УстановитьЗначениеПараметра("МПЗ",Элементы.ДеревоСпецификаций.ТекущиеДанные.Спецификация);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьТОНаСервере(Владелец,ТО,Количество)
НР = Справочники.НормыРасходов.СоздатьЭлемент();
НР.Владелец = Владелец;
НР.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.ТехОперация;
НР.Элемент = ТО;
НР.Наименование = "Тех. операция, "+СокрЛП(ТО.Наименование);
НР.Записать();
РНР = РегистрыСведений.НормыРасходов.СоздатьМенеджерЗаписи();
РНР.Период = Объект.НаДату;
РНР.Владелец = НР.Владелец;
РНР.Элемент = НР.Элемент;
РНР.НормаРасходов = НР.Ссылка;
РНР.Норма = Количество;
РНР.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТО(Команда)
ТО = ГруппаТО;
	Если ВвестиЗначение(ТО,"Выберите ТО",Тип("СправочникСсылка.ТехОперации")) <> Неопределено Тогда
	Количество = 1;
		Если ВвестиЧисло(Количество,"Введите кол-во",7,3) Тогда
		ДобавитьТОНаСервере(Элементы.ДеревоСпецификаций.ТекущиеДанные.Спецификация,ТО,Количество);
		ТаблицаТехОперацийСпецификации.Параметры.УстановитьЗначениеПараметра("ВидЭлемента1",ВидЭлемента1);
		ТаблицаТехОперацийСпецификации.Параметры.УстановитьЗначениеПараметра("ВидЭлемента2",ВидЭлемента2);
		ТаблицаТехОперацийСпецификации.Параметры.УстановитьЗначениеПараметра("МПЗ",Элементы.ДеревоСпецификаций.ТекущиеДанные.Спецификация);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОчиститьСписокНаСервере()
тДеревоСпецификаций = РеквизитФормыВЗначение("ДеревоСпецификаций");
тДеревоСпецификаций.Строки.Очистить();
ЗначениеВРеквизитФормы(тДеревоСпецификаций, "ДеревоСпецификаций");
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСписок(Команда)
ОчиститьСписокНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбнулитьНРНаСервере(НР,ВыбДата)
РНР = РегистрыСведений.НормыРасходов.СоздатьМенеджерЗаписи();
РНР.Период = ВыбДата;
РНР.Владелец = НР.Владелец;
РНР.Элемент = НР.Элемент;
РНР.НормаРасходов = НР;
РНР.Норма = 0;
РНР.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ОбнулитьНорму(Команда)
ВыбДата = ТекущаяДата();
	Если ВвестиДату(ВыбДата,"Введите дату обнуления нормы",ЧастиДаты.Дата) Тогда
	ОбнулитьНРНаСервере(Элементы.ТаблицаТехОперацийСпецификации.ТекущиеДанные.Ссылка,ВыбДата);
	Элементы.ТаблицаТехОперацийСпецификации.Обновить();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИзФайлаНаСервере(Наименование)
Номен = Справочники.Номенклатура.НайтиПоНаименованию(Наименование,Истина);
	Если Не Номен.Пустая() Тогда
	тДеревоСпецификаций = РеквизитФормыВЗначение("ДеревоСпецификаций");
	Стр = тДеревоСпецификаций.Строки.Добавить();
	Стр.Спецификация = Номен;
	ЗначениеВРеквизитФормы(тДеревоСпецификаций, "ДеревоСпецификаций");
	Иначе		
	Сообщить(Наименование + " - не найдена в справочнике номенклатуры!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
ОчиститьСписокНаСервере();
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл c номенклатурой");
	Если Результат <> Неопределено Тогда
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок;
	    Для к = 2 по КолСтрок Цикл
		Состояние("Обработка...",к*100/КолСтрок,"Загрузка номенклатуры из файла...");
       	ЗагрузитьИзФайлаНаСервере(СокрЛП(ExcelЛист.Cells(к,1).Value));
	    КонецЦикла;
	Результат.Excel.Quit();
	КонецЕсли;
КонецПроцедуры
