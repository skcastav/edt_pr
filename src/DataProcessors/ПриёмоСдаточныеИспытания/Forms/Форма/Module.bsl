
&НаСервере
Процедура ВыбратьПродукциюНаСервере()
Объект.ТабличнаяЧасть.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Ссылка,
	|	ПроизводственноеЗадание.ДатаГрупповойУпаковки
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.Линейка = &Линейка
	|	И ПроизводственноеЗадание.ВозвратнаяТара = &ВозвратнаяТара
	|	И ПроизводственноеЗадание.ДатаГрупповойУпаковки МЕЖДУ &ДатаНач И &ДатаКон";
Запрос.УстановитьПараметр("Линейка", Объект.Линейка);
Запрос.УстановитьПараметр("ВозвратнаяТара", Строка(Объект.Тара));
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.ДатаВыпуска));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.ДатаВыпуска));
Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	ТЧ = Объект.ТабличнаяЧасть.Добавить();
	ТЧ.ПЗ = Выборка.Ссылка;
	ТЧ.ДатаУпаковки = Выборка.ДатаГрупповойУпаковки;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПродукцию(Команда)
ВыбратьПродукциюНаСервере();
КонецПроцедуры

&НаСервере
Функция ОтправитьНаПСИНаСервере()
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Подразделение = Объект.ТабличнаяЧасть[0].ПЗ.Подразделение;
	Перемещение = Документы.ДвижениеМПЗ.СоздатьДокумент();
	Перемещение.Дата = ТекущаяДата();
	Перемещение.УстановитьНовыйНомер(ПрисвоитьПрефикс(Подразделение));
	Перемещение.Автор = ПараметрыСеанса.Пользователь;
	Перемещение.Подразделение = Подразделение;
	Перемещение.МестоХранения = Объект.Линейка.МестоХраненияГП;
	Перемещение.МестоХраненияВ = Справочники.МестаХранения.НайтиПоКоду("09");
		Для каждого Стр Из Объект.ТабличнаяЧасть Цикл
			Если Стр.Пометка Тогда
			ПЗ = Стр.ПЗ.ПолучитьОбъект();
			ПЗ.ВозвратнаяТара = "";
			ПЗ.Записать(РежимЗаписиДокумента.Запись);
			ТЧ = Перемещение.ТабличнаяЧасть.Добавить();
			ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
			ТЧ.МПЗ = Стр.ПЗ.Изделие;
			ТЧ.Количество = 1;
			ТЧ.ЕдиницаИзмерения =  Стр.ПЗ.Изделие.ОсновнаяЕдиницаИзмерения;			
			КонецЕсли; 			
		КонецЦикла;
			Если Перемещение.ТабличнаяЧасть.Количество() > 0 Тогда
			Перемещение.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
			Сообщить("Ничего не выбрано для перемещения!");
		    ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			Возврат Документы.ДвижениеМПЗ.ПустаяСсылка();
			КонецЕсли;  
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат Документы.ДвижениеМПЗ.ПустаяСсылка();
	КонецПопытки;	
Возврат Перемещение.Ссылка;
КонецФункции

&НаКлиенте
Процедура ОтправитьНаПСИ(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда	
	Ссылка = ОтправитьНаПСИНаСервере();
		Если Не Ссылка.Пустая() Тогда
		ПоказатьОповещениеПользователя("Создание:",,"Создано перемещение на ПСИ!",БиблиотекаКартинок.Пользователь);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПечатьГрупповойУпаковкиНаСервере(ТД)
ТаблицаВыпуска = Новый ТаблицаЗначений;

ТаблицаВыпуска.Колонки.Добавить("Продукция",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
ТаблицаВыпуска.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(9,3)));

Макет = ПолучитьОбщийМакет("ОтчетПоУпаковочнойТаре"); 
ОблШапка = Макет.ПолучитьОбласть("Шапка");	
ОблПЗ = Макет.ПолучитьОбласть("ПЗ");
ОблИтого = Макет.ПолучитьОбласть("Итого");
ОблИзделие = Макет.ПолучитьОбласть("Изделие");
ОблКонец = Макет.ПолучитьОбласть("Конец");
ОблШапка.Параметры.ВыбЛинейка = Объект.Линейка.Наименование;
ОблШапка.Параметры.Тара = Объект.Тара;
ОблШапка.Параметры.ДатаОтчёта = Формат(Объект.ДатаВыпуска,"ДФ=dd.MM.yyyy");
ТД.Вывести(ОблШапка);
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	barcode = ПолучитьCOMОбъект("","STROKESCRIBE.StrokeScribeClass.1");
	barcode.Alphabet=25; //QRCODE
	QRCode = "";
	НомСтр = 0;              
	КолВсего = 0;
		Для каждого Стр Из Объект.ТабличнаяЧасть Цикл
			Если Не Стр.Пометка Тогда
			НомСтр = НомСтр + 1;
			ТЧ_ТВ = ТаблицаВыпуска.Добавить();
			ТЧ_ТВ.Продукция = Стр.ПЗ.Изделие;
			ТЧ_ТВ.Количество = 1;
			ОблПЗ.Параметры.НомСтр = НомСтр;
			ОблПЗ.Параметры.Наимен = Стр.ПЗ.Изделие; 
			ОблПЗ.Параметры.НомерПЗ = Стр.ПЗ.Номер;
			ОблПЗ.Параметры.ПЗ = Стр.ПЗ;
			ОблПЗ.Параметры.Счёт = Стр.ПЗ.ДокументОснование.Счёт;
			ОблПЗ.Параметры.БарКод = Стр.ПЗ.БарКод;
			КодDanfoss = ОбщийМодульВызовСервера.ПолучитьКодDanfoss(Стр.ПЗ.БарКод);
				Если ЗначениеЗаполнено(КодDanfoss) Тогда
				ОблПЗ.Параметры.ЗавНомер = Стр.ПЗ.БарКод + "\" + КодDanfoss;
				Иначе
				ОблПЗ.Параметры.ЗавНомер = Стр.ПЗ.БарКод;
				КонецЕсли;
			ТД.Вывести(ОблПЗ);
			КолВсего = КолВсего + 1; 
			QRCode = QRCode+глНаименованиеВСкобкахБезЭтапа(Стр.ПЗ.Изделие.Наименование)+";"+Стр.ПЗ.БарКод+";"+СокрЛП(Стр.ПЗ.ДокументОснование.Счёт)+";";		
			КонецЕсли; 			
		КонецЦикла;
	ОблИтого.Параметры.КолВсего = КолВсего;
	ТД.Вывести(ОблИтого);	
	ТаблицаВыпуска.Свернуть("Продукция","Количество"); 
	ТаблицаВыпуска.Сортировать("Продукция");
		Для каждого ТЧ из ТаблицаВыпуска Цикл
		ОблИзделие.Параметры.Наимен = ТЧ.Продукция;                  
		ОблИзделие.Параметры.Кол = ТЧ.Количество; 
		ТД.Вывести(ОблИзделие);		        	
		КонецЦикла;
	ИмяФайла=ПолучитьИмяВременногоФайла("wmf");
	barcode.Text=QRCode;
	barcode.UTF8=1;
	barcode.QrECL=2;
	код=barcode.SavePicture(ИмяФайла,7,100,100);          
		Если код <> 0 Тогда //Проверка результата генерации штрихкода
		Сообщить(строка(код) + " - " + barcode.ErrorDescription);
		ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
		Возврат Ложь;
		КонецЕсли;
	рис=ОблКонец.Рисунки.QRCode;
	рис.РазмерКартинки=РазмерКартинки.Пропорционально;
	рис.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
	рис.Картинка = Новый Картинка(ИмяФайла);
	ОблКонец.Параметры.Исполнитель = ПараметрыСеанса.Пользователь;	
	ТД.Вывести(ОблКонец);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат Истина;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат Ложь;
	КонецПопытки;
КонецФункции

&НаКлиенте
Процедура ПечатьГрупповойУпаковки(Команда)
ТД = Новый ТабличныйДокумент;

	Если ПечатьГрупповойУпаковкиНаСервере(ТД) Тогда 
	ТД.РазмерСтраницы = "A4";
	ТД.ПолеСлева = 0;
	ТД.ПолеСверху = 0;
	ТД.ПолеСнизу = 0;
	ТД.ПолеСправа = 0;
	ТД.РазмерКолонтитулаСверху = 0;
	ТД.РазмерКолонтитулаСнизу = 0;
	ТД.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТД.Показать("Отчёт по упаковочной таре. Выпуск на "+Объект.ДатаВыпуска);		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ВернутьНаСкладЛинейкиНаСервере()
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Подразделение = Объект.ТабличнаяЧасть[0].ПЗ.Подразделение;
	Перемещение = Документы.ДвижениеМПЗ.СоздатьДокумент();
	Перемещение.Дата = ТекущаяДата();
	Перемещение.УстановитьНовыйНомер(ПрисвоитьПрефикс(Подразделение));
	Перемещение.Автор = ПараметрыСеанса.Пользователь;
	Перемещение.Подразделение = Подразделение;
	Перемещение.МестоХранения = Справочники.МестаХранения.НайтиПоКоду("09");
	Перемещение.МестоХраненияВ = Объект.Линейка.МестоХраненияГП;
		Для каждого Стр Из Объект.ТабличнаяЧасть Цикл
		ТЧ = Перемещение.ТабличнаяЧасть.Добавить();
		ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
		ТЧ.МПЗ = Стр.ПЗ.Изделие;
		ТЧ.Количество = 1;
		ТЧ.ЕдиницаИзмерения =  Стр.ПЗ.Изделие.ОсновнаяЕдиницаИзмерения;					
		КонецЦикла;
			Если Перемещение.ТабличнаяЧасть.Количество() > 0 Тогда
			Перемещение.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
			Сообщить("Ничего не выбрано для перемещения!");
		    ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			Возврат Документы.ДвижениеМПЗ.ПустаяСсылка();			
			КонецЕсли;  
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат Документы.ДвижениеМПЗ.ПустаяСсылка();
	КонецПопытки;
Возврат Перемещение.Ссылка;
КонецФункции

&НаКлиенте
Процедура ВернутьНаСкладЛинейки(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда	
	Ссылка = ВернутьНаСкладЛинейкиНаСервере();
		Если Не Ссылка.Пустая() Тогда
		ПоказатьОповещениеПользователя("Создание:",,"Создано перемещение на склад линейки!",БиблиотекаКартинок.Пользователь);
		КонецЕсли;	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ОчиститьНаСервере()
Объект.ТабличнаяЧасть.Очистить();
Объект.Тара = 0;
КонецПроцедуры

&НаСервере
Процедура ДобавитьПоБарКодуНаСервере(БарКод)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.БарКод = &БарКод";	
Запрос.УстановитьПараметр("БарКод",БарКод);
Результат = Запрос.Выполнить();
Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	ТЧ = Объект.ТабличнаяЧасть.Добавить();
	ТЧ.ПЗ = Выборка.ПЗ;
	ТЧ.ДатаУпаковки = Выборка.ПЗ.ДатаГрупповойУпаковки;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоБарКоду(Команда)
БарКод = "";
	Если ВвестиСтроку(БарКод,"Введите бар-код",18) Тогда
	ДобавитьПоБарКодуНаСервере(БарКод);
	КонецЕсли;                   
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
ВидОбработки = 1;
Объект.ДатаВыпуска = ТекущаяДата();
КонецПроцедуры

&НаКлиенте
Процедура ВидОбработкиПриИзменении(Элемент)
ОчиститьНаСервере();
	Если ВидОбработки = 1 Тогда
	Элементы.ОтправкаНаПСИ.Видимость = Истина;
	Элементы.Тара.Видимость = Истина;
	Элементы.Выбрать.Видимость = Истина;
	Элементы.ТабличнаяЧастьПометка.Видимость = Истина;
	Элементы.ВозвратНаЛинейку.Видимость = Ложь;
	Иначе
	Элементы.ОтправкаНаПСИ.Видимость = Ложь;
	Элементы.Тара.Видимость = Ложь;
	Элементы.Выбрать.Видимость = Ложь;
	Элементы.ТабличнаяЧастьПометка.Видимость = Ложь;
	Элементы.ВозвратНаЛинейку.Видимость = Истина;	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
	ДобавитьПоБарКодуНаСервере(Данные);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры
