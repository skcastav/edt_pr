
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Объект.Исполнитель = ПараметрыСеанса.Пользователь;
	Если Не Объект.Исполнитель.Пустая() Тогда
		Для каждого ТЧ Из Объект.Исполнитель.ЛинейкиПроизводства Цикл
		СписокЛинеек.Добавить(ТЧ.Линейка);
		КонецЦикла;
	Иначе
	Сообщить("Вы не внесены в справочник Сотрудников! Работа невозможна!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
    ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
    ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
    Сообщить(ТекстСообщения);
	КонецЕсли;
		Если СписокЛинеек.Количество() > 0 Тогда
		ПолучитьДанныеНаСервере();
			Если Объект.ИнтервалОбновления > 0 Тогда
			ПодключитьОбработчикОжидания("ОбновитьДанные", Объект.ИнтервалОбновления*60);
			КонецЕсли; 
		КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеНаСервере()
Объект.Разукомплектовка.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РемонтнаяКарта.Ссылка
	|ИЗ
	|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
	|ГДЕ
	|	РемонтнаяКарта.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	И РемонтнаяКарта.Проведен = ЛОЖЬ
	|	И РемонтнаяКарта.ВидРемонта = &ВидРемонта
	|
	|УПОРЯДОЧИТЬ ПО
	|	РемонтнаяКарта.Дата";
Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
Запрос.УстановитьПараметр("ВидРемонта",Перечисления.ВидыРемонта.Разукомплектовка);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = Объект.Разукомплектовка.Добавить();
	ТЧ.Линейка = ВыборкаДетальныеЗаписи.Ссылка.Линейка;
	ТЧ.ПроизводственноеЗадание = ВыборкаДетальныеЗаписи.Ссылка.ДокументОснование;
	ТЧ.Изделие = ВыборкаДетальныеЗаписи.Ссылка.Изделие;
	ТЧ.БарКод = ВыборкаДетальныеЗаписи.Ссылка.ДокументОснование.БарКод;
	ТЧ.РемонтнаяКарта = ВыборкаДетальныеЗаписи.Ссылка;
	ВиртуальнаяТабличнаяЧасть = ТЧ.РемонтнаяКарта.Разукомплектовка.Выгрузить();
	ВиртуальнаяТабличнаяЧасть.Свернуть("МПЗ,ЕдиницаИзмерения","Количество");
	МестоХранения = ТЧ.РемонтнаяКарта.ДокументОснование.Линейка.МестоХраненияКанбанов;
		Для Каждого ТЧ_ВЧ Из ВиртуальнаяТабличнаяЧасть Цикл
		Фильтр   = Новый Структура;
		Фильтр.Вставить("МестоХранения",МестоХранения);
		Фильтр.Вставить("МПЗ", ТЧ_ВЧ.МПЗ);
		Остаток = РегистрыНакопления.МестаХранения.Остатки(ТекущаяДата(),Фильтр,"МПЗ", "Количество");
		БазовоеКоличество = ПолучитьБазовоеКоличество(ТЧ_ВЧ.Количество,ТЧ_ВЧ.ЕдиницаИзмерения);
			Если Остаток.Количество() > 0 Тогда
				Если Остаток[0].Количество < БазовоеКоличество Тогда
				ТЧ.НетВКанбанеЛинейки.Добавить(ТЧ_ВЧ.МПЗ,СокрЛП(ТЧ_ВЧ.МПЗ.Наименование)+" ("+ТЧ_ВЧ.Количество+" "+СокрЛП(ТЧ_ВЧ.ЕдиницаИзмерения.Наименование)+")");
				КонецЕсли; 		
			Иначе	
			ТЧ.НетВКанбанеЛинейки.Добавить(ТЧ_ВЧ.МПЗ,СокрЛП(ТЧ_ВЧ.МПЗ.Наименование)+" ("+ТЧ_ВЧ.Количество+" "+СокрЛП(ТЧ_ВЧ.ЕдиницаИзмерения.Наименование)+")");
			КонецЕсли;
		КонецЦикла; 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанные(Ответ, Отказ) Экспорт
ПолучитьДанныеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанные()
ПолучитьДанныеНаСервере();
КонецПроцедуры
 
&НаКлиенте
Процедура ИнтервалОбновленияПриИзменении(Элемент)
ОтключитьОбработчикОжидания("ОбновитьДанные");
	Если Объект.ИнтервалОбновления > 0 Тогда
	ПодключитьОбработчикОжидания("ОбновитьДанные", Объект.ИнтервалОбновления*60);
	КонецЕсли;  
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
	Выборка = Объект.Разукомплектовка.НайтиСтроки(Новый Структура("БарКод",Данные));
		Если Выборка.Количество() > 0 Тогда	
		Элементы.Разукомплектовка.ТекущаяСтрока = Выборка[0].ПолучитьИдентификатор();
		П = Новый Структура("Ключ",Элементы.Разукомплектовка.ТекущиеДанные.РемонтнаяКарта);
		Оп = Новый ОписаниеОповещения("ПолучитьДанные",ЭтотОбъект,Истина);	
		ОткрытьФорму("Документ.РемонтнаяКарта.ФормаОбъекта",П,,,,,Оп,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура НайтиПоБарКоду(Команда)
БарКод = "";
	Если ВвестиСтроку(БарКод,"Введите бар-код",18) Тогда 
	Выборка = Объект.Разукомплектовка.НайтиСтроки(Новый Структура("БарКод",БарКод));
		Если Выборка.Количество() > 0 Тогда	
		Элементы.Разукомплектовка.ТекущаяСтрока = Выборка[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИсполнителя(РК)
РемонтнаяКарта = РК.ПолучитьОбъект();
РемонтнаяКарта.Автор = Объект.Исполнитель;
РемонтнаяКарта.ДатаНачала = ТекущаяДата();
РемонтнаяКарта.Записать();
КонецПроцедуры

&НаКлиенте
Процедура РазукомплектовкаВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
ЗаполнитьИсполнителя(Элементы.Разукомплектовка.ТекущиеДанные.РемонтнаяКарта);
П = Новый Структура("Ключ",Элементы.Разукомплектовка.ТекущиеДанные.РемонтнаяКарта);
Оп = Новый ОписаниеОповещения("ПолучитьДанные", ЭтотОбъект,Истина);	
ОткрытьФорму("Документ.РемонтнаяКарта.ФормаОбъекта",П,,,,,Оп,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтсутствующие(Команда)
Элемент = Неопределено;
Элементы.Разукомплектовка.ТекущиеДанные.НетВКанбанеЛинейки.ВыбратьЭлемент("Нет в канбане линейки",Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
ПолучитьДанныеНаСервере();
КонецПроцедуры
