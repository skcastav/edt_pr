
&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаСервере
Процедура ОчиститьСсылкуНаПЗ()
Объект.ПроизводственноеЗадание = Документы.ПроизводственноеЗадание.ПустаяСсылка();
Объект.РабочееМесто = Справочники.РабочиеМестаЛинеек.ПустаяСсылка();
Объект.Исполнитель = Справочники.Сотрудники.ПустаяСсылка();
КонецПроцедуры 

&НаСервере
Функция ПолучитьКодРабочегоМеста(РабочееМесто)
Возврат(РабочееМесто.Код);
КонецФункции

&НаКлиенте
Процедура ПечатьТекущейСпецификации(Команда)
ОткрытьФорму("Отчет.ПечатьСпецификацииСУчётомАналогов.Форма.ФормаОтчета",Новый Структура("ПЗ",Объект.ПроизводственноеЗадание));
КонецПроцедуры

&НаСервере
Функция ЗавершитьНаСервере()
Запрос = Новый Запрос;

НовоеРабочееМесто = ОбщийМодульВызовСервера.ПолучитьСледующееРабочееМесто(Объект.РабочееМесто);
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	ДатаОкончания = ТекущаяДата();
	Парам = Новый Структура("РабочееМесто,Исполнитель,ДатаОкончания",Объект.РабочееМесто,Объект.Исполнитель,ДатаОкончания);
	ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Парам);
		Если Не НовоеРабочееМесто.Пустая() Тогда
		Парам = Новый Структура("РабочееМесто,Количество,ДатаНачала",НовоеРабочееМесто,Объект.ПроизводственноеЗадание.Количество,ДатаОкончания);
		ОбщийМодульРаботаСРегистрами.СоздатьЭтапПроизводственногоЗаданияКанбан(Объект.ПроизводственноеЗадание,Парам);
		КонецЕсли;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
		Если НовоеРабочееМесто = Неопределено Тогда
		Сообщить("Производство изделия по данному производственному заданию завершено!");
		Сообщить("Передайте канбан пауку!");
		КонецЕсли; 
	Возврат(Истина);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	КонецПопытки;
Возврат(Ложь);
КонецФункции

&НаКлиенте
Процедура Завершить(Команда)
	Если Объект.ПроизводственноеЗадание.Пустая() Тогда
	Сообщить("Нет выбранного производственного задания!");
	Возврат;	
	КонецЕсли;
		Если Объект.РабочееМесто.Пустая() Тогда
		Сообщить("Не определено рабочее место!");
		Возврат;	
		КонецЕсли;
			Если Объект.Исполнитель.Пустая() Тогда
			Сообщить("Не определен исполнитель!");
			Возврат;	
			КонецЕсли;
				Если ЗавершитьНаСервере() Тогда	
				ОчиститьСсылкуНаПЗ();
				КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьПЗ(МТК)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Ссылка
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", МТК);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
Возврат(Документы.ПроизводственноеЗадание.ПустаяСсылка());
КонецФункции

&НаСервере
Функция ПолучитьПараметр(Данные)
Возврат(ЗначениеИзСтрокиВнутр(Данные));
КонецФункции

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
	Парам = ПолучитьПараметр(Данные);
		Если ТипЗнч(Парам) = Тип("СправочникСсылка.Сотрудники") Тогда
		Объект.Исполнитель = Парам;
		Иначе	
		Объект.ПроизводственноеЗадание = ПолучитьПЗ(Парам);
			Если Не Объект.ПроизводственноеЗадание.Пустая() Тогда
			ПроизводственноеЗаданиеПриИзмененииНаСервере();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция МожноРаботатьВАРМ()
	Если ОбщийМодульВызовСервера.МожноВыполнить(Объект.РабочееМесто.Линейка) Тогда	
	Возврат(Истина);
	Иначе
	Объект.РабочееМесто = Справочники.РабочиеМестаЛинеек.ПустаяСсылка();
	Объект.ПроизводственноеЗадание = Документы.ПроизводственноеЗадание.ПустаяСсылка();
	Сообщить("Работа АРМ запрещена в этой базе!");
	Возврат(Ложь);
	КонецЕсли;
КонецФункции 

&НаСервере
Процедура ПроизводственноеЗаданиеПриИзмененииНаСервере()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ = &ПЗ
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
Запрос.УстановитьПараметр("ПЗ", Объект.ПроизводственноеЗадание);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Объект.РабочееМесто = ВыборкаДетальныеЗаписи.РабочееМесто;
		Если Не МожноРаботатьВАРМ() Тогда
		Возврат;
		КонецЕсли;
	КонецЦикла;
		Если Объект.РабочееМесто.Пустая() Тогда
		ОчиститьСсылкуНаПЗ();
		Сообщить("Производство изделия по данному производственному заданию завершено!");
		Сообщить("Передайте канбан пауку!");
		КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПроизводственноеЗаданиеПриИзменении(Элемент)
ПроизводственноеЗаданиеПриИзмененииНаСервере();
КонецПроцедуры
