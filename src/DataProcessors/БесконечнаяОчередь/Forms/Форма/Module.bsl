
&НаСервере
Функция ПроверитьНаСкладеНаСервере(МПЗ,Количество,ТаблицаСклада)
ТЧ = ТаблицаСклада.Найти(МПЗ,"МПЗ");
	Если ТЧ <> Неопределено Тогда
		Если ТЧ.Количество >= Количество Тогда
		ТЧ.Количество = ТЧ.Количество - Количество;
		Возврат(Истина);
		КонецЕсли;
	КонецЕсли;
Возврат(Ложь);
КонецФункции

&НаСервере
Процедура РаскрытьНаМПЗиПроверить(Спецификация,Узел,ЭтапСпецификации,КолУзла,ТаблицаСклада)
НормРасх = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н_М(ЭтапСпецификации,ТекущаяДата());
	Пока НормРасх.Следующий() Цикл			
		Если ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.Материалы")Тогда
		ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;		
		Иначе
			Если НормРасх.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Набор Тогда
			РаскрытьНаМПЗиПроверить(Спецификация,Узел,НормРасх.Элемент,НормРасх.Норма*КолУзла,ТаблицаСклада);
			Продолжить;
			ИначеЕсли Не НормРасх.Элемент.Канбан.Пустая() Тогда
				Если Не НормРасх.Элемент.Канбан.РезервироватьВПроизводстве Тогда		
				Продолжить;
				КонецЕсли;			
			КонецЕсли;
		Выборка = Этапы.НайтиСтроки(Новый Структура("ЭтапСпецификации",НормРасх.Элемент));
        	Если Выборка.Количество() = 0 Тогда
			ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
			Иначе
			Продолжить;
			КонецЕсли;
		КонецЕсли; 
	Выборка = ТаблицаМПЗОбщая.НайтиСтроки(Новый Структура("МПЗ",НормРасх.Элемент));
		Если Выборка.Количество() = 0 Тогда				
		ТЧ = ТаблицаМПЗОбщая.Добавить();
		ТЧ.МПЗ = НормРасх.Элемент;
		ТЧ.Количество = ПолучитьБазовоеКоличество(НормРасх.Норма*КолУзла,НормРасх.Элемент.ОсновнаяЕдиницаИзмерения);
		Иначе
		Выборка[0].Количество = Выборка[0].Количество + ПолучитьБазовоеКоличество(НормРасх.Норма*КолУзла,НормРасх.Элемент.ОсновнаяЕдиницаИзмерения);
		КонецЕсли;
	ТаблицаМПЗ.Очистить();	
	ТЧ = ТаблицаМПЗ.Добавить();
	ТЧ.ВидМПЗ = ВидМПЗ;
	ТЧ.МПЗ = НормРасх.Элемент;
	ТЧ.Количество = НормРасх.Норма*КолУзла;
	ТЧ.Приоритет = 1;
	ТЧ.Аналог = Ложь;
	ТаблицаАналогов = ОбщегоНазначенияПовтИсп.ПолучитьАналогиНормРасходов(НормРасх.Ссылка,ТекущаяДата());
		Для каждого ТЧ_ТА Из ТаблицаАналогов Цикл
			Если ТипЗнч(ТЧ_ТА.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
			ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
			Иначе
			ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
			КонецЕсли; 
		ТЧ = ТаблицаМПЗ.Добавить();
		ТЧ.ВидМПЗ = ВидМПЗ;
		ТЧ.МПЗ = ТЧ_ТА.Элемент;
		ТЧ.Количество = ТЧ_ТА.Норма*КолУзла;
		ТЧ.Аналог = Истина;
			Если ПолучитьСтатус(ТЧ_ТА.Элемент) = Перечисления.СтатусыМПЗ.ДоИсчерпанияЗапасов Тогда
			ТЧ.Приоритет = 0;
			Иначе
			ТЧ.Приоритет = ТЧ_ТА.Ссылка.Приоритет + 1;
			КонецЕсли; 
		КонецЦикла;
	ТаблицаМПЗ.Сортировать("Приоритет");
	флЗарезервирован = Ложь;
		Для каждого ТЧ Из ТаблицаМПЗ Цикл
			Если ПроверитьНаСкладеНаСервере(ТЧ.МПЗ,ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.МПЗ.ОсновнаяЕдиницаИзмерения),ТаблицаСклада) Тогда 
			флЗарезервирован = Истина;
			Прервать;				
			КонецЕсли; 
		КонецЦикла;
			Если Не флЗарезервирован Тогда
			ВыборкаОбщая = ТаблицаМПЗОбщая.НайтиСтроки(Новый Структура("МПЗ",НормРасх.Элемент));
			Выборка = ТаблицаЛООбщая.НайтиСтроки(Новый Структура("Изделие,МПЗ",Спецификация,НормРасх.Элемент));
				Если Выборка.Количество() = 0 Тогда
				ТЧ = ТаблицаЛООбщая.Добавить();
				ТЧ.Изделие = Спецификация;
				ТЧ.МПЗ = ВыборкаОбщая[0].МПЗ;
				ТЧ.Количество = ВыборкаОбщая[0].Количество;
				Иначе
				Выборка[0].Количество = ВыборкаОбщая[0].Количество;
				КонецЕсли; 	
			КонецЕсли;  		
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ПроверитьНаличиеНаСкладе(Спецификация)
ТаблицаСклада = Новый ТаблицаЗначений;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОстатки.МПЗ,
	|	МестаХраненияОстатки.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.МестаХранения.Остатки(&НаДату, МестоХранения = &МестоХранения) КАК МестаХраненияОстатки";
Запрос.УстановитьПараметр("МестоХранения", Объект.Линейка.МестоХраненияКанбанов);
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
РезультатЗапроса = Запрос.Выполнить();
ТаблицаСклада = РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.Прямой);
	Для каждого ТЧ Из Этапы Цикл
	РаскрытьНаМПЗиПроверить(Спецификация,ТЧ.ЭтапСпецификации,ТЧ.ЭтапСпецификации,ТЧ.Количество,ТаблицаСклада);
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Функция ПроверитьНаСервере(Стр)
ТЧ = Объект.ИзделияНаПополнениеСклада.НайтиПоИдентификатору(Стр);
Результат = Новый Структура("Статус,Комментарий");
ТаблицаМПЗОбщая.Очистить();
Этапы.Очистить();
РезультатПроверки = ОбщийМодульСозданиеДокументов.ПроверитьЭтапыСпецификации(Объект.Линейка,ТЧ.Изделие);
	Если Не РезультатПроверки.Пустая() Тогда
	Результат.Статус = 3;
	Результат.Комментарий = "Не найдено рабочее место для "+РезультатПроверки;
	Возврат(Результат);
	КонецЕсли;  
ОбщийМодульВызовСервера.ПолучитьТаблицуЭтаповСпецификации(Этапы,ТЧ.Изделие,ТЧ.КратностьЗапуска,Ложь,ТекущаяДата());
ПроверитьНаличиеНаСкладе(ТЧ.Изделие);
Выборка = ТаблицаЛООбщая.НайтиСтроки(Новый Структура("Изделие",ТЧ.Изделие));
	Если Выборка.Количество() > 0 Тогда
	Результат.Статус = 2;
	Результат.Комментарий = "Не хватает МПЗ";
	Возврат(Результат);
	Иначе
	Результат.Статус = 1;
	Результат.Комментарий = "Готово к запуску";
	Возврат(Результат);
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ПроверитьНИ()
Элементы.СоздатьМТК.Доступность = Ложь;
ТаблицаЛООбщая.Очистить();
Стр = 0;
	Для каждого ТЧ Из Объект.ИзделияНаПополнениеСклада Цикл
	Стр = Стр + 1;
	Состояние("Обработка...",Стр*100/Объект.ИзделияНаПополнениеСклада.Количество(),"Проверка списка невыпущенных изделий...",БиблиотекаКартинок.ДлительнаяОперация);
		Если ТЧ.Запущено Тогда
			Если ТЧ.СвободныйОстатокНаСкладеГП+ТЧ.КоличествоВПроизводстве+((ТЧ.КоличествоЗапусков + 1)*ТЧ.КратностьЗапуска) <= ТЧ.НормативныйЗапас Тогда
				Если ТЧ.КоличествоЗапусков >= ТЧ.КоличествоЗапусковЗаЦикл Тогда
				ТЧ.Статус = 0;
				ТЧ.Комментарий = "";
				ТЧ.ПревышениеКоличестваЗапусков = ТЧ.КоличествоЗапусков - ТЧ.КоличествоЗапусковЗаЦикл;
				Продолжить; 			
				КонецЕсли;
			Иначе
			ТЧ.Статус = 0;
			ТЧ.Комментарий = "Достигнут нормативный запас.";
			Продолжить;			
			КонецЕсли;  
		Иначе
			Если ТЧ.СвободныйОстатокНаСкладеГП+ТЧ.КоличествоВПроизводстве+((ТЧ.КоличествоЗапусков + 1)*ТЧ.КратностьЗапуска) <= ТЧ.НормативныйЗапас Тогда
				Если ТЧ.КоличествоЗапусков >= ТЧ.КоличествоЗапусковЗаЦикл Тогда
				ТЧ.Статус = 0;
				ТЧ.Комментарий = "";
				ТЧ.ПревышениеКоличестваЗапусков = ТЧ.КоличествоЗапусков - ТЧ.КоличествоЗапусковЗаЦикл;
				Продолжить;			
				КонецЕсли;
			Иначе
			ТЧ.Статус = 0;
			ТЧ.Комментарий = "Достигнут нормативный запас.";
			Продолжить;			
			КонецЕсли;
		КонецЕсли; 
	Результат = ПроверитьНаСервере(ТЧ.ПолучитьИдентификатор());	
	ТЧ.Статус = Результат.Статус;
	ТЧ.Комментарий = Результат.Комментарий;
		Если Результат.Статус = 1 Тогда
		Элементы.СоздатьМТК.Доступность = Истина;
		Прервать;
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНИ2()
Стр = 0;
	Для каждого ТЧ Из Объект.ИзделияНаПополнениеСклада Цикл
	Стр = Стр + 1;
	Состояние("Обработка...",Стр*100/Объект.ИзделияНаПополнениеСклада.Количество(),"Проверка списка невыпущенных изделий (2)...",БиблиотекаКартинок.ДлительнаяОперация);
		Если ТЧ.Запущено Тогда
			Если ТЧ.КоличествоЗапусков < ТЧ.КоличествоЗапусковЗаЦикл Тогда
			Продолжить;
			КонецЕсли;
				Если ТЧ.СвободныйОстатокНаСкладеГП+ТЧ.КоличествоВПроизводстве+((ТЧ.КоличествоЗапусков + 1)*ТЧ.КратностьЗапуска) >= ТЧ.НормативныйЗапас Тогда
				ТЧ.Статус = 0;
				ТЧ.Комментарий = "Достигнут нормативный запас.";
				Продолжить;			
				КонецЕсли;
		Иначе
		Продолжить; 
		КонецЕсли; 
	Результат = ПроверитьНаСервере(ТЧ.ПолучитьИдентификатор());	
	ТЧ.Статус = Результат.Статус;
	ТЧ.Комментарий = Результат.Комментарий;
		Если Результат.Статус = 1 Тогда
		Элементы.СоздатьМТК.Доступность = Истина;
		Прервать;
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
ПроверитьНИ();
	Если Не Элементы.СоздатьМТК.Доступность Тогда
	//СброситьВсеЗапускиНаСервере();
	Объект.ИзделияНаПополнениеСклада.Сортировать("ПревышениеКоличестваЗапусков,НомерОчереди");
	ПроверитьНИ2();
	Объект.ИзделияНаПополнениеСклада.Сортировать("НомерОчереди");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ЛинейкаПриИзмененииНаСервере()
Объект.ИзделияНаПополнениеСклада.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НезапущенныеИзделия.Изделие,
	|	НезапущенныеИзделия.КратностьЗапуска,
	|	НезапущенныеИзделия.НомерОчереди КАК НомерОчереди,
	|	НезапущенныеИзделия.Запущено,
	|	НезапущенныеИзделия.КоличествоЗапусков,
	|	НезапущенныеИзделия.НормативныйЗапас,
	|	НезапущенныеИзделия.СвободныйОстатокНаСкладеГП,
	|	НезапущенныеИзделия.КоличествоВПроизводстве,
	|	НезапущенныеИзделия.КоличествоЗапусковЗаЦикл
	|ИЗ
	|	Справочник.НезапущенныеИзделия КАК НезапущенныеИзделия
	|ГДЕ
	|	НезапущенныеИзделия.Линейка = &Линейка";
	Если ОграничениеПоТипуПрибора <> 0 Тогда	
	Запрос.Текст = Запрос.Текст + " И НезапущенныеИзделия.Изделие.Товар.ПризнакПриПолученииЗадания = &ПризнакПриПолученииЗадания";
 	Запрос.УстановитьПараметр("ПризнакПриПолученииЗадания", ОграничениеПоТипуПрибора);
	КонецЕсли;
Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО НомерОчереди"; 
Запрос.УстановитьПараметр("Линейка", Объект.Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = Объект.ИзделияНаПополнениеСклада.Добавить();
	ТЧ.НомерОчереди = ВыборкаДетальныеЗаписи.НомерОчереди;
	ТЧ.Изделие = ВыборкаДетальныеЗаписи.Изделие;
	ТЧ.КратностьЗапуска = ВыборкаДетальныеЗаписи.КратностьЗапуска;
	ТЧ.Запущено = ВыборкаДетальныеЗаписи.Запущено;
	ТЧ.КоличествоЗапусков = ВыборкаДетальныеЗаписи.КоличествоЗапусков;
	ТЧ.КоличествоЗапусковЗаЦикл = ВыборкаДетальныеЗаписи.КоличествоЗапусковЗаЦикл;
	ТЧ.НормативныйЗапас = ВыборкаДетальныеЗаписи.НормативныйЗапас;
	ТЧ.СвободныйОстатокНаСкладеГП = ВыборкаДетальныеЗаписи.СвободныйОстатокНаСкладеГП; 
	ТЧ.КоличествоВПроизводстве = ВыборкаДетальныеЗаписи.КоличествоВПроизводстве;
	МожноЗапустить = ТЧ.НормативныйЗапас - ТЧ.СвободныйОстатокНаСкладеГП - ТЧ.КоличествоВПроизводстве - (ТЧ.КратностьЗапуска*ТЧ.КоличествоЗапусков);
	ТЧ.МожноЗапустить = ?(МожноЗапустить > 0,МожноЗапустить,0);	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЛинейкаПриИзменении(Элемент)
ТаблицаЛО.Очистить();
Элементы.ТаблицаЛО.Заголовок = "Таблица льготной очереди";
ЛинейкаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Функция СоздатьМТКНаСервере()
	Для каждого ТЧ Из Объект.ИзделияНаПополнениеСклада Цикл
		Если ТЧ.Статус = 1 Тогда
			Попытка
			НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
			МТК = ОбщийМодульСозданиеДокументов.СоздатьМТК(Объект.Линейка,ТЧ.Изделие,ТЧ.КратностьЗапуска,Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Приборы на пополнение склада ГП",Истина),Справочники.Проекты.ПустаяСсылка());
				Если Не МТК.Пустая() Тогда
				Запрос = Новый Запрос;

				Запрос.Текст = 
					"ВЫБРАТЬ
					|	НезапущенныеИзделия.Ссылка
					|ИЗ
					|	Справочник.НезапущенныеИзделия КАК НезапущенныеИзделия
					|ГДЕ
					|	НезапущенныеИзделия.Линейка = &Линейка
					|	И НезапущенныеИзделия.Изделие = &Изделие
					|	И НезапущенныеИзделия.НомерОчереди = &НомерОчереди";
				Запрос.УстановитьПараметр("Линейка", Объект.Линейка);
				Запрос.УстановитьПараметр("Изделие", ТЧ.Изделие);
				Запрос.УстановитьПараметр("НомерОчереди", ТЧ.НомерОчереди);
				РезультатЗапроса = Запрос.Выполнить();                      		
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
					Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			        НИ = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
					НИ.Запущено = Истина;
					НИ.КоличествоЗапусков = НИ.КоличествоЗапусков + 1;
					НИ.Записать();
					ТЧ.Запущено = Истина;
					ТЧ.КоличествоЗапусков = НИ.КоличествоЗапусков;
					КонецЦикла;
				ТЧ.Статус = 0;
				МожноЗапустить = ТЧ.НормативныйЗапас - ТЧ.СвободныйОстатокНаСкладеГП - ТЧ.КоличествоВПроизводстве - (ТЧ.КратностьЗапуска*ТЧ.КоличествоЗапусков);
				ТЧ.МожноЗапустить = ?(МожноЗапустить > 0,МожноЗапустить,0);	
				ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
				Возврат(Истина);
				Иначе
				ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
				Возврат(Ложь);				
				КонецЕсли
			Исключение
			Сообщить(ОписаниеОшибки());
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			Возврат(Ложь);	
			КонецПопытки;
		КонецЕсли; 	
	КонецЦикла;
Возврат(Ложь);
КонецФункции

&НаКлиенте
Процедура СоздатьМТК(Команда)
	Если СоздатьМТКНаСервере() Тогда
	ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Создана МТК на пополнение склада ГП!",БиблиотекаКартинок.Пользователь);
	Иначе
	Сообщить("МТК не создана!");	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ИзделияНаПополнениеСкладаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
Элементы.ТаблицаЛО.Заголовок = "Таблица льготной очереди "+Элементы.ИзделияНаПополнениеСклада.ТекущиеДанные.Изделие;
ИзделияНаПополнениеСкладаВыборНаСервере(Элементы.ИзделияНаПополнениеСклада.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ИзделияНаПополнениеСкладаВыборНаСервере(Стр)
ТаблицаЛО.Очистить();
ТЧ = Объект.ИзделияНаПополнениеСклада.НайтиПоИдентификатору(Стр);
Выборка = ТаблицаЛООбщая.НайтиСтроки(Новый Структура("Изделие",ТЧ.Изделие));
	Для к = 0 По Выборка.Количество()-1 Цикл
	ТЧ = ТаблицаЛО.Добавить();
		Если ТипЗнч(Выборка[к].МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
		ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
		Иначе
		ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
		ТЧ.Канбан = Выборка[к].МПЗ.Канбан;
		КонецЕсли; 
	ТЧ.Изделие = Выборка[к].Изделие;
	ТЧ.МПЗ = Выборка[к].МПЗ;
	ТЧ.Количество = Выборка[к].Количество;
	Фильтр   = Новый Структура;
	Фильтр.Вставить("МестоХранения", Объект.Линейка.МестоХраненияКанбанов);
	Фильтр.Вставить("МПЗ",ТЧ.МПЗ);	
	Остатки = РегистрыНакопления.МестаХранения.Остатки(ТекущаяДата(),Фильтр);
		Если Остатки.Количество() > 0 Тогда
		ТЧ.КолСклад = Остатки[0].Количество;
		Иначе
		ТЧ.КолСклад = 0;
		КонецЕсли;
	КонецЦикла;
ТаблицаЛО.Сортировать("ВидМПЗ,МПЗ"); 
КонецПроцедуры

&НаКлиенте
Процедура ИзделияНаПополнениеСкладаВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
Элементы.ТаблицаЛО.Заголовок = "Таблица льготной очереди "+Элементы.ИзделияНаПополнениеСклада.ТекущиеДанные.Изделие;
ИзделияНаПополнениеСкладаВыборНаСервере(Элементы.ИзделияНаПополнениеСклада.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура СброситьВсеЗапускиНаСервере()
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НезапущенныеИзделия.Ссылка
		|ИЗ
		|	Справочник.НезапущенныеИзделия КАК НезапущенныеИзделия
		|ГДЕ
		|	НезапущенныеИзделия.Линейка = &Линейка
		|	И НезапущенныеИзделия.Запущено = ИСТИНА";
	Запрос.УстановитьПараметр("Линейка", Объект.Линейка);
	РезультатЗапроса = Запрос.Выполнить();                      		
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	    НИ = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		НИ.Запущено = Ложь;
		НИ.Записать();
		КонецЦикла; 
			Для каждого ТЧ Из Объект.ИзделияНаПополнениеСклада Цикл
			ТЧ.Запущено = Ложь;	
			КонецЦикла;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);	
	КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если РольДоступна("Администратор") Тогда
	Элементы.СоздатьМТК.Видимость = Истина;
	Элементы.СоздатьПоступлениеПрочееИзЛО.Видимость = Истина;
	ИначеЕсли РольДоступна("ГлавныйДиспетчер") Тогда
	Элементы.СоздатьМТК.Видимость = Истина;	
	КонецЕсли; 
		Если Параметры.Свойство("Линейка") Тогда
		Объект.Линейка = Параметры.Линейка;
		КонецЕсли; 
			Если Параметры.Свойство("ПризнакПриПолученииЗадания") Тогда
			ОграничениеПоТипуПрибора = Параметры.ПризнакПриПолученииЗадания;
			КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не Объект.Линейка.Пустая() Тогда
	Элементы.ТаблицаЛО.Заголовок = "Таблица льготной очереди";
	ЛинейкаПриИзмененииНаСервере();
	Проверить(Неопределено); 
		Если СоздатьМТКНаСервере() Тогда
		ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Создана МТК на пополнение склада ГП!",БиблиотекаКартинок.Пользователь);
		ЭтаФорма.Закрыть(Истина);
		Иначе
		ЭтаФорма.Закрыть(Ложь);
		КонецЕсли;	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ИзменитьДанныеЭлемента(Стр)
ТЧ = Объект.ИзделияНаПополнениеСклада.НайтиПоИдентификатору(Стр);
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НезапущенныеИзделия.Ссылка
	|ИЗ
	|	Справочник.НезапущенныеИзделия КАК НезапущенныеИзделия
	|ГДЕ
	|	НезапущенныеИзделия.Линейка = &Линейка
	|	И НезапущенныеИзделия.Изделие = &Изделие
	|	И НезапущенныеИзделия.НомерОчереди = &НомерОчереди";
Запрос.УстановитьПараметр("Линейка", Объект.Линейка);
Запрос.УстановитьПараметр("Изделие", ТЧ.Изделие);
Запрос.УстановитьПараметр("НомерОчереди", ТЧ.НомерОчереди);
РезультатЗапроса = Запрос.Выполнить();                      		
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
    НИ = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
	НИ.Запущено = ТЧ.Запущено;
	НИ.Записать();
	КонецЦикла;		
КонецПроцедуры

&НаКлиенте
Процедура ИзделияНаПополнениеСкладаЗапущеноПриИзменении(Элемент)
	Если Не Элементы.ИзделияНаПополнениеСклада.ТекущиеДанные.Запущено Тогда
	ИзменитьДанныеЭлемента(Элементы.ИзделияНаПополнениеСклада.ТекущаяСтрока);
	Иначе
	Элементы.ИзделияНаПополнениеСклада.ТекущиеДанные.Запущено = Ложь;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция СоздатьПоступлениеПрочееИзЛОНаСервере(Статья)
	Попытка
	ПоступлениеПрочее = Документы.ПоступлениеМПЗПрочее.СоздатьДокумент();

	ПоступлениеПрочее.Дата = ТекущаяДата();
	ПоступлениеПрочее.Подразделение = Объект.Линейка.Подразделение;
	ПоступлениеПрочее.МестоХранения = Объект.Линейка.МестоХраненияКанбанов;
	ПоступлениеПрочее.Статья = Статья;
		Для каждого ТЧ_ЛО Из ТаблицаЛО Цикл
		ТЧ = ПоступлениеПрочее.ТабличнаяЧасть.Добавить();
			Если ТипЗнч(ТЧ_ЛО.МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
			ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
			Иначе
			ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
			КонецЕсли;  
		ТЧ.МПЗ = ТЧ_ЛО.МПЗ;
		ТЧ.ЕдиницаИзмерения = ТЧ_ЛО.МПЗ.ОсновнаяЕдиницаИзмерения;
		ТЧ.Количество = 100;				
		КонецЦикла; 
	ПоступлениеПрочее.Записать(РежимЗаписиДокумента.Проведение);
	Возврат(ПоступлениеПрочее.Ссылка);
	Исключение
	Сообщить(ОписаниеОшибки());
	Возврат(Документы.ПоступлениеМПЗПрочее.ПустаяСсылка());
	КонецПопытки;
КонецФункции

&НаКлиенте
Процедура СоздатьПоступлениеПрочееИзЛО(Команда)
	Если Вопрос("Данная функция создана только для тестирования!
				|Хотите создать поступление прочее?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
	ВыбСтатья = Неопределено;
		Если ВвестиЗначение(ВыбСтатья,"Введите статью поступления прочего",Новый ОписаниеТипов("СправочникСсылка.СтатьиПоступленийСписанийПрочих")) Тогда
		Результат = СоздатьПоступлениеПрочееИзЛОНаСервере(ВыбСтатья);
			Если Не Результат.Пустая() Тогда
			ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Создано "+Результат,БиблиотекаКартинок.Пользователь);
			КонецЕсли; 	
		КонецЕсли;	
	КонецЕсли;  
КонецПроцедуры
