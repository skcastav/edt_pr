
&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаСервере
Функция ПрисвоитьСтатус(ННС)
	Для каждого ТЧ Из ННС.ЗоныКомплектации Цикл
		Если Не ЗначениеЗаполнено(ТЧ.ДатаОкончания) Тогда
		Возврат(Ложь);
		КонецЕсли; 
	КонецЦикла;
	Для каждого ТЧ Из ННС.Тары Цикл
		Если Не ЗначениеЗаполнено(ТЧ.ДатаОкончания) Тогда
		Возврат(Ложь);
		КонецЕсли; 
	КонецЦикла; 
ДатаСменыСтатуса = ТекущаяДата();
СННС = РегистрыСведений.СтатусыНакладныхНаСборку.СоздатьМенеджерЗаписи();
СННС.Период = ДатаСменыСтатуса;
СННС.НакладнаяНаСборку = ННС;
СННС.Статус = Перечисления.СтатусыНакладнойНаСборку.Собран;
СННС.Записать();
	Если ННС.ТабличнаяЧасть[0].ЗаказНаПроизводство.ВнутренниеСчета Тогда
	СННС = РегистрыСведений.СтатусыНакладныхНаСборку.СоздатьМенеджерЗаписи();
	СННС.Период = ДатаСменыСтатуса + 1;
	СННС.НакладнаяНаСборку = ННС;
	СННС.Статус = Перечисления.СтатусыНакладнойНаСборку.НаУпаковке;
	СННС.Записать();
	КонецЕсли; 
Возврат(Истина);
КонецФункции

&НаСервере
Процедура ЗавершитьЗаданиеНаСервере()
Запрос = Новый Запрос;

ДатаОкончания = ТекущаяДата();
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
		Для каждого Тара Из НомераТары Цикл
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	НакладнаяНаСборкуТары.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.НакладнаяНаСборку.Тары КАК НакладнаяНаСборкуТары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыНакладныхНаСборку.СрезПоследних КАК СтатусыНакладныхНаСборкуСрезПоследних
			|		ПО НакладнаяНаСборкуТары.Ссылка = СтатусыНакладныхНаСборкуСрезПоследних.НакладнаяНаСборку
			|ГДЕ
			|	СтатусыНакладныхНаСборкуСрезПоследних.Статус = &Статус
			|	И НакладнаяНаСборкуТары.Тара = &Тара
			|	И НакладнаяНаСборкуТары.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
		Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыНакладнойНаСборку.НаСборке);
		Запрос.УстановитьПараметр("Тара", Тара.Значение);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ННС = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			Выборка = ННС.Тары.Найти(Тара.Значение,"Тара");
			Выборка.Исполнитель = Объект.Исполнитель;
			Выборка.ДатаОкончания = ДатаОкончания;
			ННС.Записать(РежимЗаписиДокумента.Запись);
				Если ПрисвоитьСтатус(ННС.Ссылка) Тогда
				ННС.НомераТары = "";					
					Для каждого ТЧ Из ННС.Тары Цикл
					ННС.НомераТары = ННС.НомераТары + СокрЛП(ТЧ.Тара.Наименование)+",";
					КонецЦикла; 
				ННС.НомераТары = Лев(ННС.НомераТары,СтрДлина(СокрЛП(ННС.НомераТары))-1);
				ННС.Записать(РежимЗаписиДокумента.Запись);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;	
	НомераТары.Очистить();
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Сообщить(ОписаниеОшибки());
	КонецПопытки; 
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьЗадание(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	ЗавершитьЗаданиеНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСотрудника(Данные)
Возврат(ЗначениеИзСтрокиВнутр(Данные));
КонецФункции

&НаСервере
Функция ДобавитьТару(Данные)
Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,";");
Возврат(ЗначениеИзСтрокиВнутр(Массив[1]));
КонецФункции

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
		Если Найти(Данные,"Тара") > 0 Тогда
		НомераТары.Добавить(ДобавитьТару(Данные));
		ИначеЕсли Найти(Данные,"{") > 0 Тогда	
		Объект.Исполнитель = ПолучитьСотрудника(Данные);
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьДанные(Команда)
	Если Найти(ДанныеСканера,"Тара") > 0 Тогда
	НомераТары.Добавить(ДобавитьТару(ДанныеСканера));
	ИначеЕсли Найти(ДанныеСканера,"{") > 0 Тогда	
	Объект.Исполнитель = ПолучитьСотрудника(ДанныеСканера);
	КонецЕсли;
ДанныеСканера = "";
КонецПроцедуры

&НаСервере
Функция ПроверитьСтатусННС(НакладнаяНаСборку)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатусыНакладныхНаСборкуСрезПоследних.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.СтатусыНакладныхНаСборку.СрезПоследних КАК СтатусыНакладныхНаСборкуСрезПоследних
	|ГДЕ
	|	СтатусыНакладныхНаСборкуСрезПоследних.НакладнаяНаСборку = &НакладнаяНаСборку";
Запрос.УстановитьПараметр("НакладнаяНаСборку", НакладнаяНаСборку);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Статус = Перечисления.СтатусыНакладнойНаСборку.НаСборке Тогда
		Возврат(Истина);
		Иначе
		Возврат(Ложь);
		КонецЕсли; 
	КонецЦикла;
Возврат(Ложь);
КонецФункции
