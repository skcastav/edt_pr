
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
СортироватьПо = 1;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ПолучитьТаблицуПользователей();
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
ТаблицаПользователей.Очистить();
ПолучитьТаблицуПользователей();
КонецПроцедуры

&НаСервере
Процедура ПолучитьТаблицуПользователей()
СоединенияИнформационнойБазы = ПолучитьСеансыИнформационнойБазы();
ПользователиИБ = ПользователиИнформационнойБазы.ПолучитьПользователей();
АктивныхПользователей = 0;
	Для к = 0 По ПользователиИБ.Количество()-1 Цикл
		Если Не Ответственный.Пустая() Тогда
			Если Справочники.Сотрудники.НайтиПоНаименованию(ПользователиИБ[к].Имя,Истина).Ответственный <> Ответственный Тогда
			Продолжить;
			КонецЕсли; 
		КонецЕсли; 
	ТЧ = ТаблицаПользователей.Добавить();
	ТЧ.Пользователь = ПользователиИБ[к].Имя;
		Для каждого ТЧ_Роль Из ПользователиИБ[к].Роли Цикл
		ТЧ.Роли.Добавить(ТЧ_Роль.Имя);
		КонецЦикла;
	ТЧ.КоличествоРолей = ТЧ.Роли.Количество();
	Сотрудник = Справочники.Сотрудники.НайтиПоНаименованию(ТЧ.Пользователь,Истина);
	ТЧ.Ответственный = Сотрудник.Ответственный;
	РПСП = РегистрыСведений.ПоследниеСеансыПользователей.Получить(Новый Структура("Сотрудник",Сотрудник));
	ТЧ.ДатаПоследнегоСеанса = РПСП.Дата;
	КонецЦикла;
		Для Каждого Соединение Из СоединенияИнформационнойБазы Цикл
		Выборка = ТаблицаПользователей.НайтиСтроки(Новый Структура("Пользователь",Соединение.Пользователь.Имя));
			Если Выборка.Количество() > 0 Тогда
				Если Не ЗначениеЗаполнено(Выборка[0].Приложение) Тогда
				АктивныхПользователей = АктивныхПользователей + 1;	
				КонецЕсли;
			    	Если Найти(Выборка[0].Приложение,ПредставлениеПриложения(Соединение.ИмяПриложения)) = 0 Тогда
					Выборка[0].Приложение = Выборка[0].Приложение+ПредставлениеПриложения(Соединение.ИмяПриложения)+"; ";
					КонецЕсли;
						Если Найти(Выборка[0].Компьютер,Соединение.ИмяКомпьютера) = 0 Тогда
						Выборка[0].Компьютер = Выборка[0].Компьютер+Соединение.ИмяКомпьютера+"; ";
						КонецЕсли;
			Выборка[0].НачалоРаботы = Выборка[0].НачалоРаботы+Соединение.НачалоСеанса+"; ";
			Выборка[0].КоличествоСеансов = Выборка[0].КоличествоСеансов + 1;
			КонецЕсли;                                
	    КонецЦикла;
Элементы.Статистика.Заголовок = "Пользователей: "+ПользователиИБ.Количество()+" Активных пользователей: "+АктивныхПользователей+" Активных соединений: "+СоединенияИнформационнойБазы.Количество();
СортироватьПоПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПользователя(Команда)
П = Новый Структура("Пользователь","");
	Если ОткрытьФормуМодально("ОбщаяФорма.НастройкиПользователя",П) <> Неопределено Тогда
	ПриСозданииНаСервере(Ложь, Истина);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура УдалитьПользователяНаСервере(Пользователь)
ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(Пользователь);
ПользовательИБ.Удалить();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПользователя(Команда)
	Если Вопрос("Удалить пользователя?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
	УдалитьПользователяНаСервере(Элементы.ТаблицаПользователей.ТекущиеДанные.Пользователь);
	ПриСозданииНаСервере(Ложь, Истина);	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция НайтиПользователя(Имя)
ТЧ = ТаблицаПользователей.НайтиСтроки(Новый Структура("Пользователь",Имя));
Элементы.ТаблицаПользователей.ТекущаяСтрока = ТЧ[0].НомерСтроки;
Возврат(Истина);
КонецФункции

&НаКлиенте
Процедура ИзменитьПользователя(Команда)
П = Новый Структура("Пользователь",Элементы.ТаблицаПользователей.ТекущиеДанные.Пользователь);
Результат = ОткрытьФормуМодально("ОбщаяФорма.НастройкиПользователя",П);
	Если Результат <> Неопределено Тогда
	ПриСозданииНаСервере(Ложь, Истина);
	//НайтиПользователя(Результат);
	//Элементы.ТаблицаПользователей.ТекущаяСтрока = НайтиПользователя(Результат);
	//ТЧ = ТаблицаПользователей.НайтиСтроки(Новый Структура("Пользователь",Результат));
	//Элементы.ТаблицаПользователей.ТекущаяСтрока = ТаблицаПользователей.Индекс(ТЧ[0]);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура СписокПользователейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
ИзменитьПользователя(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПоПриИзменении(Элемент)
СортироватьПоПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СортироватьПоПриИзмененииНаСервере()
	Если СортироватьПо = 1 Тогда
	ТаблицаПользователей.Сортировать("Пользователь");
	ИначеЕсли СортироватьПо = 2 Тогда
	ТаблицаПользователей.Сортировать("КоличествоСеансов Убыв,Пользователь");
	ИначеЕсли СортироватьПо = 3 Тогда
	ТаблицаПользователей.Сортировать("Ответственный,Пользователь");
	ИначеЕсли СортироватьПо = 4 Тогда
	ТаблицаПользователей.Сортировать("ДатаПоследнегоСеанса,Пользователь");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьEmailОтправителя()
Возврат(ПараметрыСеанса.Пользователь.Email);
КонецФункции

&НаСервере
Функция ПолучитьEmailПолучателя(Сотрудник)
Возврат(Сотрудник.Email);
КонецФункции

&НаСервере
Функция ПолучитьНаименованиеСотрудника(Сотрудник)
Возврат(СокрЛП(Сотрудник.Наименование));
КонецФункции

&НаКлиенте
Процедура ПочтоваяРассылка(Команда)
EmailОтправителя = ПолучитьEmailОтправителя();
	Если Не ЗначениеЗаполнено(EmailОтправителя) Тогда	
	Сообщить("Не указан адрес электронной почты отправителя в карточке сотрудника!");
	Возврат;
	КонецЕсли; 
ИПП = Новый ИнтернетПочтовыйПрофиль;
Почта = Новый ИнтернетПочта;
Сообщение = Новый ИнтернетПочтовоеСообщение;
СписокОтветственных = Новый СписокЗначений(); 

НастройкиПочты = ОбщийМодульВызовСервера.ПолучитьНастройкиПочты();
ИПП.АдресСервераSMTP = НастройкиПочты.АдресСервераSMTP; 
ИПП.ПортSMTP = НастройкиПочты.ПортSMTP;
ИПП.ВремяОжидания = 60; 
ИПП.Пароль = НастройкиПочты.ПарольПочтовогоСервера; 
ИПП.Пользователь = EmailОтправителя;
Почта.Подключиться(ИПП);
ТаблицаПользователей.Сортировать("Ответственный,Пользователь");
	Для каждого ТЧ Из ТаблицаПользователей Цикл
		Если Не ТЧ.Ответственный.Пустая() Тогда
			Если СписокОтветственных.НайтиПоЗначению(ТЧ.Ответственный) = Неопределено Тогда
			СписокОтветственных.Добавить(ТЧ.Ответственный);
			КонецЕсли; 
		КонецЕсли; 	
	КонецЦикла;
Сообщение.Тема = "Прошу подтвердить наличие пользователей 1С: Производство 8, ответственным за которых Вы являетесь"; 
Сообщение.Отправитель.Адрес = EmailОтправителя;
	Для каждого Стр Из СписокОтветственных Цикл
	Сообщение.Получатели.Очистить();
	Сообщение.Тексты.Очистить();
		Если Не ЗначениеЗаполнено(ПолучитьEmailПолучателя(Стр.Значение)) Тогда	
		Сообщить("Не указан адрес электронной почты в карточке сотрудника для "+ПолучитьНаименованиеСотрудника(Стр.Значение)+"!");
		Продолжить;
		КонецЕсли;
	Сообщение.Получатели.Добавить(ПолучитьEmailПолучателя(Стр.Значение));
	Текст = "Здравствуйте!" + Символы.ПС;
	Текст = Текст + Символы.ПС + "Список пользователей:" + Символы.ПС;
		Для каждого ТЧ Из ТаблицаПользователей Цикл
			Если ТЧ.Ответственный = Стр.Значение Тогда
			Текст = Текст  + Символы.ПС + СокрЛП(ТЧ.Пользователь) + " (" + СокрЛП(ТЧ.Роли) + ")" + Символы.ПС; 
			КонецЕсли; 	
		КонецЦикла;
	Текст = Текст + Символы.ПС;
	Текст = Текст + Символы.ПС+ "Если пользователя нет – не убирать из списка, а сделать пометку, что уволен, ушел в декрет, ушел в другое подразделение, либо к другому мастеру (к какому).";	
	Текст = Текст + Символы.ПС+ "Если в списке не указан новый пользователь, ответственным за которого Вы являетесь - напишите отдельно.";
	Текст = Текст + Символы.ПС+ "На нового пользователя нужно указывать должность и предполагаемые права, а так же пароль.";
	Текст = Текст + Символы.ПС+ "Внимание: простые пароли типа 111111 или 222222 или 123456 мы не принимаем!";
	Текст = Текст + Символы.ПС+ "С уважением, email: "+EmailОтправителя;
	Сообщение.Тексты.Добавить(Текст);
		Попытка
		Почта.Послать(Сообщение);
		Исключение
		Сообщить(ОписаниеОшибки());
		КонецПопытки; 
	КонецЦикла; 
Почта.Отключиться();
ПоказатьОповещениеПользователя("Сообщение отправлено!");
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокРолей()
СписокРолей = Новый СписокЗначений;

	Для каждого Роль Из Метаданные.Роли Цикл
	СписокРолей.Добавить(Роль.Имя);
	КонецЦикла;
Возврат(СписокРолей);
КонецФункции

&НаКлиенте
Процедура НайтиПоРоли(Команда)
Перем Выбор;

СписокРолей = ПолучитьСписокРолей();
Выбор = СписокРолей.ВыбратьЭлемент("Выберите роль",Выбор);
Элементы.ТаблицаПользователей.ВыделенныеСтроки.Очистить();
	Для каждого ТЧ Из ТаблицаПользователей Цикл
		Если Найти(ТЧ.Роли,СокрЛП(Выбор.Значение)) > 0 Тогда
		Элементы.ТаблицаПользователей.ВыделенныеСтроки.Добавить(ТЧ.ПолучитьИдентификатор());
		КонецЕсли; 	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
ОтветственныйПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтветственныйПриИзмененииНаСервере()
ПриСозданииНаСервере(Ложь, Истина);
КонецПроцедуры

&НаСервере
Функция ПолучитьСотрудника(Пользователь)
Возврат(Справочники.Сотрудники.НайтиПоНаименованию(Пользователь,Истина));
КонецФункции

&НаКлиенте
Процедура НайтиВСотрудниках(Команда)
Сотрудник = ПолучитьСотрудника(Элементы.ТаблицаПользователей.ТекущиеДанные.Пользователь);
	Если Не Сотрудник.Пустая() Тогда
	ТекФорма = ПолучитьФорму("Справочник.Сотрудники.ФормаСписка");
	ТекФорма.Открыть();
	ТекФорма.Элементы.Список.ТекущаяСтрока = Сотрудник;	
	Иначе	
	Сообщить("Не найден в справочнике сотрудников!");
	КонецЕсли;
КонецПроцедуры

