
&НаСервере
Процедура ВыгрузкаВСбыт(БазаСбыта,ОшибкиПриВыгрузкеТНП)
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	//бсСклад = БазаСбыта.Справочники.Склады.НайтиПоНаименованию("СД 423",Истина);
	//бсНовДок = БазаСбыта.Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
	//бсНовДок.Дата = ТекущаяДата();
	//бсНовДок.Организация = БазаСбыта.Справочники.Организации.НайтиПоКоду("02");
	//бсНовДок.Партнер = БазаСбыта.Справочники.Партнеры.НайтиПоКоду("00-00000010");
	//бсНовДок.Склад = бсСклад;
	//бсНовДок.ХозяйственнаяОперация = БазаСбыта.Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
	//бсНовДок.НалогообложениеНДС = БазаСбыта.Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	//бсНовДок.БанковскийСчетОрганизации = БазаСбыта.ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(бсНовДок.Организация);
	//бсНовДок.Валюта = БазаСбыта.Справочники.Валюты.НайтиПоКоду("643");
	//бсНовДок.ВалютаВзаиморасчетов = БазаСбыта.Справочники.Валюты.НайтиПоКоду("643");

	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТабличнаяЧасть.Ссылка КАК Ссылка,
		|	РеализацияТабличнаяЧасть.Товар КАК Товар,
		|	РеализацияТабличнаяЧасть.Количество КАК Количество,
		|	РеализацияТабличнаяЧасть.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ИЗ
		|	Документ.Реализация.ТабличнаяЧасть КАК РеализацияТабличнаяЧасть
		|ГДЕ
		|	РеализацияТабличнаяЧасть.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И РеализацияТабличнаяЧасть.Ссылка.Выгружено = ЛОЖЬ
		|	И ТИПЗНАЧЕНИЯ(РеализацияТабличнаяЧасть.Ссылка.ДокументОснование) = ТИП(Документ.ЗаказНаПроизводство)
		|	И РеализацияТабличнаяЧасть.Ссылка.ДокументОснование.ТорговыйДом = &ТорговыйДом";
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Период.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Период.ДатаОкончания));
	Запрос.УстановитьПараметр("ТорговыйДом",ТорговыйДом);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Артикул = ОбщийМодульВызовСервера.ПолучитьАртикулПоКодуТовара(ВыборкаДетальныеЗаписи.Товар.Товар.Код);
			бсНомен = БазаСбыта.Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",Артикул);
				Если бсНомен.Пустая() Тогда
				ОшибкиПриВыгрузкеТНП = ОшибкиПриВыгрузкеТНП+ВыборкаДетальныеЗаписи.ДокументОснование.Номер+" ("+СокрЛП(ВыборкаДетальныеЗаписи.Товар.Товар.Наименование)+") - товар с артикулом "+Артикул+" не найден в торговой базе!"+Символы.ПС;				Продолжить;
				КонецЕсли;
			//Выборка =  бсНовДок.Товары.Найти(бсНомен,"Номенклатура");
			//	Если Выборка = Неопределено Тогда
			//	ТЧ = бсНовДок.Товары.Добавить();
			//	ТЧ.Склад = бсСклад;	
			//	ТЧ.Номенклатура = бсНомен;
			//	ТЧ.КоличествоУпаковок = 1;
			//	ТЧ.ИмКоличествоЗарегистрировано = 1;
			//	ТЧ.Количество = 1;
			//	ТЧ.СтавкаНДС = бсНомен.СтавкаНДС;
			//	Иначе
			//	Выборка.КоличествоУпаковок = Выборка.КоличествоУпаковок + 1;
			//	Выборка.ИмКоличествоЗарегистрировано = Выборка.ИмКоличествоЗарегистрировано + 1;
			//	Выборка.Количество = Выборка.Количество + 1;
			//	КонецЕсли;
			//ТЧ = бсНовДок.Штрихкоды.Добавить();	
			//ТЧ.Номенклатура = бсНомен;
			//ТЧ.ШК = ВыборкаДетальныеЗаписи.БарКод;
			//ПЗ = ВыборкаДетальныеЗаписи.ДокументОснование.ПолучитьОбъект();
			//ПЗ.Выгружено = Истина;
			//ПЗ.Записать();
			КонецЦикла;
				//Если бсНовДок.Товары.Количество() > 0 Тогда
				//	Для каждого ТЧ Из бсНовДок.Товары Цикл
				//	ТЧ.Цена = бсНомен.ИмЦена;
				//	ТЧ.Сумма = ТЧ.КоличествоУпаковок*ТЧ.Цена;
				//		Если БазаСбыта.Перечисления.СтавкиНДС.Индекс(ТЧ.СтавкаНДС) = БазаСбыта.Перечисления.СтавкиНДС.Индекс(БазаСбыта.Перечисления.СтавкиНДС.НДС18) Тогда
				//		ТЧ.СуммаНДС = ТЧ.Сумма*0.18;
				//		ТЧ.СуммаСНДС = ТЧ.Сумма + ТЧ.СуммаНДС;
				//		ИначеЕсли БазаСбыта.Перечисления.СтавкиНДС.Индекс(ТЧ.СтавкаНДС) = БазаСбыта.Перечисления.СтавкиНДС.Индекс(БазаСбыта.Перечисления.СтавкиНДС.НДС20) Тогда
				//		ТЧ.СуммаНДС = ТЧ.Сумма*0.2;
				//		ТЧ.СуммаСНДС = ТЧ.Сумма + ТЧ.СуммаНДС;
				//		Иначе	
				//		ТЧ.СуммаСНДС = ТЧ.Сумма;
				//		КонецЕсли; 
				//	КонецЦикла;
				//		Если Найти(Подразделение.Наименование,"УПЭА") > 0 Тогда
				//		бсНовДок.Комментарий = "Выгрузка УПЭА из производственной базы от "+ТекущаяДата();
				//		Иначе	
				//		бсНовДок.Комментарий = "&ДД Выгрузка УД из производственной базы от "+ТекущаяДата();
				//		КонецЕсли;
				//бсНовДок.Записать();
				//ОшибкиПриВыгрузкеТНП = ОшибкиПриВыгрузкеТНП+"Создан документ "+бсНовДок.Номер+Символы.ПС;
				//КонецЕсли;  
		КонецЕсли; 
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	ОшибкиПриВыгрузкеТНП = ОшибкиПриВыгрузкеТНП+ОписаниеОшибки()+Символы.ПС;
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	КонецПопытки;
КонецПроцедуры 

&НаСервере
Процедура ВыгрузитьНаСервере()
БазаСбыта = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Объект.БазаДанных);
	Если БазаСбыта = Неопределено Тогда
	Константы.ДатаПоследнейВыгрузкиТНП.Установить(ТекущаяДата());
	Константы.ОшибкиПриВыгрузкеТНП.Установить("Не открыто соединение с базой сбыта!");
	Возврат;
	КонецЕсли;
ОшибкиПриВыгрузкеТНП = "";
ВыгрузкаВСбыт(БазаСбыта,ОшибкиПриВыгрузкеТНП);
Константы.ДатаПоследнейВыгрузкиТНП.Установить(ТекущаяДата());
Константы.ОшибкиПриВыгрузкеТНП.Установить(ОшибкиПриВыгрузкеТНП);
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	Состояние("Обработка...",,"Выгрузка реализаций в выбранную базу данных...");	
	ВыгрузитьНаСервере();	
	КонецЕсли;
КонецПроцедуры
