
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
СортироватьПо = 1;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если ЭтаФорма.Модифицированность Тогда
	Результат = Вопрос("Эскиз спецификации изменен. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		Если Результат = КодВозвратаДиалога.Да Тогда	
		СохранитьВФайл(Неопределено);
		ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда
		Отказ = Истина;
		КонецЕсли;	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ДобавитьНаСервере(TYPE,NAME,NUM,POSITION,DEFIN,ETAP,ISP="")
	Если Не ЗначениеЗаполнено(NAME) Тогда
	Возврат;
	КонецЕсли;
ТЧ = ТаблицаЭскизаСпецификации.Добавить();
ТЧ.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов[СокрЛП(TYPE)];
	Если (ТЧ.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Материал)или
		 (ТЧ.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.МатериалВспомогательный) Тогда
	Выбор = Справочники.Материалы.НайтиПоНаименованию(СокрЛП(NAME),Истина);
		Если Выбор.Пустая() Тогда
        ТЧ.Элемент = NAME;
		ТЧ.НетВСправочниках = Истина;
		Иначе
        ТЧ.Элемент = Выбор;
		ТЧ.ЕИ = Выбор.ОсновнаяЕдиницаИзмерения;
		ТЧ.Статус = ПолучитьСтатус(Выбор,ТекущаяДата());
		ТЧ.КоличествоНаСкладах = ОбщийМодульВызовСервера.ПолучитьСводныйОстатокПоМестамХранения(СписокМестХранения,Выбор);
		КонецЕсли; 
	ИначеЕсли ТЧ.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Деталь Тогда
	Выбор = Справочники.Номенклатура.НайтиПоНаименованию(СокрЛП(NAME),Истина);
		Если Выбор.Пустая() Тогда
        ТЧ.Элемент = NAME;
		ТЧ.НетВСправочниках = Истина;
		Иначе
        ТЧ.Элемент = Выбор;
		ТЧ.Статус = ПолучитьСтатус(Выбор,ТекущаяДата());
		ТЧ.ЕИ = Выбор.ОсновнаяЕдиницаИзмерения;
		ТЧ.КоличествоНаСкладах = ОбщийМодульВызовСервера.ПолучитьСводныйОстатокПоМестамХранения(СписокМестХранения,Выбор);
		КонецЕсли;
	ИначеЕсли ТЧ.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Узел Тогда
	Выбор = Справочники.Номенклатура.НайтиПоНаименованию(СокрЛП(NAME),Истина);
		Если Выбор.Пустая() Тогда
        ТЧ.Элемент = NAME;
		ТЧ.НетВСправочниках = Истина;
		Иначе
        ТЧ.Элемент = Выбор;
		ТЧ.Статус = ПолучитьСтатус(Выбор,ТекущаяДата());
		ТЧ.ЕИ = Выбор.ОсновнаяЕдиницаИзмерения;
		ТЧ.КоличествоНаСкладах = ОбщийМодульВызовСервера.ПолучитьСводныйОстатокПоМестамХранения(СписокМестХранения,Выбор);
		КонецЕсли;
	ИначеЕсли ТЧ.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Набор Тогда
	Выбор = Справочники.Номенклатура.НайтиПоНаименованию(СокрЛП(NAME),Истина);
		Если Выбор.Пустая() Тогда
        ТЧ.Элемент = NAME;
		ТЧ.НетВСправочниках = Истина;
		Иначе
        ТЧ.Элемент = Выбор;
		ТЧ.Статус = ПолучитьСтатус(Выбор,ТекущаяДата());
		ТЧ.ЕИ = Выбор.ОсновнаяЕдиницаИзмерения;
		КонецЕсли;
	ИначеЕсли ТЧ.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Основа Тогда
	Выбор = Справочники.Номенклатура.НайтиПоНаименованию(СокрЛП(NAME),Истина);
		Если Выбор.Пустая() Тогда
        ТЧ.Элемент = NAME;
		ТЧ.НетВСправочниках = Истина;
		Иначе
        ТЧ.Элемент = Выбор;
		ТЧ.Статус = ПолучитьСтатус(Выбор,ТекущаяДата());
		ТЧ.ЕИ = Выбор.ОсновнаяЕдиницаИзмерения;
		КонецЕсли;
	ИначеЕсли ТЧ.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.ТехОперация Тогда
	Выбор = Справочники.ТехОперации.НайтиПоНаименованию(СокрЛП(NAME),Истина);
		Если Выбор.Пустая() Тогда
        ТЧ.Элемент = NAME;
		ТЧ.НетВСправочниках = Истина;
		Иначе
        ТЧ.Элемент = Выбор;
		КонецЕсли;
	ИначеЕсли ТЧ.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.ТехОснастка Тогда
	Выбор = Справочники.ТехОснастка.НайтиПоНаименованию(СокрЛП(NAME),Истина);
		Если Выбор.Пустая() Тогда
        ТЧ.Элемент = NAME;
		ТЧ.НетВСправочниках = Истина;
		Иначе
        ТЧ.Элемент = Выбор;
		КонецЕсли;
	ИначеЕсли ТЧ.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Документ Тогда
	Выбор = Справочники.Документация.НайтиПоНаименованию(СокрЛП(NAME),Истина);
		Если Выбор.Пустая() Тогда
        ТЧ.Элемент = NAME;
		ТЧ.НетВСправочниках = Истина;
		Иначе
        ТЧ.Элемент = Выбор;
		КонецЕсли;
	ИначеЕсли ТЧ.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Программа Тогда		
	Выбор = Справочники.Документация.НайтиПоНаименованию(СокрЛП(NAME),Истина);
		Если Выбор.Пустая() Тогда
        ТЧ.Элемент = NAME;
		ТЧ.НетВСправочниках = Истина;
		Иначе
        ТЧ.Элемент = Выбор;
		КонецЕсли;
	КонецЕсли; 
ТЧ.Количество = NUM;
ТЧ.Позиция = POSITION;
ТЧ.Примечание = DEFIN;
ТЧ.Исполнение = ISP;
ВыборЭтапа = Справочники.Номенклатура.НайтиПоНаименованию(СокрЛП(ETAP),Истина);
	Если Не ВыборЭтапа.Пустая() Тогда
    ТЧ.ЭтапПроизводства = ВыборЭтапа;
	КонецЕсли;
КонецПроцедуры 

&НаСервере
Процедура ДобавитьИсполнение(Номер,Наименование)
ТЧ = ТаблицаИсполнений.Добавить();
ТЧ.Исполнение = Наименование;
ТЧ.Номер = Номер;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	Если ЭтаФорма.Модифицированность Тогда
	Результат = Вопрос("Эскиз спецификации изменен. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		Если Результат = КодВозвратаДиалога.Да Тогда	
		СохранитьВФайл(Неопределено);
		ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
		КонецЕсли;	
	КонецЕсли;
ТаблицаЭскизаСпецификации.Очистить();
ТаблицаИсполнений.Очистить();
ИмяФайла = "";
ПолноеИмяФайла = "";
ЭтаФорма.Заголовок = "Эскиз спецификации";
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл с эскизом спецификации");
	Если Результат <> Неопределено Тогда
	ПолноеИмяФайла = Результат.ПолноеИмяФайла;
	ИмяФайла = Результат.Файл;
	ЭтаФорма.Заголовок = "Эскиз спецификации "+ИмяФайла;
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок;
		Если Результат.КоличествоКолонок = 2 Тогда
		    Для к = 2 по КолСтрок Цикл
			Состояние("Обработка...",к*100/КолСтрок,"Загрузка исполнений эскиза спецификации из файла..."); 
			ДобавитьИсполнение(ExcelЛист.Cells(к,1).Value,ExcelЛист.Cells(к,2).Value);
			КонецЦикла;
		ExcelЛист = Результат.Excel.Sheets(2);
		Версия = Лев(Результат.Excel.Version,Найти(Результат.Excel.Version,".")-1);
			Если Версия = "8" тогда
		    КолСтрок = ExcelЛист.Cells.CurrentRegion.Rows.Count;
			Иначе
		  	КолСтрок = ExcelЛист.Cells(1,1).SpecialCells(11).Row;  
			КонецЕсли;
			    Для к = 2 по КолСтрок Цикл
				Состояние("Обработка...",к*100/КолСтрок,"Загрузка эскиза спецификации из файла..."); 
				ДобавитьНаСервере(ExcelЛист.Cells(к,2).Value,ExcelЛист.Cells(к,3).Value,ExcelЛист.Cells(к,4).Value,ExcelЛист.Cells(к,1).Value,ExcelЛист.Cells(к,6).Value,ExcelЛист.Cells(к,5).Value,ExcelЛист.Cells(к,7).Value);
			    КонецЦикла;		
		Иначе
		    Для к = 2 по КолСтрок Цикл
			Состояние("Обработка...",к*100/КолСтрок,"Загрузка эскиза спецификации из файла..."); 
			ДобавитьНаСервере(ExcelЛист.Cells(к,2).Value,ExcelЛист.Cells(к,3).Value,ExcelЛист.Cells(к,4).Value,ExcelЛист.Cells(к,1).Value,ExcelЛист.Cells(к,6).Value,ExcelЛист.Cells(к,5).Value);
		    КонецЦикла;			
		КонецЕсли;	
	Результат.Excel.Quit();
	СортироватьПоПриИзмененииНаСервере();
	Иначе
	ЭтаФорма.Модифицированность = Ложь;
	КонецЕсли;  
КонецПроцедуры

&НаСервере
Процедура РаскрытьНаМПЗ(Спецификация,ЭтапСпецификации)
Запрос = Новый Запрос;
Выборка = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Все(ЭтапСпецификации,ТекущаяДата());
	Пока Выборка.Следующий() Цикл
		Если ТипЗнч(Выборка.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
		ВыборкаТЭС = ТаблицаЭскизаСпецификации.НайтиСтроки(Новый Структура("Позиция,Элемент",СокрЛП(Выборка.Позиция),Выборка.Элемент));
			Если ВыборкаТЭС.Количество() > 0 Тогда
			ТЧ_ТИ = ВыборкаТЭС[0].ТаблицаИсполнений.Добавить();
			ТЧ_ТИ.Спецификация = Спецификация;	
			Продолжить;		
			КонецЕсли;
		ТЧ = ТаблицаЭскизаСпецификации.Добавить();
		ТЧ.ВидЭлемента = Выборка.ВидЭлемента;
    	ТЧ.Элемент = Выборка.Элемент;
		ТЧ.ЕИ = Выборка.Элемент.ОсновнаяЕдиницаИзмерения;
		ТЧ.Статус = ПолучитьСтатус(Выборка.Элемент);
		ТЧ.КоличествоНаСкладах = ОбщийМодульВызовСервера.ПолучитьСводныйОстатокПоМестамХранения(СписокМестХранения,Выборка.Элемент);
		ИначеЕсли ТипЗнч(Выборка.Элемент) = Тип("СправочникСсылка.Номенклатура") Тогда
			Если Выборка.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Основа Тогда	
			РаскрытьНаМПЗ(Спецификация,Выборка.Элемент);
			Продолжить;
			Иначе
			ВыборкаТЭС = ТаблицаЭскизаСпецификации.НайтиСтроки(Новый Структура("Позиция,Элемент",СокрЛП(Выборка.Позиция),Выборка.Элемент));
				Если ВыборкаТЭС.Количество() > 0 Тогда
				ТЧ_ТИ = ВыборкаТЭС[0].ТаблицаИсполнений.Добавить();
				ТЧ_ТИ.Спецификация = Спецификация;	
				Продолжить;		
				КонецЕсли;
			ТЧ = ТаблицаЭскизаСпецификации.Добавить();
			ТЧ.ВидЭлемента = Выборка.ВидЭлемента;
    		ТЧ.Элемент = Выборка.Элемент;
			ТЧ.ЕИ = Выборка.Элемент.ОсновнаяЕдиницаИзмерения;
			ТЧ.Статус = ПолучитьСтатус(Выборка.Элемент);
			ТЧ.КоличествоНаСкладах = ОбщийМодульВызовСервера.ПолучитьСводныйОстатокПоМестамХранения(СписокМестХранения,Выборка.Элемент);	
	        КонецЕсли;
		Иначе
		ВыборкаТЭС = ТаблицаЭскизаСпецификации.НайтиСтроки(Новый Структура("Позиция,Элемент",СокрЛП(Выборка.Позиция),Выборка.Элемент));
			Если ВыборкаТЭС.Количество() > 0 Тогда
			ТЧ_ТИ = ВыборкаТЭС[0].ТаблицаИсполнений.Добавить();
			ТЧ_ТИ.Спецификация = Спецификация;	
			Продолжить;		
			КонецЕсли;
		ТЧ = ТаблицаЭскизаСпецификации.Добавить();
		ТЧ.ВидЭлемента = Выборка.ВидЭлемента;
    	ТЧ.Элемент = Выборка.Элемент;
		КонецЕсли;  
	ТЧ.Количество = Выборка.Норма;
	ТЧ.Позиция = СокрЛП(Выборка.Позиция);
	ТЧ.Примечание = Выборка.Примечание;
    ТЧ.ЭтапПроизводства = ПолучитьГруппуЭтапаПроизводства(Выборка.Владелец.Родитель);
	ТЧ_ТИ = ТЧ.ТаблицаИсполнений.Добавить();
	ТЧ_ТИ.Спецификация = Спецификация;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзСпецификации(Команда)
	Если ЭтаФорма.Модифицированность Тогда
	Результат = Вопрос("Эскиз спецификации изменен. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		Если Результат = КодВозвратаДиалога.Да Тогда	
		СохранитьВФайл(Неопределено);
		ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
		КонецЕсли;	
	КонецЕсли;
ТаблицаЭскизаСпецификации.Очистить();
ТаблицаИсполнений.Очистить();
ИмяФайла = "";
ПолноеИмяФайла = "";
ЭтаФорма.Заголовок = "Эскиз спецификации";
ОписаниеТипов = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
Оповещение = Новый ОписаниеОповещения("ПослеВводаЗначения",ЭтаФорма,ОписаниеТипов);
ПоказатьВводЗначения(Оповещение, Неопределено, "Выберите спецификацию", ОписаниеТипов);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаЗначения(ВыбСпец, Параметры) Экспорт
    Если ВыбСпец <> Неопределено Тогда
	ИмяФайла = СокрЛП(ВыбСпец);
	ПолноеИмяФайла = "";
	ЭтаФорма.Заголовок = "Эскиз спецификации "+ИмяФайла;
	РаскрытьНаМПЗ(ВыбСпец,ВыбСпец); 
	СортироватьПоПриИзмененииНаСервере();
	ЭтаФорма.Модифицированность = Истина;
    КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИсполненияНаСервере(СписокИсполнений)
ИмяФайла = СокрЛП(СписокИсполнений[0].Значение);
КоличествоИсполнений = СписокИсполнений.Количество();
ПолноеИмяФайла = "";
ЭтаФорма.Заголовок = "Эскиз спецификации "+ИмяФайла;
	Для каждого Исполнение Из СписокИсполнений Цикл
	РаскрытьНаМПЗ(Исполнение.Значение,Исполнение.Значение);
	КонецЦикла;
		Для каждого ТЧ Из ТаблицаЭскизаСпецификации Цикл	
			Если ТЧ.ТаблицаИсполнений.Количество() < КоличествоИсполнений Тогда
				Для каждого ТЧ_ТИ Из ТЧ.ТаблицаИсполнений Цикл
				ТЧ_К = ТаблицаКопия.Добавить();
				ТЧ_К.ВидЭлемента = ТЧ.ВидЭлемента;
		    	ТЧ_К.Элемент = ТЧ.Элемент;
				ТЧ_К.ЕИ = ТЧ.ЕИ;
				ТЧ_К.Статус = ТЧ.Статус;
				ТЧ_К.КоличествоНаСкладах = ТЧ.КоличествоНаСкладах;
				ТЧ_К.Количество = ТЧ.Количество;
				ТЧ_К.Позиция = ТЧ.Позиция;
				ТЧ_К.Примечание = ТЧ.Примечание;
			    ТЧ_К.ЭтапПроизводства = ТЧ.ЭтапПроизводства;
			    ТЧ_К.НетВСправочниках = ТЧ.НетВСправочниках;
				Выборка = ТаблицаИсполнений.НайтиСтроки(Новый Структура("Исполнение",СокрЛП(ТЧ_ТИ.Спецификация)));
					Если Выборка.Количество() = 0 Тогда
					ТЧ_ТИ_Общ = ТаблицаИсполнений.Добавить();
					ТЧ_ТИ_Общ.Исполнение = СокрЛП(ТЧ_ТИ.Спецификация);
					ТЧ_ТИ_Общ.Номер = ТаблицаИсполнений.Количество();
					ТЧ_К.Исполнение = ТЧ_ТИ_Общ.Номер;
					Иначе
					ТЧ_К.Исполнение = Выборка[0].Номер;
					КонецЕсли;
				КонецЦикла;
			Иначе
			ТЧ_К = ТаблицаКопия.Добавить();
			ТЧ_К.ВидЭлемента = ТЧ.ВидЭлемента;
	    	ТЧ_К.Элемент = ТЧ.Элемент;
			ТЧ_К.ЕИ = ТЧ.ЕИ;
			ТЧ_К.Статус = ТЧ.Статус;
			ТЧ_К.КоличествоНаСкладах = ТЧ.КоличествоНаСкладах;
			ТЧ_К.Количество = ТЧ.Количество;
			ТЧ_К.Позиция = ТЧ.Позиция;
			ТЧ_К.Примечание = ТЧ.Примечание;
		    ТЧ_К.ЭтапПроизводства = ТЧ.ЭтапПроизводства;
		    ТЧ_К.НетВСправочниках = ТЧ.НетВСправочниках;
			КонецЕсли; 
		КонецЦикла;
ТаблицаЭскизаСпецификации.Очистить();
	Для каждого ТЧ Из ТаблицаКопия Цикл 
	ТЧ_ТЭС = ТаблицаЭскизаСпецификации.Добавить();
	ТЧ_ТЭС.ВидЭлемента = ТЧ.ВидЭлемента;
	ТЧ_ТЭС.Элемент = ТЧ.Элемент;
	ТЧ_ТЭС.ЕИ = ТЧ.ЕИ;
	ТЧ_ТЭС.Статус = ТЧ.Статус;
	ТЧ_ТЭС.КоличествоНаСкладах = ТЧ.КоличествоНаСкладах;
	ТЧ_ТЭС.Количество = ТЧ.Количество;
	ТЧ_ТЭС.Позиция = ТЧ.Позиция;
	ТЧ_ТЭС.Примечание = ТЧ.Примечание;
    ТЧ_ТЭС.ЭтапПроизводства = ТЧ.ЭтапПроизводства;
    ТЧ_ТЭС.НетВСправочниках = ТЧ.НетВСправочниках;
	ТЧ_ТЭС.Исполнение = ТЧ.Исполнение;		
	КонецЦикла;
СортироватьПоПриИзмененииНаСервере(); 
ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИсполнения(Команда)
	Если ЭтаФорма.Модифицированность Тогда
	Результат = Вопрос("Эскиз спецификации изменен. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		Если Результат = КодВозвратаДиалога.Да Тогда	
		СохранитьВФайл(Неопределено);
		ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
		КонецЕсли;	
	КонецЕсли;
ТаблицаЭскизаСпецификации.Очистить();
ТаблицаИсполнений.Очистить();
ТаблицаКопия.Очистить();
ИмяФайла = "";
ПолноеИмяФайла = "";
ЭтаФорма.Заголовок = "Эскиз спецификации";
Результат = ОткрытьФормуМодально("Обработка.СозданиеЭскизаСпецификации.Форма.ФормаВыбораИсполнений");
	Если Результат <> Неопределено Тогда
	ЗагрузитьИсполненияНаСервере(Результат);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьЗначениеПеречисления(Значение)
Возврат(Значение.Метаданные().ЗначенияПеречисления[Перечисления[Значение.Метаданные().Имя].Индекс(Значение)].Имя);
КонецФункции

&НаСервере
Функция СоздатьТабличныйДокумент()
ТабДок = Новый ТабличныйДокумент;

Макет = Обработки.СозданиеЭскизаСпецификации.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблСтрока = Макет.ПолучитьОбласть("Строка");

ТабДок.Вывести(ОблШапка);
    Для каждого ТЧ Из ТаблицаЭскизаСпецификации Цикл
	ОблСтрока.Параметры.Заполнить(ТЧ);
	ОблСтрока.Параметры.ВидЭлемента = ПолучитьЗначениеПеречисления(ТЧ.ВидЭлемента);
	ТабДок.Вывести(ОблСтрока);
    КонецЦикла;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура СохранитьВФайл(Команда)
	Если Не ЗначениеЗаполнено(ПолноеИмяФайла) Тогда
	СохранитьКак(Неопределено);
	Возврат;
	КонецЕсли;
		Если ТаблицаИсполнений.Количество() = 0 Тогда
		ТД = СоздатьТабличныйДокумент();
		ТД.Записать(ПолноеИмяФайла,"XLS");			
		ЭтаФорма.Модифицированность = Ложь;	
		Иначе	
		СохранитьИсполненияВФайл();
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИсполненияВФайл()
	Попытка
	Excel = Новый COMОбъект("Excel.Application");
	Книга = Excel.WorkBooks.Add();
	Лист = Книга.WorkSheets(1);
	Лист.Cells(1,1).Value = "Номер исполнения";
	Лист.Cells(1,2).Value = "Обозначение";
	Колонка = 2;
		Для каждого ТЧ Из ТаблицаИсполнений Цикл
		Лист.Cells(Колонка,2).Value = ТЧ.Исполнение;
		Лист.Cells(Колонка,1).Value = ТЧ.Номер;
		Колонка = Колонка + 1;
		КонецЦикла;
			Если Книга.WorkSheets.Count > 1 Тогда
			Лист = Книга.WorkSheets(2);
			Иначе	
			Лист = Excel.ActiveWorkbook.Sheets.Add(,Лист);
			КонецЕсли;
	Лист.Cells(1,1).Value = "Поз. обозн.";
	Лист.Cells(1,2).Value = "Вид элемента";
	Лист.Cells(1,3).Value = "Наименование";			
	Лист.Cells(1,4).Value = "Количество";
	Лист.Cells(1,5).Value = "Этап производства";
	Лист.Cells(1,6).Value = "Примечание";
	Лист.Cells(1,7).Value = "Исполнение";
	Колонка = 2;                   
	    Для каждого ТЧ Из ТаблицаЭскизаСпецификации Цикл
		Лист.Cells(Колонка,1).Value = ТЧ.Позиция;
		Лист.Cells(Колонка,2).Value = СокрЛП(ТЧ.ВидЭлемента);
		Лист.Cells(Колонка,3).Value = СокрЛП(ТЧ.Элемент);			
		Лист.Cells(Колонка,4).Value = ТЧ.Количество;
		Лист.Cells(Колонка,5).Value = СокрЛП(ТЧ.ЭтапПроизводства);
		Лист.Cells(Колонка,6).Value = ТЧ.Примечание;
		Лист.Cells(Колонка,7).Value = ТЧ.Исполнение;
		Колонка = Колонка + 1;
		КонецЦикла;
	Excel.DisplayAlerts=0;
	Книга.SaveAs(ПолноеИмяФайла);
	Excel.Quit();
	ЭтаФорма.Модифицированность = Ложь;
	Исключение
	Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКак(Команда)
Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
Диалог.Заголовок = "Сохранение в файл...";
Диалог.ПолноеИмяФайла = ИмяФайла; 
Фильтр = "Microsoft Excel|*.xls|Книга Microsoft Excel|*.xlsx"; 
Диалог.Фильтр = Фильтр; 
Диалог.МножественныйВыбор = Ложь;
	Если Не Диалог.Выбрать() Тогда
    Возврат;
	КонецЕсли;
ПолноеИмяФайла = Диалог.ПолноеИмяФайла;
Файл = Новый Файл(ПолноеИмяФайла);
ИмяФайла = Файл.ИмяБезРасширения;
ЭтаФорма.Заголовок = "Эскиз спецификации "+ИмяФайла;
	Если ТаблицаИсполнений.Количество() = 0 Тогда
	ТД = СоздатьТабличныйДокумент();
	ТД.Записать(ПолноеИмяФайла,"XLS");			
	ЭтаФорма.Модифицированность = Ложь;	
	Иначе
	СохранитьИсполненияВФайл();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПрисвоитьЭтапНаСервере(Стр, Этап)
ТЧ = ТаблицаЭскизаСпецификации.НайтиПоИдентификатору(Стр);
ТЧ.ЭтапПроизводства = Этап;
КонецПроцедуры

&НаКлиенте
Процедура ПрисвоитьЭтап(Команда)
	Если Элементы.ТаблицаЭскизаСпецификации.ВыделенныеСтроки.Количество() = 0 Тогда
	Сообщить("Выберите строку(и)");
	Возврат;
	КонецЕсли; 
Форма = ПолучитьФорму("Справочник.Номенклатура.ФормаВыбораГруппы");
Результат = Форма.ОткрытьМодально();
	Для каждого ТекСтрока из Элементы.ТаблицаЭскизаСпецификации.ВыделенныеСтроки Цикл
	ПрисвоитьЭтапНаСервере(ТекСтрока,Результат);
	КонецЦикла;
ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЭтапы(Команда)
	Если Элементы.ТаблицаЭскизаСпецификации.ВыделенныеСтроки.Количество() = 0 Тогда
	Сообщить("Выберите строку(и)");
	Возврат;
	КонецЕсли;
		Для каждого ТекСтрока из Элементы.ТаблицаЭскизаСпецификации.ВыделенныеСтроки Цикл
		ПрисвоитьЭтапНаСервере(ТекСтрока,"");
		КонецЦикла;
ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Функция ПолучитьСтатусМПЗНаСервере(ВыбЭлемент)
Возврат(ПолучитьСтатус(ВыбЭлемент));
КонецФункции 

&НаСервере
Функция ПолучитьВидНормыРасходов(Стр)
Возврат(Перечисления.ВидыЭлементовНормРасходов[Стр]);
КонецФункции

&НаКлиенте
Процедура ТабличнаяЧастьЭлементНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
	Если Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.ВидЭлемента = ПолучитьВидНормыРасходов("Материал") Тогда
	Результат = ОткрытьФормуМодально("Справочник.Материалы.ФормаВыбора",Новый Структура("ТекущаяСтрока",Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент));
	ИначеЕсли Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.ВидЭлемента = ПолучитьВидНормыРасходов("МатериалВспомогательный") Тогда
	Результат = ОткрытьФормуМодально("Справочник.Материалы.ФормаВыбора",Новый Структура("ТекущаяСтрока",Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент));
	ИначеЕсли Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.ВидЭлемента = ПолучитьВидНормыРасходов("ТехОперация") Тогда	
	Результат = ОткрытьФормуМодально("Справочник.ТехОперации.ФормаВыбора",Новый Структура("ТекущаяСтрока",Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент));
	ИначеЕсли Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.ВидЭлемента = ПолучитьВидНормыРасходов("ТехОснастка") Тогда	
	Результат = ОткрытьФормуМодально("Справочник.ТехОснастка.ФормаВыбора",Новый Структура("ТекущаяСтрока",Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент));	
	ИначеЕсли (Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.ВидЭлемента = ПолучитьВидНормыРасходов("Документ"))или
			  (Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.ВидЭлемента = ПолучитьВидНормыРасходов("Программа"))Тогда	
	Результат = ОткрытьФормуМодально("Справочник.Документация.ФормаВыбора",Новый Структура("ТекущаяСтрока",Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент));	
	Иначе
	Результат = ОткрытьФормуМодально("Справочник.Номенклатура.ФормаВыбора",Новый Структура("ТекущаяСтрока",Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент));
	КонецЕсли;
		Если Результат <> Неопределено Тогда
		Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент = Результат;			
		Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Статус = ПолучитьСтатусМПЗНаСервере(Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент);
			Если ТипЗнч(Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент) = Тип("СправочникСсылка.Материалы") или
				 ТипЗнч(Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент) = Тип("СправочникСсылка.Номенклатура") Тогда
			Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.ЕИ = ПолучитьЕдиницуИзмерения(Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент);
			КонецЕсли;
		КонецЕсли;
Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.НетВСправочниках = Не ЗначениеЗаполнено(Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент);	
КонецПроцедуры

&НаСервере
Процедура ПроверкаЭлементаВведённогоВручную(Стр,Наименование)
ТЧ = ТаблицаЭскизаСпецификации.НайтиПоИдентификатору(Стр);
	Если Не ТЧ.ВидЭлемента.Пустая() Тогда
		Если ТЧ.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Материал Тогда
		Выбор = Справочники.Материалы.НайтиПоНаименованию(СокрЛП(Наименование),Истина);
		ИначеЕсли ТЧ.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.МатериалВспомогательный Тогда
		Выбор = Справочники.Материалы.НайтиПоНаименованию(СокрЛП(Наименование),Истина);
		ИначеЕсли (ТЧ.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Документ)или
				  (ТЧ.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Программа) Тогда
		Выбор = Справочники.Документация.НайтиПоНаименованию(СокрЛП(Наименование),Истина);
		ИначеЕсли ТЧ.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.ТехОперация Тогда
		Выбор = Справочники.ТехОперации.НайтиПоНаименованию(СокрЛП(Наименование),Истина);
		ИначеЕсли ТЧ.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.ТехОснастка Тогда
		Выбор = Справочники.ТехОснастка.НайтиПоНаименованию(СокрЛП(Наименование),Истина);
		Иначе
		Выбор = Справочники.Номенклатура.НайтиПоНаименованию(СокрЛП(Наименование),Истина);
		КонецЕсли;
			Если Не Выбор.Пустая() Тогда
			ТЧ.Элемент = Выбор;
			ТЧ.НетВСправочниках = Ложь;
			Статус = РегистрыСведений.СтатусыМПЗ.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("МПЗ",Выбор));
			ТЧ.Статус = Статус.Статус; 
			Иначе
			ТЧ.Статус = Неопределено; 		
			ТЧ.Элемент = Наименование;
			ТЧ.НетВСправочниках = Истина;
			КонецЕсли; 
	Иначе
	ТЧ.Статус = Неопределено; 		
	ТЧ.Элемент = Наименование;
	ТЧ.НетВСправочниках = Истина;
	КонецЕсли; 
КонецПроцедуры 

&НаСервере
Процедура ИзменитьРеквизитыСтроки(Стр)
ТЧ = ТаблицаЭскизаСпецификации.НайтиПоИдентификатору(Стр);
Статус = РегистрыСведений.СтатусыМПЗ.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("МПЗ",ТЧ.Элемент));
ТЧ.Статус = Статус.Статус;
ТЧ.НетВСправочниках = Ложь; 
КонецПроцедуры

&НаКлиенте
Процедура ВвестиВручную(Команда)
ВыбСтрока = "";
	Если ВвестиСтроку(ВыбСтрока,"Введите наименование",50) Тогда
	ПроверкаЭлементаВведённогоВручную(Элементы.ТаблицаЭскизаСпецификации.ТекущаяСтрока,ВыбСтрока);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьЭтапПроизводстваОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не ЭтоЭтапПроизводства(ВыбранноеЗначение) Тогда
	СтандартнаяОбработка = Ложь;
	Сообщить("Выберите этап производства с префиксом!");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ЭтоЭтапПроизводства(ВыбранноеЗначение)
Возврат(ЗначениеЗаполнено(ВыбранноеЗначение.Префикс));
КонецФункции

&НаКлиенте
Процедура ТабличнаяЧастьВидЭлементаПриИзменении(Элемент)
ПроверкаЭлементаВведённогоВручную(Элементы.ТаблицаЭскизаСпецификации.ТекущаяСтрока,Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент);
КонецПроцедуры

&НаСервере
Функция ПолучитьЕдиницуИзмерения(Элемент)
Возврат(Элемент.ОсновнаяЕдиницаИзмерения);
КонецФункции

&НаКлиенте
Процедура ТабличнаяЧастьЭлементПриИзменении(Элемент)
	Если ТипЗнч(Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент) <> Тип("Строка") Тогда
	Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.НетВСправочниках = Не ЗначениеЗаполнено(Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент);
		Если ТипЗнч(Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент) = Тип("СправочникСсылка.Материалы") или
			 ТипЗнч(Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент) = Тип("СправочникСсылка.Номенклатура") Тогда
		Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.ЕИ = ПолучитьЕдиницуИзмерения(Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент);
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПриИзменении(Элемент)
ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПоПриИзменении(Элемент)
СортироватьПоПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СортироватьПоПриИзмененииНаСервере()
	Если СортироватьПо = 1 Тогда		
	ТаблицаЭскизаСпецификации.Сортировать("Позиция,ВидЭлемента,Элемент,Исполнение");
	ИначеЕсли СортироватьПо = 2 Тогда		
	ТаблицаЭскизаСпецификации.Сортировать("ВидЭлемента,Позиция,Элемент");
	ИначеЕсли СортироватьПо = 3 Тогда		
	ТаблицаЭскизаСпецификации.Сортировать("Элемент,Позиция");
	ИначеЕсли СортироватьПо = 4 Тогда		
	ТаблицаЭскизаСпецификации.Сортировать("ЭтапПроизводства,ВидЭлемента,Позиция,Элемент");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокВозможныхАналогов(МПЗ)
Запрос = Новый Запрос;
СписокАналогов = Новый СписокЗначений;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	АналогиНормРасходов.Элемент КАК Элемент
	|ИЗ
	|	РегистрСведений.АналогиНормРасходов.СрезПоследних КАК АналогиНормРасходовСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АналогиНормРасходов КАК АналогиНормРасходов
	|		ПО АналогиНормРасходовСрезПоследних.АналогНормыРасходов = АналогиНормРасходов.Ссылка
	|ГДЕ
	|	АналогиНормРасходов.Владелец.Элемент = &Элемент
	|	И АналогиНормРасходовСрезПоследних.Норма > 0";
Запрос.УстановитьПараметр("Элемент", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать();
	Пока ВыборкаМПЗ.Следующий() Цикл
		Если ТипЗнч(ВыборкаМПЗ.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
			Если СписокАналогов.НайтиПоЗначению(ВыборкаМПЗ.Элемент) = Неопределено Тогда
			СписокАналогов.Добавить(ВыборкаМПЗ.Элемент);
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла; 
СписокАналогов.СортироватьПоЗначению();
Возврат(СписокАналогов);
КонецФункции

&НаСервере
Функция ПоказатьОстаткиНаСкладахНаСервере(КоличествоИзделий)
Запрос = Новый Запрос;
ТабДок = Новый ТабличныйДокумент;
Массив = Новый Массив;
МассивЕИ = Новый Массив;
ТаблицаМПЗ = Новый ТаблицаЗначений;

Массив.Добавить(Тип("СправочникСсылка.Номенклатура"));
Массив.Добавить(Тип("СправочникСсылка.Материалы"));
Массив.Добавить(Тип("Строка"));

МассивЕИ.Добавить(Тип("СправочникСсылка.ЕдиницыИзмерений"));
МассивЕИ.Добавить(Тип("СправочникСсылка.ОсновныеЕдиницыИзмерений"));

ТаблицаМПЗ.Колонки.Добавить("МПЗ",Новый ОписаниеТипов(Массив));
ТаблицаМПЗ.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)));
ТаблицаМПЗ.Колонки.Добавить("ЕдиницаИзмерения",Новый ОписаниеТипов(МассивЕИ));

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("Остатки");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблМПЗ = Макет.ПолучитьОбласть("МПЗ");
ОблАналог = Макет.ПолучитьОбласть("Аналог");
ОблМестоХранения = Макет.ПолучитьОбласть("МестоХранения");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.Изделие = ЭтаФорма.Заголовок;
ОблШапка.Параметры.Количество = КоличествоИзделий;
ТабДок.Вывести(ОблШапка);
СписокВидовЭлементовНормРасходов = Новый СписокЗначений;

СписокВидовЭлементовНормРасходов.Добавить(Перечисления.ВидыЭлементовНормРасходов.Деталь);
СписокВидовЭлементовНормРасходов.Добавить(Перечисления.ВидыЭлементовНормРасходов.Узел);
СписокВидовЭлементовНормРасходов.Добавить(Перечисления.ВидыЭлементовНормРасходов.Набор);
СписокВидовЭлементовНормРасходов.Добавить(Перечисления.ВидыЭлементовНормРасходов.Основа);
СписокВидовЭлементовНормРасходов.Добавить(Перечисления.ВидыЭлементовНормРасходов.Материал);
	Для каждого ТЧ_МПЗ Из ТаблицаЭскизаСпецификации Цикл
		Если СписокВидовЭлементовНормРасходов.НайтиПоЗначению(ТЧ_МПЗ.ВидЭлемента) <> Неопределено Тогда
		ТЧ = ТаблицаМПЗ.Добавить();
		ТЧ.МПЗ = ТЧ_МПЗ.Элемент;
		ТЧ.Количество = ТЧ_МПЗ.Количество*КоличествоИзделий;
		ТЧ.ЕдиницаИзмерения = ТЧ_МПЗ.ЕИ;
		КонецЕсли;  
	КонецЦикла;
ТаблицаМПЗ.Свернуть("МПЗ,ЕдиницаИзмерения","Количество");
ТаблицаМПЗ.Сортировать("МПЗ");
Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОстатки.МПЗ КАК МПЗ,
	|	МестаХраненияОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	МестаХраненияОстатки.МестоХранения КАК МестоХранения
	|ИЗ
	|	РегистрНакопления.МестаХранения.Остатки КАК МестаХраненияОстатки
	|ГДЕ
	|	МестаХраненияОстатки.МестоХранения В ИЕРАРХИИ(&СписокМестХранения)
	|ИТОГИ
	|	СУММА(КоличествоОстаток)
	|ПО
	|	МПЗ,
	|	МестоХранения";
Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для каждого ТЧ Из ТаблицаМПЗ Цикл
	ОблМПЗ.Параметры.МПЗ = ТЧ.МПЗ;
		Если ТипЗнч(ТЧ.МПЗ) = Тип("Строка") Тогда
		ОблМПЗ.Параметры.Кол = ТЧ.Количество;
		ОблМПЗ.Параметры.ЕдиницаИзмерения = ТЧ.ЕдиницаИзмерения;		
		Иначе	
		ОблМПЗ.Параметры.Кол = ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.МПЗ.ОсновнаяЕдиницаИзмерения);
		ОблМПЗ.Параметры.ЕдиницаИзмерения = ТЧ.МПЗ.ЕдиницаИзмерения;		
		КонецЕсли;
			Если ТипЗнч(ТЧ.МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
			ОблМПЗ.Параметры.ГруппаПоЗакупкам = ТЧ.МПЗ.ГруппаПоЗакупкам;
			КонецЕсли;	 
	ВыборкаМПЗ.Сбросить();
	КолНаСкладе = 0;
		Пока ВыборкаМПЗ.НайтиСледующий(Новый Структура("МПЗ",ТЧ.МПЗ)) Цикл
		КолНаСкладе = ВыборкаМПЗ.КоличествоОстаток;	
		КонецЦикла;
	ОблМПЗ.Параметры.КолНаСкладе = КолНаСкладе;
	ТабДок.Вывести(ОблМПЗ);
	ТабДок.НачатьГруппуСтрок("МПЗ", Истина);
	СписокАналогов = ПолучитьСписокВозможныхАналогов(ТЧ.МПЗ);
	ВыборкаМПЗ.Сбросить();
		Пока ВыборкаМПЗ.НайтиСледующий(Новый Структура("МПЗ",ТЧ.МПЗ)) Цикл
		ВыборкаМестаХранения = ВыборкаМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаМестаХранения.НайтиСледующий(Новый Структура("МПЗ",ТЧ.МПЗ)) Цикл
			ОблМестоХранения.Параметры.МестоХранения = ВыборкаМестаХранения.МестоХранения;
			ОблМестоХранения.Параметры.КолНаСкладе = ВыборкаМестаХранения.КоличествоОстаток;
			ТабДок.Вывести(ОблМестоХранения);
			КонецЦикла;	
		КонецЦикла;
			Для каждого Аналог Из СписокАналогов Цикл
			ОблАналог.Параметры.МПЗ = Аналог.Значение;
			ОблАналог.Параметры.Кол = ПолучитьБазовоеКоличество(ТЧ.Количество,Аналог.Значение.ОсновнаяЕдиницаИзмерения);
			ОблАналог.Параметры.ЕдиницаИзмерения = Аналог.Значение.ЕдиницаИзмерения;
				Если ТипЗнч(Аналог.Значение) = Тип("СправочникСсылка.Материалы") Тогда
				ОблАналог.Параметры.ГруппаПоЗакупкам = Аналог.Значение.ГруппаПоЗакупкам;
				КонецЕсли;
			ВыборкаМПЗ.Сбросить();
			КолНаСкладе = 0;
				Пока ВыборкаМПЗ.НайтиСледующий(Новый Структура("МПЗ",Аналог.Значение)) Цикл
				КолНаСкладе = ВыборкаМПЗ.КоличествоОстаток;	
				КонецЦикла;
			ОблАналог.Параметры.КолНаСкладе = КолНаСкладе;
			ТабДок.Вывести(ОблАналог);
			ВыборкаМПЗ.Сбросить();
				Пока ВыборкаМПЗ.НайтиСледующий(Новый Структура("МПЗ",Аналог.Значение)) Цикл
				ВыборкаМестаХранения = ВыборкаМПЗ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаМестаХранения.НайтиСледующий(Новый Структура("МПЗ",Аналог.Значение)) Цикл
					ОблМестоХранения.Параметры.МестоХранения = ВыборкаМестаХранения.МестоХранения;
					ОблМестоХранения.Параметры.КолНаСкладе = ВыборкаМестаХранения.КоличествоОстаток;
					ТабДок.Вывести(ОблМестоХранения);
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
	ТабДок.ЗакончитьГруппуСтрок(); 
	КонецЦикла;
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 2;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПоказатьОстаткиНаСкладах(Команда)
КоличествоИзделий = 1;
	Если ВвестиЧисло(КоличествоИзделий,"Введите кол-во изделий",9,3) Тогда
	ТабДок = ПоказатьОстаткиНаСкладахНаСервере(КоличествоИзделий);
	ТабДок.Показать("Оценка остатков МПЗ на складах по спецификации");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура СравнитьСпецификации(Команда)
ОткрытьФорму("Отчет.СравнениеСпецификаций.Форма");
КонецПроцедуры

&НаСервере
Функция ПолучитьДП(МПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоговорныеПозицииСрезПоследних.Цена,
	|	ДоговорныеПозицииСрезПоследних.Валюта
	|ИЗ
	|	РегистрСведений.ДоговорныеПозиции.СрезПоследних(&НаДату, ) КАК ДоговорныеПозицииСрезПоследних
	|ГДЕ
	|	ДоговорныеПозицииСрезПоследних.ДоговорнаяПозиция.МПЗ = &МПЗ";
Запрос.УстановитьПараметр("МПЗ", МПЗ);
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(Новый Структура("Цена,Валюта",ВыборкаДетальныеЗаписи.Цена,ВыборкаДетальныеЗаписи.Валюта));
	КонецЦикла;
Возврат(Новый Структура("Цена,Валюта",0,""));
КонецФункции

&НаСервере
Функция ПечатьЗакупочнаяВедомостьСводнаяНаСервере(КоличествоИзделий)
Запрос = Новый Запрос;
ТабДок = Новый ТабличныйДокумент;
Массив = Новый Массив;
МассивЕИ = Новый Массив;
ТаблицаМПЗ = Новый ТаблицаЗначений;

Массив.Добавить(Тип("СправочникСсылка.Номенклатура"));
Массив.Добавить(Тип("СправочникСсылка.Материалы"));
Массив.Добавить(Тип("Строка"));

МассивЕИ.Добавить(Тип("СправочникСсылка.ЕдиницыИзмерений"));
МассивЕИ.Добавить(Тип("СправочникСсылка.ОсновныеЕдиницыИзмерений"));

ТаблицаМПЗ.Колонки.Добавить("Группа");
ТаблицаМПЗ.Колонки.Добавить("МПЗ",Новый ОписаниеТипов(Массив));
ТаблицаМПЗ.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)));
ТаблицаМПЗ.Колонки.Добавить("ЕдиницаИзмерения",Новый ОписаниеТипов(МассивЕИ));

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("ЗакупочнаяВедомостьСводная");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблГруппа = Макет.ПолучитьОбласть("Группа");
ОблМПЗ = Макет.ПолучитьОбласть("МПЗ");
ОблАналог = Макет.ПолучитьОбласть("Аналог");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.ЭскизСпецификации = ЭтаФорма.Заголовок;
ОблШапка.Параметры.КоличествоИзделий = КоличествоИзделий;
ТабДок.Вывести(ОблШапка);
СписокВидовЭлементовНормРасходов = Новый СписокЗначений;

СписокВидовЭлементовНормРасходов.Добавить(Перечисления.ВидыЭлементовНормРасходов.Деталь);
СписокВидовЭлементовНормРасходов.Добавить(Перечисления.ВидыЭлементовНормРасходов.Узел);
СписокВидовЭлементовНормРасходов.Добавить(Перечисления.ВидыЭлементовНормРасходов.Набор);
СписокВидовЭлементовНормРасходов.Добавить(Перечисления.ВидыЭлементовНормРасходов.Основа);
СписокВидовЭлементовНормРасходов.Добавить(Перечисления.ВидыЭлементовНормРасходов.Материал);
	Для каждого ТЧ_МПЗ Из ТаблицаЭскизаСпецификации Цикл
		Если СписокВидовЭлементовНормРасходов.НайтиПоЗначению(ТЧ_МПЗ.ВидЭлемента) <> Неопределено Тогда
		ТЧ = ТаблицаМПЗ.Добавить();
			Если ТипЗнч(ТЧ_МПЗ.Элемент) = Тип("Строка") Тогда
			ТЧ.Группа = "! МПЗ ненайденные в справочниках";
			Иначе
			ТЧ.Группа = СокрЛП(ПолучитьВерхнегоРодителя(ТЧ_МПЗ.Элемент).Наименование);
			КонецЕсли;
		ТЧ.МПЗ = ТЧ_МПЗ.Элемент;
		ТЧ.Количество = ТЧ_МПЗ.Количество;
		ТЧ.ЕдиницаИзмерения = ТЧ_МПЗ.ЕИ;
		КонецЕсли;  
	КонецЦикла;
ТаблицаМПЗ.Свернуть("Группа,МПЗ,ЕдиницаИзмерения","Количество");
ТаблицаМПЗ.Сортировать("Группа,МПЗ");
Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОстатки.МПЗ КАК МПЗ,
	|	МестаХраненияОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	МестаХраненияОстатки.МестоХранения КАК МестоХранения
	|ИЗ
	|	РегистрНакопления.МестаХранения.Остатки КАК МестаХраненияОстатки
	|ГДЕ
	|	МестаХраненияОстатки.МестоХранения В ИЕРАРХИИ(&СписокМестХранения)
	|ИТОГИ
	|	СУММА(КоличествоОстаток)
	|ПО
	|	МПЗ";
Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
СебестоимостьВсего = 0;
ЦенаПартииВсего = 0;
ТекГруппа = Неопределено;
	Для каждого ТЧ Из ТаблицаМПЗ Цикл
		Если ТекГруппа <> ТЧ.Группа Тогда
			Если ТекГруппа <> Неопределено Тогда
			ТабДок.ЗакончитьГруппуСтрок();
			КонецЕсли;
		ТекГруппа = ТЧ.Группа;
		ОблГруппа.Параметры.Группа = ТЧ.Группа;
		ТабДок.Вывести(ОблГруппа);
		ТабДок.НачатьГруппуСтрок("Группа",Истина);
		КонецЕсли;
			Если ТипЗнч(ТЧ.МПЗ) = Тип("Строка") Тогда
			ОблМПЗ.Параметры.Наименование = СокрЛП(ТЧ.МПЗ);
			Иначе
			ОблМПЗ.Параметры.Наименование = СокрЛП(ТЧ.МПЗ.Наименование);
			КонецЕсли; 
	ОблМПЗ.Параметры.МПЗ = ТЧ.МПЗ;
		Если ТипЗнч(ТЧ.МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
		ОблМПЗ.Параметры.ГруппаПоЗакупкам = ТЧ.МПЗ.ГруппаПоЗакупкам;
		ОблМПЗ.Параметры.МинОстаток = ТЧ.МПЗ.МинОстаток;
		КонецЕсли;
			Если ТипЗнч(ТЧ.МПЗ) = Тип("Строка") Тогда
			БазовоеКоличество = ТЧ.Количество;
			ОблМПЗ.Параметры.Количество = БазовоеКоличество;
			ОблМПЗ.Параметры.КоличествоВсего = БазовоеКоличество*КоличествоИзделий;
			ОблМПЗ.Параметры.ЕдиницаИзмерения = ТЧ.ЕдиницаИзмерения;		
			Иначе
			БазовоеКоличество = ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.МПЗ.ОсновнаяЕдиницаИзмерения);
			ОблМПЗ.Параметры.Статус = ПолучитьСтатус(ТЧ.МПЗ);
			ОблМПЗ.Параметры.Количество = БазовоеКоличество;
			ОблМПЗ.Параметры.КоличествоВсего = БазовоеКоличество*КоличествоИзделий;
			ОблМПЗ.Параметры.ЕдиницаИзмерения = ТЧ.МПЗ.ЕдиницаИзмерения;
			Результат = ПолучитьДП(ТЧ.МПЗ);
			ОблМПЗ.Параметры.ЦенаКонтрактная = Результат.Цена;
			ОблМПЗ.Параметры.Валюта = Результат.Валюта;
				Если ТипЗнч(ТЧ.МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
				ОблМПЗ.Параметры.ЦенаФактическая = ОбщийМодульВызовСервера.ПолучитьПоследнююЦену(ТЧ.МПЗ,ТекущаяДата());
				Иначе	
				ОблМПЗ.Параметры.ЦенаФактическая = ОбщийМодульВызовСервера.ПолучитьСтоимостьМПЗ(ТЧ.МПЗ,1,ТекущаяДата(),0);
				КонецЕсли;
			Себестоимость = ОблМПЗ.Параметры.ЦенаФактическая*БазовоеКоличество;
			ЦенаПартии = Себестоимость*КоличествоИзделий;
			ОблМПЗ.Параметры.Себестоимость = Себестоимость;
			ОблМПЗ.Параметры.ЦенаПартии = ЦенаПартии;
			СебестоимостьВсего = СебестоимостьВсего + Себестоимость;
			ЦенаПартииВсего = ЦенаПартииВсего + ЦенаПартии;		
			КонецЕсли;	 
	ВыборкаМПЗ.Сбросить();
	КолНаСкладе = 0;
		Пока ВыборкаМПЗ.НайтиСледующий(Новый Структура("МПЗ",ТЧ.МПЗ)) Цикл
		КолНаСкладе = ВыборкаМПЗ.КоличествоОстаток;	
		КонецЦикла;
	ОблМПЗ.Параметры.КолНаСкладе = КолНаСкладе;
	ОблМПЗ.Параметры.Дефицит = КолНаСкладе - БазовоеКоличество*КоличествоИзделий;
	ТабДок.Вывести(ОблМПЗ);
	//ТабДок.НачатьГруппуСтрок("МПЗ", Истина);
	//СписокАналогов = ПолучитьСписокВозможныхАналогов(ТЧ.МПЗ);
	//	Для каждого Аналог Из СписокАналогов Цикл
	//	ОблАналог.Параметры.Наименование = СокрЛП(Аналог.Значение.Наименование);
	//	ОблАналог.Параметры.Аналог = Аналог.Значение;
	//	ОблАналог.Параметры.Статус = ПолучитьСтатус(Аналог.Значение);
	//	ОблАналог.Параметры.Количество = ПолучитьБазовоеКоличество(ТЧ.Количество,Аналог.Значение.ОсновнаяЕдиницаИзмерения);
	//	ОблАналог.Параметры.КоличествоВсего = ОблАналог.Параметры.Количество*КоличествоИзделий;
	//	ОблАналог.Параметры.ЕдиницаИзмерения = Аналог.Значение.ЕдиницаИзмерения;
	//	Результат = ПолучитьДП(ТЧ.МПЗ);
	//	ОблАналог.Параметры.ЦенаКонтрактная = Результат.Цена;
	//	ОблАналог.Параметры.Валюта = Результат.Валюта;
	//	ОблАналог.Параметры.ЦенаФактическая = ОбщийМодульВызовСервера.ПолучитьПоследнююЦену(Аналог.Значение,ТекущаяДата());
	//	ВыборкаМПЗ.Сбросить();
	//	КолНаСкладе = 0;
	//		Пока ВыборкаМПЗ.НайтиСледующий(Новый Структура("МПЗ",Аналог.Значение)) Цикл
	//		КолНаСкладе = ВыборкаМПЗ.КоличествоОстаток;	
	//		КонецЦикла;
	//	ОблАналог.Параметры.КолНаСкладе = КолНаСкладе;
	//	ТабДок.Вывести(ОблАналог);
	//	КонецЦикла;
	//ТабДок.ЗакончитьГруппуСтрок(); 
	КонецЦикла;
		Если ТекГруппа <> Неопределено Тогда
		ТабДок.ЗакончитьГруппуСтрок();
		КонецЕсли;
ОблКонец.Параметры.СебестоимостьВсего = СебестоимостьВсего;
ОблКонец.Параметры.ЦенаПартииВсего = ЦенаПартииВсего;
ТабДок.Вывести(ОблКонец);
ТабДок.ФиксацияСверху = 3;
Возврат(ТабДок); 
КонецФункции

&НаКлиенте
Процедура ПечатьЗакупочнаяВедомостьСводная(Команда)
КоличествоИзделий = 1;
	Если ВвестиЧисло(КоличествоИзделий,"Введите кол-во изделий",9,3) Тогда
	ТабДок = ПечатьЗакупочнаяВедомостьСводнаяНаСервере(КоличествоИзделий);
	ТабДок.Показать("Закупочная ведомость сводная по спецификации");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьИсполнениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
СписокИсполнений = Новый СписокЗначений;

	Для каждого ТЧ Из ТаблицаИсполнений Цикл
	СписокИсполнений.Добавить(ТЧ.Номер);
	КонецЦикла;
Исполнение = СписокИсполнений.ВыбратьЭлемент("Выберите исполнение");
		Если Исполнение <> Неопределено Тогда
		Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Исполнение = Исполнение.Значение;
		КонецЕсли;  
КонецПроцедуры

&НаСервере
Функция ИмеетВхождение(МПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходов.Владелец КАК Владелец
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(, ) КАК НормыРасходовСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НормыРасходов КАК НормыРасходов
	|		ПО НормыРасходовСрезПоследних.НормаРасходов = НормыРасходов.Ссылка
	|ГДЕ
	|	НормыРасходов.ПометкаУдаления = ЛОЖЬ
	|	И НормыРасходов.Элемент = &Элемент
	|	И НормыРасходовСрезПоследних.Норма > 0";
Запрос.УстановитьПараметр("Элемент", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда	
	ВыборкаНР = РезультатЗапроса.Выбрать(); 
		Пока ВыборкаНР.Следующий() Цикл
			Если ПолучитьСтатус(ВыборкаНР.Владелец) <> Перечисления.СтатусыСпецификаций.Запрещённая Тогда	
			Возврат(Истина);
			КонецЕсли; 
		КонецЦикла;	
	КонецЕсли;
Возврат(Ложь);
КонецФункции

&НаСервере
Функция ПроверитьНаУникальностьНаСервере()
СписокУникальных = Новый СписокЗначений;

	Для каждого ТЧ Из ТаблицаЭскизаСпецификации Цикл	
		Если ТипЗнч(ТЧ.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
			Если Не ИмеетВхождение(ТЧ.Элемент) Тогда
			СписокУникальных.Добавить(ТЧ.Элемент);		
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
Возврат(СписокУникальных); 
КонецФункции

&НаКлиенте
Процедура ПроверитьНаУникальность(Команда)
СписокУникальных = ПроверитьНаУникальностьНаСервере();
	Если СписокУникальных.Количество() > 0 Тогда
	СписокУникальных.ВыбратьЭлемент("Уникальные материалы");
	Иначе	
	Сообщить("Нет уникальных материалов.");
	КонецЕсли;
КонецПроцедуры
            
&НаСервере
Функция ПолучитьМетаданные(ВыбТип)
Возврат(Метаданные.НайтиПоТипу(ВыбТип).ПолноеИмя());
КонецФункции
 
&НаКлиенте
Процедура ПерейтиКАналогу(Команда)
СписокВозможныхАналогов = ОбщийМодульВызовСервера.ПолучитьСписокВозможныхАналогов(Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент,ТекущаяДата());
Аналог = СписокВозможныхАналогов.ВыбратьЭлемент("Выберите аналог");
	Если Аналог <> Неопределено Тогда
	ТекФорма = ПолучитьФорму(ПолучитьМетаданные(ТипЗнч(Аналог.Значение))+".ФормаСписка");
	ТекФорма.Открыть();
	ТекФорма.Элементы.Список.ТекущаяСтрока = Аналог.Значение;	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаменитьНаАналогНаСервере(Стр,Аналог)
ТЧ = ТаблицаЭскизаСпецификации.НайтиПоИдентификатору(Стр);
ТЧ.Элемент = Аналог;
ТЧ.Статус = ПолучитьСтатус(Аналог);
ТЧ.ЕИ = Аналог.ОсновнаяЕдиницаИзмерения;
ТЧ.КоличествоНаСкладах = ОбщийМодульВызовСервера.ПолучитьСводныйОстатокПоМестамХранения(СписокМестХранения,Аналог);
КонецПроцедуры

&НаКлиенте
Процедура ЗаменитьНаАналог(Команда)
СписокВозможныхАналогов = ОбщийМодульВызовСервера.ПолучитьСписокВозможныхАналогов(Элементы.ТаблицаЭскизаСпецификации.ТекущиеДанные.Элемент,ТекущаяДата());
Аналог = СписокВозможныхАналогов.ВыбратьЭлемент("Выберите аналог");
	Если Аналог <> Неопределено Тогда
	ЗаменитьНаАналогНаСервере(Элементы.ТаблицаЭскизаСпецификации.ТекущаяСтрока,Аналог.Значение);
	КонецЕсли;
КонецПроцедуры
