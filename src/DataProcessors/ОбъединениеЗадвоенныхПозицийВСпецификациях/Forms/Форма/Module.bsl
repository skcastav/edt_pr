
&НаСервере
Процедура РаскрытьНаМПЗ(ЭтапСпецификации) 
СписокПозиций = Новый СписокЗначений;

ВыборкаНР = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Все(ЭтапСпецификации,ТекущаяДата());
	Пока ВыборкаНР.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаНР.Позиция) Тогда
		    Если СписокПозиций.НайтиПоЗначению(СокрЛП(ВыборкаНР.Позиция)) = Неопределено Тогда
			СписокПозиций.Добавить(СокрЛП(ВыборкаНР.Позиция));
			Иначе
			    Если СписокМПЗ.НайтиПоЗначению(ВыборкаНР.Элемент) = Неопределено Тогда
				СписокМПЗ.Добавить(ВыборкаНР.Элемент);				
			    КонецЕсли;			
		    КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры
 
&НаСервере
Процедура НайтиЗадвоенияНаСервере()
СписокМПЗ.Очистить();

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыМПЗ.СрезПоследних КАК СтатусыМПЗСрезПоследних
	|		ПО Номенклатура.Ссылка = СтатусыМПЗСрезПоследних.МПЗ
	|ГДЕ
	|	Номенклатура.Ссылка В ИЕРАРХИИ(&ГруппаСпецификаций)
	|	И Номенклатура.ЭтоГруппа = ЛОЖЬ
	|	И Номенклатура.ПометкаУдаления = ЛОЖЬ
	|	И СтатусыМПЗСрезПоследних.Статус <> &Статус";
Запрос.УстановитьПараметр("ГруппаСпецификаций", ГруппаСпецификаций);
Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыСпецификаций.Запрещённая);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	РаскрытьНаМПЗ(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура НайтиЗадвоения(Команда)
НайтиЗадвоенияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьСписокВхождений(ВыбМПЗ)
ТаблицаСпецификаций.Очистить();

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходов.Владелец КАК Владелец,
	|	НормыРасходов.Ссылка КАК Ссылка,
	|	НормыРасходов.Позиция КАК Позиция,
	|	НормыРасходовСрезПоследних.Период КАК Период,
	|	НормыРасходовСрезПоследних.Норма КАК Норма
	|ИЗ
	|	Справочник.НормыРасходов КАК НормыРасходов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НормыРасходов.СрезПоследних(, ) КАК НормыРасходовСрезПоследних
	|		ПО НормыРасходов.Ссылка = НормыРасходовСрезПоследних.НормаРасходов
	|ГДЕ
	|	НормыРасходов.Элемент = &Элемент
	|	И НормыРасходовСрезПоследних.Норма > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ ПО
	|	Владелец,
	|	Позиция";
Запрос.УстановитьПараметр("Элемент", ВыбМПЗ);
Результат = Запрос.Выполнить(); 
ВыборкаСпецификации = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСпецификации.Следующий() Цикл 
	ВыборкаПозиции = ВыборкаСпецификации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПозиции.Следующий() Цикл
	   	ВыборкаДетальныеЗаписи = ВыборкаПозиции.Выбрать();	
			Если ВыборкаДетальныеЗаписи.Количество() > 1 Тогда 
			ТЧ = ТаблицаСпецификаций.Добавить();
			ТЧ.Спецификация = ВыборкаСпецификации.Владелец;
			ТЧ.Позиция = ВыборкаПозиции.Позиция;
			ДатаПоследнегоИзменения = Дата(1,1,1);
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ТЧ_МПЗ = ТЧ.ТаблицаМПЗ.Добавить();
				ТЧ_МПЗ.НормаРасходов = ВыборкаДетальныеЗаписи.Ссылка;
				ТЧ_МПЗ.Количество = ВыборкаДетальныеЗаписи.Норма;
				ТЧ_МПЗ.Дата = ВыборкаДетальныеЗаписи.Период;
				ДатаПоследнегоИзменения = ВыборкаДетальныеЗаписи.Период;
				КонецЦикла;
			ТЧ.ДатаПоследнегоИзменения = ДатаПоследнегоИзменения;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНаЗадвоения(Команда)
ПолучитьСписокВхождений(МПЗ);
КонецПроцедуры 

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	Для каждого ТЧ Из ТаблицаСпецификаций Цикл
	ТЧ.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсе(Команда)
	Для каждого ТЧ Из ТаблицаСпецификаций Цикл
	ТЧ.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры 

&НаСервере
Процедура ИзменитьНорму(НР,ДатаИзм,Норма)
РНР = РегистрыСведений.НормыРасходов.СоздатьМенеджерЗаписи();
РНР.Период = ДатаИзм;
РНР.Владелец = НР.Владелец;
РНР.Элемент = НР.Элемент;
РНР.НормаРасходов = НР;
РНР.Норма = Норма;
РНР.Записать();
КонецПроцедуры

&НаСервере
Процедура ИзменитьНормуАналога(АНР,ДатаИзм,Норма)
НовыеНормы = РегистрыСведений.АналогиНормРасходов.СоздатьМенеджерЗаписи();
НовыеНормы.Период = ДатаИзм; 
НовыеНормы.Владелец = АНР.Владелец;
НовыеНормы.АналогНормыРасходов = АНР;
НовыеНормы.Норма = Норма;
НовыеНормы.Записать();
КонецПроцедуры 

&НаСервере
Процедура ДобавитьАналог(НР_Оставляем,ВидЭлемента,Элемент,Норма,ДатаОбработки)
Приоритет = 0;
АНР = Справочники.АналогиНормРасходов.Выбрать(,НР_Оставляем);
	Пока АНР.Следующий() Цикл
		Если АНР.ПометкаУдаления Тогда
		Продолжить;
		КонецЕсли;
	НормыАНР = РегистрыСведений.АналогиНормРасходов.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("АналогНормыРасходов",АНР.Ссылка));
		Если АНР.Элемент = Элемент Тогда
			Если НормыАНР.Норма <> Норма Тогда
			ИзменитьНорму(АНР.Ссылка,ДатаОбработки,Норма);
			КонецЕсли;                                    
		Возврат;
		КонецЕсли;
	Приоритет = Макс(Приоритет,АНР.Приоритет);														
    КонецЦикла;
НоваяАНР = Справочники.АналогиНормРасходов.СоздатьЭлемент();
НоваяАНР.Владелец = НР_Оставляем;
НоваяАНР.Приоритет = Приоритет + 1;
НоваяАНР.ВидЭлемента = ВидЭлемента;
НоваяАНР.Элемент = Элемент;
	Если ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Материал Тогда
	НоваяАНР.Наименование = "Материал, "+Элемент;
	ИначеЕсли ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.ТехОперация Тогда	
	НоваяАНР.Наименование = "Тех. операция, "+Элемент;
	ИначеЕсли ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.ТехОснастка Тогда	
	НоваяАНР.Наименование = "Тех. оснастка, "+Элемент;	
	ИначеЕсли (ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Документ)или
			  (ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Программа)Тогда	
	НоваяАНР.Наименование = Строка(Элемент.ВидДокумента)+", "+Элемент;	
	Иначе
	НоваяАНР.Наименование = Строка(ВидЭлемента)+", "+Элемент;			
	КонецЕсли;
НоваяАНР.Записать();
ИзменитьНормуАналога(НоваяАНР.Ссылка,ДатаОбработки,Норма);
КонецПроцедуры

&НаСервере
Процедура ОбработатьНаСервере()
СписокНР = Новый СписокЗначений;
                                
ДатаОбработки = ТекущаяДата();
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;		
		Для каждого ТЧ Из ТаблицаСпецификаций Цикл
			Если ТЧ.Пометка Тогда 
			СписокНР.Очистить();
				Для каждого ТЧ_МПЗ Из ТЧ.ТаблицаМПЗ Цикл
				СписокНР.Добавить(ТЧ_МПЗ.НормаРасходов);
				НР_Оставляем = ТЧ_МПЗ.НормаРасходов;		
				КонецЦикла;
					Для каждого НР Из СписокНР Цикл
						Если НР.Значение <> НР_Оставляем Тогда
						ТаблицаАналогов = ОбщегоНазначенияПовтИсп.ПолучитьАналогиНормРасходов(НР.Значение,ТекущаяДата(),Истина);
							Для каждого ТЧ_ТА Из ТаблицаАналогов Цикл
							ДобавитьАналог(НР_Оставляем,ТЧ_ТА.ВидЭлемента,ТЧ_ТА.Элемент,ТЧ_ТА.Норма,ДатаОбработки);							
							ИзменитьНормуАналога(ТЧ_ТА.Ссылка,ДатаОбработки,0);														
			                КонецЦикла;
						ИзменитьНорму(НР.Значение,ДатаОбработки,0);									
						КонецЕсли;				
					КонецЦикла;
			КонецЕсли;
		КонецЦикла; 
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура Обработать(Команда)
ОбработатьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СписокМПЗВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
ПолучитьСписокВхождений(Элементы.СписокМПЗ.ТекущиеДанные.Значение);
КонецПроцедуры
