
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Объект.Исполнитель = ПараметрыСеанса.Пользователь;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаСервере
Функция ПолучитьЗаданиеНаСервере()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЭтапыПроизводственныхЗаданий.ПЗ КАК ПЗ,
	|	ЭтапыПроизводственныхЗаданий.ДатаНачала КАК ДатаНачала
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданий.ПЗ.ДокументОснование.Статус = 1
	|	И ЭтапыПроизводственныхЗаданий.РабочееМесто = &РабочееМесто
	|	И ЭтапыПроизводственныхЗаданий.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтапыПроизводственныхЗаданий.Период";
Запрос.УстановитьПараметр("РабочееМесто",Объект.РабочееМесто);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
	Объект.ПроизводственноеЗадание = ВыборкаДетальныеЗаписи.ПЗ;
	КоличествоИзделия = Объект.ПроизводственноеЗадание.Количество;
	СписокЭтапов.Очистить();
	ПолучитьСписокЭтапов(Объект.ПроизводственноеЗадание.Изделие);
		Для каждого Этап Из СписокЭтапов Цикл
		КоличествоВыполнено = ПолучитьВыполненноеКоличество(Этап.Значение)-(Объект.ПроизводственноеЗадание.ДокументОснование.Количество-Объект.ПроизводственноеЗадание.Количество);
			Если КоличествоВыполнено < КоличествоИзделия Тогда
			ЭтапПроизводства = Этап.Значение;
			Прервать;
			КонецЕсли; 
		КонецЦикла;
			Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаНачала) Тогда
				Попытка
				НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
				Парам = Новый Структура("РабочееМесто,ДатаНачала",Объект.РабочееМесто,ТекущаяДата());
				ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Парам);
				Парам = Новый Структура("РабочееМесто,Количество",ОбщийМодульВызовСервера.ПолучитьСледующееРабочееМесто(Объект.РабочееМесто),КоличествоИзделия);
				ОбщийМодульРаботаСРегистрами.СоздатьЭтапПроизводственногоЗаданияКанбан(Объект.ПроизводственноеЗадание,Парам);
				ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
				Исключение
				Сообщить(ОписаниеОшибки());
				ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
				Возврат(Ложь);
				КонецПопытки;
			КонецЕсли;
	Возврат(Истина); 
	КонецЦикла;
Возврат(Ложь);
КонецФункции

&НаКлиенте
Процедура ПолучитьЗадание(Команда)
	Если ПолучитьЗаданиеНаСервере() Тогда
	ПолучитьСписокФайловИзготовления(ПолучитьИзделие());
	Элементы.Завершить.КнопкаПоУмолчанию = Истина;
	Иначе
	Сообщить("Нет производственных заданий!");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПолучитьСписокЭтапов(ЭтапСпецификации)
	Если СокрЛП(ЭтапСпецификации.Канбан.Наименование) <> "Канбан УПЭА SMD ГСС" Тогда
	СписокЭтапов.Вставить(0,ЭтапСпецификации);
	КонецЕсли;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходовСрезПоследних.Элемент КАК Элемент
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(
	|			&НаДату,
	|			Владелец = &Владелец
	|				И НормаРасходов.ВидЭлемента = &ВидЭлемента) КАК НормыРасходовСрезПоследних
	|ГДЕ
	|	НормыРасходовСрезПоследних.Норма > 0
	|	И НормыРасходовСрезПоследних.НормаРасходов.ПометкаУдаления = ЛОЖЬ";
Запрос.УстановитьПараметр("НаДату", Объект.ПроизводственноеЗадание.ДатаЗапуска);
Запрос.УстановитьПараметр("Владелец", ЭтапСпецификации);
Запрос.УстановитьПараметр("ВидЭлемента", Перечисления.ВидыЭлементовНормРасходов.Основа);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл
	ПолучитьСписокЭтапов(ВыборкаНР.Элемент);  
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьВыполненноеКоличество(Этап)	
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыполнениеЭтаповПроизводства.МТК КАК МТК,
	|	ВыполнениеЭтаповПроизводства.Количество КАК Количество
	|ИЗ
	|	РегистрСведений.ВыполнениеЭтаповПроизводства КАК ВыполнениеЭтаповПроизводства
	|ГДЕ
	|	ВыполнениеЭтаповПроизводства.МТК = &МТК
	|	И ВыполнениеЭтаповПроизводства.РабочееМесто = &РабочееМесто
	|	И ВыполнениеЭтаповПроизводства.Спецификация = &Спецификация
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	МТК";
Запрос.УстановитьПараметр("МТК", Объект.ПроизводственноеЗадание.ДокументОснование);
Запрос.УстановитьПараметр("РабочееМесто", Объект.РабочееМесто);
Запрос.УстановитьПараметр("Спецификация", Этап);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМТК = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМТК.Следующий() Цикл
	Возврат(ВыборкаМТК.Количество);
	КонецЦикла;
Возврат(0);
КонецФункции

&НаСервере
Процедура ПолучитьСписокФайловИзготовления(ЭтапСпецификации)
НормРасх = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н_М(ЭтапСпецификации,ТекущаяДата());
	Пока НормРасх.Следующий() Цикл			
		Если ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.Материалы")Тогда
			Если Найти(НормРасх.Элемент.Родитель.Наименование,"0 - Платы") > 0 Тогда
			ФайлыИзготовления = РегистрыСведений.ИзготовлениеПечатныхПлат.СрезПоследних(ТекущаяДата(),Новый Структура("МПЗ",НормРасх.Элемент));
				Для каждого Стр Из ФайлыИзготовления Цикл
					Если Стр.Действующий Тогда
					СписокФайловИзготовления.Добавить(""+Стр.ФайлИзготовления.ВидДокумента+", "+СокрЛП(Стр.ФайлИзготовления.Наименование));
					КонецЕсли; 					
				КонецЦикла; 
			Возврат;			
			КонецЕсли;			
		Иначе 
		ПолучитьСписокФайловИзготовления(НормРасх.Элемент); 
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры 

&НаСервере
Процедура ОчиститьСсылкуНаПЗ()
Объект.ПроизводственноеЗадание = Документы.ПроизводственноеЗадание.ПустаяСсылка();
ЭтапПроизводства = Справочники.Номенклатура.ПустаяСсылка();
СписокФайловИзготовления.Очистить();
КоличествоИзделия = 0;
КоличествоВыполнено = 0;
КоличествоБрак = 0;
Элементы.ПолучитьЗадание.КнопкаПоУмолчанию = Истина;
КонецПроцедуры 

&НаСервере
Функция МожноРаботатьВАРМ()
	Если ОбщийМодульВызовСервера.МожноВыполнить(Объект.РабочееМесто.Линейка) Тогда	
	Возврат(Истина);
	Иначе
	Объект.РабочееМесто = Справочники.РабочиеМестаЛинеек.ПустаяСсылка();
	Сообщить("Работа АРМ запрещена в этой базе!");
	Возврат(Ложь);
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура РабочееМестоПриИзменении(Элемент)
	Если Не МожноРаботатьВАРМ() Тогда
	Возврат;
	КонецЕсли;
ОчиститьСсылкуНаПЗ();
КонецПроцедуры

&НаСервере
Функция ПолучитьКодРабочегоМеста(РабочееМесто)
Возврат(РабочееМесто.Код);
КонецФункции

&НаКлиенте
Процедура ОформитьБрак(Команда)
	Если Объект.ПроизводственноеЗадание.Пустая() Тогда
	Сообщить("Нет выбранного производственного задания!");
	Возврат;	
	КонецЕсли;
Результат = ОткрытьФормуМодально("ОбщаяФорма.ОформлениеБракаКанбан",Новый Структура("РабочееМесто,ПЗ,КоличествоИзделия",Объект.РабочееМесто,Объект.ПроизводственноеЗадание,КоличествоИзделия - КоличествоБрак));
	Если (Результат <> Неопределено)и(Результат > 0) Тогда
	КоличествоБрак = ОбщийМодульВызовСервера.ПолучитьКоличествоВБракеПоПЗ(Объект.ПроизводственноеЗадание,Объект.РабочееМесто);		
	КонецЕсли;  
КонецПроцедуры

&НаКлиенте
Процедура ПечатьТекущейСпецификации(Команда)
ОткрытьФорму("Отчет.ПечатьСпецификацииСУчётомАналогов.Форма.ФормаОтчета",Новый Структура("ПЗ",Объект.ПроизводственноеЗадание));
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСпецификации(Команда)
ОткрытьФорму("Отчет.ПечатьСпецификацииСУчётомАналогов.Форма.ФормаОтчета",Новый Структура("ПЗ",Элементы.ТаблицаЗаданий.ТекущиеДанные.ПЗ));
КонецПроцедуры

&НаКлиенте
Процедура ПечатьОстановленнойСпецификации(Команда)
ОткрытьФорму("Отчет.ПечатьСпецификацииСУчётомАналогов.Форма.ФормаОтчета",Новый Структура("ПЗ",Элементы.ТаблицаОстановленныхЗаданий.ТекущиеДанные.ПЗ));
КонецПроцедуры

&НаСервере
Функция ЗавершитьЧастичноНаСервере(Количество)
	Попытка
	ОбщийМодульРаботаСРегистрами.ЗафиксироватьИсполнениеЭтапаПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,ЭтапПроизводства,Количество,Объект.Исполнитель);
	Исключение
	Сообщить(ОписаниеОшибки());
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина);
КонецФункции

&НаСервере
Функция ЗавершитьНаСервере(Количество)
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	ОбщийМодульРаботаСРегистрами.ЗафиксироватьИсполнениеЭтапаПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,ЭтапПроизводства,Количество,Объект.Исполнитель);
	Парам = Новый Структура("РабочееМесто,ДатаОкончания",Объект.РабочееМесто,ТекущаяДата());
	ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Парам);
	ПЗ = Объект.ПроизводственноеЗадание.ПолучитьОбъект();
	ПЗ.НомерОчереди = 0;
	ПЗ.Записать();
	//ОбщийМодульРаботаСРегистрами.ИзменитьНомерОчереди(ПЗ.Ссылка,0);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;	
	Исключение
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Сообщить(ОписаниеОшибки());
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина);
КонецФункции

&НаСервере
Функция ПолучитьИзделие()
Возврат(Объект.ПроизводственноеЗадание.Изделие);
КонецФункции

&НаКлиенте
Процедура Завершить(Команда)
	Если Объект.ПроизводственноеЗадание.Пустая() Тогда
	Сообщить("Нет выбранного производственного задания!");
	Возврат;	
	КонецЕсли;
МаксКоличество = КоличествоИзделия - КоличествоВыполнено;
КоличествоВыпущено = МаксКоличество;
	Если ВвестиЧисло(КоличествоВыпущено,"Введите количество выпущенных изделий",9,3) Тогда
		Если КоличествоВыпущено = 0 Тогда
		Сообщить("Введите количество выпущенных изделий отличное от нуля!");
		ИначеЕсли КоличествоВыпущено < МаксКоличество Тогда
			Если ЗавершитьЧастичноНаСервере(КоличествоВыпущено) Тогда	
			КоличествоВыполнено = КоличествоВыполнено + КоличествоВыпущено; 
			КонецЕсли;
		ИначеЕсли КоличествоВыпущено = МаксКоличество Тогда
			Если СписокЭтапов[СписокЭтапов.Количество()-1].Значение = ЭтапПроизводства Тогда
				Если ЗавершитьНаСервере(КоличествоВыпущено) Тогда	
				ОчиститьСсылкуНаПЗ();
				КонецЕсли;			
			Иначе	
				Если ЗавершитьЧастичноНаСервере(КоличествоВыпущено) Тогда	
				ЭтапПроизводства = СписокЭтапов[1].Значение;
				КоличествоВыполнено = 0;
				КонецЕсли;			
			КонецЕсли; 		
		Иначе	
		Сообщить("Выпущенное количество не должно превышать "+МаксКоличество+"!");
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЗавершитьСОстановкойНаСервере(Количество,ПричинаОстановки)
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;	
	ОбщийМодульРаботаСРегистрами.ЗафиксироватьИсполнениеЭтапаПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,ЭтапПроизводства,Количество,Объект.Исполнитель);
	ОбщийМодульВызовСервера.ОстановитьПЗ(Объект.ПроизводственноеЗадание,ПричинаОстановки);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Сообщить(ОписаниеОшибки());
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина);
КонецФункции

&НаСервере
Функция ЗавершитьИРазделитьНаСервере(Количество,ПричинаОстановки)
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	ОбщийМодульРаботаСРегистрами.ЗафиксироватьИсполнениеЭтапаПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,ЭтапПроизводства,Количество,Объект.Исполнитель);
	Парам = Новый Структура("РабочееМесто,ДатаОкончания",Объект.РабочееМесто,ТекущаяДата());
	ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Парам);
	КоличествоВыпущено = КоличествоВыполнено + Количество;
	ПЗ = Объект.ПроизводственноеЗадание.ПолучитьОбъект();
	ПЗ.Количество = КоличествоВыпущено;
	ПЗ.НомерОчереди = 0;
	ПЗ.Записать();
	//ОбщийМодульРаботаСРегистрами.ИзменитьНомерОчереди(ПЗ.Ссылка,0);
	НаборЗаписей = РегистрыСведений.ЭтапыПроизводственныхЗаданий.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПЗ.Установить(Объект.ПроизводственноеЗадание);
	НаборЗаписей.Прочитать();
	КолБрак = 0;
	    Для Каждого Запись Из НаборЗаписей Цикл 
		Запись.Количество = Количество - КолБрак;
		КолБрак = КолБрак + ОбщийМодульВызовСервера.ПолучитьКоличествоВБракеПоПЗ(Объект.ПроизводственноеЗадание,Запись.РабочееМесто);
	    КонецЦикла;
	НаборЗаписей.Записать();			
	ОбщийМодульСозданиеДокументов.СоздатьДополнительноеПЗ(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,КоличествоИзделия - КоличествоВыпущено,ПричинаОстановки);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Сообщить(ОписаниеОшибки());
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина);
КонецФункции

&НаСервере
Функция ПолучитьМТК()
Возврат(Объект.ПроизводственноеЗадание.ДокументОснование);
КонецФункции 

&НаКлиенте
Процедура ЗавершитьСОстановкой(Команда)
	Если Объект.ПроизводственноеЗадание.Пустая() Тогда
	Сообщить("Нет выбранного производственного задания!");
	Возврат;	
	КонецЕсли;
МаксКоличество = КоличествоИзделия - КоличествоВыполнено;
КоличествоВыпущено = МаксКоличество;
	Если ВвестиЧисло(КоличествоВыпущено,"Введите количество выпущенных изделий",9,3) Тогда
	ПричинаОстановки = "";
		Если ВвестиСтроку(ПричинаОстановки,"Введите причину остановки",0,Истина) Тогда
			Если ЗначениеЗаполнено(ПричинаОстановки) Тогда
				Если КоличествоВыпущено = 0 Тогда
					Если ОбщийМодульВызовСервера.ОстановитьМТК(ПолучитьМТК(),Объект.Исполнитель,ПричинаОстановки,Неопределено,Неопределено,Объект.РабочееМесто) Тогда
					ОчиститьСсылкуНаПЗ();				
					КонецЕсли;
				ИначеЕсли КоличествоВыпущено < МаксКоличество Тогда
					Если ЗавершитьСОстановкойНаСервере(КоличествоВыпущено,ПричинаОстановки) Тогда
					ОчиститьСсылкуНаПЗ();					
					КонецЕсли;
				Иначе 	
				Сообщить("Выпущенное количество должно быть меньше "+МаксКоличество+"!");
				КонецЕсли;
			Иначе
            Сообщить("Введите причину остановки!");
			КонецЕсли;
		Иначе
		Сообщить("Введите причину остановки!");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтчётПоИзменениям(Команда)
ОткрытьФорму("Отчет.ОтчётПоИзменениямВСпецификации.Форма.ФормаОтчета",Новый Структура("Спецификация",ПолучитьИзделие()));
КонецПроцедуры
