
&НаСервере
Функция ПолучитьКоличествоНаИспытаниях(ЗНП,Продукция)
Запрос = Новый Запрос;

Количество = 0;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование.ДокументОснование = &ДокументОснование
	|	И ПроизводственноеЗадание.Изделие = &Изделие
	|	И ПроизводственноеЗадание.Испытания <> 0";
Запрос.УстановитьПараметр("ДокументОснование", ЗНП);
Запрос.УстановитьПараметр("Изделие", Продукция);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаПЗ = РезультатЗапроса.Выбрать();
	Пока ВыборкаПЗ.Следующий() Цикл
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВыпускПродукцииПоступление.Количество КАК Количество
		|ИЗ
		|	Документ.ВыпускПродукции.Поступление КАК ВыпускПродукцииПоступление
		|ГДЕ
		|	ВыпускПродукцииПоступление.Ссылка.ДокументОснование = &ДокументОснование
		|	И ВыпускПродукцииПоступление.Ссылка.НаСклад = ИСТИНА";
	Запрос.УстановитьПараметр("ДокументОснование", ВыборкаПЗ.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Количество = Количество + ВыборкаДетальныеЗаписи.Количество;
		КонецЦикла;
	КонецЦикла;
Возврат(Количество); 
КонецФункции

&НаСервере
Функция ПроверитьЧастичнуюОтгрузку(ЗНП)
Запрос = Новый Запрос;
ТЗ = Новый ТаблицаЗначений;

ТЗ.Колонки.Добавить("Товар");
ТЗ.Колонки.Добавить("Продукция");
ТЗ.Колонки.Добавить("Количество");

	Для каждого ТЧ Из ЗНП.Заказ Цикл
		Если ТипЗнч(ТЧ.Продукция) = Тип("Неопределено") Тогда
		Продолжить;
		КонецЕсли;
			Если ТипЗнч(ТЧ.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
				Если ТЧ.Продукция.ЗапрещеноКОтгрузке Тогда
				Продолжить;
				КонецЕсли;
			МестоХранения = ТЧ.Продукция.Линейка.МестоХраненияГП;
			Иначе
			МестоХранения = Константы.МестоХраненияТНП.Получить();
			КонецЕсли;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РезервированиеГПОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.РезервированиеГП.Остатки КАК РезервированиеГПОстатки
		|ГДЕ
		|	РезервированиеГПОстатки.Документ = &Документ
		|	И РезервированиеГПОстатки.Продукция = &Продукция
		|	И РезервированиеГПОстатки.МестоХранения = &МестоХранения";
	Запрос.УстановитьПараметр("Документ", ЗНП);
	Запрос.УстановитьПараметр("Продукция", ТЧ.Продукция);
	Запрос.УстановитьПараметр("МестоХранения", МестоХранения);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КоличествоРезерв = ВыборкаДетальныеЗаписи.КоличествоОстаток - ПолучитьКоличествоНаИспытаниях(ЗНП,ТЧ.Продукция);
			Если КоличествоРезерв > 0 Тогда
				Если ТЧ.Товар.ТоварнаяГруппа.ГрупповаяУпаковка Тогда
					Если ТЧ.КоличествоВЗаказе = КоличествоРезерв Тогда
					ТЧ_ТЗ = ТЗ.Добавить();
					ТЧ_ТЗ.Товар = ТЧ.Товар;
					ТЧ_ТЗ.Продукция = ТЧ.Продукция;
					ТЧ_ТЗ.Количество = КоличествоРезерв;
					КонецЕсли; 
			    Иначе
				ТЧ_ТЗ = ТЗ.Добавить();
				ТЧ_ТЗ.Товар = ТЧ.Товар;
				ТЧ_ТЗ.Продукция = ТЧ.Продукция;
				ТЧ_ТЗ.Количество = КоличествоРезерв;
				КонецЕсли; 
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
Возврат(ТЗ); 
КонецФункции

&НаСервере
Функция ЕстьНаИспытаниях(ЗНП)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПроизводственноеЗадание.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование.ДокументОснование = &ДокументОснование
	|	И ПроизводственноеЗадание.Испытания <> 0";
Запрос.УстановитьПараметр("ДокументОснование", ЗНП);
РезультатЗапроса = Запрос.Выполнить();
Возврат(Не РезультатЗапроса.Пустой()); 
КонецФункции

&НаСервере
Функция ПроверитьПолнуюОтгрузку(ЗНП)
ТЗ = Новый ТаблицаЗначений;
Результат = Новый Структура("Полный,ТЗ",Ложь,ТЗ);

ТЗ.Колонки.Добавить("Товар");
ТЗ.Колонки.Добавить("Продукция");
ТЗ.Колонки.Добавить("Количество");
	Если ЕстьНаИспытаниях(ЗНП) Тогда
	Результат.Полный = Ложь;	
	Возврат(Результат);				
	КонецЕсли;

Запрос = Новый Запрос;

	Для каждого ТЧ Из ЗНП.Заказ Цикл
		Если ТипЗнч(ТЧ.Продукция) = Тип("Неопределено") Тогда
		Результат.Полный = Ложь;	
		Возврат(Результат);
		КонецЕсли;
			Если ТипЗнч(ТЧ.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
				Если ТЧ.Продукция.ЗапрещеноКОтгрузке Тогда
				Результат.Полный = Ложь;	
				Возврат(Результат);
				КонецЕсли;
			КонецЕсли;
	КолОстатокДолги = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокПоДолгам(ЗНП,ТЧ.Продукция,ТекущаяДата());
		Если КолОстатокДолги = 0 Тогда	
		Продолжить;
		КонецЕсли; 
			Если ТипЗнч(ТЧ.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
			МестоХранения = ТЧ.Продукция.Линейка.МестоХраненияГП;
			Иначе
			МестоХранения = Константы.МестоХраненияТНП.Получить();
			КонецЕсли;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РезервированиеГПОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.РезервированиеГП.Остатки КАК РезервированиеГПОстатки
		|ГДЕ
		|	РезервированиеГПОстатки.МестоХранения = &МестоХранения
		|	И РезервированиеГПОстатки.Продукция = &Продукция
		|	И РезервированиеГПОстатки.Документ = &Документ";
	Запрос.УстановитьПараметр("Документ", ЗНП); 
	Запрос.УстановитьПараметр("МестоХранения",МестоХранения);
	Запрос.УстановитьПараметр("Продукция", ТЧ.Продукция);
	РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(); 
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если ВыборкаДетальныеЗаписи.КоличествоОстаток = КолОстатокДолги Тогда
				ТЧ_ТЗ = ТЗ.Добавить();
				ТЧ_ТЗ.Товар = ТЧ.Товар;
				ТЧ_ТЗ.Продукция = ТЧ.Продукция;	
				ТЧ_ТЗ.Количество = ВыборкаДетальныеЗаписи.КоличествоОстаток;					
				Иначе	
				Результат.Полный = Ложь;
				Возврат(Результат);					
				КонецЕсли; 
			КонецЦикла;
		Иначе
		Результат.Полный = Ложь;	
		Возврат(Результат);
		КонецЕсли;
	КонецЦикла;
Результат.Полный = Истина;
Возврат(Результат); 
КонецФункции 

&НаСервере
Процедура ПолучитьЗНПНаСервере()
ТаблицаЗНП.Очистить();
Запрос = Новый Запрос;

ДН = ДеньНедели(ТекущаяДата());
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказНаПроизводство.Ссылка КАК Ссылка,
	|	ЗаказНаПроизводство.Контрагент КАК Контрагент
	|ИЗ
	|	Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|ГДЕ
	|	ЗаказНаПроизводство.Закрыт = ЛОЖЬ
	|	И ЗаказНаПроизводство.ОтгрузкаРазрешена = ИСТИНА
	|	И ЗаказНаПроизводство.ВидОтгрузки <> &ВидОтгрузки";
	Если Не Контрагент.Пустая() Тогда
	Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.Контрагент = &Контрагент";
	Запрос.УстановитьПараметр("Контрагент",Контрагент); 
	КонецЕсли;
		Если ТипДоставки = 1 Тогда
		Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.ТипДоставки = &ТипДоставки";
		Запрос.УстановитьПараметр("ТипДоставки",Перечисления.ТипыДоставки.ТранспортнаяКомпания);
		ИначеЕсли ТипДоставки = 2 Тогда
		Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.ТипДоставки = &ТипДоставки";
		Запрос.УстановитьПараметр("ТипДоставки",Перечисления.ТипыДоставки.Самовывоз);
		КонецЕсли;  
			Если ОтгрузкаПоЗапросу Тогда
			Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.ОтгрузкаПоЗапросу = ИСТИНА";
			Иначе
			Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.ОтгрузкаПоЗапросу = ЛОЖЬ";	
				Если СписокДнейНедели = 0 Тогда
					Если ДН = 1 Тогда
					Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.Понедельник = ИСТИНА";
					ИначеЕсли ДН = 2 Тогда
					Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.Вторник = ИСТИНА";
					ИначеЕсли ДН = 3 Тогда
					Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.Среда = ИСТИНА";
					ИначеЕсли ДН = 4 Тогда
					Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.Четверг = ИСТИНА";
					ИначеЕсли ДН = 5 Тогда
					Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.Пятница = ИСТИНА";
					ИначеЕсли ДН = 6 Тогда
					Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.Суббота = ИСТИНА";
					ИначеЕсли ДН = 7 Тогда
					Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.Воскресенье = ИСТИНА";	
					КонецЕсли;
				ИначеЕсли СписокДнейНедели = 1 Тогда
				Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.Понедельник = ИСТИНА";
				ИначеЕсли СписокДнейНедели = 2 Тогда
				Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.Вторник = ИСТИНА";
				ИначеЕсли СписокДнейНедели = 3 Тогда
				Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.Среда = ИСТИНА";
				ИначеЕсли СписокДнейНедели = 4 Тогда
				Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.Четверг = ИСТИНА";
				ИначеЕсли СписокДнейНедели = 5 Тогда
				Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.Пятница = ИСТИНА";
				ИначеЕсли СписокДнейНедели = 6 Тогда
				Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.Суббота = ИСТИНА";
				ИначеЕсли СписокДнейНедели = 7 Тогда
				Запрос.Текст = Запрос.Текст + " И ЗаказНаПроизводство.Воскресенье = ИСТИНА";	
				КонецЕсли;	
			КонецЕсли;
Запрос.Текст = Запрос.Текст + "	УПОРЯДОЧИТЬ ПО
								|	ЗаказНаПроизводство.Контрагент.Наименование,
								|	ЗаказНаПроизводство.Дата";
Запрос.УстановитьПараметр("ВидОтгрузки",Перечисления.ВидыОтгрузки.ПустаяСсылка()); 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Ссылка.ВидОтгрузки = Перечисления.ВидыОтгрузки.Частичная Тогда
		ТЗ = ПроверитьЧастичнуюОтгрузку(ВыборкаДетальныеЗаписи.Ссылка);
		Количество = 0;
			Для каждого ТЧ_Тов Из ТЗ Цикл
			Количество = Количество + ТЧ_Тов.Количество;				
			КонецЦикла; 	
				Если Количество > 0 Тогда 
				ТЧ_ТЗ = ТаблицаЗНП.Добавить();
				ТЧ_ТЗ.ЗаказНаПроизводство = ВыборкаДетальныеЗаписи.Ссылка;
				ТЧ_ТЗ.КартаДоставки = ВыборкаДетальныеЗаписи.Ссылка.КартаДоставки;
				ТЧ_ТЗ.ДатаОбработкиЛогистом = ВыборкаДетальныеЗаписи.Ссылка.ДатаОбработкиЛогистом;
					Для каждого ТЧ_Тов Из ТЗ Цикл
					ТЧ_ТЗ_Т = ТЧ_ТЗ.ТаблицаТоваров.Добавить();
					ТЧ_ТЗ_Т.Товар = ТЧ_Тов.Товар;
					ТЧ_ТЗ_Т.Продукция = ТЧ_Тов.Продукция;
					ТЧ_ТЗ_Т.Количество = ТЧ_Тов.Количество;				
					КонецЦикла;					
				КонецЕсли;
		ИначеЕсли ВыборкаДетальныеЗаписи.Ссылка.ВидОтгрузки = Перечисления.ВидыОтгрузки.Полная Тогда
		Результат = ПроверитьПолнуюОтгрузку(ВыборкаДетальныеЗаписи.Ссылка);
 			Если Результат.Полный Тогда
			ТЧ_ТЗ = ТаблицаЗНП.Добавить();
			ТЧ_ТЗ.ЗаказНаПроизводство = ВыборкаДетальныеЗаписи.Ссылка;
			ТЧ_ТЗ.КартаДоставки = ВыборкаДетальныеЗаписи.Ссылка.КартаДоставки;
			ТЧ_ТЗ.ДатаОбработкиЛогистом = ВыборкаДетальныеЗаписи.Ссылка.ДатаОбработкиЛогистом;
				Для каждого ТЧ_Тов Из Результат.ТЗ Цикл
				ТЧ_ТЗ_Т = ТЧ_ТЗ.ТаблицаТоваров.Добавить();
				ТЧ_ТЗ_Т.Товар = ТЧ_Тов.Товар;
				ТЧ_ТЗ_Т.Продукция = ТЧ_Тов.Продукция;
				ТЧ_ТЗ_Т.Количество = ТЧ_Тов.Количество;				
				КонецЦикла;						
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьЗНП(Команда)
ПолучитьЗНПНаСервере();
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоННС(ЗНП,Продукция,КоличествоВЗаказе)
Запрос = Новый Запрос;

	Если ТипЗнч(Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
	МестоХранения = Продукция.Линейка.МестоХраненияГП;
	Иначе	
	МестоХранения = Константы.МестоХраненияТНП.Получить();
	КонецЕсли;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	РезервированиеГПОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.РезервированиеГП.Остатки КАК РезервированиеГПОстатки
	|ГДЕ
	|	РезервированиеГПОстатки.МестоХранения = &МестоХранения
	|	И РезервированиеГПОстатки.Продукция = &Продукция
	|	И РезервированиеГПОстатки.Документ = &Документ";
Запрос.УстановитьПараметр("Документ", ЗНП); 
Запрос.УстановитьПараметр("МестоХранения", МестоХранения);
Запрос.УстановитьПараметр("Продукция", Продукция);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(); 
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.КоличествоОстаток > 0 Тогда
			Если Продукция.Товар.ТоварнаяГруппа.ГрупповаяУпаковка Тогда
				Если КоличествоВЗаказе = ВыборкаДетальныеЗаписи.КоличествоОстаток Тогда
				Возврат(ВыборкаДетальныеЗаписи.КоличествоОстаток);
				КонецЕсли; 
		    Иначе
			Возврат(ВыборкаДетальныеЗаписи.КоличествоОстаток);
			КонецЕсли;		
		КонецЕсли;	 
	КонецЦикла;
Возврат(0);
КонецФункции 

&НаСервере
Процедура СоздатьННСНаСервере(ДатаОтгрузки)
ННС = Неопределено;
	Для каждого ТЧ Из ТаблицаЗНП Цикл
		Если ТЧ.Пометка Тогда 
		ННС = Документы.НакладнаяНаСборку.СоздатьДокумент();
		ННС.Автор = ПараметрыСеанса.Пользователь;
		ННС.Дата = ТекущаяДата();
		ННС.Контрагент = ТЧ.ЗаказНаПроизводство.Контрагент;
		ННС.КартаДоставки = ТЧ.ЗаказНаПроизводство.КартаДоставки;
		ННС.Комментарий = ТЧ.Комментарий;
			Если ДатаОтгрузки = Неопределено Тогда
			ННС.ДатаОтгрузки = ПолучитьДатуОтгрузки();
			Иначе	
			ННС.ДатаОтгрузки = ДатаОтгрузки;
			КонецЕсли;
				Для каждого ТЧ_З Из ТЧ.ТаблицаТоваров Цикл
					Если ТЧ_З.Количество > 0 Тогда
					ТЧ_ННС = ННС.ТабличнаяЧасть.Добавить();
					ТЧ_ННС.ЗаказНаПроизводство = ТЧ.ЗаказНаПроизводство;
					ТЧ_ННС.Товар = ТЧ_З.Товар;
					ТЧ_ННС.Продукция = ТЧ_З.Продукция;
					ТЧ_ННС.Количество = ТЧ_З.Количество;
					КонецЕсли; 
				КонецЦикла; 
					Если ННС.ТабличнаяЧасть.Количество() > 0 Тогда
					НомерЗНП = ННС.ТабличнаяЧасть[0].ЗаказНаПроизводство.Номер;
						Если (Найти(НомерЗНП,"ТК") > 0)Тогда
						ННС.ЛинейкаУпаковки = 3;
						ИначеЕсли (Найти(НомерЗНП,"З") > 0)или
							 (Найти(НомерЗНП,"СД") > 0)или
							 (Найти(НомерЗНП,"СТД") > 0)Тогда
						ННС.ЛинейкаУпаковки = 1;
						Иначе
						ННС.ЛинейкаУпаковки = 2;
						КонецЕсли;
					ННС.ТабличнаяЧасть.Сортировать("Товар");
					ННС.Записать(РежимЗаписиДокумента.Проведение);
					СННС = РегистрыСведений.СтатусыНакладныхНаСборку.СоздатьМенеджерЗаписи();
					СННС.Период = ТекущаяДата();
					СННС.НакладнаяНаСборку = ННС.Ссылка;
					СННС.Статус = Перечисления.СтатусыНакладнойНаСборку.НаСборке;
					СННС.Записать();
					ТЧ.НакладнаяНаСборку = ННС.Ссылка;
					КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьННС(Команда)
	Если ОтгрузкаПоЗапросу Тогда
	ДатаОтгрузки = ТекущаяДата();
		Если ВвестиДату(ДатаОтгрузки,"Введите дату отгрузки",ЧастиДаты.Дата) Тогда
		СоздатьННСНаСервере(ДатаОтгрузки);
		КонецЕсли;
	Иначе
	СоздатьННСНаСервере(Неопределено);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьДатуОтгрузки()
ТекущийДеньНедели = ДеньНедели(ТекущаяДата());
	Если СписокДнейНедели = 0 Тогда
	ДатаОтгрузки = ТекущаяДата();
	ИначеЕсли СписокДнейНедели = ТекущийДеньНедели Тогда	
	ДатаОтгрузки = ТекущаяДата();
	ИначеЕсли СписокДнейНедели > ТекущийДеньНедели Тогда
	ДатаОтгрузки = ТекущаяДата()+86400*(СписокДнейНедели-ТекущийДеньНедели);
	Иначе
	ДатаОтгрузки = ТекущаяДата()+86400*(7+СписокДнейНедели-ТекущийДеньНедели);
	КонецЕсли; 
Возврат(ДатаОтгрузки);
КонецФункции 

&НаСервере
Функция ПечатьННСНаСервере()
ТабДок = Новый ТабличныйДокумент;
ТаблицаННС = Новый ТаблицаЗначений;

ТаблицаННС.Колонки.Добавить("Товар");
ТаблицаННС.Колонки.Добавить("ГруппаЛинеек");
ТаблицаННС.Колонки.Добавить("Порядок");
ТаблицаННС.Колонки.Добавить("Количество");

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблТовар = Макет.ПолучитьОбласть("Товар");
ОблКонец = Макет.ПолучитьОбласть("Конец");
	Для каждого ТЧ Из ТаблицаЗНП Цикл
		Если Не ТЧ.Пометка Тогда
		Продолжить;
		КонецЕсли;
			Если ТЧ.НакладнаяНаСборку.Пустая() Тогда
			Продолжить;
			КонецЕсли;
	ТаблицаННС.Очистить();
		Для каждого ТЧ_ТЧ Из ТЧ.НакладнаяНаСборку.ТабличнаяЧасть Цикл	
		ТЧ_ННС = ТаблицаННС.Добавить();
		ТЧ_ННС.Товар = ТЧ_ТЧ.Товар;	
		ТЧ_ННС.ГруппаЛинеек = ТЧ_ТЧ.Продукция.Линейка.Родитель;
		ТЧ_ННС.Порядок = ТЧ_ТЧ.Продукция.Линейка.Родитель.Порядок;
		ТЧ_ННС.Количество =ТЧ_ТЧ.Количество;
		КонецЦикла;
	ТаблицаННС.Свернуть("Порядок,ГруппаЛинеек,Товар","Количество");
	ТаблицаННС.Сортировать("Порядок,ГруппаЛинеек,Товар");
	QRCode = СокрЛП(ТЧ.НакладнаяНаСборку.Номер)+";"+ЗначениеВСтрокуВнутр(ТЧ.НакладнаяНаСборку);
	ОблШапка.Параметры.Номер = ТЧ.НакладнаяНаСборку.Номер;
	ОблШапка.Параметры.ДатаОтгрузки = Формат(ТЧ.НакладнаяНаСборку.ДатаОтгрузки,"ДЛФ=DD")+" ("+Формат(ТЧ.НакладнаяНаСборку.ДатаОтгрузки,"ДФ=дддд")+")";
	ТабДок.Вывести(ОблШапка);
		Для каждого ТЧ_ННС Из ТаблицаННС Цикл
		ОблТовар.Параметры.Линейка = ТЧ_ННС.ГруппаЛинеек;		
		ОблТовар.Параметры.Товар = ТЧ_ННС.Товар;
		ОблТовар.Параметры.Количество = ТЧ_ННС.Количество;
		ЯчейкиХранения = РегистрыСведений.ЯчейкиХранения.Выбрать(Новый Структура("МПЗ",ТЧ_ННС.Товар));
			Пока ЯчейкиХранения.Следующий() Цикл
			ОблТовар.Параметры.Стеллаж = ЯчейкиХранения.Стеллаж;
			ОблТовар.Параметры.Стойка = ЯчейкиХранения.Стойка;
			ОблТовар.Параметры.Полка = ЯчейкиХранения.Полка;
			ОблТовар.Параметры.Ячейка = ЯчейкиХранения.Ячейка;		
			КонецЦикла;		
		ТабДок.Вывести(ОблТовар);
		QRCode = QRCode+";"+ТЧ_ННС.Товар.Код+";"+ТЧ_ННС.Количество;
		КонецЦикла;
	ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRCode, 0, 500);	
		Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
		КартинкаQRКода = Новый Картинка(ДанныеQRКода);
		ОблКонец.Рисунки.QRCode.Картинка = КартинкаQRКода;
		ТабДок.Вывести(ОблКонец);
		Иначе
		Сообщить("Не удалось сформировать QR-код!");
		КонецЕсли;
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
ТабДок.ПолеСлева =0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок); 
КонецФункции

&НаКлиенте
Процедура ПечатьННС(Команда)
ТД = ПечатьННСНаСервере();
ТД.Показать("Накладные на сборку");
КонецПроцедуры

&НаКлиенте
Процедура ОтгрузкаПоЗапросуПриИзменении(Элемент)
Элементы.СписокДнейНедели.Доступность = Не ОтгрузкаПоЗапросу;
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	Для каждого ТЧ Из ТаблицаЗНП Цикл
	ТЧ.Пометка = Истина;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсе(Команда)
	Для каждого ТЧ Из ТаблицаЗНП Цикл
	ТЧ.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПолучитьГотовыеКОтгрузкеНаСервере()
ТаблицаРазрешениеОтгрузки.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказНаПроизводство.Ссылка КАК Ссылка,
	|	ЗаказНаПроизводство.ДатаРассылки КАК ДатаРассылки
	|ИЗ
	|	Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|ГДЕ
	|	ЗаказНаПроизводство.Закрыт = ЛОЖЬ
	|	И ЗаказНаПроизводство.ВидОтгрузки <> &ВидОтгрузки
	|	И ЗаказНаПроизводство.ОтгрузкаРазрешена = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказНаПроизводство.Дата";
Запрос.УстановитьПараметр("ВидОтгрузки",Перечисления.ВидыОтгрузки.ПустаяСсылка());
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Ссылка.ВидОтгрузки = Перечисления.ВидыОтгрузки.Частичная Тогда	
		ТЗ = ПроверитьЧастичнуюОтгрузку(ВыборкаДетальныеЗаписи.Ссылка);			
			Если ТЗ.Количество() > 0 Тогда
			ТЧ = ТаблицаРазрешениеОтгрузки.Добавить();
			ТЧ.ЗаказНаПроизводство = ВыборкаДетальныеЗаписи.Ссылка;
			ТЧ.ДатаРассылки = ВыборкаДетальныеЗаписи.ДатаРассылки;
			КонецЕсли;
		ИначеЕсли ВыборкаДетальныеЗаписи.Ссылка.ВидОтгрузки = Перечисления.ВидыОтгрузки.Полная Тогда
		Результат = ПроверитьПолнуюОтгрузку(ВыборкаДетальныеЗаписи.Ссылка);
 			Если Результат.Полный Тогда
			ТЧ = ТаблицаРазрешениеОтгрузки.Добавить();
			ТЧ.ЗаказНаПроизводство = ВыборкаДетальныеЗаписи.Ссылка;
			ТЧ.ДатаРассылки = ВыборкаДетальныеЗаписи.ДатаРассылки;
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьГотовыеКОтгрузке(Команда)
ПолучитьГотовыеКОтгрузкеНаСервере();
КонецПроцедуры

&НаСервере
Функция ПолучитьEmailСотрудника()
Возврат(ПараметрыСеанса.Пользователь.Email);
КонецФункции

&НаСервере
Функция ПолучитьEmailПолучателя(ЗНП)
Возврат(ЗНП.Автор.Email);
КонецФункции

&НаСервере
Функция ПолучитьРезервныйEmailПолучателя()
Возврат(СотрудникДляРассылки.Email);
КонецФункции

&НаСервере
Функция РассылкаСостоялась(ЗНП)
Возврат(ЗначениеЗаполнено(ЗНП.ДатаРассылки));
КонецФункции

&НаСервере
Процедура ЗафиксироватьДатуРассылки(ЗНП)
ЗНПОбъект = ЗНП.ПолучитьОбъект();
ЗНПОбъект.ДатаРассылки = ТекущаяДата();
ЗНПОбъект.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры

&НаСервере
Функция ПолучитьКонтактноеЛицо(ЗНП)
Возврат(?(ЗначениеЗаполнено(ЗНП.КонтактноеЛицо),ЗНП.КонтактноеЛицо,"не указано"));
КонецФункции 

&НаСервере
Функция ПолучитьТелефоныКонтактногоЛица(ЗНП)
Возврат(?(ЗначениеЗаполнено(ЗНП.ТелефоныКонтактногоЛица),ЗНП.ТелефоныКонтактногоЛица,"не указано"));
КонецФункции  

&НаСервере
Процедура СоздатьЗадачиВБазеСбыта()
БазаСбыта = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Константы.БазаДанных1ССбыт.Получить());
	Если БазаСбыта = Неопределено Тогда
	Возврат;
	КонецЕсли;
		Для каждого ТЧ Из ТаблицаРазрешениеОтгрузки Цикл
			Если Не РассылкаСостоялась(ТЧ.ЗаказНаПроизводство) Тогда
			ЗП = БазаСбыта.Задачи.ЗадачиПользователя.СоздатьЗадачу();
			ЗП.Наименование = "Проверить оплату Заказ №"+ТЧ.ЗаказНаПроизводство.Номер;
			Текст = "Здравствуйте!";
			Текст = Текст + Символы.ПС+ "";
			Текст = Текст + Символы.ПС+ ""+ТЧ.ЗаказНаПроизводство+" готов, но отгрузка запрещена!";	
			Текст = Текст + Символы.ПС+ "";
			Текст = Текст + Символы.ПС+ "Контактное лицо: "+ПолучитьКонтактноеЛицо(ТЧ.ЗаказНаПроизводство);	
			Текст = Текст + Символы.ПС+ "";
			Текст = Текст + Символы.ПС+ "Телефон контактного лица: "+ПолучитьТелефоныКонтактногоЛица(ТЧ.ЗаказНаПроизводство);	
			Текст = Текст + Символы.ПС+ "";		
			Текст = Текст + Символы.ПС+ "С уважением, служба автоматической рассылки производственной базы!";
			ЗП.Описание = Текст;
			ЗП.Объект = БазаСбыта.Документы.ЗаказПокупателя.НайтиПоНомеру(СокрЛП(ТЧ.ЗаказНаПроизводство.Номер),ТЧ.ЗаказНаПроизводство.Дата);
			ЗП.Исполнитель = БазаСбыта.Справочники.Пользователи.НайтиПоНаименованию(СокрЛП(ТЧ.ЗаказНаПроизводство.Автор.Наименование),Истина);
			ЗП.Дата = ТекущаяДата();
			ЗП.ДатаИсполнения = ТекущаяДата()+86400;
			ЗП.СрокИсполнения = ТекущаяДата()+86400;
			ЗП.Записать();			
			КонецЕсли;		
		КонецЦикла;
КонецПроцедуры 

&НаКлиенте
Процедура ПочтоваяРассылкаГотовыхКОтгрузке(Команда)
Состояние("Обработка...",,"Создание задач в базе сбыта...");
СоздатьЗадачиВБазеСбыта();
Состояние("Обработка...",,"Рассылка почтовых сообщений...");
EmailСотрудника = ПолучитьEmailСотрудника();
Сообщение = Новый ИнтернетПочтовоеСообщение;
ИПП = Новый ИнтернетПочтовыйПрофиль; 
Почта = Новый ИнтернетПочта;

НастройкиПочты = ОбщийМодульВызовСервера.ПолучитьНастройкиПочты();
ИПП.АдресСервераSMTP = НастройкиПочты.АдресСервераSMTP; 
ИПП.ПортSMTP = НастройкиПочты.ПортSMTP;
ИПП.ВремяОжидания = 60; 
ИПП.Пароль = НастройкиПочты.ПарольПочтовогоСервера; 
ИПП.Пользователь = EmailСотрудника;
Сообщение.Отправитель.Адрес = EmailСотрудника;

	Для каждого ТЧ Из ТаблицаРазрешениеОтгрузки Цикл
		Если Не РассылкаСостоялась(ТЧ.ЗаказНаПроизводство) Тогда
		Сообщение.Получатели.Очистить();
		//Сообщение.Получатели.Добавить(ПолучитьEmailПолучателя(ТЧ.ЗаказНаПроизводство));
		//Сообщение.Получатели.Добавить(ПолучитьРезервныйEmailПолучателя());
		Сообщение.Получатели.Добавить(EmailСотрудника);
		Сообщение.Тема = "Запрещена отгрузка "+ТЧ.ЗаказНаПроизводство; 
		Текст = "Здравствуйте!";
		Текст = Текст + Символы.ПС+ "";
		Текст = Текст + Символы.ПС+ ""+ТЧ.ЗаказНаПроизводство+" готов, но отгрузка запрещена!";	
		Текст = Текст + Символы.ПС+ "";
		Текст = Текст + Символы.ПС+ "Контактное лицо: "+ПолучитьКонтактноеЛицо(ТЧ.ЗаказНаПроизводство);	
		Текст = Текст + Символы.ПС+ "";
		Текст = Текст + Символы.ПС+ "Телефон контактного лица: "+ПолучитьТелефоныКонтактногоЛица(ТЧ.ЗаказНаПроизводство);	
		Текст = Текст + Символы.ПС+ "";		
		Текст = Текст + Символы.ПС+ "С уважением, служба автоматической рассылки производственной базы!";
		Сообщение.Тексты.Очистить();
		Сообщение.Тексты.Добавить(Текст);	
		// Подключиться и отправить.  
		Почта.Подключиться(ИПП);
		Почта.Послать(Сообщение); 
		Почта.Отключиться();
		ТЧ.ДатаРассылки = ТекущаяДата();
		ЗафиксироватьДатуРассылки(ТЧ.ЗаказНаПроизводство);
		КонецЕсли;		
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ОбработаноЛогистомНаСервере(ЗНП,ВыбДата)
ЗНПОбъект = ЗНП.ПолучитьОбъект();
ЗНПОбъект.ОбработанЛогистом = Истина;
ЗНПОбъект.ДатаОбработкиЛогистом = ВыбДата;
ЗНПОбъект.Записать(РежимЗаписиДокумента.Запись);
КонецПроцедуры

&НаКлиенте
Процедура ОбработаноЛогистом(Команда)
	Если Элементы.ТаблицаЗНП.ТекущаяСтрока <> Неопределено Тогда
	ВыбДата = ТекущаяДата();
		Если ВвестиДату(ВыбДата,"Введите дату обработки логистом",ЧастиДаты.Дата) Тогда
		ОбработаноЛогистомНаСервере(Элементы.ТаблицаЗНП.ТекущиеДанные.ЗаказНаПроизводство,ВыбДата);
		Элементы.ТаблицаЗНП.ТекущиеДанные.ДатаОбработкиЛогистом = ВыбДата;
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗНППриАктивизацииСтроки(Элемент)
	Если Элементы.ТаблицаЗНП.ТекущаяСтрока <> Неопределено Тогда
	Элементы.ТаблицаЗНПОбработаноЛогистом.Доступность = Не ЗначениеЗаполнено(Элементы.ТаблицаЗНП.ТекущиеДанные.НакладнаяНаСборку);
	КонецЕсли;
КонецПроцедуры
