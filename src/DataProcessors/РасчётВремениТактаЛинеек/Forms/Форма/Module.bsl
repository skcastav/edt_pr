
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
НаДату  = НачалоМесяца(ТекущаяДата());
Элементы.ВнестиВПаспортаЛинеек.Доступность = Не РольДоступна("ПолныйПросмотр");
КонецПроцедуры

&НаСервере
Процедура ПоказатьПП()
ТЗ = Новый ТаблицаЗначений;
СписокДат = Новый СписокЗначений;
Запрос = Новый Запрос;
  
ТЗ.Колонки.Добавить("Линейка",Новый ОписаниеТипов("СправочникСсылка.Линейки"),"Линейка");               
ТЗ.Колонки.Добавить("Товар",Новый ОписаниеТипов("СправочникСсылка.Товары"),"Товар");
ТЗ.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"),"Номенклатура");
ТЗ.Колонки.Добавить("Проект",Новый ОписаниеТипов("СправочникСсылка.Проекты"),"Проект"); 
ТекДата = НачалоГода(ПериодЦелевой.ДатаОкончания);
	Пока ТекДата <= ПериодЦелевой.ДатаОкончания Цикл
		Если День(ТекДата) = 1 Тогда
		СписокДат.Добавить(ТекДата);	
		ТЗ.Колонки.Добавить("Д"+СписокДат.Количество(),Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)),Формат(ТекДата,"ДФ=MM.yy"));
		КонецЕсли;			
	ТекДата = ТекДата + 86400;
	КонецЦикла;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПерспективныеПланы.Период КАК Период,
	|	ПерспективныеПланы.МПЗ КАК МПЗ,             
	|	ПерспективныеПланы.Проект КАК Проект,
	|	ПерспективныеПланы.Количество КАК Количество
	|ИЗ
	|	РегистрСведений.ПерспективныеПланы КАК ПерспективныеПланы
	|ГДЕ
	|	ПерспективныеПланы.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И ПерспективныеПланы.МПЗ.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	И ПерспективныеПланы.Количество > 0";
	Если ВидРасчёта = 0 Тогда
	Запрос.Текст = Запрос.Текст + "	И ПерспективныеПланы.Проект = &Проект";
	Запрос.УстановитьПараметр("Проект", Справочники.Проекты.ПустаяСсылка());
	КонецЕсли;
Запрос.Текст = Запрос.Текст + " ИТОГИ ПО МПЗ"; 
Запрос.УстановитьПараметр("ДатаНач", НачалоГода(ПериодЦелевой.ДатаОкончания));
Запрос.УстановитьПараметр("ДатаКон", ПериодЦелевой.ДатаОкончания);
Запрос.УстановитьПараметр("СписокЛинеек", ГруппаЛинеек);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМПЗ.Следующий() Цикл
	ВыборкаПП = ВыборкаМПЗ.Выбрать();
		Пока ВыборкаПП.Следующий() Цикл
		НомСтр = СписокДат.НайтиПоЗначению(ВыборкаПП.Период).ПолучитьИдентификатор()+1;
		ВыбТЧ = ТЗ.НайтиСтроки(Новый Структура("Номенклатура",ВыборкаМПЗ.МПЗ));
			Если ВыбТЧ.Количество() = 0 Тогда
			ТЧ = ТЗ.Добавить();
			ТЧ.Линейка = ВыборкаМПЗ.МПЗ.Линейка;		
			ТЧ.Номенклатура = ВыборкаМПЗ.МПЗ;
			ТЧ.Товар = ВыборкаМПЗ.МПЗ.Товар; 
			ТЧ.Проект = ВыборкаПП.Проект;
			ТЧ["Д"+НомСтр] = ВыборкаПП.Количество;				
			Иначе	
			ВыбТЧ[0]["Д"+НомСтр] = ВыборкаПП.Количество;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
ТЗ.Сортировать("Линейка,Товар");	
МассивРеквизитов = Новый Массив;
МассивУдаляемыхРеквизитов = Новый Массив;

МассивРеквизитов.Добавить(Новый РеквизитФормы("Номенклатура", Новый ОписаниеТипов("ТаблицаЗначений"), "", "Номенклатура"));
	Для Каждого Колонка Из ТЗ.Колонки Цикл 
    МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "Номенклатура", Колонка.Заголовок)); 
	КонецЦикла;
МассивУдаляемыхРеквизитов.Добавить("Номенклатура");
	Если Элементы.Найти("Номенклатура") <> Неопределено Тогда
	Элементы.Удалить(Элементы["Номенклатура"]);
	ИзменитьРеквизиты(,МассивУдаляемыхРеквизитов);
	КонецЕсли;
ИзменитьРеквизиты(МассивРеквизитов);
//Помещаем Элементы на форму 
Таблица = Элементы.Добавить("Номенклатура", Тип("ТаблицаФормы")); 
Таблица.ПутьКДанным = "Номенклатура"; 
Таблица.Отображение = ОтображениеТаблицы.Список;
Таблица.ЧередованиеЦветовСтрок = Истина;
Таблица.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Верх;
Таблица.КонтекстноеМеню.Доступность = Ложь;
Таблица.ИзменятьСоставСтрок = Ложь;
Таблица.ИзменятьПорядокСтрок = Ложь;
	Для Каждого Колонка Из ТЗ.Колонки Цикл
		Если Колонка.Имя = "Наименование" Тогда
		Продолжить;
		КонецЕсли; 
    НовыйЭлемент = Элементы.Добавить("Номенклатура_" + Колонка.Имя, Тип("ПолеФормы"), Таблица);
		Если (Колонка.Имя = "Номенклатура")или(Колонка.Имя = "Товар")или(Колонка.Имя = "Линейка")или(Колонка.Имя = "Проект") Тогда
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.КнопкаВыпадающегоСписка = Ложь;
		НовыйЭлемент.КнопкаВыбора = Ложь;
		НовыйЭлемент.КнопкаОчистки = Ложь;
		НовыйЭлемент.КнопкаРегулирования = Ложь;
		НовыйЭлемент.КнопкаОткрытия = Истина;
		НовыйЭлемент.КнопкаСоздания = Ложь;	
		НовыйЭлемент.БыстрыйВыбор = Ложь;
		НовыйЭлемент.ИсторияВыбораПриВводе = ИсторияВыбораПриВводе.НеИспользовать;
		НовыйЭлемент.ФиксацияВТаблице = ФиксацияВТаблице.Лево;
		Иначе	
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		КонецЕсли;   
    НовыйЭлемент.ПутьКДанным = "Номенклатура." + Колонка.Имя; 
	КонецЦикла;
//переносим таблицу значений на форму 
ЗначениеВРеквизитФормы(ТЗ,"Номенклатура");
КонецПроцедуры

&НаСервере
Процедура РассчитатьСреднийПлан()
ТаблицаЛинеек.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПерспективныеПланы.Количество КАК Количество,
	|	ПерспективныеПланы.МПЗ.Линейка КАК Линейка
	|ИЗ
	|	РегистрСведений.ПерспективныеПланы КАК ПерспективныеПланы
	|ГДЕ
	|	ПерспективныеПланы.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И ПерспективныеПланы.МПЗ.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	И ТИПЗНАЧЕНИЯ(ПерспективныеПланы.МПЗ) = ТИП(Справочник.Номенклатура)
	|	И ПерспективныеПланы.Количество > 0";
	Если ВидРасчёта = 0 Тогда
	Запрос.Текст = Запрос.Текст + "	И ПерспективныеПланы.Проект = &Проект";
	Запрос.УстановитьПараметр("Проект", Справочники.Проекты.ПустаяСсылка());
	КонецЕсли;
Запрос.Текст = Запрос.Текст + " ИТОГИ
								|	СУММА(Количество)
								|ПО
								|	Линейка";
Запрос.УстановитьПараметр("ДатаНач", Период.ДатаНачала); 
Запрос.УстановитьПараметр("ДатаКон", Период.ДатаОкончания);
Запрос.УстановитьПараметр("СписокЛинеек", ГруппаЛинеек); 
РезультатЗапроса = Запрос.Выполнить();               
Количество = 0;
КоличествоДней = КалендарныеГрафики.ПолучитьРазностьДатПоКалендарю(Константы.ОсновнойПроизводственныйКалендарь.Получить(),Период.ДатаНачала,Период.ДатаОкончания);
ВыборкаЛинейки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЛинейки.Следующий() Цикл
	ТЧ = ТаблицаЛинеек.Добавить();
	ТЧ.Линейка = ВыборкаЛинейки.Линейка;
	ТЧ.РасчётныйПлан = ВыборкаЛинейки.Количество/КоличествоДней;
    Количество = Количество + ВыборкаЛинейки.Количество;
	КонецЦикла; 
СреднесуточныйПлан = Количество/КоличествоДней;
ВремяТактаМинимальное = ?(СреднесуточныйПлан > 0, 360/СреднесуточныйПлан, 0); 
ВремяТактаМаксимальное = ?(СреднесуточныйПлан > 0, 450/СреднесуточныйПлан, 0);
КонецПроцедуры

&НаСервере
Процедура РассчитатьЦелевойПлан()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПерспективныеПланы.Количество КАК Количество,
	|	ПерспективныеПланы.МПЗ.Линейка КАК Линейка
	|ИЗ
	|	РегистрСведений.ПерспективныеПланы КАК ПерспективныеПланы
	|ГДЕ
	|	ПерспективныеПланы.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И ПерспективныеПланы.МПЗ.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	И ТИПЗНАЧЕНИЯ(ПерспективныеПланы.МПЗ) = ТИП(Справочник.Номенклатура)
	|	И ПерспективныеПланы.Количество > 0";
	Если ВидРасчёта = 0 Тогда
	Запрос.Текст = Запрос.Текст + "	И ПерспективныеПланы.Проект = &Проект";
	Запрос.УстановитьПараметр("Проект", Справочники.Проекты.ПустаяСсылка());
	КонецЕсли; 
Запрос.УстановитьПараметр("ДатаНач", ПериодЦелевой.ДатаНачала); 
Запрос.УстановитьПараметр("ДатаКон", ПериодЦелевой.ДатаОкончания);
Запрос.УстановитьПараметр("СписокЛинеек", ГруппаЛинеек); 
РезультатЗапроса = Запрос.Выполнить();               
Количество = 0;
КоличествоДней = КалендарныеГрафики.ПолучитьРазностьДатПоКалендарю(Константы.ОсновнойПроизводственныйКалендарь.Получить(),ПериодЦелевой.ДатаНачала,ПериодЦелевой.ДатаОкончания);
ВыборкаДетальныхЗаписей = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныхЗаписей.Следующий() Цикл	
    Количество = Количество + ВыборкаДетальныхЗаписей.Количество;
	КонецЦикла;  
ЦелевойПлан = Количество/КоличествоДней; 
ВремяТактаРасчётное = ?(ЦелевойПлан > 0, 450/ЦелевойПлан, 0);
КонецПроцедуры

&НаКлиенте
Процедура Рассчитать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда 
	Состояние("Обработка",,"Расчёт среднесуточного плана...");
	РассчитатьСреднийПлан();
	Состояние("Обработка",,"Расчёт целевого плана...");
	РассчитатьЦелевойПлан();
	ПоказатьПП();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВнестиВПаспортаЛинеекНаСервере()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Линейки.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Линейки КАК Линейки
	|ГДЕ
	|	Линейки.Ссылка В ИЕРАРХИИ(&ГруппаЛинеек)
	|	И Линейки.ПометкаУдаления = ЛОЖЬ
	|	И Линейки.ЭтоГруппа = ЛОЖЬ";
Запрос.УстановитьПараметр("ГруппаЛинеек", ГруппаЛинеек);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	РПЛ = РегистрыСведений.ПаспортЛинейки.СоздатьМенеджерЗаписи();
	РПЛ.Период = НаДату;
	РПЛ.Линейка = ВыборкаДетальныеЗаписи.Ссылка; 
    РПЛ.ВремяТактаРасчётное = ВремяТактаРасчётное;
    РПЛ.ВремяТактаМинимальное = ВремяТактаМинимальное;
    РПЛ.ВремяТактаМаксимальное = ВремяТактаМаксимальное;
	Выборка = ТаблицаЛинеек.НайтиСтроки(Новый Структура("Линейка",ВыборкаДетальныеЗаписи.Ссылка));
		Если Выборка.Количество() > 0 Тогда
		РПЛ.ВыпускЗаДеньРасчётный = Выборка[0].РасчётныйПлан;
		КонецЕсли; 
	РПЛ.Смена = Смена;
    РПЛ.ПроцентПремии = ПроцентПремии; 
    РПЛ.ТехническийЛидер = ТехническийЛидер;
	РПЛ.Мастер = ПараметрыСеанса.Пользователь;
	РПЛ.Записать(Истина);	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВнестиВПаспортаЛинеек(Команда)
ВнестиВПаспортаЛинеекНаСервере();
КонецПроцедуры
