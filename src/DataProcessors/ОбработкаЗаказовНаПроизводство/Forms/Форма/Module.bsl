
&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
Состояние("Обработка...",,"Получение данных...");
	Если ТекущаяСтраница.Имя = "Загрузка" Тогда
	Элементы.ТаблицаЗаказовЗагрузитьИСоздатьЗаказы.КнопкаПоУмолчанию = Истина;
	ИначеЕсли ТекущаяСтраница.Имя = "Корректировки" Тогда
	Элементы.ТаблицаКорректировокПолучитьКорректировки.КнопкаПоУмолчанию = Истина;
	ПолучитьКорректировкиНаСервере();
	ИначеЕсли ТекущаяСтраница.Имя = "Изменения" Тогда
	ПолучитьИзмененияНаСервере();
	ИначеЕсли ТекущаяСтраница.Имя = "НедостающаяПродукция" Тогда
	ПолучитьЗаказыНаСервере();	
	Элементы.ТаблицаСозданныхСоздатьНедостающиеМТК.КнопкаПоУмолчанию = Истина;
	ИначеЕсли ТекущаяСтраница.Имя = "КрупныеЗаказы" Тогда
	ПолучитьКрупныеЗаказыНаСервере();
	Элементы.ТаблицаКрупныхЗаказовСоздатьМТКПоКрупнымЗаказам.КнопкаПоУмолчанию = Истина;
	ИначеЕсли ТекущаяСтраница.Имя = "РучнойЗапуск" Тогда
	ПолучитьРучнойЗапускНаСервере();
	Элементы.ТаблицаРучнойЗапускОбработатьРучнойЗапуск.КнопкаПоУмолчанию = Истина;
	ИначеЕсли ТекущаяСтраница.Имя = "Перепрогон" Тогда
	ПолучитьПерепрогонНаСервере();
	Элементы.СоздатьПеремещениеНаПерепрогон.КнопкаПоУмолчанию = Истина;
	ИначеЕсли ТекущаяСтраница.Имя = "ТНП" Тогда
	ПолучитьТНПНаСервере();
	Элементы.ЗарезервироватьТНП.КнопкаПоУмолчанию = Истина;
	ИначеЕсли ТекущаяСтраница.Имя = "СвободныйОстаток" Тогда
	ПолучитьСвободныйОстатокНаСервере();
	Элементы.ЗарезервироватьСвободныйОстаток.КнопкаПоУмолчанию = Истина;		
	Иначе
	ПолучитьНеСозданныеМТКНаСервере();
	Элементы.ТаблицаНеСозданныхМТКСоздатьМТК.КнопкаПоУмолчанию = Истина;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьПользователя(ID)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Пользователи._Description
	|ИЗ
	|	ВнешнийИсточникДанных.БазаСбыта.Таблица.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи._IDRRef = &_IDRRef";
Запрос.УстановитьПараметр("_IDRRef",ID);
РезультатЗапроса = Запрос.Выполнить();
Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
	Возврат(Выборка._Description);
	КонецЦикла;
Возврат("");
КонецФункции 

&НаСервере
Функция ПолучитьПартнёра(ID)
Запрос = Новый Запрос;
Результат = Новый Структура("Код,Наименование","","");

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Партнёры._Description,
	|	Партнёры._Code
	|ИЗ
	|	ВнешнийИсточникДанных.БазаСбыта.Таблица.Партнёры КАК Партнёры
	|ГДЕ
	|	Партнёры._IDRRef = &_IDRRef";
Запрос.УстановитьПараметр("_IDRRef",ID);
РезультатЗапроса = Запрос.Выполнить();
Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
	Результат.Код = Выборка._Code; 
	Результат.Наименование = Выборка._Description;
	КонецЦикла;
Возврат(Результат);
КонецФункции

&НаСервере
Функция ПолучитьПараметрыКонтрагента(ID)
Результат = Новый Структура("ПолноеНаименование,ИНН,КПП","","","");
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.ИНН,
	|	Контрагенты.КПП,
	|	Контрагенты.ПолноеНаименование
	|ИЗ
	|	ВнешнийИсточникДанных.БазаСбыта.Таблица.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты._Fld3244RRef = &_Fld3244RRef";
Запрос.УстановитьПараметр("_Fld3244RRef",ID);
РезультатЗапроса = Запрос.Выполнить();
Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
	Результат.ПолноеНаименование = Выборка.ПолноеНаименование;
	Результат.ИНН = Выборка.ИНН;
	Результат.КПП = Выборка.КПП;
	КонецЦикла;
Возврат(Результат);
КонецФункции

&НаСервере
Функция ПроверитьСкладТД(Склад)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Склады._Code
	|ИЗ
	|	ВнешнийИсточникДанных.БазаСбыта.Таблица.Склады КАК Склады
	|ГДЕ
	|	Склады._IDRRef = &_IDRRef";
Запрос.УстановитьПараметр("_IDRRef",Склад);
РезультатЗапроса = Запрос.Выполнить();
Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
	Возврат(?(СокрЛП(Выборка._Code) = "00-000001",Истина,Ложь));
	КонецЦикла;
Возврат(Ложь);
КонецФункции

&НаСервере
Функция ПолучитьТовар(Артикул)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Товары КАК Товары
	|ГДЕ
	|	Товары.Код = &Код
	|	И Товары.ЭтоГруппа = ЛОЖЬ";
Запрос.УстановитьПараметр("Код",Число(Артикул));
РезультатЗапроса = Запрос.Выполнить();
Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
	Возврат(Выборка.Ссылка);
	КонецЦикла;
Возврат(Справочники.Товары.ПустаяСсылка());
КонецФункции

&НаСервере
Функция ПолучитьСпецификации(Товар,флКТ)
СписокСпецификаций = Новый СписокЗначений;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка,
	|	СтатусыМПЗСрезПоследних.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.СтатусыМПЗ.СрезПоследних(&НаДату, ) КАК СтатусыМПЗСрезПоследних
	|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО СтатусыМПЗСрезПоследних.МПЗ = Номенклатура.Ссылка
	|ГДЕ
	|	Номенклатура.Товар = &Товар
	|	И СтатусыМПЗСрезПоследних.Статус <> &Статус";
Запрос.УстановитьПараметр("Товар",Товар);
Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыСпецификаций.Запрещённая);
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
РезультатЗапроса = Запрос.Выполнить();
Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если флКТ Тогда	
			Если Найти(Выборка.Ссылка.Наименование,"_КТ") = 0 Тогда	
			Продолжить;
			КонецЕсли; 
		КонецЕсли; 
			Если Выборка.Статус = Перечисления.СтатусыСпецификаций.ДоИсчерпанияЗапасов Тогда
			СписокСпецификаций.Вставить(0,Выборка.Ссылка,СокрЛП(Выборка.Ссылка.Наименование)+" ["+Выборка.Статус+"]");
			Иначе
			СписокСпецификаций.Добавить(Выборка.Ссылка,СокрЛП(Выборка.Ссылка.Наименование)+" ["+Выборка.Статус+"]");
			КонецЕсли;	
	КонецЦикла;
		Если Не флКТ Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Материалы.Ссылка КАК Ссылка,
			|	СтатусыМПЗСрезПоследних.Статус КАК Статус
			|ИЗ
			|	РегистрСведений.СтатусыМПЗ.СрезПоследних(&НаДату, ) КАК СтатусыМПЗСрезПоследних
			|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Материалы КАК Материалы
			|		ПО СтатусыМПЗСрезПоследних.МПЗ = Материалы.Ссылка
			|ГДЕ
			|	Материалы.Товар = &Товар
			|	И СтатусыМПЗСрезПоследних.Статус <> &Статус";
		Запрос.УстановитьПараметр("Товар",Товар);
		Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыМПЗ.Запрещённая);
		Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
			СписокСпецификаций.Добавить(Выборка.Ссылка,СокрЛП(Выборка.Ссылка.Наименование)+" ["+Выборка.Статус+"]");
			КонецЦикла;
		КонецЕсли;
Возврат(СписокСпецификаций);
КонецФункции 

&НаСервере
Функция ПолучитьЗапрещенныеСпецификации(Товар,флКТ)
СписокСпецификаций = Новый СписокЗначений;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка,
	|	СтатусыМПЗСрезПоследних.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.СтатусыМПЗ.СрезПоследних(&НаДату, ) КАК СтатусыМПЗСрезПоследних
	|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО СтатусыМПЗСрезПоследних.МПЗ = Номенклатура.Ссылка
	|ГДЕ
	|	Номенклатура.Товар = &Товар
	|	И СтатусыМПЗСрезПоследних.Статус = &Статус";
Запрос.УстановитьПараметр("Товар",Товар);
Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыСпецификаций.Запрещённая);
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
РезультатЗапроса = Запрос.Выполнить();
Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если флКТ Тогда	
			Если Найти(Выборка.Ссылка.Наименование,"_КТ") = 0 Тогда	
			Продолжить;
			КонецЕсли; 
		КонецЕсли; 
			Если Выборка.Статус = Перечисления.СтатусыСпецификаций.ДоИсчерпанияЗапасов Тогда
			СписокСпецификаций.Вставить(0,Выборка.Ссылка,СокрЛП(Выборка.Ссылка.Наименование)+" ["+Выборка.Статус+"]");
			Иначе
			СписокСпецификаций.Добавить(Выборка.Ссылка,СокрЛП(Выборка.Ссылка.Наименование)+" ["+Выборка.Статус+"]");
			КонецЕсли;	
	КонецЦикла;
		Если Не флКТ Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Материалы.Ссылка КАК Ссылка,
			|	СтатусыМПЗСрезПоследних.Статус КАК Статус
			|ИЗ
			|	РегистрСведений.СтатусыМПЗ.СрезПоследних(&НаДату, ) КАК СтатусыМПЗСрезПоследних
			|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Материалы КАК Материалы
			|		ПО СтатусыМПЗСрезПоследних.МПЗ = Материалы.Ссылка
			|ГДЕ
			|	Материалы.Товар = &Товар
			|	И СтатусыМПЗСрезПоследних.Статус = &Статус";
		Запрос.УстановитьПараметр("Товар",Товар);
		Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыМПЗ.Запрещённая);
		Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
			СписокСпецификаций.Добавить(Выборка.Ссылка,СокрЛП(Выборка.Ссылка.Наименование)+" ["+Выборка.Статус+"]");
			КонецЦикла;
		КонецЕсли;
Возврат(СписокСпецификаций);
КонецФункции 

&НаСервере
Функция ПроверитьВидНоменклатуры(ВидНоменклатуры)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыНоменклатуры._Description
	|ИЗ
	|	ВнешнийИсточникДанных.БазаСбыта.Таблица.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ГДЕ
	|	ВидыНоменклатуры._IDRRef = &_IDRRef";
Запрос.УстановитьПараметр("_IDRRef",ВидНоменклатуры);
РезультатЗапроса = Запрос.Выполнить();
Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Найти(Выборка._Description,"Услуги") > 0 Тогда
		Возврат(Ложь);
		ИначеЕсли Найти(Выборка._Description,"Рекламная продукция") > 0 Тогда
		Возврат(Ложь);
		ИначеЕсли Найти(Выборка._Description,"Работа") > 0 Тогда
		Возврат(Ложь);
		КонецЕсли;	
	КонецЦикла;
Возврат(Истина);
КонецФункции  

&НаСервере
Функция ПолучитьСоздатьТипДоставки(ТипДоставки)
	Если ТипДоставки.Пустая() Тогда
	Возврат(Справочники.ТипыДоставкиНП.ПустаяСсылка());
	КонецЕсли; 
ТД = Справочники.ТипыДоставкиНП.НайтиПоКоду(СокрЛП(ТипДоставки.Код));
	Если ТД.Пустая() Тогда                             
	ТДОбъект = Справочники.ТипыДоставкиНП.СоздатьЭлемент();
	ТДОбъект.Код = ТипДоставки.Код;
	ТДОбъект.Наименование = ТипДоставки.Наименование;
	ТДОбъект.RefNP = ТипДоставки.RefNP;
	ТДОбъект.Записать();
	Возврат(ТДОбъект.Ссылка);
	Иначе
	Возврат(ТД);
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьСоздатьТК(ТрансКом)
	Если ТрансКом.Пустая() Тогда
	Возврат(Справочники.ТранспортныеКомпании.ПустаяСсылка());
	КонецЕсли; 
ТК = Справочники.ТранспортныеКомпании.НайтиПоКоду(СокрЛП(ТрансКом.Код));
	Если ТК.Пустая() Тогда                             
	ТКОбъект = Справочники.ТранспортныеКомпании.СоздатьЭлемент();
	ТКОбъект.Код = ТрансКом.Код;
	ТКОбъект.Наименование = ТрансКом.Наименование;
	ТКОбъект.Записать();
	Возврат(ТКОбъект.Ссылка);
	Иначе
	Возврат(ТК);
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьСоздатьКартуДоставки(БазаСбыта,ЗаказКлиента,Контрагент)
	Если Константы.КодБазы.Получить() = "БГР" Тогда
	КартаДоставки = ЗаказКлиента.ИМКартаДоставки;	
	Иначе
	КартаДоставки = ЗаказКлиента.КартаДоставки;
	КонецЕсли;
		Если Не БазаСбыта.ЗначениеЗаполнено(КартаДоставки) Тогда
		Возврат(Справочники.КартыДоставки.ПустаяСсылка());
		КонецЕсли; 
КД = Справочники.КартыДоставки.НайтиПоКоду(СокрЛП(КартаДоставки.Код));	
	Если КД.Пустая() Тогда                             
	КДОбъект = Справочники.КартыДоставки.СоздатьЭлемент();
	КДОбъект.Владелец = Контрагент;
	КДОбъект.Код = КартаДоставки.Код;
	КДОбъект.Наименование = КартаДоставки.Наименование;
	КДОбъект.Плательщик = КартаДоставки.Плательщик;
		Если Константы.КодБазы.Получить() = "БГР" Тогда
		КДОбъект.ДатаСоздания = КартаДоставки.ДатаСоздания;
		КДОбъект.ТрансКом =  ПолучитьСоздатьТК(КартаДоставки.ТрансКом);
		КДОбъект.НазваниеКлиента = КартаДоставки.НазваниеКлиента;
		КДОбъект.Город = КартаДоставки.Город;
		КДОбъект.Телефон = КартаДоставки.Телефон;
		КДОбъект.УсловияДоставки = КартаДоставки.УсловияДоставки;
		Иначе
		КДОбъект.Город = КартаДоставки.ГородДоставкиНП.Наименование;
		КДОбъект.Телефон = КартаДоставки.ТелефонПолучателя;
		КДОбъект.ТипДоставки = ПолучитьСоздатьТипДоставки(КартаДоставки.ТипДоставки);
			Если СокрЛП(КартаДоставки.ФормаОплаты.Наименование) = "Безготівковий" Тогда
			КДОбъект.КодОплаты = Перечисления.КодыОплаты.Безготівковий;
			ИначеЕсли СокрЛП(КартаДоставки.ФормаОплаты.Наименование) = "Готівка" Тогда
			КДОбъект.КодОплаты = Перечисления.КодыОплаты.Готівка;	
			КонецЕсли;
				Если БазаСбыта.XMLString(КартаДоставки.ВариантОтгрузки) = "Самовывоз" Тогда
				КДОбъект.ВариантОтгрузки = Перечисления.ВариантыОтгрузки.Самовывоз;
				ИначеЕсли БазаСбыта.XMLString(КартаДоставки.ВариантОтгрузки) = "Новая почта" Тогда
				КДОбъект.ВариантОтгрузки = Перечисления.ВариантыОтгрузки.НоваяПочта;					
				ИначеЕсли БазаСбыта.XMLString(КартаДоставки.ВариантОтгрузки) = "Другой перевозчик" Тогда
				КДОбъект.ВариантОтгрузки = Перечисления.ВариантыОтгрузки.ДругойПеревозчик;
				ИначеЕсли БазаСбыта.XMLString(КартаДоставки.ВариантОтгрузки) = "Офис Овен" Тогда
				КДОбъект.ВариантОтгрузки = Перечисления.ВариантыОтгрузки.ОфисОвен;
				ИначеЕсли БазаСбыта.XMLString(КартаДоставки.ВариантОтгрузки) = "Ночной экспресс" Тогда
				КДОбъект.ВариантОтгрузки = Перечисления.ВариантыОтгрузки.НочнойЭкспресс;
				ИначеЕсли БазаСбыта.XMLString(КартаДоставки.ВариантОтгрузки) = "САТ" Тогда
				КДОбъект.ВариантОтгрузки = Перечисления.ВариантыОтгрузки.САТ;
				ИначеЕсли БазаСбыта.XMLString(КартаДоставки.ВариантОтгрузки) = "Деливери" Тогда
				КДОбъект.ВариантОтгрузки = Перечисления.ВариантыОтгрузки.Деливери;
				ИначеЕсли БазаСбыта.XMLString(КартаДоставки.ВариантОтгрузки) = "Интайм" Тогда
				КДОбъект.ВариантОтгрузки = Перечисления.ВариантыОтгрузки.Интайм;				
				КонецЕсли;
		КДОбъект.ПредставительПолучателя = КартаДоставки.ПредставительПолучателя;
		КДОбъект.ИмяПолучателя = КартаДоставки.ИмяПолучателя;
		КДОбъект.Улица = КартаДоставки.StreetRef;
		КДОбъект.НомерДома = КартаДоставки.BuildingNumber;
		КДОбъект.Квартира = КартаДоставки.Flat;
		КонецЕсли;
	КДОбъект.Записать();
	Возврат(КДОбъект.Ссылка);
	Иначе
	Возврат(КД);
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ПроверитьРегистрКрупныхЗаказов(Номер)
НаборЗаписей = РегистрыСведений.КрупныеЗаказы.СоздатьНаборЗаписей();
НаборЗаписей.Отбор.Счёт.Установить(Номер);
НаборЗаписей.Прочитать();
    Для Каждого Запись Из НаборЗаписей Цикл 
		Если Не Запись.Обработан Тогда
		Запись.Обработан = Истина;	
		КонецЕсли;  
    КонецЦикла;
НаборЗаписей.Записать();
КонецПроцедуры

&НаСервере
Функция ПролучитьГодовуюДоверенность(Контрагент)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Доверенности.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Доверенности КАК Доверенности
	|ГДЕ
	|	Доверенности.Владелец = &Владелец
	|	И Доверенности.ДоверенностьСрок >= &ДоверенностьСрок";

Запрос.УстановитьПараметр("Владелец", Контрагент);
Запрос.УстановитьПараметр("ДоверенностьСрок", ТекущаяДата());
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
Возврат(Справочники.Доверенности.ПустаяСсылка());
КонецФункции

&НаСервере
Процедура ПроверитьМПИ(Товар,МежповерочныйИнтервал)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыТоварныхГрупп.ПараметрТоварнойГруппы КАК ПараметрТоварнойГруппы,
	|	ПараметрыТоварныхГрупп.ЗначениеПараметра КАК ЗначениеПараметра
	|ИЗ
	|	РегистрСведений.ПараметрыТоварныхГрупп КАК ПараметрыТоварныхГрупп
	|ГДЕ
	|	ПараметрыТоварныхГрупп.ТоварнаяГруппа = &ТоварнаяГруппа
	|	И (ПараметрыТоварныхГрупп.ПараметрТоварнойГруппы.Наименование ПОДОБНО &Наименование
	|			ИЛИ ПараметрыТоварныхГрупп.ПараметрТоварнойГруппы.Наименование ПОДОБНО &Наименование1)";
Запрос.УстановитьПараметр("ТоварнаяГруппа", Товар.ТоварнаяГруппа);
Запрос.УстановитьПараметр("Наименование", "Параметр5");
Запрос.УстановитьПараметр("Наименование1", "МежповерочныйИнтервал");
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.ЗначениеПараметра <> МежповерочныйИнтервал Тогда
		ПТГ = РегистрыСведений.ПараметрыТоварныхГрупп.СоздатьМенеджерЗаписи();
		ПТГ.ТоварнаяГруппа = Товар.ТоварнаяГруппа;	
		ПТГ.ПараметрТоварнойГруппы = ВыборкаДетальныеЗаписи.ПараметрТоварнойГруппы;
		ПТГ.ЗначениеПараметра = МежповерочныйИнтервал;
		ПТГ.Записать(Истина);		
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры 
    
&НаСервере
Функция ПолучитьСоздатьТовар(Номенклатура,Арт)
	Если Номенклатура.Товар.Пустая() Тогда
	Товар = Справочники.Товары.СоздатьЭлемент();
	Товар.Код = Арт;
    Товар.Наименование = Номенклатура.Наименование;
    Товар.ПолнНаименование = Номенклатура.ПолноеНаименование;
	Товар.Стандартный = Номенклатура.Стандартный;
	Товар.КратностьЗапуска = Номенклатура.КратностьЗапуска;
	Товар.КратностьПродажи = Номенклатура.КратностьПродажи;
	Товар.EAN = Номенклатура.EAN;
	Товар.ЕАС = Номенклатура.ЕАС;
	Товар.СИ = Номенклатура.СИ;
	//Товар.Статус = Номенклатура.СтатусТовара;
	Товар.Записать();
	Номенклатура.Товар = Товар.Ссылка;
	Возврат(Товар.Ссылка);
	Иначе
		Если (Номенклатура.Товар.Стандартный <> Номенклатура.Стандартный)или
			 (Номенклатура.Товар.КратностьЗапуска <> Номенклатура.КратностьЗапуска)или
			 (Номенклатура.Товар.КратностьПродажи <> Номенклатура.КратностьПродажи)или
			 (Номенклатура.Товар.EAN <> Номенклатура.EAN)или
			 (Номенклатура.Товар.ЕАС <> Номенклатура.ЕАС)или
			 (Номенклатура.Товар.СИ <> Номенклатура.СИ)Тогда
			 //(Номенклатура.Товар.Статус <> Номенклатура.СтатусТовара) Тогда	
		Товар = Номенклатура.Товар.ПолучитьОбъект();
		Товар.Стандартный = Номенклатура.Стандартный;
		Товар.КратностьЗапуска = Номенклатура.КратностьЗапуска;
		Товар.КратностьПродажи = Номенклатура.КратностьПродажи;
		Товар.EAN = Номенклатура.EAN;
		Товар.ЕАС = Номенклатура.ЕАС;
		Товар.СИ = Номенклатура.СИ;
		//Товар.Статус = Номенклатура.СтатусТовара;
		Товар.Записать();				
		КонецЕсли;
	Возврат(Номенклатура.Товар); 	
	КонецЕсли;
КонецФункции
   
&НаСервере        
Функция ПолучитьСоздатьПроект(БазаСбыта,бсПроект)
	Если Не БазаСбыта.ЗначениеЗаполнено(бсПроект) Тогда
	Возврат(Справочники.Проекты.ПустаяСсылка());
	КонецЕсли;
Родитель = Справочники.Проекты.НайтиПоНаименованию("Проекты продаж",Истина);
Проект = Справочники.Проекты.НайтиПоКоду(СокрЛП(бсПроект.Код),,Родитель);
	Если Проект.Пустая() Тогда                             
	ПроектОбъект = Справочники.Проекты.СоздатьЭлемент();
    ПроектОбъект.Родитель = Родитель;
	ПроектОбъект.Код = СокрЛП(бсПроект.Код);
	ПроектОбъект.Наименование = СокрЛП(бсПроект.Код)+" "+СокрЛП(бсПроект.Наименование);
	ПроектОбъект.Записать();
	Возврат(ПроектОбъект.Ссылка);
	Иначе
	Возврат(Проект);
	КонецЕсли;
КонецФункции

&НаСервере
Функция СоздатьЗаказНаПроизводствоИИзменитьСтатусЗаказаКлиента(БазаСбыта,ЗаказКлиента,ТЧ)
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	ЗаказНаПроизводство = Документы.ЗаказНаПроизводство.СоздатьДокумент();
	ЗаказНаПроизводство.Дата = ТекущаяДата();
	ЗаказНаПроизводство.Номер = ТЧ.Номер;
	ЗаказНаПроизводство.Автор = ПолучитьСоздатьМенеджера(ТЧ.Менеджер);
		//Если СокрЛП(ТЧ.Код) = "99999951578" Тогда
		//ЗаказНаПроизводство.ВнутренниеСчета = Истина;
		//КонецЕсли; 
	ЗаказНаПроизводство.ТорговыйДом = ТЧ.ТорговыйДом;
	ЗаказНаПроизводство.СервисЦентр = ТЧ.СервисЦентр;
	ЗаказНаПроизводство.Контрагент = ПолучитьСоздатьКонтрагента(ТЧ);
	ЗаказНаПроизводство.Понедельник = ЗаказКлиента.Понедельник;
	ЗаказНаПроизводство.Вторник = ЗаказКлиента.Вторник;
	ЗаказНаПроизводство.Среда = ЗаказКлиента.Среда;
	ЗаказНаПроизводство.Четверг = ЗаказКлиента.Четверг;
	ЗаказНаПроизводство.Пятница = ЗаказКлиента.Пятница;
	ЗаказНаПроизводство.Суббота = ЗаказКлиента.Суббота;
	ЗаказНаПроизводство.Воскресенье = ЗаказКлиента.Воскресенье;
	ЗаказНаПроизводство.ОтгрузкаПоЗапросу = ЗаказКлиента.ОтгрузкаПоЗапросу;	
		Если БазаСбыта.XMLString(ЗаказКлиента.ВидОтгрузки) = "Частичная" Тогда
		ЗаказНаПроизводство.ВидОтгрузки = Перечисления.ВидыОтгрузки.Частичная;
		ИначеЕсли БазаСбыта.XMLString(ЗаказКлиента.ВидОтгрузки) = "Полная" Тогда
		ЗаказНаПроизводство.ВидОтгрузки = Перечисления.ВидыОтгрузки.Полная;	
		КонецЕсли;	
			Если Константы.КодБазы.Получить() = "БГР" Тогда
			ЗаказНаПроизводство.Проект = ПолучитьСоздатьПроект(БазаСбыта,ЗаказКлиента.Проект);
			ЗаказНаПроизводство.КонтактноеЛицо = ЗаказКлиента.КонтактноеЛицо.Наименование;
			//ЗаказНаПроизводство.ТелефоныКонтактногоЛица = "";
			ЗаказНаПроизводство.Email = ЗаказКлиента.ДокЭмейл;
			ЗаказНаПроизводство.ВЭД = ЗаказКлиента.ВЭД;
			ЗаказНаПроизводство.ОтгрузкаРазрешена = ТЧ.ОтгрузкаРазрешена;
			ЗаказНаПроизводство.ДатаОтгрузки = ТЧ.ДатаОтгрузки;
			ЗаказНаПроизводство.ДатаЗаказаФакт = ТЧ.ДатаЗаказаФакт;
				Попытка
				ЗаказНаПроизводство.ЛинейкаУпаковки = Число(СокрЛП(ЗаказКлиента.ЛинейкаУпаковки.Наименование));
				Исключение				
				КонецПопытки; 			
			ЗаказНаПроизводство.Комментарий = ЗаказКлиента.КомЛогиста;
				Если Не ЗаказКлиента.ИМКартаДоставки.Пустая() Тогда
				ЗаказНаПроизводство.КартаДоставки = ПолучитьСоздатьКартуДоставки(БазаСбыта,ЗаказКлиента,ЗаказНаПроизводство.Контрагент);
				КонецЕсли;
					Если БазаСбыта.XMLString(ЗаказКлиента.ИмТипДоставки) = "Самовывоз" Тогда
					ЗаказНаПроизводство.ТипДоставки = Перечисления.ТипыДоставки.Самовывоз;
					Иначе
					ЗаказНаПроизводство.ТипДоставки = Перечисления.ТипыДоставки.ТранспортнаяКомпания;	
					КонецЕсли;			
			Иначе
			ЗаказНаПроизводство.КонтактноеЛицо = ЗаказКлиента.КонтактноеЛицоКонтрагента.Наименование;
			ЗаказНаПроизводство.ТелефоныКонтактногоЛица = ЗаказКлиента.ТелефонКонтактногоЛица;
			Доверенность = ПролучитьГодовуюДоверенность(ЗаказНаПроизводство.Контрагент);
				Если Не Доверенность.Пустая() Тогда
				ЗаказНаПроизводство.СДоверенностью = Истина;
				ЗаказНаПроизводство.ГодоваяДоверенность = Истина;
				ЗаказНаПроизводство.ДоверенностьНомер = Доверенность.Код;
				ЗаказНаПроизводство.ДоверенностьДата = Доверенность.ДоверенностьДата;
				ЗаказНаПроизводство.ДоверенностьСрок = Доверенность.ДоверенностьСрок;
				ЗаказНаПроизводство.ДоверенностьНаКого = Доверенность.ДоверенностьНаКого;
				КонецЕсли; 
			//ЗаказНаПроизводство.СДоверенностью = ЗаказКлиента.СДоверенностью;
			//ЗаказНаПроизводство.ДоверенностьНомер = ЗаказКлиента.ДоверенностьНомер;
			//ЗаказНаПроизводство.ДоверенностьДата = ЗаказКлиента.ДоверенностьДата;
			//ЗаказНаПроизводство.ДоверенностьНаКого = ЗаказКлиента.ДоверенностьНаКого;
			//ЗаказНаПроизводство.ДоверенностьСрок = ЗаказКлиента.ДоверенностьСрок;
			ЗаказНаПроизводство.СтраховочнаяСумма = ЗаказКлиента.СтраховочнаяСумма;
			ЗаказНаПроизводство.ВариантСопровожденияОтгрузки = СокрЛП(ЗаказКлиента.ВариантСопровожденияОтгрузки);
			ЗаказНаПроизводство.Комментарий = ЗаказКлиента.КомментарийЛогиста;
				Если Не ЗаказКлиента.КартаДоставки.Пустая() Тогда
				ЗаказНаПроизводство.КартаДоставки = ПолучитьСоздатьКартуДоставки(БазаСбыта,ЗаказКлиента,ЗаказНаПроизводство.Контрагент);
					Если ЗаказНаПроизводство.КартаДоставки.ВариантОтгрузки = Перечисления.ВариантыОтгрузки.Самовывоз Тогда
					ЗаказНаПроизводство.ТипДоставки = Перечисления.ТипыДоставки.Самовывоз;
					КонецЕсли; 
				КонецЕсли;
			ЗаказНаПроизводство.ОтгрузкаРазрешена = ЗаказКлиента.ОтгрузкаРазрешена;
			ЗаказНаПроизводство.ДатаОтгрузки = ЗаказКлиента.ДатаРазрешенияОтгрузки;			
			КонецЕсли; 
				Для каждого Номенклатура Из ТЧ.Номенклатура Цикл	
					Попытка
					Арт = Число(Номенклатура.Артикул);
					Исключение
					КонецПопытки;		
						Если Номенклатура.Товар.Пустая() И Не ЗначениеЗаполнено(Арт) Тогда 
						Продолжить;
						КонецЕсли;
				ТЧ_ЗП = ЗаказНаПроизводство.Заказ.Добавить();
				ТЧ_ЗП.Товар = ПолучитьСоздатьТовар(Номенклатура,Арт);
				ТЧ_ЗП.СрокПоставкиТовара = ТЧ_ЗП.Товар.СрокПоставки;				
				//ПроверитьМПИ(Номенклатура.Товар,Номенклатура.МежповерочныйИнтервал);
				ТЧ_ЗП.КоличествоВЗаказе = Номенклатура.КоличествоВЗаказе;
					Если ТипЗнч(ТЧ_ЗП.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
					ТЧ_ЗП.Количество = Номенклатура.Количество;
					Иначе
					ТЧ_ЗП.Количество = Номенклатура.КоличествоВЗаказе;
				    КонецЕсли;
				ТЧ_ЗП.Цена = Номенклатура.Цена;
				ТЧ_ЗП.СрокПоставки = Номенклатура.СрокПоставки;
				ТЧ_ЗП.ДатаОтгрузкиОбещанная = КалендарныеГрафики.ПолучитьДатуПоКалендарю(Константы.ОсновнойПроизводственныйКалендарь.Получить(),ЗаказНаПроизводство.Дата,ТЧ_ЗП.СрокПоставки);
				ЗаказНаПроизводство.ДатаОтгрузкиОбещанная = Макс(ЗаказНаПроизводство.ДатаОтгрузкиОбещанная,ТЧ_ЗП.ДатаОтгрузкиОбещанная);
				ТЧ_ЗП.РучнойЗапуск = Номенклатура.РучнойЗапуск;
				ТЧ_ЗП.ВЭД_ВидДокумента = Номенклатура.ВЭД_ВидДокумента;
					//Если ТЧ_ЗП.Количество > 0 Тогда
					//МаксСрокПоставки = Макс(МаксСрокПоставки,Номенклатура.СрокПоставки);
					//КонецЕсли;
				флНайденаЗапрещённая = Ложь;
					Для каждого СЗ Из Номенклатура.СпецификацииЗапрещённые Цикл
					КоличествоНеликвиды = ОбщийМодульВызовСервера.ПолучитьНезарезервированныйОстатокПоМестуХранения(Константы.МестоХраненияНеликвидов.Получить(),СЗ.Значение,ТекущаяДата());
						Если КоличествоНеликвиды >= ТЧ_ЗП.КоличествоВЗаказе Тогда
						ТЧ_ЗП.Продукция = СЗ.Значение;				
						ТЧ_ЗП.РезервПерепрогон = ТЧ_ЗП.КоличествоВЗаказе;
						ТЧ_ЗП.Количество = 0;         
						флНайденаЗапрещённая = Истина;
						КонецЕсли;
					КонецЦикла;
						Если Не флНайденаЗапрещённая Тогда
							Если Номенклатура.Спецификации.Количество() = 1 Тогда	
							ТЧ_ЗП.Продукция = Номенклатура.Спецификации[0].Значение;
							КоличествоНеликвиды = ОбщийМодульВызовСервера.ПолучитьНезарезервированныйОстатокПоМестуХранения(Константы.МестоХраненияНеликвидов.Получить(),ТЧ_ЗП.Продукция,ТекущаяДата());
								Если КоличествоНеликвиды > 0 Тогда						
									Если ТЧ_ЗП.Количество <= КоличествоНеликвиды Тогда
									ТЧ_ЗП.РезервПерепрогон = ТЧ_ЗП.Количество;
									ТЧ_ЗП.Количество = 0;
									Иначе
									ТЧ_ЗП.РезервПерепрогон = КоличествоНеликвиды;
									ТЧ_ЗП.Количество = ТЧ_ЗП.Количество - КоличествоНеликвиды;							
									КонецЕсли;
								КонецЕсли;
									Если ТипЗнч(ТЧ_ЗП.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
									КоличествоСвободныйОстаток = ОбщийМодульВызовСервера.ПолучитьНезарезервированныйОстатокПоМестуХранения(ТЧ_ЗП.Продукция.Линейка.МестоХраненияГП,ТЧ_ЗП.Продукция,ТекущаяДата());
										Если КоличествоСвободныйОстаток > 0 Тогда						
											Если ТЧ_ЗП.Количество <= КоличествоСвободныйОстаток Тогда
											ТЧ_ЗП.РезервСвободныйОстаток = ТЧ_ЗП.Количество;
											ТЧ_ЗП.Количество = 0;
											Иначе
											ТЧ_ЗП.РезервСвободныйОстаток = КоличествоСвободныйОстаток;
											ТЧ_ЗП.Количество = ТЧ_ЗП.Количество - КоличествоСвободныйОстаток;							
											КонецЕсли;
										КонецЕсли;  					
									КонецЕсли;
							КонецЕсли;
						КонецЕсли;
				ТЧ_ЗП.КрупныйЗаказ = Номенклатура.Крупный;  
					Если ТипЗнч(ТЧ_ЗП.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
						Если Не ТЧ_ЗП.Продукция.Линейка.Пустая() Тогда
							Если ТЧ_ЗП.КрупныйЗаказ Тогда
							ТЧ_ЗП.КоличествоЗапусков = ?(ТЧ_ЗП.Продукция.Линейка.СоздаватьОдноПЗПоМТК,1,0);
							КонецЕсли;						
						КонецЕсли;
					КонецЕсли;
				КонецЦикла; 
	ЗаказНаПроизводство.Записать(РежимЗаписиДокумента.Проведение);
	НаборЗаписей = БазаСбыта.РегистрыСведений.ОвенДляОтчетаПоДолгам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ЗаказСсылка.Установить(ЗаказКлиента);
	НаборЗаписей.Прочитать();
	    Для Каждого Запись Из НаборЗаписей Цикл
		Запись.Статус = 2;
		КонецЦикла;
	НаборЗаписей.Записать();
	//ПроверитьРегистрКрупныхЗаказов(СокрЛП(ЗаказНаПроизводство.Номер));
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	ТЧ.Документ = ЗаказНаПроизводство.Ссылка;
		Для каждого ТЧ_Заказ Из ЗаказНаПроизводство.Заказ Цикл
			Если ТЧ_Заказ.РучнойЗапуск = 0 Тогда
				Если ЗначениеЗаполнено(ТЧ_Заказ.Продукция) Тогда
					Если ТипЗнч(ТЧ_Заказ.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
					Линейка = ТЧ_Заказ.Продукция.Линейка;
						Если Не Линейка.Пустая() Тогда
							Если Не ТЧ_Заказ.КрупныйЗаказ Тогда
								Если (СокрЛП(ТЧ.Код) = "3588995")или (СокрЛП(ТЧ.Код) = "000034316") Тогда //ООО "ВО ОВЕН",Завод № 423 ООО
								СтандартныйКомментарий = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Изделия для Группы компаний",Истина);
								Иначе
								СтандартныйКомментарий = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Заказанные изделия для клиентов",Истина);
								КонецЕсли;
									Если ТЧ_Заказ.Количество > 0 Тогда
									МТК = ОбщийМодульСозданиеДокументов.СоздатьМТК(Линейка,ТЧ_Заказ.Продукция,ТЧ_Заказ.Количество,СтандартныйКомментарий,,,,,ЗаказНаПроизводство.Номер,ТЧ_Заказ.ДатаОтгрузкиОбещанная,ЗаказНаПроизводство.Ссылка);
										Если Не МТК.Пустая() Тогда
											Если ЗаказНаПроизводство.СервисЦентр Тогда
												Если СписокЛинеек.НайтиПоЗначению(Линейка) = Неопределено Тогда
												СписокЛинеек.Добавить(Линейка);
												КонецЕсли;
											КонецЕсли;
										КонецЕсли;
									КонецЕсли;
							КонецЕсли;  
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли; 	
		КонецЦикла;	
	Исключение
	Сообщить(ОписаниеОшибки());
		Если ТранзакцияАктивна() Тогда
		ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
		КонецЕсли;
	Возврат(Документы.ЗаказНаПроизводство.ПустаяСсылка());
	КонецПопытки;
Возврат(ЗаказНаПроизводство.Ссылка);
КонецФункции

&НаСервере
Функция ИзменитьЗаказНаПроизводствоИИзменитьСтатусЗаказаКлиента(БазаСбыта,ЗаказКлиента,ТЧ)
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	ЗаказНаПроизводство = ТЧ.Документ.ПолучитьОбъект();
	ЗаказНаПроизводство.Понедельник = ЗаказКлиента.Понедельник;
	ЗаказНаПроизводство.Вторник = ЗаказКлиента.Вторник;
	ЗаказНаПроизводство.Среда = ЗаказКлиента.Среда;
	ЗаказНаПроизводство.Четверг = ЗаказКлиента.Четверг;
	ЗаказНаПроизводство.Пятница = ЗаказКлиента.Пятница;
	ЗаказНаПроизводство.Суббота = ЗаказКлиента.Суббота;
	ЗаказНаПроизводство.Воскресенье = ЗаказКлиента.Воскресенье;
	ЗаказНаПроизводство.ОтгрузкаПоЗапросу = ЗаказКлиента.ОтгрузкаПоЗапросу;
		Если БазаСбыта.XMLString(ЗаказКлиента.ВидОтгрузки) = "Частичная" Тогда
		ЗаказНаПроизводство.ВидОтгрузки = Перечисления.ВидыОтгрузки.Частичная;
		ИначеЕсли БазаСбыта.XMLString(ЗаказКлиента.ВидОтгрузки) = "Полная" Тогда
		ЗаказНаПроизводство.ВидОтгрузки = Перечисления.ВидыОтгрузки.Полная;	
		КонецЕсли;	
			Если Константы.КодБазы.Получить() = "БГР" Тогда
			ЗаказНаПроизводство.Проект = ПолучитьСоздатьПроект(БазаСбыта,ЗаказКлиента.Проект);
			ЗаказНаПроизводство.КонтактноеЛицо = ЗаказКлиента.КонтактноеЛицо.Наименование;
			ЗаказНаПроизводство.ТелефоныКонтактногоЛица = "";
			ЗаказНаПроизводство.Email = ЗаказКлиента.ДокЭмейл;
			ЗаказНаПроизводство.ВЭД = ЗаказКлиента.ВЭД;
			ЗаказНаПроизводство.ОтгрузкаРазрешена = ТЧ.ОтгрузкаРазрешена;
			ЗаказНаПроизводство.ДатаОтгрузки = ТЧ.ДатаОтгрузки;
			ЗаказНаПроизводство.ДатаЗаказаФакт = ТЧ.ДатаЗаказаФакт;
				Попытка
				ЗаказНаПроизводство.ЛинейкаУпаковки = Число(СокрЛП(ЗаказКлиента.ЛинейкаУпаковки.Наименование));
				Исключение				
				КонецПопытки;
			ЗаказНаПроизводство.Комментарий = ЗаказКлиента.КомЛогиста;		
				Если Не ЗаказКлиента.ИМКартаДоставки.Пустая() Тогда
				ЗаказНаПроизводство.КартаДоставки = ПолучитьСоздатьКартуДоставки(БазаСбыта,ЗаказКлиента,ЗаказНаПроизводство.Контрагент);
				КонецЕсли;
			Иначе
			ЗаказНаПроизводство.КонтактноеЛицо = ЗаказКлиента.КонтактноеЛицоКонтрагента.Наименование;
			ЗаказНаПроизводство.ТелефоныКонтактногоЛица = ЗаказКлиента.ТелефонКонтактногоЛица;
			//ЗаказНаПроизводство.СДоверенностью = ЗаказКлиента.СДоверенностью;
			//ЗаказНаПроизводство.ДоверенностьНомер = ЗаказКлиента.ДоверенностьНомер;
			//ЗаказНаПроизводство.ДоверенностьДата = ЗаказКлиента.ДоверенностьДата;
			//ЗаказНаПроизводство.ДоверенностьНаКого = ЗаказКлиента.ДоверенностьНаКого;
			//ЗаказНаПроизводство.ДоверенностьСрок = ЗаказКлиента.ДоверенностьСрок;
			//ЗаказНаПроизводство.СтраховочнаяСумма = ЗаказКлиента.СтраховочнаяСумма;
			ЗаказНаПроизводство.ВариантСопровожденияОтгрузки = СокрЛП(ЗаказКлиента.ВариантСопровожденияОтгрузки);
			ЗаказНаПроизводство.Комментарий = ЗаказКлиента.КомментарийЛогиста;
				Если Не ЗаказКлиента.КартаДоставки.Пустая() Тогда
				ЗаказНаПроизводство.КартаДоставки = ПолучитьСоздатьКартуДоставки(БазаСбыта,ЗаказКлиента,ЗаказНаПроизводство.Контрагент);
					Если ЗаказНаПроизводство.КартаДоставки.ВариантОтгрузки = Перечисления.ВариантыОтгрузки.Самовывоз Тогда
					ЗаказНаПроизводство.ТипДоставки = Перечисления.ТипыДоставки.Самовывоз;
					КонецЕсли;
				КонецЕсли;
			ЗаказНаПроизводство.ОтгрузкаРазрешена = ЗаказКлиента.ОтгрузкаРазрешена;
			ЗаказНаПроизводство.ДатаОтгрузки = ЗаказКлиента.ДатаРазрешенияОтгрузки;
			КонецЕсли;
	//сверка табличной части документа ЗНП с таблицей из сбыта
		Для каждого Заказ Из ЗаказНаПроизводство.Заказ Цикл
		Выборка = ТЧ.Номенклатура.НайтиСтроки(Новый Структура("Товар",Заказ.Товар));
			Если Выборка.Количество() = 0 Тогда
			//удалить строку с товаром и привязанную МТК
			Заказ.КоличествоВЗаказе = 0;
			//Заказ.Количество = 0;
			Заказ.Изменена = Истина;
			Иначе	
			//изменить количество в заказе, если оно другое (кол-во в пр-ве игнорируем)
				Если Выборка[0].Статус = 5 Тогда
				Заказ.Изменена = Истина;				
				Иначе	
					Если Заказ.КоличествоВЗаказе <> Выборка[0].КоличествоВЗаказе Тогда
					Заказ.КоличествоВЗаказе = Выборка[0].КоличествоВЗаказе;
					Заказ.Изменена = Истина;
					КонецЕсли;
				КонецЕсли; 
			КонецЕсли;	
		КонецЦикла; 
	//сверка таблицы из сбыта с табличной частью документа ЗНП
		Для каждого Номенклатура Из ТЧ.Номенклатура Цикл
		Выборка = ЗаказНаПроизводство.Заказ.Найти(Номенклатура.Товар,"Товар");
			Если Выборка = Неопределено Тогда
			//добавить строку с товаром и создать МТК
				Попытка
				Арт = Число(Номенклатура.Артикул);
				Исключение
				КонецПопытки;		
					Если Номенклатура.Товар.Пустая() И Не ЗначениеЗаполнено(Арт) Тогда 
					Продолжить;
					КонецЕсли;
			ТЧ_ЗП = ЗаказНаПроизводство.Заказ.Добавить();
			ТЧ_ЗП.Товар = ПолучитьСоздатьТовар(Номенклатура,Арт);
			ТЧ_ЗП.СрокПоставкиТовара = ТЧ_ЗП.Товар.СрокПоставки;			
			//ПроверитьМПИ(Номенклатура.Товар,Номенклатура.МежповерочныйИнтервал);
			ТЧ_ЗП.КоличествоВЗаказе = Номенклатура.КоличествоВЗаказе;
				Если ТипЗнч(ТЧ_ЗП.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
				ТЧ_ЗП.Количество = Номенклатура.Количество;
				Иначе
				ТЧ_ЗП.Количество = Номенклатура.КоличествоВЗаказе;
			    КонецЕсли;	
			ТЧ_ЗП.СрокПоставки = Номенклатура.СрокПоставки;
			ТЧ_ЗП.ДатаОтгрузкиОбещанная = КалендарныеГрафики.ПолучитьДатуПоКалендарю(Константы.ОсновнойПроизводственныйКалендарь.Получить(),ЗаказНаПроизводство.Дата,ТЧ_ЗП.СрокПоставки);
			ТЧ_ЗП.ВЭД_ВидДокумента = Номенклатура.ВЭД_ВидДокумента;
			ЗаказНаПроизводство.ДатаОтгрузкиОбещанная = Макс(ЗаказНаПроизводство.ДатаОтгрузкиОбещанная,ТЧ_ЗП.ДатаОтгрузкиОбещанная); 
			флНайденаЗапрещённая = Ложь;
				Для каждого СЗ Из Номенклатура.СпецификацииЗапрещённые Цикл
				КоличествоНеликвиды = ОбщийМодульВызовСервера.ПолучитьНезарезервированныйОстатокПоМестуХранения(Константы.МестоХраненияНеликвидов.Получить(),СЗ.Значение,ЗаказНаПроизводство.Дата);
					Если КоличествоНеликвиды >= ТЧ_ЗП.КоличествоВЗаказе Тогда
					ТЧ_ЗП.Продукция = СЗ.Значение;				
					ТЧ_ЗП.РезервПерепрогон = ТЧ_ЗП.КоличествоВЗаказе;
					ТЧ_ЗП.Количество = 0;         
					флНайденаЗапрещённая = Истина;
					КонецЕсли;
				КонецЦикла;                                             
					Если Не флНайденаЗапрещённая Тогда
						Если Номенклатура.Спецификации.Количество() = 1 Тогда	
						ТЧ_ЗП.Продукция = Номенклатура.Спецификации[0].Значение;
						КоличествоНеликвиды = ОбщийМодульВызовСервера.ПолучитьНезарезервированныйОстатокПоМестуХранения(Константы.МестоХраненияНеликвидов.Получить(),ТЧ_ЗП.Продукция,ЗаказНаПроизводство.Дата);
							Если КоличествоНеликвиды > 0 Тогда						
								Если ТЧ_ЗП.Количество <= КоличествоНеликвиды Тогда
								ТЧ_ЗП.РезервПерепрогон = ТЧ_ЗП.Количество;
								ТЧ_ЗП.Количество = 0;
								Иначе
								ТЧ_ЗП.РезервПерепрогон = КоличествоНеликвиды;
								ТЧ_ЗП.Количество = ТЧ_ЗП.Количество - КоличествоНеликвиды;							
								КонецЕсли;
							КонецЕсли;
								Если ТипЗнч(ТЧ_ЗП.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
								КоличествоСвободныйОстаток = ОбщийМодульВызовСервера.ПолучитьНезарезервированныйОстатокПоМестуХранения(ТЧ_ЗП.Продукция.Линейка.МестоХраненияГП,ТЧ_ЗП.Продукция,ЗаказНаПроизводство.Дата);
									Если КоличествоСвободныйОстаток > 0 Тогда						
										Если ТЧ_ЗП.Количество <= КоличествоСвободныйОстаток Тогда
										ТЧ_ЗП.РезервСвободныйОстаток = ТЧ_ЗП.Количество;
										ТЧ_ЗП.Количество = 0;
										Иначе
										ТЧ_ЗП.РезервСвободныйОстаток = КоличествоСвободныйОстаток;
										ТЧ_ЗП.Количество = ТЧ_ЗП.Количество - КоличествоСвободныйОстаток;							
										КонецЕсли;
									КонецЕсли; 				
								КонецЕсли; 
						КонецЕсли;
					КонецЕсли;
			ТЧ_ЗП.КрупныйЗаказ = Номенклатура.Крупный; 
				Если ТипЗнч(ТЧ_ЗП.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
					Если Не ТЧ_ЗП.Продукция.Линейка.Пустая() Тогда
						Если ТЧ_ЗП.КрупныйЗаказ Тогда
						ТЧ_ЗП.КоличествоЗапусков = ?(ТЧ_ЗП.Продукция.Линейка.СоздаватьОдноПЗПоМТК,1,0);
						КонецЕсли;						
					КонецЕсли;
				КонецЕсли; 
					Если ЗначениеЗаполнено(ТЧ_ЗП.Продукция) Тогда
						Если ТипЗнч(ТЧ_ЗП.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
						Линейка = ТЧ_ЗП.Продукция.Линейка;
							Если Не Линейка.Пустая() Тогда
								Если Не ТЧ_ЗП.КрупныйЗаказ Тогда
									Если (СокрЛП(ТЧ.Код) = "3588995")или (СокрЛП(ТЧ.Код) = "000034316") Тогда //ООО "ВО ОВЕН",Завод № 423 ООО
									СтандартныйКомментарий = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Изделия для Группы компаний",Истина);
									Иначе
									СтандартныйКомментарий = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Заказанные изделия для клиентов",Истина);
									КонецЕсли;
										Если ТЧ_ЗП.Количество > 0 Тогда
										МТК = ОбщийМодульСозданиеДокументов.СоздатьМТК(Линейка,ТЧ_ЗП.Продукция,ТЧ_ЗП.Количество,СтандартныйКомментарий,,,,,ЗаказНаПроизводство.Номер,ТЧ_ЗП.ДатаОтгрузкиОбещанная,ЗаказНаПроизводство.Ссылка);
											Если Не МТК.Пустая() Тогда
												Если ЗаказНаПроизводство.СервисЦентр Тогда
													Если СписокЛинеек.НайтиПоЗначению(Линейка) = Неопределено Тогда
													СписокЛинеек.Добавить(Линейка);
													КонецЕсли;
												КонецЕсли;
											КонецЕсли;
										КонецЕсли;
								КонецЕсли;  
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
	ЗаказНаПроизводство.Записать(РежимЗаписиДокумента.Проведение);
	НаборЗаписей = БазаСбыта.РегистрыСведений.ОвенДляОтчетаПоДолгам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ЗаказСсылка.Установить(ЗаказКлиента);
	НаборЗаписей.Прочитать();
	    Для Каждого Запись Из НаборЗаписей Цикл
			Если Запись.Статус = 5 Тогда
			Запись.Статус = 4;
			Иначе	
			Запись.Статус = 2;
			КонецЕсли;
		КонецЦикла;
	НаборЗаписей.Записать();
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Документы.ЗаказНаПроизводство.ПустаяСсылка());
	КонецПопытки; 
Возврат("");
КонецФункции

&НаСервере
Функция ПолучитьПродукциюИзЗНП(Товар,ЗНП)
	Для каждого ТЧ Из ЗНП.Заказ Цикл
		Если ТЧ.Товар = Товар Тогда			
		Возврат(ТЧ.Продукция);
		КонецЕсли; 	               	
	КонецЦикла;
Возврат(Неопределено); 
КонецФункции

&НаСервере
Процедура ПолучитьИзмененияПоДоставке(БазаСбыта)
	Если Константы.КодБазы.Получить() = "БГР" Тогда
	Иначе
	Запрос = БазаСбыта.NewObject("Запрос");

	Запрос.Текст = "ВЫБРАТЬ *
	   |ИЗ
	   |	РегистрСведений.ИзмененияПоДоставкеЗаказа КАК ИзмененияПоДоставкеЗаказа
	   |ГДЕ
	   |	ИзмененияПоДоставкеЗаказа.Выгружено = ЛОЖЬ";
	ТЗ = Запрос.Выполнить().Выгрузить();
		Для Каждого ТЧ Из ТЗ Цикл
		Заказ =  ТЧ.Заказ;
		ЗНП = Документы.ЗаказНаПроизводство.НайтиПоНомеру(Заказ.Номер,Заказ.Дата);
			Если Не ЗНП.Пустая() Тогда
				Попытка
				ЗНПОбъект = ЗНП.ПолучитьОбъект();
					Если БазаСбыта.XMLString(Заказ.ВидОтгрузки) = "Частичная" Тогда
					ЗНПОбъект.ВидОтгрузки = Перечисления.ВидыОтгрузки.Частичная;
					ИначеЕсли БазаСбыта.XMLString(Заказ.ВидОтгрузки) = "Полная" Тогда
					ЗНПОбъект.ВидОтгрузки = Перечисления.ВидыОтгрузки.Полная;	
					КонецЕсли;
				ЗНПОбъект.Понедельник = Заказ.Понедельник;
				ЗНПОбъект.Вторник = Заказ.Вторник;
				ЗНПОбъект.Среда = Заказ.Среда;
				ЗНПОбъект.Четверг = Заказ.Четверг;
				ЗНПОбъект.Пятница = Заказ.Пятница;
				ЗНПОбъект.Суббота = Заказ.Суббота;
				ЗНПОбъект.Воскресенье = Заказ.Воскресенье;
				ЗНПОбъект.ДоверенностьНомер = Заказ.ДоверенностьНомер;
				ЗНПОбъект.ДоверенностьДата = Заказ.ДоверенностьДата;
				ЗНПОбъект.СтраховочнаяСумма = Заказ.СтраховочнаяСумма;
				ЗНПОбъект.ВариантСопровожденияОтгрузки = Заказ.ВариантСопровожденияОтгрузки;
				ЗНПОбъект.КартаДоставки = ПолучитьСоздатьКартуДоставки(БазаСбыта,Заказ,ЗНП.Контрагент);
				ЗНПОбъект.КонтактноеЛицо = Заказ.КонтактноеЛицоКонтрагента.Наименование;
				ЗНПОбъект.ТелефоныКонтактногоЛица = Заказ.ТелефонКонтактногоЛица;
				ЗНПОбъект.ОтгрузкаРазрешена = Заказ.ОтгрузкаРазрешена;
				ЗНПОбъект.ДатаОтгрузки = Заказ.ДатаРазрешенияОтгрузки;
				ЗНПОбъект.Записать(РежимЗаписиДокумента.Проведение);
				МЗ = БазаСбыта.РегистрыСведений.ИзмененияПоДоставкеЗаказа.СоздатьМенеджерЗаписи();
				МЗ.Заказ = Заказ;
				МЗ.Прочитать();	
			    МЗ.Выгружено = Истина;
			    МЗ.Записать();
				Исключение
				Сообщить(ОписаниеОшибки());
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры 

&НаСервере
Процедура СоздатьКорректировкуЗНП(БазаСбыта,СнятиеСРезерва,ЗНП)
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	КЗНП = Документы.КорректировкаЗаказаНаПроизводство.СоздатьДокумент();
	КЗНП.Дата = ТекущаяДата();
	КЗНП.Номер = СнятиеСРезерва.Номер;
	КЗНП.ДокументОснование = ЗНП;
		Для каждого ТЧ Из СнятиеСРезерва.ОстаткиПоЗаказу Цикл
		ТЧ_КЗНП = КЗНП.ТабличнаяЧасть.Добавить();
		ТЧ_КЗНП.Товар = ПолучитьТовар(ТЧ.Номенклатура.Артикул);
		ТЧ_КЗНП.Продукция = ПолучитьПродукциюИзЗНП(ТЧ_КЗНП.Товар,ЗНП);
		ТЧ_КЗНП.Количество = ТЧ.Остаток;
		ТЧ_КЗНП.Причина = СнятиеСРезерва.ПричинаВозвратаТовара.Наименование;
		КонецЦикла;
	КЗНП.Записать(РежимЗаписиДокумента.Проведение);
	ССРОбъект = СнятиеСРезерва.ПолучитьОбъект();
	ССРОбъект.Статус = 2;
	ССРОбъект.Записать(БазаСбыта.РежимЗаписиДокумента.Проведение);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИзОбщегоМодуля(СоздаватьЗаказы)
ТаблицаЗаказов.Очистить();
БазаСбыта = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Константы.БазаДанных1ССбыт.Получить());
	Если БазаСбыта = Неопределено Тогда
	Сообщить("Не открыто соединение с базой сбыта!");
	Возврат;
	КонецЕсли;
бсТаблицаЗаказов = БазаСбыта.ИмМодуль.ПолучитьДанныеДляПроизводства();
	Для к = 0 По бсТаблицаЗаказов.ВГраница() Цикл
	РеквизитыЗНП = бсТаблицаЗаказов.Получить(к).Получить(0);
	ЗаказКлиента = РеквизитыЗНП.ЗаказСсылка; 
	ТЧ = ТаблицаЗаказов.Добавить();
	ТЧ.Номер = ЗаказКлиента.Номер;
	ТЧ.Дата = ЗаказКлиента.Дата;
	ТЧ.Документ = Документы.ЗаказНаПроизводство.НайтиПоНомеру(ЗаказКлиента.Номер,ТекущаяДата());  
		Если ЗначениеЗаполнено(ТЧ.Документ) Тогда
		ТЧ.Изменение = Истина;
		Иначе
		ТЧ.Документ = Документы.ЗаказНаПроизводство.НайтиПоНомеру(ЗаказКлиента.Номер,ЗаказКлиента.Дата);  
			Если ЗначениеЗаполнено(ТЧ.Документ) Тогда
			ТЧ.Изменение = Истина;
			КонецЕсли;
		КонецЕсли;
	флКТ = Ложь;
		Если Константы.КодБазы.Получить() = "БГР" Тогда
		ТЧ.ТорговыйДом = ?(СокрЛП(ЗаказКлиента.Склад.Код) = "00-000001",Истина,Ложь);
		ТЧ.СервисЦентр = ?(ЗаказКлиента.ДляСЦ = 1,Истина,Ложь);
		ТЧ.ОтгрузкаРазрешена = РеквизитыЗНП.ОтгрузкаРазрешена;
		ТЧ.ДатаОтгрузки = РеквизитыЗНП.ДатаРазрешенияОтгрузки;
		ТЧ.ДатаЗаказаФакт = РеквизитыЗНП.ДатаАкцепта;
		ТЧ.Менеджер = ЗаказКлиента.Менеджер.Наименование;
		ТЧ.Код = ЗаказКлиента.Партнер.Код;
		ТЧ.Контрагент = ЗаказКлиента.Партнер.Наименование;
		Контрагент = БазаСбыта.Справочники.Контрагенты.НайтиПоРеквизиту("Партнер",ЗаказКлиента.Партнер);
		ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
		ТЧ_КД.Вид = "ПолноеНаименование";
		ТЧ_КД.Значение = Контрагент.НаименованиеПолное;
		ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
		ТЧ_КД.Вид = "ИНН";
		ТЧ_КД.Значение = Контрагент.ИНН;
		ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
		ТЧ_КД.Вид = "КПП";
		ТЧ_КД.Значение = Контрагент.КПП;
		ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
		ТЧ_КД.Вид = "ИМАдрес";
		ТЧ_КД.Значение = ЗаказКлиента.Партнер.ИМАдрес;
		ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
		ТЧ_КД.Вид = "ИМТелефон";
		ТЧ_КД.Значение = ЗаказКлиента.Партнер.ИМТелефон;
		ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
		ТЧ_КД.Вид = "ИМАдресЭлектроннойПочты";
		ТЧ_КД.Значение = ЗаказКлиента.Партнер.ИМАдресЭлектроннойПочты;
			Для каждого КД Из Контрагент.КонтактнаяИнформация Цикл
			ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
			ТЧ_КД.Вид = КД.Вид.Наименование;
			ТЧ_КД.Значение = КД.Представление;						
			КонецЦикла;		
		Иначе
		ТЧ.ОтгрузкаРазрешена = РеквизитыЗНП.ОтгрузкаРазрешена;
		ТЧ.ДатаОтгрузки = РеквизитыЗНП.ДатаРазрешенияОтгрузки;
		ТЧ.ДатаЗаказаФакт = РеквизитыЗНП.ДатаАкцепта;	
		ТЧ.Менеджер = ЗаказКлиента.Ответственный.Наименование;
		ТЧ.Код = ЗаказКлиента.Контрагент.Код;
			Если СокрЛП(ТЧ.Код) = "000034316" Тогда
			флКТ = Истина;
			КонецЕсли;
		ТЧ.Контрагент = ЗаказКлиента.Контрагент.Наименование;
		ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
		ТЧ_КД.Вид = "ПолноеНаименование";
		ТЧ_КД.Значение = ЗаказКлиента.Контрагент.НаименованиеПолное;
		ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
		ТЧ_КД.Вид = "ИНН";
		ТЧ_КД.Значение = ЗаказКлиента.Контрагент.ИНН;
		ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
		ТЧ_КД.Вид = "КПП";
		ТЧ_КД.Значение = ЗаказКлиента.Контрагент.КПП;		
		КонецЕсли;
			Для каждого Товар Из бсТаблицаЗаказов.Получить(к) Цикл	
			ТЧ_ТЧ = ТЧ.Номенклатура.Добавить();
			ТЧ_ТЧ.Наименование = Товар.Номенклатура.Наименование;
				Если Найти(Товар.Номенклатура.Наименование,"[") > 0 Тогда
				СтрокаПоиска = СокрЛП(Лев(Товар.Номенклатура.Наименование,Найти(Товар.Номенклатура.Наименование,"[")-1));
				Иначе	
				СтрокаПоиска = СокрЛП(Товар.Номенклатура.Наименование);
				КонецЕсли;
					Если Найти(Товар.Номенклатура.НаименованиеПолное,СтрокаПоиска) > 0 Тогда
					ТЧ_ТЧ.ПолноеНаименование = СокрЛП(Лев(Товар.Номенклатура.НаименованиеПолное,Найти(Товар.Номенклатура.НаименованиеПолное,СтрокаПоиска)-1));						
					Иначе	
					ТЧ_ТЧ.ПолноеНаименование = СокрЛП(Товар.Номенклатура.НаименованиеПолное);
					КонецЕсли;			
			ТЧ_ТЧ.Крупность = Товар.Номенклатура.Крупность;
			ТЧ_ТЧ.Артикул = Товар.Номенклатура.Артикул;
			ТЧ_ТЧ.Товар = ПолучитьТовар(Товар.Номенклатура.Артикул);
				Если Не ТЧ_ТЧ.Товар.Пустая() Тогда
				ТЧ_ТЧ.Спецификации = ПолучитьСпецификации(ТЧ_ТЧ.Товар,флКТ);
				ТЧ_ТЧ.СпецификацииЗапрещённые = ПолучитьЗапрещенныеСпецификации(ТЧ_ТЧ.Товар,флКТ);
				КонецЕсли;
			ТЧ_ТЧ.КоличествоВЗаказе = ?(ЗначениеЗаполнено(Товар.КоличествоПоЗаказу),Число(Товар.КоличествоПоЗаказу),0);
			ТЧ_ТЧ.Количество = Товар.КоличествоКПроизводству;
			ТЧ_ТЧ.РучнойЗапуск = Товар.РучнойЗапуск;
			ТЧ_ТЧ.СрокПоставки = Товар.СрокПоставки; 
			ТЧ_ТЧ.КратностьЗапуска = Товар.Номенклатура.КратностьЗапуска;
			ТЧ_ТЧ.Крупный = ?(Товар.Крупный = 1,Истина,Ложь);
				Если Константы.КодБазы.Получить() = "БГР" Тогда
					Если БазаСбыта.Перечисления.имСерийность.Индекс(Товар.Номенклатура.имСерийностьТовара) = БазаСбыта.Перечисления.имСерийность.Индекс(БазаСбыта.Перечисления.имСерийность.Стандартный) Тогда
					ТЧ_ТЧ.Стандартный = Истина;
					Иначе	
					ТЧ_ТЧ.Стандартный = Ложь;
					КонецЕсли;
				ТЧ_ТЧ.Статус = Товар.Статус;
				ТЧ_ТЧ.EAN = Товар.Номенклатура.ИмEAN;
				ТЧ_ТЧ.ЕАС = Товар.Номенклатура.EAC;
				ТЧ_ТЧ.МежповерочныйИнтервал = Товар.Номенклатура.ИмМежповерочныйИнтервал;
				ТЧ_ТЧ.СИ = Товар.Номенклатура.СИ;
				//ТЧ_ТЧ.СтатусТовара = БазаСбыта.XMLString(Товар.Номенклатура.ИмСтатусТовара);
				//ТЧ_ТЧ.СтатусТовара = Перечисления.СтатусыТоваров.Получить(БазаСбыта.Перечисления.ИмСтатусыТовара.Индекс(Товар.Номенклатура.ИмСтатусТовара));
				ТЧ_ТЧ.КратностьПродажи = Товар.Номенклатура.ИмКратностьПродажи;
					Если БазаСбыта.XMLString(Товар.ВЭД_ВидДокумента) = "СТ1" Тогда
					ТЧ_ТЧ.ВЭД_ВидДокумента = Перечисления.ВЭД_ВидДокумента.СТ1;
					ИначеЕсли БазаСбыта.XMLString(Товар.ВЭД_ВидДокумента) = "РМ" Тогда
					ТЧ_ТЧ.ВЭД_ВидДокумента = Перечисления.ВЭД_ВидДокумента.РМ;	
					КонецЕсли;				
				Иначе 
					Если БазаСбыта.Перечисления.Серийность.Индекс(Товар.Номенклатура.Серийность) = БазаСбыта.Перечисления.Серийность.Индекс(БазаСбыта.Перечисления.Серийность.Стандартный) Тогда
					ТЧ_ТЧ.Стандартный = Истина;
					Иначе	
					ТЧ_ТЧ.Стандартный = Ложь;
					КонецЕсли;
				ТЧ_ТЧ.Статус = ЗаказКлиента.СтатусЗаказа;
				ТЧ_ТЧ.Цена = Товар.Цена;
				ТЧ_ТЧ.КратностьПродажи = Товар.Номенклатура.КратностьПродажи;
				КонецЕсли;		
			КонецЦикла;		
				Если СоздаватьЗаказы Тогда
					Если ТЧ.Документ.Пустая() Тогда
					СоздатьЗаказНаПроизводствоИИзменитьСтатусЗаказаКлиента(БазаСбыта,ЗаказКлиента,ТЧ);			
					Иначе	
					ИзменитьЗаказНаПроизводствоИИзменитьСтатусЗаказаКлиента(БазаСбыта,ЗаказКлиента,ТЧ);
					КонецЕсли;			
				КонецЕсли;  
	КонецЦикла;
//ПолучитьИзмененияПоДоставке(БазаСбыта);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСнятияСРезерва(СоздаватьЗаказы)
БазаСбыта = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Константы.БазаДанных1ССбыт.Получить());
	Если БазаСбыта = Неопределено Тогда
	Сообщить("Не открыто соединение с базой сбыта!");
	Возврат;
	КонецЕсли;
Запрос = БазаСбыта.NewObject("Запрос");

Запрос.Текст = "ВЫБРАТЬ
	|	ОвенСнятиеСРезерва.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОвенСнятиеСРезерва КАК ОвенСнятиеСРезерва
	|ГДЕ
	|	ОвенСнятиеСРезерва.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ОвенСнятиеСРезерва.Статус = 1
	|	И ОвенСнятиеСРезерва.ПричинаВозвратаТовара <> &ПричинаВозвратаТовара";
Запрос.УстановитьПараметр("ПричинаВозвратаТовара", БазаСбыта.Справочники.ПричиныСнятияСРезерва.НайтиПоКоду("000000004"));
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ТекущаяДата()));
Запрос.УстановитьПараметр("ДатаКон", ТекущаяДата());
ВыбССР = Запрос.Выполнить().Выбрать();
	Пока ВыбССР.Следующий() Цикл
	Сообщить(ВыбССР.Ссылка.Номер);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьТНПИзОбщегоМодуля(СоздаватьЗаказы)
ТаблицаЗаказов.Очистить();
БазаСбыта = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Константы.БазаДанных1ССбыт.Получить());
	Если БазаСбыта = Неопределено Тогда
	Сообщить("Не открыто соединение с базой сбыта!");
	Возврат;
	КонецЕсли;
бсТаблицаЗаказов = БазаСбыта.ИмМодуль.ПолучитьТНП();
	Для к = 0 По бсТаблицаЗаказов.ВГраница() Цикл
	РеквизитыЗНП = бсТаблицаЗаказов.Получить(к).Получить(0);
	ЗаказКлиента = РеквизитыЗНП.ЗаказСсылка; 
	ТЧ = ТаблицаЗаказов.Добавить();
	ТЧ.Номер = ЗаказКлиента.Номер;
	ТЧ.Дата = ЗаказКлиента.Дата;
	ТЧ.Документ = Документы.ЗаказНаПроизводство.НайтиПоНомеру(ЗаказКлиента.Номер,ЗаказКлиента.Дата);  
		Если ЗначениеЗаполнено(ТЧ.Документ) Тогда
		ТЧ.Изменение = Истина;
		КонецЕсли;
	флКТ = Ложь;
		Если Константы.КодБазы.Получить() = "БГР" Тогда
		ТЧ.ТорговыйДом = ?(СокрЛП(ЗаказКлиента.Склад.Код) = "00-000001",Истина,Ложь);
		ТЧ.СервисЦентр = ?(ЗаказКлиента.ДляСЦ = 1,Истина,Ложь);
		ТЧ.ОтгрузкаРазрешена = РеквизитыЗНП.ОтгрузкаРазрешена;
		ТЧ.ДатаОтгрузки = РеквизитыЗНП.ДатаРазрешенияОтгрузки;
		ТЧ.ДатаЗаказаФакт = РеквизитыЗНП.ДатаАкцепта;
		ТЧ.Менеджер = ЗаказКлиента.Менеджер.Наименование;
		ТЧ.Код = ЗаказКлиента.Партнер.Код;
		ТЧ.Контрагент = ЗаказКлиента.Партнер.Наименование;
		Контрагент = БазаСбыта.Справочники.Контрагенты.НайтиПоРеквизиту("Партнер",ЗаказКлиента.Партнер);
		ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
		ТЧ_КД.Вид = "ПолноеНаименование";
		ТЧ_КД.Значение = Контрагент.НаименованиеПолное;
		ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
		ТЧ_КД.Вид = "ИНН";
		ТЧ_КД.Значение = Контрагент.ИНН;
		ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
		ТЧ_КД.Вид = "КПП";
		ТЧ_КД.Значение = Контрагент.КПП;
		ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
		ТЧ_КД.Вид = "ИМАдрес";
		ТЧ_КД.Значение = ЗаказКлиента.Партнер.ИМАдрес;
		ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
		ТЧ_КД.Вид = "ИМТелефон";
		ТЧ_КД.Значение = ЗаказКлиента.Партнер.ИМТелефон;
		ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
		ТЧ_КД.Вид = "ИМАдресЭлектроннойПочты";
		ТЧ_КД.Значение = ЗаказКлиента.Партнер.ИМАдресЭлектроннойПочты;
			//Для каждого КД Из ЗаказКлиента.Партнер.КонтактнаяИнформация Цикл
			//ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
			//ТЧ_КД.Вид = КД.Вид.Наименование;
			//ТЧ_КД.Значение = КД.Представление;						
			//КонецЦикла;
			Для каждого КД Из Контрагент.КонтактнаяИнформация Цикл
			ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
			ТЧ_КД.Вид = КД.Вид.Наименование;
			ТЧ_КД.Значение = КД.Представление;						
			КонецЦикла;		
		Иначе	
		ТЧ.Менеджер = ЗаказКлиента.Ответственный.Наименование;
		ТЧ.Код = ЗаказКлиента.Контрагент.Код;
			Если СокрЛП(ТЧ.Код) = "000034316" Тогда
			флКТ = Истина;
			КонецЕсли; 
		ТЧ.Контрагент = ЗаказКлиента.Контрагент.Наименование;
		ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
		ТЧ_КД.Вид = "ПолноеНаименование";
		ТЧ_КД.Значение = Контрагент.НаименованиеПолное;
		ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
		ТЧ_КД.Вид = "ИНН";
		ТЧ_КД.Значение = Контрагент.ИНН;
		ТЧ_КД = ТЧ.ДанныеКонтрагента.Добавить();
		ТЧ_КД.Вид = "КПП";
		ТЧ_КД.Значение = Контрагент.КПП;		
		КонецЕсли;
			Для каждого Товар Из бсТаблицаЗаказов.Получить(к) Цикл	
			ТЧ_ТЧ = ТЧ.Номенклатура.Добавить();
			ТЧ_ТЧ.Наименование = Товар.Номенклатура.Наименование;
				Если Найти(Товар.Номенклатура.Наименование,"[") > 0 Тогда
				СтрокаПоиска = СокрЛП(Лев(Товар.Номенклатура.Наименование,Найти(Товар.Номенклатура.Наименование,"[")-1));
				Иначе	
				СтрокаПоиска = СокрЛП(Товар.Номенклатура.Наименование);
				КонецЕсли;
					Если Найти(Товар.Номенклатура.НаименованиеПолное,СтрокаПоиска) > 0 Тогда
					ТЧ_ТЧ.ПолноеНаименование = СокрЛП(Лев(Товар.Номенклатура.НаименованиеПолное,Найти(Товар.Номенклатура.НаименованиеПолное,СтрокаПоиска)-1));						
					Иначе	
					ТЧ_ТЧ.ПолноеНаименование = СокрЛП(Товар.Номенклатура.НаименованиеПолное);
					КонецЕсли;			
			ТЧ_ТЧ.Крупность = Товар.Номенклатура.Крупность;
			ТЧ_ТЧ.Артикул = Товар.Номенклатура.Артикул;
			ТЧ_ТЧ.Товар = ПолучитьТовар(Товар.Номенклатура.Артикул);
				Если Не ТЧ_ТЧ.Товар.Пустая() Тогда
				ТЧ_ТЧ.Спецификации = ПолучитьСпецификации(ТЧ_ТЧ.Товар,флКТ);
				КонецЕсли;
			ТЧ_ТЧ.КоличествоВЗаказе = ?(ЗначениеЗаполнено(Товар.КоличествоПоЗаказу),Число(Товар.КоличествоПоЗаказу),0);
			ТЧ_ТЧ.Количество = Товар.КоличествоКПроизводству;
			ТЧ_ТЧ.РучнойЗапуск = Товар.РучнойЗапуск;
			ТЧ_ТЧ.СрокПоставки = Товар.СрокПоставки; 
			ТЧ_ТЧ.КратностьЗапуска = Товар.Номенклатура.КратностьЗапуска;
				Если Константы.КодБазы.Получить() = "БГР" Тогда
					Если БазаСбыта.Перечисления.имСерийность.Индекс(Товар.Номенклатура.имСерийностьТовара) = БазаСбыта.Перечисления.имСерийность.Индекс(БазаСбыта.Перечисления.имСерийность.Стандартный) Тогда
					ТЧ_ТЧ.Стандартный = Истина;
					Иначе	
					ТЧ_ТЧ.Стандартный = Ложь;
					КонецЕсли;
				ТЧ_ТЧ.Статус = Товар.Статус;
				ТЧ_ТЧ.EAN = Товар.Номенклатура.ИмEAN;
				Иначе 
					Если БазаСбыта.Перечисления.Серийность.Индекс(Товар.Номенклатура.Серийность) = БазаСбыта.Перечисления.Серийность.Индекс(БазаСбыта.Перечисления.Серийность.Стандартный) Тогда
					ТЧ_ТЧ.Стандартный = Истина;
					Иначе	
					ТЧ_ТЧ.Стандартный = Ложь;
					КонецЕсли;
				ТЧ_ТЧ.Статус = ЗаказКлиента.СтатусЗаказа;
				КонецЕсли;		
			КонецЦикла;
				Если СоздаватьЗаказы Тогда
					Если ТЧ.Документ.Пустая() Тогда
					СоздатьЗаказНаПроизводствоИИзменитьСтатусЗаказаКлиента(БазаСбыта,ЗаказКлиента,ТЧ);			
					Иначе	
					ИзменитьЗаказНаПроизводствоИИзменитьСтатусЗаказаКлиента(БазаСбыта,ЗаказКлиента,ТЧ);
					КонецЕсли;
				КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
Состояние("Обработка...",,"Загрузка заказов из базы сбыта за период...");
ЗагрузитьИзОбщегоМодуля(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьТНП(Команда)
Состояние("Обработка...",,"Загрузка заказов из базы сбыта за период...");
ЗагрузитьТНПИзОбщегоМодуля(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИСоздатьЗаказыТНП(Команда)
Состояние("Обработка...",,"Загрузка заказов из базы сбыта за период...");
ЗагрузитьТНПИзОбщегоМодуля(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИСоздатьЗаказы(Команда)
СписокЛинеек.Очистить();
Состояние("Обработка...",,"Загрузка заказов из базы сбыта за период...");
ЗагрузитьИзОбщегоМодуля(Истина);
КонецПроцедуры

&НаСервере
Функция СоздатьЗаказНаПроизводство(БазаПроизводства,ЗаказКлиента,ТЧ)
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	МаксСрокПоставки = 0;
	ЗаказНаПроизводство = Документы.ЗаказНаПроизводство.СоздатьДокумент();
	ЗаказНаПроизводство.Дата = ЗаказКлиента.Дата;
	ЗаказНаПроизводство.Номер = ЗаказКлиента.Номер;
	ЗаказНаПроизводство.Автор = ПолучитьСоздатьМенеджера(ЗаказКлиента.Автор.Наименование);
	ЗаказНаПроизводство.Контрагент = Справочники.Контрагенты.НайтиПоКоду("000034316");
	ЗаказНаПроизводство.КартаДоставки = Справочники.КартыДоставки.НайтиПоКоду("000000001");
	ЗаказНаПроизводство.КонтактноеЛицо = ЗаказКлиента.Автор.Наименование;
	ЗаказНаПроизводство.ТелефоныКонтактногоЛица = ЗаказКлиента.Автор.ТелефоныМестные;	
	ЗаказНаПроизводство.ДатаОтгрузкиОбещанная = ТекущаяДата()+86400*5;
	ЗаказНаПроизводство.ВидОтгрузки = Перечисления.ВидыОтгрузки.Частичная;
	ЗаказНаПроизводство.Вторник = Истина;
	ЗаказНаПроизводство.ОтгрузкаРазрешена = Истина;	
	ЗаказНаПроизводство.ДатаОтгрузки = ЗаказНаПроизводство.Дата;	
	ЗаказНаПроизводство.ДатаЗаказаФакт = ЗаказНаПроизводство.Дата;	
		Для каждого Номенклатура Из ТЧ.Номенклатура Цикл	
		ТЧ_ЗП = ЗаказНаПроизводство.Заказ.Добавить();
		ТЧ_ЗП.Товар = Номенклатура.Товар;
		ТЧ_ЗП.КоличествоВЗаказе = Номенклатура.КоличествоВЗаказе;		
		ТЧ_ЗП.Количество = Номенклатура.Количество;
		ТЧ_ЗП.СрокПоставки = Номенклатура.СрокПоставки;
		ТЧ_ЗП.ДатаОтгрузкиОбещанная = КалендарныеГрафики.ПолучитьДатуПоКалендарю(Константы.ОсновнойПроизводственныйКалендарь.Получить(),ЗаказНаПроизводство.Дата,ТЧ_ЗП.СрокПоставки);
		ТЧ_ЗП.РучнойЗапуск = Номенклатура.РучнойЗапуск;
			Если Номенклатура.Спецификации.Количество() = 1 Тогда	
			ТЧ_ЗП.Продукция = Номенклатура.Спецификации[0].Значение;
				Если ТипЗнч(ТЧ_ЗП.Продукция) = Тип("СправочникСсылка.Материалы") Тогда
					Если ТЧ_ЗП.Количество = 0 Тогда
					ТЧ_ЗП.Количество = ТЧ_ЗП.КоличествоВЗаказе;						
					КонецЕсли;
				Иначе
				КоличествоНеликвиды = ОбщийМодульВызовСервера.ПолучитьНезарезервированныйОстатокПоМестуХранения(Константы.МестоХраненияНеликвидов.Получить(),ТЧ_ЗП.Продукция,ТекущаяДата());
					Если КоличествоНеликвиды > 0 Тогда						
						Если ТЧ_ЗП.Количество <= КоличествоНеликвиды Тогда
						ТЧ_ЗП.РезервПерепрогон = ТЧ_ЗП.Количество;
						ТЧ_ЗП.Количество = 0;
						Иначе
						ТЧ_ЗП.РезервПерепрогон = КоличествоНеликвиды;
						ТЧ_ЗП.Количество = ТЧ_ЗП.Количество - КоличествоНеликвиды;							
						КонецЕсли;
					КонецЕсли; 					
				КонецЕсли;
			ИначеЕсли Номенклатура.Спецификации.Количество() > 1 Тогда
				Если Номенклатура.Спецификации[0].Представление = 0 Тогда	
				ТЧ_ЗП.Продукция = Номенклатура.Спецификации[0].Значение;
					Если ТипЗнч(ТЧ_ЗП.Продукция) = Тип("СправочникСсылка.Материалы") Тогда
						Если ТЧ_ЗП.Количество = 0 Тогда
						ТЧ_ЗП.Количество = ТЧ_ЗП.КоличествоВЗаказе;						
						КонецЕсли;
					Иначе
					КоличествоНеликвиды = ОбщийМодульВызовСервера.ПолучитьНезарезервированныйОстатокПоМестуХранения(Константы.МестоХраненияНеликвидов.Получить(),ТЧ_ЗП.Продукция,ТекущаяДата());
						Если КоличествоНеликвиды > 0 Тогда						
							Если ТЧ_ЗП.Количество <= КоличествоНеликвиды Тогда
							ТЧ_ЗП.РезервПерепрогон = ТЧ_ЗП.Количество;
							ТЧ_ЗП.Количество = 0;
							Иначе
							ТЧ_ЗП.РезервПерепрогон = КоличествоНеликвиды;
							ТЧ_ЗП.Количество = ТЧ_ЗП.Количество - КоличествоНеликвиды;							
							КонецЕсли;
						КонецЕсли; 					
					КонецЕсли; 
				КонецЕсли;
			КонецЕсли; 
				Если Номенклатура.Крупность > 0 Тогда
				ТЧ_ЗП.КрупныйЗаказ = ?(Номенклатура.Крупность <= Номенклатура.Количество,Истина,Ложь);
					Если ТипЗнч(ТЧ_ЗП.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
						Если Не ТЧ_ЗП.Продукция.Линейка.Пустая() Тогда
							Если ТЧ_ЗП.КрупныйЗаказ Тогда
							ТЧ_ЗП.КоличествоЗапусков = ?(ТЧ_ЗП.Продукция.Линейка.СоздаватьОдноПЗПоМТК,1,0);
							КонецЕсли;						
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
					//Если (Номенклатура.Товар.Канбан)и(Не ТЧ_ЗП.КрупныйЗаказ) Тогда
					//ТЧ_ЗП.Количество = 0;			
					//КонецЕсли; 
		КонецЦикла;
	ЗаказНаПроизводство.Записать(РежимЗаписиДокумента.Проведение);	
	ЗаказКлиентаОбъект = ЗаказКлиента.ПолучитьОбъект();
	ЗаказКлиентаОбъект.Выгружено = Истина;
	ЗаказКлиентаОбъект.Записать(БазаПроизводства.РежимЗаписиДокумента.Проведение);
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	ТЧ.Документ = ЗаказНаПроизводство.Ссылка;
		Для каждого ТЧ_Заказ Из ЗаказНаПроизводство.Заказ Цикл
			Если ТЧ_Заказ.РучнойЗапуск = 0 Тогда
				Если ЗначениеЗаполнено(ТЧ_Заказ.Продукция) Тогда
					Если ТипЗнч(ТЧ_Заказ.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
					Линейка = ТЧ_Заказ.Продукция.Линейка;
						Если Не Линейка.Пустая() Тогда
							Если Не ТЧ_Заказ.КрупныйЗаказ Тогда
							СтандартныйКомментарий = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Изделия для Группы компаний",Истина);
								Если ТЧ_Заказ.Количество > 0 Тогда
								МТК = ОбщийМодульСозданиеДокументов.СоздатьМТК(Линейка,ТЧ_Заказ.Продукция,ТЧ_Заказ.Количество,СтандартныйКомментарий,,,,,ЗаказНаПроизводство.Номер,ТЧ_Заказ.ДатаОтгрузкиОбещанная,ЗаказНаПроизводство.Ссылка);
									Если Не МТК.Пустая() Тогда
										Если ЗаказНаПроизводство.СервисЦентр Тогда
											Если СписокЛинеек.НайтиПоЗначению(Линейка) = Неопределено Тогда
											СписокЛинеек.Добавить(Линейка);
											КонецЕсли;
										КонецЕсли;
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;  
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли; 	
		КонецЦикла;	
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Документы.ЗаказНаПроизводство.ПустаяСсылка());
	КонецПопытки;
Возврат(ЗаказНаПроизводство.Ссылка);
КонецФункции

&НаСервере
Процедура ЗагрузитьИзПБ()
ТаблицаЗаказов.Очистить();
	Если Константы.КодБазы.Получить() = "ХРК" Тогда
	БазаПроизводства = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Справочники.ОбменДанными.НайтиПоНаименованию("Производство Москва 1С 8", Истина));
	Иначе	
	Сообщить("Обработка отсутствует!");
	Возврат;
	КонецЕсли;
		Если БазаПроизводства = Неопределено Тогда
		Сообщить("Не открыто соединение с производственной базой!");
		Возврат;
		КонецЕсли;
Запрос = БазаПроизводства.NewObject("Запрос");

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПоставщику.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|ГДЕ
	|	ЗаказПоставщику.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ЗаказПоставщику.Подразделение.Код = &КодПодразделения
	|	И ЗаказПоставщику.Контрагент.Код = &Код
	|	И ЗаказПоставщику.Проведен = ИСТИНА
	|	И ЗаказПоставщику.Выгружено = ЛОЖЬ";
Запрос.УстановитьПараметр("ДатаНач", Дата('2019.08.20 00:00:00'));
Запрос.УстановитьПараметр("ДатаКон", ТекущаяДата());
Запрос.УстановитьПараметр("Код", "00000015228");
Запрос.УстановитьПараметр("КодПодразделения", "33");//Богородицк
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ЗаказКлиента = ВыборкаДетальныеЗаписи.Ссылка; 
	Документ = Документы.ЗаказНаПроизводство.НайтиПоНомеру(ЗаказКлиента.Номер,ЗаказКлиента.Дата);
		Если ЗначениеЗаполнено(Документ) Тогда
		//ТЧ.Изменение = Истина;
		Продолжить;
		КонецЕсли;
	флОшибка = Ложь;
	ТЧ = ТаблицаЗаказов.Добавить();
	ТЧ.Номер = ЗаказКлиента.Номер;
	ТЧ.Дата = ЗаказКлиента.Дата;
	ТЧ.Менеджер = ЗаказКлиента.Автор.Наименование;
	ТЧ.Контрагент = ЗаказКлиента.Контрагент.Наименование;
	//ТЧ.ПолноеНаименование = ЗаказКлиента.Контрагент.ПолнНаименование;
	//ТЧ.ИНН = ЗаказКлиента.Контрагент.ИНН;
	//ТЧ.КПП = ЗаказКлиента.Контрагент.КПП;		
		Для каждого ТЧ_МПЗ Из ЗаказКлиента.ТабличнаяЧасть Цикл	
		ТЧ_ТЧ = ТЧ.Номенклатура.Добавить();
		//ТЧ_ТЧ.Наименование = ТЧ_МПЗ.МПЗ.Наименование;
		//	Если Найти(ТЧ_МПЗ.МПЗ.Наименование,"[") > 0 Тогда
		//	СтрокаПоиска = СокрЛП(Лев(ТЧ_МПЗ.МПЗ.Наименование,Найти(ТЧ_МПЗ.МПЗ.Наименование,"[")-1));
		//	Иначе	
		//	СтрокаПоиска = СокрЛП(ТЧ_МПЗ.МПЗ.Наименование);
		//	КонецЕсли;
		//		Если Найти(ТЧ_МПЗ.МПЗ.ПолнНаименование,СтрокаПоиска) > 0 Тогда
		//		ТЧ_ТЧ.ПолноеНаименование = СокрЛП(Лев(ТЧ_МПЗ.МПЗ.ПолнНаименование,Найти(ТЧ_МПЗ.МПЗ.ПолнНаименование,СтрокаПоиска)-1));						
		//		Иначе	
		//		ТЧ_ТЧ.ПолноеНаименование = СокрЛП(ТЧ_МПЗ.МПЗ.ПолнНаименование);
		//		КонецЕсли;
		Товар = Справочники.Товары.НайтиПоНаименованию(СокрЛП(ТЧ_МПЗ.МПЗ.Наименование),Истина);			
			Если Не Товар.Пустая() Тогда
			ТЧ_ТЧ.Товар = Товар;
			ТЧ_ТЧ.Артикул = Товар.Код;
			ТЧ_ТЧ.Наименование = Товар.Наименование;
			ТЧ_ТЧ.ПолноеНаименование = Товар.ПолнНаименование;
			ТЧ_ТЧ.Крупность = Товар.КрупностьЗаказа;
			ТЧ_ТЧ.Спецификации = ПолучитьСпецификации(Товар,Истина);
			Кол = ПолучитьБазовоеКоличество(ТЧ_МПЗ.Количество,ТЧ_МПЗ.ЕдиницаИзмерения);
			ТЧ_ТЧ.КоличествоВЗаказе = Кол;
			ТЧ_ТЧ.Количество = Кол;
			//ТЧ_ТЧ.РучнойЗапуск = Товар.РучнойЗапуск;
			//ТЧ_ТЧ.СрокПоставки = Товар.СрокПоставки; 
			ТЧ_ТЧ.КратностьЗапуска = Товар.КратностьЗапуска;
			ТЧ_ТЧ.Стандартный = Товар.Стандартный;					
			Иначе
			ТЧ_ТЧ.Наименование = ТЧ_МПЗ.МПЗ.Наименование;
			флОшибка = Истина;	
			Сообщить(СокрЛП(ТЧ_МПЗ.МПЗ.Наименование) + " - товар не найден!");
			КонецЕсли;
		//ТЧ_ТЧ.Статус = ЗаказКлиента.СтатусЗаказа;	
		КонецЦикла;
			Если Не флОшибка Тогда
			СоздатьЗаказНаПроизводство(БазаПроизводства,ЗаказКлиента,ТЧ);	
			Иначе
			Сообщить(ЗаказКлиента.Номер+" -  заказ не создан!");
			КонецЕсли;		
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзПБИСоздатьЗаказы(Команда)
СписокЛинеек.Очистить();
Состояние("Обработка...",,"Загрузка заказов из производственной базы за период...");
ЗагрузитьИзПБ();
//Состояние("Обработка...",,"Перестроение очереди линеек...");
//ПерестроитьОчередьЛинеек();
КонецПроцедуры

&НаСервере
Функция ПолучитьСоздатьМенеджера(ФИО)
Сотрудник = Справочники.Сотрудники.НайтиПоНаименованию(СокрЛП(ФИО),Истина);	
	Если Сотрудник.Пустая() Тогда	
	Сотрудник = Справочники.Сотрудники.СоздатьЭлемент();
	Сотрудник.Наименование = ФИО;
	Сотрудник.Записать();
	КонецЕсли; 
Возврат(Сотрудник.Ссылка);
КонецФункции 

&НаСервере
Функция ПолучитьСоздатьКонтрагента(ТЧ)
Родитель = Справочники.Контрагенты.НайтиПоНаименованию("Покупатели",Истина);
Контрагент = Справочники.Контрагенты.НайтиПоКоду(СокрЛП(ТЧ.Код),Ложь,Родитель);
	Если Контрагент.Пустая() Тогда
	КонтрагентОбъект = Справочники.Контрагенты.СоздатьЭлемент();
	КонтрагентОбъект.Код = ТЧ.Код;
	КонтрагентОбъект.Родитель = Родитель;	
	Иначе	
	КонтрагентОбъект = Контрагент.ПолучитьОбъект();
	КонецЕсли;
флИзменение = Ложь;
	Если СокрЛП(КонтрагентОбъект.Наименование) <> СокрЛП(ТЧ.Контрагент) Тогда
	КонтрагентОбъект.Наименование = ТЧ.Контрагент;
	флИзменение = Истина;
	КонецЕсли;
		Для каждого ТЧ_КД Из ТЧ.ДанныеКонтрагента Цикл
			Если Не ЗначениеЗаполнено(ТЧ_КД.Значение) Тогда
			Продолжить;
			КонецЕсли;		
		Реквизит = СокрЛП(ТЧ_КД.Вид);
		Значение = СокрЛП(ТЧ_КД.Значение);
			Если Реквизит = "ИНН" Тогда
				Если СокрЛП(КонтрагентОбъект.ИНН) <> Значение Тогда
				КонтрагентОбъект.ИНН = Значение;
				флИзменение = Истина;
				КонецЕсли;
			ИначеЕсли Реквизит = "КПП" Тогда
				Если СокрЛП(КонтрагентОбъект.КПП) <> Значение Тогда
				КонтрагентОбъект.КПП = Значение;
				флИзменение = Истина;
				КонецЕсли;								
			ИначеЕсли Реквизит = "ПолноеНаименование" Тогда
				Если СокрЛП(КонтрагентОбъект.ПолнНаименование) <> Значение Тогда
				КонтрагентОбъект.ПолнНаименование = Значение;
				флИзменение = Истина;
				КонецЕсли;				
			ИначеЕсли Реквизит = "Юридический адрес" Тогда
				Если СокрЛП(КонтрагентОбъект.ЮридическийАдрес) <> Значение Тогда
				КонтрагентОбъект.ЮридическийАдрес = Значение;
				флИзменение = Истина;
				КонецЕсли;
			ИначеЕсли Реквизит = "Фактический адрес" Тогда
				Если СокрЛП(КонтрагентОбъект.ПочтовыйАдрес) <> Значение Тогда
				КонтрагентОбъект.ПочтовыйАдрес = Значение;
				флИзменение = Истина;
				КонецЕсли;
			ИначеЕсли Реквизит = "Телефон" Тогда
				Если СокрЛП(КонтрагентОбъект.Телефоны) <> Значение Тогда
				КонтрагентОбъект.Телефоны = Значение;
				флИзменение = Истина;
				КонецЕсли;		
			ИначеЕсли Реквизит = "Электронная почта" Тогда
				Если СокрЛП(КонтрагентОбъект.Email) <> Значение Тогда
				КонтрагентОбъект.Email = Значение;
				флИзменение = Истина;
				КонецЕсли;				
			ИначеЕсли Реквизит = "ИМАдрес" Тогда
				Если СокрЛП(КонтрагентОбъект.ПочтовыйАдрес) <> Значение Тогда
				КонтрагентОбъект.ПочтовыйАдрес = Значение;
				флИзменение = Истина;
				КонецЕсли;				
			ИначеЕсли Реквизит = "ИМТелефон" Тогда
				Если СокрЛП(КонтрагентОбъект.Телефоны) <> Значение Тогда
				КонтрагентОбъект.Телефоны = Значение;
				флИзменение = Истина;
				КонецЕсли;		
			ИначеЕсли Реквизит = "ИМАдресЭлектроннойПочты" Тогда
				Если СокрЛП(КонтрагентОбъект.Email) <> Значение Тогда
				КонтрагентОбъект.Email = Значение;
				флИзменение = Истина;
				КонецЕсли;		
			КонецЕсли;		                                 
		КонецЦикла;
			Если флИзменение Тогда
			КонтрагентОбъект.Записать();
			КонецЕсли;
				//Если КонтрагентОбъект.ОсновнойДоговор.Пустая() Тогда
				//Договор = Справочники.Договоры.СоздатьЭлемент();
				//Договор.Владелец = КонтрагентОбъект.Ссылка;
				//Договор.Наименование = "Основной договор";
				//Договор.Валюта = Справочники.Валюты.НайтиПоНаименованию("руб",Истина);
				//Договор.ДоговорСНефиксированнымиЦенами = Истина;
				//Договор.Записать();
				//КонтрагентОбъект.ОсновнойДоговор = Договор.Ссылка;
				//КонтрагентОбъект.Записать();	
				//КонецЕсли;
Возврат(КонтрагентОбъект.Ссылка);
КонецФункции 

&НаСервере
Функция РасчитатьКоличествоПоКрупномуЗаказу(КоличествоКПроизводству,КоличествоНеСоздано,КоличествоЗапусков)
Кол = Окр(КоличествоКПроизводству/КоличествоЗапусков,0,РежимОкругления.Окр15как20);
	Если Кол > КоличествоНеСоздано Тогда	
	Кол = КоличествоНеСоздано;
	КонецЕсли; 
Возврат(Кол);
КонецФункции 

&НаСервере
Процедура ПерестроитьОчередьЛинеек()
Запрос = Новый Запрос;
ТЗ = Новый ТаблицаЗначений;

ТЗ.Колонки.Добавить("СервисЦентр");
ТЗ.Колонки.Добавить("НомерОчереди");
ТЗ.Колонки.Добавить("МТК");

	Для каждого Стр Из СписокЛинеек Цикл
	НО = Справочники.НумераторОчереди.НайтиПоРеквизиту("Линейка",Стр.Значение);
		Если НО.Пустая() Тогда
		Сообщить("Не найден нумератор очереди для линейки "+Стр.Значение+"!");
		Продолжить;						
		КонецЕсли;
	ТЗ.Очистить();
		Попытка
		НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	МаршрутнаяКарта.Ссылка КАК Ссылка,
			|	МаршрутнаяКарта.НомерОчереди КАК НомерОчереди
			|ИЗ
			|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
			|ГДЕ
			|	МаршрутнаяКарта.Линейка = &Линейка
			|	И МаршрутнаяКарта.Статус <> 3
			|	И МаршрутнаяКарта.Ремонт = ЛОЖЬ";
		Запрос.УстановитьПараметр("Линейка", Стр.Значение);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ТЧ = ТЗ.Добавить();
			ТЧ.СервисЦентр = Ложь;
			ЗНП = ВыборкаДетальныеЗаписи.Ссылка.ДокументОснование; 
				Если ЗначениеЗаполнено(ЗНП) Тогда
					Если ТипЗнч(ЗНП) = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
					ТЧ.СервисЦентр = ЗНП.СервисЦентр;
					КонецЕсли; 
				КонецЕсли;
			ТЧ.НомерОчереди = ВыборкаДетальныеЗаписи.НомерОчереди;
			ТЧ.МТК = ВыборкаДетальныеЗаписи.Ссылка; 
			КонецЦикла;
		ТЗ.Сортировать("СервисЦентр Убыв,НомерОчереди");
		НомерОчереди = 1;
			Для каждого ТЧ Из ТЗ Цикл
				Если ТЧ.НомерОчереди <> НомерОчереди Тогда
				МТК = ТЧ.МТК.ПолучитьОбъект();
				МТК.НомерОчереди = НомерОчереди;
				МТК.Записать(РежимЗаписиДокумента.Проведение);
				//ОбщийМодульРаботаСРегистрами.ИзменитьНомерОчереди(МТК.Ссылка,НомерОчереди);
				ВыборкаПЗ = Документы.ПроизводственноеЗадание.Выбрать(,,Новый Структура("ДокументОснование",МТК.Ссылка));	
					Пока ВыборкаПЗ.Следующий() Цикл
					ПЗ = ВыборкаПЗ.ПолучитьОбъект();
					ПЗ.НомерОчереди = НомерОчереди;
					ПЗ.Записать(РежимЗаписиДокумента.Запись);
					//ОбщийМодульРаботаСРегистрами.ИзменитьНомерОчереди(ПЗ.Ссылка,НомерОчереди);			
					КонецЦикла;
				КонецЕсли;
			НомерОчереди = НомерОчереди + 1;			
			КонецЦикла;  
		НовыйНО = НО.ПолучитьОбъект();
		НовыйНО.СледующийНомер = НомерОчереди;
		НовыйНО.Записать(); 
		ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
		Исключение
		Сообщить(ОписаниеОшибки());
		ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
		Возврат;
		КонецПопытки;
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ПолучитьЗаказыНаСервере()
ТаблицаСозданных.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоЗаказ.Ссылка КАК Ссылка,
	|	ЗаказНаПроизводствоЗаказ.Товар КАК Товар,
	|	ЗаказНаПроизводствоЗаказ.КоличествоВЗаказе КАК КоличествоВЗаказе
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Заказ КАК ЗаказНаПроизводствоЗаказ
	|ГДЕ
	|	ЗаказНаПроизводствоЗаказ.Продукция = НЕОПРЕДЕЛЕНО
	|	И ЗаказНаПроизводствоЗаказ.Ссылка.Закрыт = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказНаПроизводствоЗаказ.Ссылка.Дата";	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
		Если ВыборкаДетальныеЗаписи.КоличествоВЗаказе > ПолучитьКоличествоТовараПоКорректировкам(ВыборкаДетальныеЗаписи.Ссылка,ВыборкаДетальныеЗаписи.Товар) Тогда
		ТЧ = ТаблицаСозданных.Добавить();
		ТЧ.ЗаказНаПроизводство = ВыборкаДетальныеЗаписи.Ссылка;
		ТЧ.Товар = ВыборкаДетальныеЗаписи.Товар;
			Если ЗначениеЗаполнено(ТЧ.Товар) Тогда
				Если Константы.КодБазы.Получить() = "ХРК" Тогда
				флКТ = ?(СокрЛП(ВыборкаДетальныеЗаписи.Ссылка.Контрагент.Код) = "000034316",Истина,Ложь);
				Иначе	
				флКТ = Ложь;
				КонецЕсли; 
			СписокПродукции = ПолучитьСпецификации(ТЧ.Товар,флКТ);
				Для каждого Продукция Из СписокПродукции Цикл
				ТЧ_Продукция = ТЧ.ТаблицаПродукции.Добавить();
				ТЧ_Продукция.Продукция = Продукция.Значение;	
				ТЧ_Продукция.Статус = ПолучитьСтатус(Продукция.Значение);
					Если ТипЗнч(Продукция.Значение) = Тип("СправочникСсылка.Материалы") Тогда
					ТЧ_Продукция.ВидПродукции = "Покупной";
					МестоХраненияОстатков = Константы.МестоХраненияТНП.Получить();
					Иначе	
					ТЧ_Продукция.ВидПродукции = "Производимый";
					ТЧ_Продукция.Линейка = Продукция.Значение.Линейка;
					МестоХраненияОстатков = Продукция.Значение.Линейка.МестоХраненияГП;
					КонецЕсли;
				ТЧ_Продукция.КоличествоОстаток = ОбщийМодульВызовСервера.ПолучитьНезарезервированныйОстатокПоМестуХранения(МестоХраненияОстатков,Продукция.Значение,ТекущаяДата()); 
				ТЧ.СписокПродукции = ТЧ.СписокПродукции + СокрЛП(Продукция.Значение.Наименование) + " (" + ТЧ_Продукция.Статус + ");";
				КонецЦикла; 
					Если СписокПродукции.Количество() = 1 Тогда	
					ТЧ.Продукция = СписокПродукции[0].Значение;
					ИначеЕсли СписокПродукции.Количество() > 1 Тогда
						Если СписокПродукции[0].Представление = 0 Тогда	
						ТЧ.Продукция = СписокПродукции[0].Значение;
						КонецЕсли;
					КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьЗаказы(Команда)
Состояние("Обработка...",,"Получение данных...");
ПолучитьЗаказыНаСервере();
КонецПроцедуры
  
&НаСервере            
Процедура НайтиИЗаполнитьКорректировку(ЗНП,Товар,Продукция)
Запрос = Новый Запрос; 

Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаЗаказаНаПроизводствоТабличнаяЧасть.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КорректировкаЗаказаНаПроизводство.ТабличнаяЧасть КАК КорректировкаЗаказаНаПроизводствоТабличнаяЧасть
	|ГДЕ
	|	КорректировкаЗаказаНаПроизводствоТабличнаяЧасть.Ссылка.ДокументОснование = &ЗНП
	|	И КорректировкаЗаказаНаПроизводствоТабличнаяЧасть.Товар = &Товар";
Запрос.УстановитьПараметр("ЗНП", ЗНП);
Запрос.УстановитьПараметр("Товар", Товар);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	КЗНП = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Для каждого ТЧ Из КЗНП.ТабличнаяЧасть Цикл
			Если ТЧ.Товар = Товар Тогда
			ТЧ.Продукция = Продукция;
			КонецЕсли;	
		КонецЦикла;                  
	КЗНП.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
КонецПроцедуры 

&НаСервере            
Функция ПолучитьКоличествоТовараПоКорректировкам(ЗНП,Товар)
Запрос = Новый Запрос; 

Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаЗаказаНаПроизводствоТабличнаяЧасть.Товар КАК Товар,
	|	СУММА(КорректировкаЗаказаНаПроизводствоТабличнаяЧасть.Количество) КАК Количество
	|ИЗ
	|	Документ.КорректировкаЗаказаНаПроизводство.ТабличнаяЧасть КАК КорректировкаЗаказаНаПроизводствоТабличнаяЧасть
	|ГДЕ
	|	КорректировкаЗаказаНаПроизводствоТабличнаяЧасть.Ссылка.ДокументОснование = &ЗНП
	|	И КорректировкаЗаказаНаПроизводствоТабличнаяЧасть.Товар = &Товар
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаЗаказаНаПроизводствоТабличнаяЧасть.Товар
	|ИТОГИ ПО
	|	Товар";
Запрос.УстановитьПараметр("ЗНП", ЗНП);
Запрос.УстановитьПараметр("Товар", Товар);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.Количество);
	КонецЦикла;
Возврат(0);
КонецФункции
 
&НаСервере                                         
Функция СоздатьРезервирование(ЗНП,Продукция,Количество)
Подразделение = Продукция.Линейка.Подразделение; 
	Попытка
	Резервирование = Документы.Резервирование.СоздатьДокумент();
	Резервирование.Дата = ТекущаяДата();
	Резервирование.УстановитьНовыйНомер(ПрисвоитьПрефикс(Подразделение));
	Резервирование.Автор = ПараметрыСеанса.Пользователь;
	Резервирование.ДокументОснование = ЗНП;
	Резервирование.Подразделение = Подразделение;
	Резервирование.МестоХранения = Продукция.Линейка.МестоХраненияГП; 
	ТЧ_Р = Резервирование.ТабличнаяЧасть.Добавить();
	ТЧ_Р.Товар = Продукция.Товар;
	ТЧ_Р.Продукция = Продукция;
	ТЧ_Р.Количество = Количество;	
	Резервирование.Записать(РежимЗаписиДокумента.Проведение);
	Возврат(Истина);
	Исключение
	Сообщить(ОписаниеОшибки());
	КонецПопытки;
Возврат(Ложь);
КонецФункции

&НаСервере
Процедура СоздатьНедостающиеМТКНаСервере()
СписокЛинеек.Очистить();
	Для каждого ТЧ Из ТаблицаСозданных Цикл	
		Если ЗначениеЗаполнено(ТЧ.Продукция) Тогда
			Попытка
			НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
			КоличествоКорректировка = ПолучитьКоличествоТовараПоКорректировкам(ТЧ.ЗаказНаПроизводство,ТЧ.Товар);
			ЗаказНаПроизводство = ТЧ.ЗаказНаПроизводство.ПолучитьОбъект();
				Для каждого ТЧ_Заказ Из ЗаказНаПроизводство.Заказ Цикл
					Если ТЧ_Заказ.Товар = ТЧ.Товар Тогда
					ТЧ_Заказ.Продукция = ТЧ.Продукция;
					Количество = ТЧ_Заказ.Количество - КоличествоКорректировка;
						Если ТипЗнч(ТЧ_Заказ.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
							Если Не ТЧ_Заказ.Продукция.Линейка.Пустая() Тогда
								Если ТЧ_Заказ.КрупныйЗаказ Тогда
								ТЧ_Заказ.КоличествоЗапусков = ?(ТЧ_Заказ.Продукция.Линейка.СоздаватьОдноПЗПоМТК,1,0);
								КонецЕсли;						
							КонецЕсли;
						КоличествоНеликвиды = ОбщийМодульВызовСервера.ПолучитьНезарезервированныйОстатокПоМестуХранения(Константы.МестоХраненияНеликвидов.Получить(),ТЧ_Заказ.Продукция,ТекущаяДата());
							Если КоличествоНеликвиды > 0 Тогда						
								Если Количество <= КоличествоНеликвиды Тогда
								ТЧ_Заказ.РезервПерепрогон = Количество;
								Иначе
								ТЧ_Заказ.РезервПерепрогон = КоличествоНеликвиды;							
								КонецЕсли;
							ТЧ_Заказ.Количество = ТЧ_Заказ.Количество - ТЧ_Заказ.РезервПерепрогон; 
							Количество = Количество - ТЧ_Заказ.РезервПерепрогон;
							КонецЕсли;
						ЗаказНаПроизводство.Записать(РежимЗаписиДокумента.Проведение);
							Если КоличествоКорректировка > 0 Тогда
							НайтиИЗаполнитьКорректировку(ТЧ.ЗаказНаПроизводство,ТЧ.Товар,ТЧ.Продукция);
							КонецЕсли;
								Если Количество > 0 Тогда
								КоличествоСвободныйОстаток = ОбщийМодульВызовСервера.ПолучитьНезарезервированныйОстатокПоМестуХранения(ТЧ.Продукция.Линейка.МестоХраненияГП,ТЧ.Продукция,ТекущаяДата());
									Если КоличествоСвободныйОстаток > 0 Тогда						
										Если Количество <= КоличествоСвободныйОстаток Тогда
										КоличествоРезервСвободныйОстаток = Количество;
										Количество = 0;
										Иначе
										КоличествоРезервСвободныйОстаток = КоличествоСвободныйОстаток;
										Количество = Количество - КоличествоСвободныйОстаток;							
										КонецЕсли;
											Если Не СоздатьРезервирование(ТЧ.ЗаказНаПроизводство,ТЧ.Продукция,КоличествоРезервСвободныйОстаток) Тогда
											ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
											Возврат;								
											КонецЕсли;
									КонецЕсли;								
								КонецЕсли;
									Если Количество > 0 Тогда								
										Если ТЧ_Заказ.РучнойЗапуск = 0 Тогда
										Линейка = ТЧ_Заказ.Продукция.Линейка;
											Если Не Линейка.Пустая() Тогда
												Если Не ТЧ_Заказ.КрупныйЗаказ Тогда
													Если (СокрЛП(ЗаказНаПроизводство.Контрагент.Код) = "3588995")или (СокрЛП(ЗаказНаПроизводство.Контрагент.Код) = "000034316") Тогда //ООО "ВО ОВЕН",Завод № 423 ООО
													СтандартныйКомментарий = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Изделия для Группы компаний",Истина);
													Иначе
													СтандартныйКомментарий = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Заказанные изделия для клиентов",Истина);
													КонецЕсли;
												МТК = ОбщийМодульСозданиеДокументов.СоздатьМТК(Линейка,ТЧ_Заказ.Продукция,Количество,СтандартныйКомментарий,,,,,ЗаказНаПроизводство.Номер,ТЧ_Заказ.ДатаОтгрузкиОбещанная,ЗаказНаПроизводство.Ссылка);
													Если Не МТК.Пустая() Тогда
														Если ЗаказНаПроизводство.СервисЦентр Тогда
															Если СписокЛинеек.НайтиПоЗначению(Линейка) = Неопределено Тогда
															СписокЛинеек.Добавить(Линейка);
															КонецЕсли;
														КонецЕсли;
													КонецЕсли; 
												КонецЕсли;
											Иначе
				                            Сообщить("Изделие "+СокрЛП(ТЧ_Заказ.Продукция.Наименование)+" - не назначена линейка!");
											КонецЕсли;
										КонецЕсли;
									КонецЕсли;
						Иначе
							Если Количество = 0 Тогда
							ТЧ_Заказ.Количество = ТЧ_Заказ.КоличествоВЗаказе;						
							КонецЕсли;
						ЗаказНаПроизводство.Записать(РежимЗаписиДокумента.Проведение);
							Если КоличествоКорректировка > 0 Тогда
							НайтиИЗаполнитьКорректировку(ТЧ.ЗаказНаПроизводство,ТЧ.Товар,ТЧ.Продукция);
							КонецЕсли;					
						КонецЕсли;
					Прервать;
					КонецЕсли; 
				КонецЦикла;
			ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
			Исключение
			Сообщить(ОписаниеОшибки());
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНедостающиеМТК(Команда)
СоздатьНедостающиеМТКНаСервере();
Состояние("Обработка...",,"Обновление таблицы недостающей продукции...");
ПолучитьЗаказыНаСервере();
КонецПроцедуры

&НаСервере
Функция ПолучитьМТКПоКрупномуЗаказу(ЗНП,Продукция)
СписокМТК = Новый СписокЗначений;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Ссылка
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.ДокументОснование = &ДокументОснование
	|	И МаршрутнаяКарта.Номенклатура = &Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	МаршрутнаяКарта.Дата";
Запрос.УстановитьПараметр("ДокументОснование",ЗНП);	
Запрос.УстановитьПараметр("Номенклатура",Продукция);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
    СписокМТК.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
Возврат(СписокМТК);
КонецФункции 

&НаСервере
Процедура ПолучитьКрупныеЗаказыНаСервере()
ТаблицаКрупныхЗаказов.Очистить();
Запрос = Новый Запрос;

Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказыНаПроизводствоОстатки.Документ КАК Документ,
	|	ЗаказыНаПроизводствоОстатки.Продукция КАК Продукция,
	|	ЗаказыНаПроизводствоОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ЗаказНаПроизводствоЗаказ.СрокПоставки КАК СрокПоставки,
	|	ЗаказНаПроизводствоЗаказ.ДатаОтгрузкиОбещанная КАК ДатаОтгрузкиОбещанная,
	|	ЗаказНаПроизводствоЗаказ.Количество КАК Количество,
	|	ЗаказНаПроизводствоЗаказ.ДатаЗапуска КАК ДатаЗапуска,
	|	ЗаказНаПроизводствоЗаказ.КоличествоЗапусков КАК КоличествоЗапусков,
	|	ЗаказНаПроизводствоЗаказ.Товар КАК Товар,
	|	ЗаказНаПроизводствоЗаказ.СрокПоставкиТовара КАК СрокПоставкиТовара
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПроизводство.Остатки(, ТИПЗНАЧЕНИЯ(Продукция) = ТИП(Справочник.Номенклатура)) КАК ЗаказыНаПроизводствоОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Заказ КАК ЗаказНаПроизводствоЗаказ
	|		ПО ЗаказыНаПроизводствоОстатки.Документ = ЗаказНаПроизводствоЗаказ.Ссылка
	|			И ЗаказыНаПроизводствоОстатки.Продукция = ЗаказНаПроизводствоЗаказ.Продукция
	|ГДЕ
	|	ЗаказыНаПроизводствоОстатки.КоличествоОстаток > 0
	|	И ЗаказыНаПроизводствоОстатки.Документ.Закрыт = ЛОЖЬ
	|	И ЗаказыНаПроизводствоОстатки.Документ.Проведен = ИСТИНА
	|	И ЗаказНаПроизводствоЗаказ.КрупныйЗаказ = ИСТИНА
	|	И ЗаказНаПроизводствоЗаказ.РучнойЗапуск <> 1
	|	И ЗаказНаПроизводствоЗаказ.Количество > 0";	
	Если ТипКонтрагента = 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ЗаказыНаПроизводствоОстатки.Документ.Контрагент <> &Контрагент";	
	Иначе
	Запрос.Текст = Запрос.Текст + " И ЗаказыНаПроизводствоОстатки.Документ.Контрагент = &Контрагент";
	КонецЕсли;
Запрос.УстановитьПараметр("Контрагент",КонтрагентКЗ);
Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ЗаказыНаПроизводствоОстатки.Документ.Дата"; 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Продукция = ВыборкаДетальныеЗаписи.Продукция;     
	КоличествоКорректировки = ОбщийМодульВызовСервера.ПолучитьКорректировкуЗНП(ВыборкаДетальныеЗаписи.Документ,Продукция);
	КоличествоНеСоздано = ВыборкаДетальныеЗаписи.Количество - ПолучитьКоличествоСозданых(ВыборкаДетальныеЗаписи.Документ,Продукция) - КоличествоКорректировки;
		Если КоличествоНеСоздано > 0 Тогда
		ТЧ = ТаблицаКрупныхЗаказов.Добавить();
		ТЧ.ЗаказНаПроизводство = ВыборкаДетальныеЗаписи.Документ;
		ТЧ.Продукция = Продукция;
		ТЧ.Товар = ВыборкаДетальныеЗаписи.Товар;
		ТЧ.СрокПоставки = ВыборкаДетальныеЗаписи.СрокПоставкиТовара;
		ТЧ.ДатаЗапуска = ВыборкаДетальныеЗаписи.ДатаЗапуска;
		ТЧ.ДатаОтгрузкиОбещанная = ВыборкаДетальныеЗаписи.ДатаОтгрузкиОбещанная;
			Если ВыборкаДетальныеЗаписи.КоличествоЗапусков > 0 Тогда
			ТЧ.КоличествоЗапусков = ВыборкаДетальныеЗаписи.КоличествоЗапусков;					
			Иначе
			КоличествоЗапусков = ?(ВыборкаДетальныеЗаписи.Товар.КратностьЗапуска > 0,(ВыборкаДетальныеЗаписи.Количество-КоличествоКорректировки)/ВыборкаДетальныеЗаписи.Товар.КратностьЗапуска,0);
				Если КоличествоЗапусков > Цел(КоличествоЗапусков) Тогда
				КоличествоЗапусков = Цел(КоличествоЗапусков) + 1;
				КонецЕсли; 	
			ТЧ.КоличествоЗапусков = КоличествоЗапусков;
			КонецЕсли;
				Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаЗапуска) Тогда
				ТЧ.Пометка = Истина;
				КонецЕсли; 
		ТЧ.КоличествоКПроизводству = ВыборкаДетальныеЗаписи.Количество;
		ТЧ.КоличествоНеСоздано = КоличествоНеСоздано;
		ТЧ.КоличествоКорректировки = -1*КоличествоКорректировки;
		ТЧ.МТК = ПолучитьМТКПоКрупномуЗаказу(ВыборкаДетальныеЗаписи.Документ,Продукция);
			Если ТЧ.МТК.Количество() > 0 Тогда
			ТЧ.ДатаПоследнейМТК = ТЧ.МТК[ТЧ.МТК.Количество()-1].Значение.Дата;
			КонецЕсли;
		КонецЕсли;	   
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьКрупныеЗаказы(Команда)
Состояние("Обработка...",,"Получение данных...");
ПолучитьКрупныеЗаказыНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьМТКПоКрупнымЗаказамНаСервере()
СписокЛинеек.Очистить();
	Для каждого ТЧ Из ТаблицаКрупныхЗаказов Цикл
		Если ЗначениеЗаполнено(ТЧ.ДатаЗапуска) Тогда
			Если ТЧ.ДатаЗапуска <= НачалоДня(ТекущаяДата()) Тогда
				Если ТЧ.ДатаПоследнейМТК < НачалоДня(ТекущаяДата()) Тогда
					Если ТЧ.Товар.КратностьЗапуска > 0 Тогда
						Если ТЧ.СрокПоставки > 0 Тогда
						ДатаОтгрузки = КалендарныеГрафики.ПолучитьДатуПоКалендарю(Константы.ОсновнойПроизводственныйКалендарь.Получить(),ТекущаяДата(),ТЧ.СрокПоставки);
						Линейка = ТЧ.Продукция.Линейка;
							Если (СокрЛП(ТЧ.ЗаказНаПроизводство.Контрагент.Код) = "3588995")или (СокрЛП(ТЧ.ЗаказНаПроизводство.Контрагент.Код) = "000034316") Тогда //ООО "ВО ОВЕН",Завод № 423 ООО
							СтандартныйКомментарий = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Крупный заказ для Группы компаний",Истина);
								Если ТЧ.Товар.КратностьЗапуска < ТЧ.КоличествоНеСоздано Тогда
								Количество = ТЧ.Товар.КратностьЗапуска;
								Иначе
								Количество = ТЧ.КоличествоНеСоздано;
								КонецЕсли;						
							Иначе	
								Если ТЧ.Товар.КратностьЗапуска < ТЧ.КоличествоНеСоздано Тогда
								Количество = ТЧ.Товар.КратностьЗапуска;
								СтандартныйКомментарий = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Крупный заказ",Истина);
								Иначе
								Количество = ТЧ.КоличествоНеСоздано;	
								СтандартныйКомментарий = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Крупный заказ последний",Истина);
								КонецЕсли; 						
							КонецЕсли;
								Попытка
								НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;		 
								МТК = ОбщийМодульСозданиеДокументов.СоздатьМТК(Линейка,ТЧ.Продукция,Количество,СтандартныйКомментарий,,,,,ТЧ.ЗаказНаПроизводство.Номер,ДатаОтгрузки,ТЧ.ЗаказНаПроизводство);
									Если Не МТК.Пустая() Тогда
									ТЧ.МТК.Добавить(МТК);
									ТЧ.ДатаПоследнейМТК = ТекущаяДата();
									ТЧ.КоличествоНеСоздано = ТЧ.КоличествоНеСоздано - Количество;
										Если Найти(СтандартныйКомментарий.Наименование,"Крупный заказ последний") > 0 Тогда
									    	Если ДатаОтгрузки > ТЧ.ДатаОтгрузкиОбещанная Тогда
											ЗНП = ТЧ.ЗаказНаПроизводство.ПолучитьОбъект();
											Выборка = ЗНП.Заказ.Найти(ТЧ.Товар,"Товар");
											Выборка.ДатаОтгрузкиОбещанная = ДатаОтгрузки;
											ЗНП.Записать(РежимЗаписиДокумента.Запись);		
											ИДО = РегистрыСведений.ИзменениеДатыОтгрузкиОбещанной.СоздатьМенеджерЗаписи();
											ИДО.Период = ТекущаяДата();
											ИДО.ЗНП = ТЧ.ЗаказНаПроизводство;
											ИДО.Товар = ТЧ.Товар;
											ИДО.ДатаОтгрузкиОбещанная = ТЧ.ДатаОтгрузкиОбещанная;
											ИДО.ДатаОтгрузкиНовая = ДатаОтгрузки;
											ИДО.Причина = Справочники.ПричиныУвеличенияСроковПоставки.НайтиПоНаименованию("Накопленный долг в линейке",Истина);
											ИДО.Записать();	
											ТЧ.ДатаОтгрузкиОбещанная = ДатаОтгрузки;					
											КонецЕсли;
										КонецЕсли;
									КонецЕсли;
								ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
								Исключение
								Сообщить(ОписаниеОшибки());
								ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
								КонецПопытки;
						Иначе
                        Сообщить(СокрЛП(ТЧ.Товар.Наименование)+" - не указан срок поставки!");
						КонецЕсли;
					Иначе
					Сообщить(СокрЛП(ТЧ.Товар.Наименование)+" - не указана кратность запуска!");
					КонецЕсли;		
				КонецЕсли;
			КонецЕсли;
		КонецЕсли; 	
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМТКПоКрупнымЗаказам(Команда)
СоздатьМТКПоКрупнымЗаказамНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьМТКПоКрупнымЗаказамПоПозицииНаСервере(Стр)
ТЧ = ТаблицаКрупныхЗаказов.НайтиПоИдентификатору(Стр);
	Если ЗначениеЗаполнено(ТЧ.ДатаЗапуска) Тогда
	Линейка = ТЧ.Продукция.Линейка;
		Если ТЧ.Товар.КратностьЗапуска > 0 Тогда
			Если ТЧ.СрокПоставки > 0 Тогда
			ДатаОтгрузки = КалендарныеГрафики.ПолучитьДатуПоКалендарю(Константы.ОсновнойПроизводственныйКалендарь.Получить(),ТекущаяДата(),ТЧ.СрокПоставки);
				Если (СокрЛП(ТЧ.ЗаказНаПроизводство.Контрагент.Код) = "3588995")или (СокрЛП(ТЧ.ЗаказНаПроизводство.Контрагент.Код) = "000034316") Тогда //ООО "ВО ОВЕН",Завод № 423 ООО
				СтандартныйКомментарий = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Крупный заказ для Группы компаний",Истина);
					Если ТЧ.Товар.КратностьЗапуска < ТЧ.КоличествоНеСоздано Тогда
					Количество = ТЧ.Товар.КратностьЗапуска;
					Иначе
					Количество = ТЧ.КоличествоНеСоздано;
					КонецЕсли;						
				Иначе	
					Если ТЧ.Товар.КратностьЗапуска < ТЧ.КоличествоНеСоздано Тогда
					Количество = ТЧ.Товар.КратностьЗапуска;
					СтандартныйКомментарий = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Крупный заказ",Истина);
					Иначе
					Количество = ТЧ.КоличествоНеСоздано;	
					СтандартныйКомментарий = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Крупный заказ последний",Истина);
					КонецЕсли; 						
				КонецЕсли; 
					Попытка
					НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;		 
					МТК = ОбщийМодульСозданиеДокументов.СоздатьМТК(Линейка,ТЧ.Продукция,Количество,СтандартныйКомментарий,,,,,ТЧ.ЗаказНаПроизводство.Номер,ДатаОтгрузки,ТЧ.ЗаказНаПроизводство);
						Если Не МТК.Пустая() Тогда
						ТЧ.МТК.Добавить(МТК);
						ТЧ.ДатаПоследнейМТК = ТекущаяДата();
						ТЧ.КоличествоНеСоздано = ТЧ.КоличествоНеСоздано - Количество;
							Если Найти(СтандартныйКомментарий.Наименование,"Крупный заказ последний") > 0 Тогда
						    	Если ДатаОтгрузки > ТЧ.ДатаОтгрузкиОбещанная Тогда
								ЗНП = ТЧ.ЗаказНаПроизводство.ПолучитьОбъект();
								Выборка = ЗНП.Заказ.Найти(ТЧ.Товар,"Товар");
								Выборка.ДатаОтгрузкиОбещанная = ДатаОтгрузки;
								ЗНП.Записать(РежимЗаписиДокумента.Запись);		
								ИДО = РегистрыСведений.ИзменениеДатыОтгрузкиОбещанной.СоздатьМенеджерЗаписи();
								ИДО.Период = ТекущаяДата();
								ИДО.ЗНП = ТЧ.ЗаказНаПроизводство;
								ИДО.Товар = ТЧ.Товар;
								ИДО.ДатаОтгрузкиОбещанная = ТЧ.ДатаОтгрузкиОбещанная;
								ИДО.ДатаОтгрузкиНовая = ДатаОтгрузки;
								ИДО.Причина = Справочники.ПричиныУвеличенияСроковПоставки.НайтиПоНаименованию("Накопленный долг в линейке",Истина);
								ИДО.Записать();	
								ТЧ.ДатаОтгрузкиОбещанная = ДатаОтгрузки;					
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
					Исключение
					Сообщить(ОписаниеОшибки());
					ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
					КонецПопытки;	
			Иначе
			Сообщить(СокрЛП(ТЧ.Товар.Наименование)+" - не указан срок поставки!"); 
			КонецЕсли;
		Иначе
		Сообщить(СокрЛП(ТЧ.Товар.Наименование)+" - не указана кратность запуска!");	
		КонецЕсли;
	Иначе
	Сообщить("Не указана дата запуска!");	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМТКПоКрупнымЗаказамПоПозиции(Команда)
СоздатьМТКПоКрупнымЗаказамПоПозицииНаСервере(Элементы.ТаблицаКрупныхЗаказов.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Функция МТКНеСозданы(ЗаказНаПроизводство,Продукция)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Ссылка
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.ДокументОснование = &ДокументОснование
	|	И МаршрутнаяКарта.Номенклатура = &Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	МаршрутнаяКарта.Дата";
Запрос.УстановитьПараметр("ДокументОснование",ЗаказНаПроизводство);	
Запрос.УстановитьПараметр("Номенклатура",Продукция);	
РезультатЗапроса = Запрос.Выполнить();
Возврат(РезультатЗапроса.Пустой());
КонецФункции

&НаСервере
Процедура ПолучитьНеСозданныеМТКНаСервере()
ТаблицаНеСозданныхМТК.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыНаПроизводствоОстатки.Документ КАК Документ,
	|	ЗаказыНаПроизводствоОстатки.Продукция КАК Продукция,
	|	ЗаказыНаПроизводствоОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ЗаказНаПроизводствоЗаказ.СрокПоставки КАК СрокПоставки,
	|	ЗаказНаПроизводствоЗаказ.ДатаОтгрузкиОбещанная КАК ДатаОтгрузкиОбещанная,
	|	ЗаказНаПроизводствоЗаказ.Количество КАК Количество
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПроизводство.Остатки(, ТИПЗНАЧЕНИЯ(Продукция) = ТИП(Справочник.Номенклатура)) КАК ЗаказыНаПроизводствоОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Заказ КАК ЗаказНаПроизводствоЗаказ
	|		ПО ЗаказыНаПроизводствоОстатки.Документ = ЗаказНаПроизводствоЗаказ.Ссылка
	|			И ЗаказыНаПроизводствоОстатки.Продукция = ЗаказНаПроизводствоЗаказ.Продукция
	|ГДЕ                                            
	|	ЗаказыНаПроизводствоОстатки.КоличествоОстаток > 0          
	|	И ЗаказыНаПроизводствоОстатки.Документ.Закрыт = ЛОЖЬ
	|	И ЗаказыНаПроизводствоОстатки.Документ.Проведен = ИСТИНА
	|	И ЗаказНаПроизводствоЗаказ.КрупныйЗаказ = ЛОЖЬ
	|	И ЗаказНаПроизводствоЗаказ.РучнойЗапуск <> 1
	|	И ЗаказНаПроизводствоЗаказ.Количество > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказыНаПроизводствоОстатки.Документ.Дата";	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Количество = ВыборкаДетальныеЗаписи.Количество - ОбщийМодульВызовСервера.ПолучитьКорректировкуЗНП(ВыборкаДетальныеЗаписи.Документ,ВыборкаДетальныеЗаписи.Продукция);
		Если Количество > 0 Тогда
			Если МТКНеСозданы(ВыборкаДетальныеЗаписи.Документ,ВыборкаДетальныеЗаписи.Продукция) Тогда
			ТЧ = ТаблицаНеСозданныхМТК.Добавить();
			ТЧ.ЗаказНаПроизводство = ВыборкаДетальныеЗаписи.Документ;
			ТЧ.Продукция = ВыборкаДетальныеЗаписи.Продукция;
			ТЧ.СрокПоставки = ВыборкаДетальныеЗаписи.СрокПоставки;
			ТЧ.ДатаОтгрузкиОбещанная = ВыборкаДетальныеЗаписи.ДатаОтгрузкиОбещанная;
			ТЧ.КоличествоКПроизводству = Количество;
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьНеСозданныеМТК(Команда)
Состояние("Обработка...",,"Получение данных...");
ПолучитьНеСозданныеМТКНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьМТКНаСервере()
СписокЛинеек.Очистить();
	Для каждого ТЧ Из ТаблицаНеСозданныхМТК Цикл	
		Попытка
		НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
		ЗаказНаПроизводство = ТЧ.ЗаказНаПроизводство.ПолучитьОбъект();
			Для каждого ТЧ_Заказ Из ЗаказНаПроизводство.Заказ Цикл
				Если ТЧ_Заказ.Продукция = ТЧ.Продукция Тогда
					Если ТипЗнч(ТЧ_Заказ.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
					Линейка = ТЧ.Продукция.Линейка;
						Если Не Линейка.Пустая() Тогда
						Количество = ТЧ.КоличествоКПроизводству;
						КоличествоНеликвиды = ОбщийМодульВызовСервера.ПолучитьНезарезервированныйОстатокПоМестуХранения(Константы.МестоХраненияНеликвидов.Получить(),ТЧ.Продукция,ТекущаяДата());
							Если КоличествоНеликвиды > 0 Тогда						
								Если Количество <= КоличествоНеликвиды Тогда
								ТЧ_Заказ.РезервПерепрогон = Количество;
								ТЧ_Заказ.Количество = ТЧ_Заказ.Количество - Количество;
								Количество = 0;
								Иначе
								ТЧ_Заказ.РезервПерепрогон = КоличествоНеликвиды;
								ТЧ_Заказ.Количество = ТЧ_Заказ.Количество - КоличествоНеликвиды;
							    Количество = Количество - КоличествоНеликвиды;
								КонецЕсли;
							КонецЕсли;
								Если Количество > 0 Тогда
								КоличествоСвободныйОстаток = ОбщийМодульВызовСервера.ПолучитьНезарезервированныйОстатокПоМестуХранения(ТЧ.Продукция.Линейка.МестоХраненияГП,ТЧ.Продукция,ТекущаяДата());
									Если КоличествоСвободныйОстаток > 0 Тогда						
										Если Количество <= КоличествоСвободныйОстаток Тогда
										КоличествоРезервСвободныйОстаток = Количество;
										Количество = 0;
										Иначе
										КоличествоРезервСвободныйОстаток = КоличествоСвободныйОстаток;
										Количество = Количество - КоличествоСвободныйОстаток;
										КонецЕсли;
											Если Не СоздатьРезервирование(ТЧ.ЗаказНаПроизводство,ТЧ.Продукция,КоличествоРезервСвободныйОстаток) Тогда
											ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
											Возврат;								
											КонецЕсли;
									КонецЕсли;
								КонецЕсли; 
	                            	Если Количество > 0 Тогда
										Если (СокрЛП(ЗаказНаПроизводство.Контрагент.Код) = "3588995")или (СокрЛП(ЗаказНаПроизводство.Контрагент.Код) = "000034316") Тогда //ООО "ВО ОВЕН",Завод № 423 ООО
										СтандартныйКомментарий = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Изделия для Группы компаний",Истина);
										Иначе
										СтандартныйКомментарий = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Заказанные изделия для клиентов",Истина);
										КонецЕсли;
									МТК = ОбщийМодульСозданиеДокументов.СоздатьМТК(Линейка,ТЧ_Заказ.Продукция,Количество,СтандартныйКомментарий,,,,,ЗаказНаПроизводство.Номер,ТЧ_Заказ.ДатаОтгрузкиОбещанная,ЗаказНаПроизводство.Ссылка);
										Если Не МТК.Пустая() Тогда
											Если ЗаказНаПроизводство.СервисЦентр Тогда
												Если СписокЛинеек.НайтиПоЗначению(Линейка) = Неопределено Тогда
												СписокЛинеек.Добавить(Линейка);
												КонецЕсли;
											КонецЕсли;
										КонецЕсли;
									КонецЕсли;
						Иначе
                        Сообщить("Изделие "+СокрЛП(ТЧ.Продукция.Наименование)+" - не назначена линейка!");
						КонецЕсли;
					Иначе
						Если ТЧ_Заказ.Количество = 0 Тогда
						ТЧ_Заказ.Количество = ТЧ_Заказ.КоличествоВЗаказе;						
						КонецЕсли;					
					КонецЕсли;
				Прервать;
				КонецЕсли; 
			КонецЦикла;
		ЗаказНаПроизводство.Записать(РежимЗаписиДокумента.Проведение);
		ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
		Исключение
		Сообщить(ОписаниеОшибки());
		ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМТК(Команда)
СоздатьМТКНаСервере();
ПолучитьНеСозданныеМТКНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСозданныхТаблицаПродукцииВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
Элементы.ТаблицаСозданных.ТекущиеДанные.Продукция = Элемент.ТекущиеДанные.Продукция;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьПараметрыЗапускаНаСервере()
	Для каждого ТЧ Из ТаблицаКрупныхЗаказов Цикл	
		Если ТЧ.Пометка Тогда
			Если ЗначениеЗаполнено(ТЧ.ДатаЗапуска) и ТЧ.КоличествоЗапусков > 0 Тогда
				Попытка
				НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
				ЗаказНаПроизводство = ТЧ.ЗаказНаПроизводство.ПолучитьОбъект();
					Для каждого ТЧ_Заказ Из ЗаказНаПроизводство.Заказ Цикл
						Если ТЧ_Заказ.Товар = ТЧ.Товар Тогда
						ТЧ_Заказ.ДатаЗапуска = ТЧ.ДатаЗапуска;
						ТЧ_Заказ.КоличествоЗапусков = ТЧ.КоличествоЗапусков;
						Прервать;
						КонецЕсли; 
					КонецЦикла;
				ЗаказНаПроизводство.Записать(РежимЗаписиДокумента.Проведение);
				ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
				ТЧ.Пометка = Ложь;
				Исключение
				Сообщить(ОписаниеОшибки());
				ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
				КонецПопытки;
			КонецЕсли;		
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьПараметрыЗапуска(Команда)
ЗаписатьПараметрыЗапускаНаСервере();
КонецПроцедуры

&НаСервере
Функция СоздаватьОдноПЗПоМТК(Спецификация)
Возврат(Спецификация.Линейка.СоздаватьОдноПЗПоМТК);
КонецФункции

&НаКлиенте
Процедура ТаблицаКрупныхЗаказовКоличествоЗапусковПриИзменении(Элемент)
	Если СоздаватьОдноПЗПоМТК(Элементы.ТаблицаКрупныхЗаказов.ТекущиеДанные.Продукция) Тогда	
		Если Элементы.ТаблицаКрупныхЗаказов.ТекущиеДанные.КоличествоЗапусков <> 1 Тогда
		Элементы.ТаблицаКрупныхЗаказов.ТекущиеДанные.КоличествоЗапусков = 1;
		Сообщить("Количество запусков по линейке, в которой выпускается данная продукция должно равнятся одному!");
		КонецЕсли; 
	КонецЕсли;
Элементы.ТаблицаКрупныхЗаказов.ТекущиеДанные.Пометка = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКрупныхЗаказовДатаЗапускаПриИзменении(Элемент)
Элементы.ТаблицаКрупныхЗаказов.ТекущиеДанные.Пометка = Истина;
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоЗарезервировано(ЗНП,Продукция)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РезервированиеГПОстатки.Продукция КАК Продукция,
	|	СУММА(РезервированиеГПОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.РезервированиеГП.Остатки(
	|			,
	|			МестоХранения = &МестоХранения
	|				И Продукция = &Продукция
	|				И Документ = &Документ) КАК РезервированиеГПОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	РезервированиеГПОстатки.Продукция";
Запрос.УстановитьПараметр("Документ", ЗНП);
Запрос.УстановитьПараметр("Продукция", Продукция);
Запрос.УстановитьПараметр("МестоХранения", Константы.МестоХраненияТНП.Получить());
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.КоличествоОстаток);
	КонецЦикла;
Возврат(0);
КонецФункции 

&НаСервере
Функция ПолучитьКоличествоЗарезервированоВсего(ЗНП,Продукция)
Запрос = Новый Запрос;
СписокМестХранения = Новый СписокЗначений;
                                         
	Если ТипЗнч(Продукция) = Тип("СправочникСсылка.Материалы") Тогда
	СписокМестХранения.Добавить(Константы.МестоХраненияТНП.Получить());
	СписокМестХранения.Добавить(Константы.МестоХраненияНеликвидов.Получить());
	СписокМестХранения.Добавить(Константы.МестоХраненияПерепрогон.Получить());	
	Иначе	
	СписокМестХранения.Добавить(Продукция.Линейка.МестоХраненияГП);
	СписокМестХранения.Добавить(Константы.МестоХраненияПерепрогон.Получить());	
	КонецЕсли;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	РезервированиеГПОбороты.Продукция КАК Продукция,
	|	СУММА(РезервированиеГПОбороты.КоличествоПриход) КАК КоличествоПриход
	|ИЗ
	|	РегистрНакопления.РезервированиеГП.Обороты(
	|			,
	|			,
	|			,
	|			МестоХранения В (&СписокМестХранения)
	|				И Продукция = &Продукция
	|				И Документ = &Документ) КАК РезервированиеГПОбороты
	|ГДЕ
	|	РезервированиеГПОбороты.КоличествоПриход > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	РезервированиеГПОбороты.Продукция";
Запрос.УстановитьПараметр("Документ", ЗНП);
Запрос.УстановитьПараметр("Продукция", Продукция);
Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.КоличествоПриход);
	КонецЦикла;
Возврат(0);
КонецФункции

&НаСервере
Функция ПолучитьКоличествоДолг(ЗНП,Продукция)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДолгиОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.Долги.Остатки КАК ДолгиОстатки
	|ГДЕ
	|	ДолгиОстатки.Документ = &Документ
	|	И ДолгиОстатки.Продукция = &Продукция";
Запрос.УстановитьПараметр("Документ", ЗНП); 
Запрос.УстановитьПараметр("Продукция", Продукция);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
Количество = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Количество = Количество + ВыборкаДетальныеЗаписи.КоличествоОстаток;
	КонецЦикла;
Возврат(Количество);
КонецФункции

&НаСервере
Функция ПолучитьДатуПоставки(Продукция)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ЗаказыПоставщикамОстатки.ДатаИсполнения КАК ДатаИсполнения
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&НаДату, ) КАК ЗаказыПоставщикамОстатки
	|ГДЕ
	|	ЗаказыПоставщикамОстатки.МПЗ = &МПЗ
	|	И ЗаказыПоставщикамОстатки.КоличествоОстаток > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику.Дата";
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("МПЗ", Продукция);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.ДатаИсполнения);
	КонецЦикла;
Возврат(Дата(1,1,1));
КонецФункции 

&НаСервере
Процедура ПолучитьТНПНаСервере()
ТаблицаТНП.Очистить();
Запрос = Новый Запрос;
ТаблицаОстатков = Новый ТаблицаЗначений;

ТаблицаОстатков.Колонки.Добавить("Продукция");
ТаблицаОстатков.Колонки.Добавить("Количество");

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыНаПроизводствоОстатки.Документ КАК Документ,
	|	ЗаказыНаПроизводствоОстатки.Продукция КАК Продукция,
	|	ЗаказыНаПроизводствоОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ЗаказНаПроизводствоЗаказ.ДатаОтгрузкиОбещанная КАК ДатаОтгрузкиОбещанная,
	|	ЗаказНаПроизводствоЗаказ.Количество КАК Количество,
	|	ЗаказНаПроизводствоЗаказ.Товар КАК Товар,
	|	ЗаказНаПроизводствоЗаказ.КоличествоВЗаказе КАК КоличествоВЗаказе,
	|	ЗаказНаПроизводствоЗаказ.КрупныйЗаказ КАК КрупныйЗаказ
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПроизводство.Остатки(, ТИПЗНАЧЕНИЯ(Продукция) = ТИП(Справочник.Материалы)) КАК ЗаказыНаПроизводствоОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Заказ КАК ЗаказНаПроизводствоЗаказ
	|		ПО ЗаказыНаПроизводствоОстатки.Документ = ЗаказНаПроизводствоЗаказ.Ссылка
	|			И ЗаказыНаПроизводствоОстатки.Продукция = ЗаказНаПроизводствоЗаказ.Продукция
	|ГДЕ
	|	ЗаказыНаПроизводствоОстатки.Документ.Закрыт = ЛОЖЬ
	|	И ЗаказыНаПроизводствоОстатки.Документ.Проведен = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказыНаПроизводствоОстатки.Документ.Дата,
	|	ЗаказыНаПроизводствоОстатки.Документ.Номер";	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Продукция = ВыборкаДетальныеЗаписи.Продукция;
	КоличествоВЗаказе = ВыборкаДетальныеЗаписи.КоличествоВЗаказе - ОбщийМодульВызовСервера.ПолучитьКорректировкуЗНП(ВыборкаДетальныеЗаписи.Документ,Продукция);
	//КоличествоЗарезервировано = ПолучитьКоличествоЗарезервировано(ВыборкаДетальныеЗаписи.Документ,Продукция);
	КоличествоЗарезервировано = ПолучитьКоличествоЗарезервированоВсего(ВыборкаДетальныеЗаписи.Документ,Продукция);
	КоличествоОсталосьЗарезервировать = КоличествоВЗаказе - КоличествоЗарезервировано;
		Если КоличествоОсталосьЗарезервировать = 0 Тогда
		Продолжить;
		КонецЕсли; 				
    ТЧ = ТаблицаТНП.Добавить();
	ТЧ.Пометка = Истина;
	ТЧ.Продукция = Продукция;
	ТЧ.ЗаказНаПроизводство = ВыборкаДетальныеЗаписи.Документ;
	ТЧ.КоличествоВЗаказе = КоличествоВЗаказе;
	ТЧ.КоличествоЗарезервировано = КоличествоЗарезервировано;
	ТЧ.КоличествоОсталосьЗарезервировать = КоличествоОсталосьЗарезервировать;
	ТЧ.КоличествоНеликвидов = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокПоМестуХранения(Константы.МестоХраненияНеликвидов.Получить(),Продукция);
	Выборка = ТаблицаОстатков.Найти(Продукция,"Продукция");
		Если Выборка = Неопределено Тогда	
		ТЧ_ТО = ТаблицаОстатков.Добавить();
		ТЧ_ТО.Продукция = Продукция;
		ТЧ_ТО.Количество = ОбщийМодульВызовСервера.ПолучитьНезарезервированныйОстатокПоМестуХранения(Константы.МестоХраненияТНП.Получить(),Продукция,ТекущаяДата());
		Выборка = ТЧ_ТО;
		КонецЕсли;
	//КоличествоКРезервированию = ПолучитьКоличествоДолг(ВыборкаДетальныеЗаписи.Документ,Продукция) - КоличествоЗарезервировано;
	КоличествоСклад = Выборка.Количество;
	КоличествоСклад = ?(ВыборкаДетальныеЗаписи.Товар.КратностьПродажи > 0,Цел(КоличествоСклад/ВыборкаДетальныеЗаписи.Товар.КратностьПродажи),0)*ВыборкаДетальныеЗаписи.Товар.КратностьПродажи;
		Если КоличествоСклад > 0 Тогда
		КоличествоКРезервированию = ?(Продукция.Товар.КратностьПродажи > 0,Цел(КоличествоОсталосьЗарезервировать/ВыборкаДетальныеЗаписи.Товар.КратностьПродажи),0)*ВыборкаДетальныеЗаписи.Товар.КратностьПродажи;
			Если КоличествоКРезервированию > КоличествоСклад Тогда
			ТЧ.КоличествоКРезервированию = КоличествоСклад;
			Выборка.Количество = 0;							
			Иначе	
			ТЧ.КоличествоКРезервированию = КоличествоКРезервированию;
			Выборка.Количество = Выборка.Количество - КоличествоКРезервированию;	
			КонецЕсли;
		КонецЕсли;				
	ТЧ.КрупныйЗаказ = ВыборкаДетальныеЗаписи.КрупныйЗаказ;
	//ТЧ.ДатаПоставки = ПолучитьДатуПоставки(Продукция);
	ТЧ.ДатаОтгрузкиОбещанная = ВыборкаДетальныеЗаписи.ДатаОтгрузкиОбещанная;
	ТЧ.КратностьПродажи = ВыборкаДетальныеЗаписи.Товар.КратностьПродажи;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьТНП(Команда)
Состояние("Обработка...",,"Получение данных...");
ПолучитьТНПНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТаблицаТНППометкаПриИзмененииНаСервере()
ТаблицаОстатков = Новый ТаблицаЗначений;

ТаблицаОстатков.Колонки.Добавить("Продукция");
ТаблицаОстатков.Колонки.Добавить("Количество");

	Для каждого ТЧ Из ТаблицаТНП Цикл	
	ТЧ.КоличествоКРезервированию = 0;
		Если ТЧ.Пометка Тогда
		Выборка = ТаблицаОстатков.Найти(ТЧ.Продукция,"Продукция");
			Если Выборка = Неопределено Тогда	
			ТЧ_ТО = ТаблицаОстатков.Добавить();
			ТЧ_ТО.Продукция = ТЧ.Продукция;
			ТЧ_ТО.Количество = ОбщийМодульВызовСервера.ПолучитьНезарезервированныйОстатокПоМестуХранения(Константы.МестоХраненияТНП.Получить(),ТЧ.Продукция,ТекущаяДата());
			Выборка = ТЧ_ТО;
			КонецЕсли;
		КоличествоКРезервированию = ТЧ.КоличествоВЗаказе - ТЧ.КоличествоЗарезервировано;
			Если КоличествоКРезервированию > 0 Тогда
			КоличествоСклад = Выборка.Количество;
				Если КоличествоСклад > 0 Тогда
					Если КоличествоКРезервированию > КоличествоСклад Тогда
					ТЧ.КоличествоКРезервированию = КоличествоСклад;
					Выборка.Количество = 0;							
					Иначе	
					ТЧ.КоличествоКРезервированию = КоличествоКРезервированию;
					Выборка.Количество = Выборка.Количество - КоличествоКРезервированию;	
					КонецЕсли;
				КонецЕсли; 
			КонецЕсли;	  	
		КонецЕсли;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТНППометкаПриИзменении(Элемент)
ТаблицаТНППометкаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьПеремещениеТНПНаСервере()
Подразделение = Константы.МестоХраненияТНП.Получить().Подразделение;
Перемещение = Неопределено;
ЗНП = Неопределено;
	Для каждого ТЧ Из ТаблицаТНП Цикл	
		Если ТЧ.КоличествоКПеремещению > 0 Тогда
			Если ЗНП <> ТЧ.ЗаказНаПроизводство Тогда
				Если ЗНП <> Неопределено Тогда
				Перемещение.Записать(РежимЗаписиДокумента.Проведение);
				КонецЕсли;				
			ЗНП = ТЧ.ЗаказНаПроизводство;
			Перемещение = Документы.ДвижениеМПЗ.СоздатьДокумент();
			Перемещение.Дата = ТекущаяДата();
			Перемещение.УстановитьНовыйНомер(ПрисвоитьПрефикс(Подразделение));
			Перемещение.Автор = ПараметрыСеанса.Пользователь;
			Перемещение.ДокументОснование = ТЧ.ЗаказНаПроизводство;
			Перемещение.Подразделение = Подразделение;
			Перемещение.МестоХранения = Константы.МестоХраненияТНП.Получить();
			Перемещение.МестоХраненияВ = Константы.МестоХраненияГПТНП.Получить();
			КонецЕсли; 
		ТЧ_Р = Перемещение.ТабличнаяЧасть.Добавить();
		ТЧ_Р.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
		ТЧ_Р.МПЗ = ТЧ.Продукция;
		ТЧ_Р.Количество = ТЧ.КоличествоКПеремещению;
		ТЧ_Р.ЕдиницаИзмерения = ТЧ.Продукция.ОсновнаяЕдиницаИзмерения;	
		КонецЕсли;
	КонецЦикла;
		Если ЗНП <> Неопределено Тогда
		Перемещение.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПеремещениеТНП(Команда)
СоздатьПеремещениеТНПНаСервере();
ПолучитьТНП(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ЗарезервироватьТНПНаСервере()
Подразделение = Константы.МестоХраненияТНП.Получить().Подразделение;
Резервирование = Неопределено;
ЗНП = Неопределено;
	Для каждого ТЧ Из ТаблицаТНП Цикл	
		Если ТЧ.КоличествоКРезервированию > 0 Тогда
			Если ЗНП <> ТЧ.ЗаказНаПроизводство Тогда
				Если ЗНП <> Неопределено Тогда
				Резервирование.Записать(РежимЗаписиДокумента.Проведение);
				КонецЕсли;				
			ЗНП = ТЧ.ЗаказНаПроизводство;
			Резервирование = Документы.Резервирование.СоздатьДокумент();
			Резервирование.Дата = ТекущаяДата();
			Резервирование.УстановитьНовыйНомер(ПрисвоитьПрефикс(Подразделение));
			Резервирование.Автор = ПараметрыСеанса.Пользователь;
			Резервирование.ДокументОснование = ТЧ.ЗаказНаПроизводство;
			Резервирование.Подразделение = Подразделение;
			Резервирование.МестоХранения = Константы.МестоХраненияТНП.Получить();
			КонецЕсли; 
		ТЧ_Р = Резервирование.ТабличнаяЧасть.Добавить();
		ТЧ_Р.Товар = ТЧ.Продукция.Товар;
		ТЧ_Р.Продукция = ТЧ.Продукция;
		ТЧ_Р.Количество = ТЧ.КоличествоКРезервированию;	
		КонецЕсли;
	КонецЦикла;
		Если ЗНП <> Неопределено Тогда
		Резервирование.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗарезервироватьТНП(Команда)
ЗарезервироватьТНПНаСервере();
ПолучитьТНП(Неопределено);
КонецПроцедуры

&НаСервере
Функция ПолучитьEmailСотрудника()
Возврат(ПараметрыСеанса.Пользователь.Email);
КонецФункции

&НаСервере
Функция ПолучитьEmailПолучателя()
Возврат(СотрудникДляРассылки.Email);
КонецФункции

&НаСервере
Функция ПолучитьEmailПолучателяРЗ()
Возврат(СотрудникДляРассылкиРЗ.Email);
КонецФункции

&НаСервере
Функция ПолучитьСписокТоваров()
СписокТоваров = Новый СписокЗначений;

	Для каждого ТЧ Из ТаблицаСозданных Цикл
		Если ТЧ.ТаблицаПродукции.Количество() = 0 Тогда
		СписокТоваров.Добавить(ТЧ.Товар);		
		КонецЕсли; 
	КонецЦикла; 
Возврат(СписокТоваров);
КонецФункции

&НаСервере
Функция ПолучитьСписокСпецификаций()
СписокСпецификаций = Новый СписокЗначений;

	Для каждого ТЧ Из ТаблицаРучнойЗапуск Цикл
	СписокСпецификаций.Добавить(ТЧ.Продукция); 
	КонецЦикла; 
Возврат(СписокСпецификаций);
КонецФункции

&НаСервере
Функция ПолучитьКодБазы()
Возврат(Константы.КодБазы.Получить());
КонецФункции 

&НаКлиенте
Процедура ПочтоваяРассылка(Команда)
	Если СотрудникДляРассылки.Пустая() Тогда
	Сообщить("Не выбран сотрудник для рассылки!");
	Возврат;
	КонецЕсли;
EmailСотрудника = ПолучитьEmailСотрудника();
Сообщение = Новый ИнтернетПочтовоеСообщение;
ИПП = Новый ИнтернетПочтовыйПрофиль; 

НастройкиПочты = ОбщийМодульВызовСервера.ПолучитьНастройкиПочты();
ИПП.АдресСервераSMTP = НастройкиПочты.АдресСервераSMTP; 
ИПП.ПортSMTP = НастройкиПочты.ПортSMTP;
ИПП.ВремяОжидания = 60; 
ИПП.Пароль = НастройкиПочты.ПарольПочтовогоСервера; 
ИПП.Пользователь = EmailСотрудника;
Сообщение.Отправитель.Адрес = EmailСотрудника; 
Сообщение.Получатели.Добавить(ПолучитьEmailПолучателя());
СписокТоваров = ПолучитьСписокТоваров();
Сообщение.Тема = "("+ПолучитьКодБазы()+") Несозданные спецификации (материалы) (автоматическая рассылка)!"; 
Текст = "Здравствуйте!";
Текст = Текст + Символы.ПС+ "";
Текст = Текст + Символы.ПС+ "В производственной базе не созданы спецификации (материалы) на следующие товары:";	
Текст = Текст + Символы.ПС+ "";
	Для каждого Товар Из СписокТоваров Цикл
	Текст = Текст + Товар.Значение + ";" + Символы.ПС;
	КонецЦикла;
Текст = Текст + Символы.ПС+ "С уважением, служба автоматической рассылки производственной базы!";
Сообщение.Тексты.Добавить(Текст);	
// Подключиться и отправить. 
Почта = Новый ИнтернетПочта; 
Почта.Подключиться(ИПП);
Почта.Послать(Сообщение); 
Почта.Отключиться();
ПоказатьОповещениеПользователя("Сообщение отправлено!");
КонецПроцедуры

&НаСервере
Процедура ПолучитьРучнойЗапускНаСервере()
ТаблицаРучнойЗапуск.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоЗаказ.Ссылка КАК Ссылка,
	|	ЗаказНаПроизводствоЗаказ.Товар КАК Товар,
	|	ЗаказНаПроизводствоЗаказ.Продукция КАК Продукция,
	|	ЗаказНаПроизводствоЗаказ.Количество КАК КоличествоКПроизводству,
	|	ЗаказНаПроизводствоЗаказ.РезервПерепрогон КАК РезервПерепрогон,
	|	ЗаказНаПроизводствоЗаказ.ДатаОтгрузкиОбещанная КАК ДатаОтгрузкиОбещанная
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Заказ КАК ЗаказНаПроизводствоЗаказ
	|ГДЕ
	|	ЗаказНаПроизводствоЗаказ.Ссылка.Закрыт = ЛОЖЬ
	|	И ЗаказНаПроизводствоЗаказ.РучнойЗапуск = 1
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказНаПроизводствоЗаказ.Ссылка.Дата";	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
		Если ВыборкаДетальныеЗаписи.РезервПерепрогон > 0 Тогда
		Результат = ПолучитьКоличествоПерепрогонов(ВыборкаДетальныеЗаписи.Ссылка,ВыборкаДетальныеЗаписи.Продукция);
		КоличествоНеПройдено = Результат.КоличествоНеПройдено;
		КоличествоПройдено = Результат.КоличествоПройдено;
			Если (КоличествоПройдено + КоличествоНеПройдено) = ВыборкаДетальныеЗаписи.РезервПерепрогон Тогда
				Если КоличествоНеПройдено > 0 Тогда
				КоличествоКПроизводству = ВыборкаДетальныеЗаписи.КоличествоКПроизводству+КоличествоНеПройдено-ОбщийМодульВызовСервера.ПолучитьКорректировкуЗНП(ВыборкаДетальныеЗаписи.Ссылка,ВыборкаДетальныеЗаписи.Продукция);
				Иначе
				Продолжить;
				КонецЕсли;
			Иначе
			Продолжить;
			КонецЕсли;
		ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоКПроизводству > 0 Тогда
		КоличествоКПроизводству = ВыборкаДетальныеЗаписи.КоличествоКПроизводству;
		Иначе
		Продолжить;	
		КонецЕсли;
	ТЧ = ТаблицаРучнойЗапуск.Добавить();
	ТЧ.ЗаказНаПроизводство = ВыборкаДетальныеЗаписи.Ссылка;
	ТЧ.Товар = ВыборкаДетальныеЗаписи.Товар;
	ТЧ.Продукция = ВыборкаДетальныеЗаписи.Продукция;
	ТЧ.КоличествоКПроизводству = КоличествоКПроизводству;
	ТЧ.ДатаОтгрузкиОбещанная = ВыборкаДетальныеЗаписи.ДатаОтгрузкиОбещанная;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьРучнойЗапуск(Команда)
Состояние("Обработка...",,"Получение данных...");
ПолучитьРучнойЗапускНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбработатьРучнойЗапускНаСервере()
	Для каждого ТЧ Из ТаблицаРучнойЗапуск Цикл
		Если ТЧ.Пометка Тогда		
		ЗаказНаПроизводство = ТЧ.ЗаказНаПроизводство.ПолучитьОбъект();
		ТЧ_ЗП = ЗаказНаПроизводство.Заказ.Найти(ТЧ.Продукция,"Продукция");
			Если ТЧ_ЗП <> Неопределено Тогда
			ТЧ_ЗП.РучнойЗапуск = 2;			
			КонецЕсли;  
		ЗаказНаПроизводство.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;	
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРучнойЗапуск(Команда)
ОбработатьРучнойЗапускНаСервере();
ПолучитьРучнойЗапускНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПочтоваяРассылкаРЗ(Команда)
	Если СотрудникДляРассылкиРЗ.Пустая() Тогда
	Сообщить("Не выбран сотрудник для рассылки!");
	Возврат;
	КонецЕсли;
EmailСотрудника = ПолучитьEmailСотрудника();
Сообщение = Новый ИнтернетПочтовоеСообщение;
ИПП = Новый ИнтернетПочтовыйПрофиль; 

НастройкиПочты = ОбщийМодульВызовСервера.ПолучитьНастройкиПочты();
ИПП.АдресСервераSMTP = НастройкиПочты.АдресСервераSMTP; 
ИПП.ПортSMTP = НастройкиПочты.ПортSMTP;
ИПП.ВремяОжидания = 60; 
ИПП.Пароль = НастройкиПочты.ПарольПочтовогоСервера; 
ИПП.Пользователь = EmailСотрудника;
Сообщение.Отправитель.Адрес = EmailСотрудника; 
Сообщение.Получатели.Добавить(ПолучитьEmailПолучателяРЗ());
СписокСпецификаций = ПолучитьСписокСпецификаций();
Сообщение.Тема = "Спецификации для ручного запуска (автоматическая рассылка)!"; 
Текст = "Здравствуйте!";
Текст = Текст + Символы.ПС+ "";
Текст = Текст + Символы.ПС+ "В производственной базе имеются не запущенные в пр-во спецификации:";	
Текст = Текст + Символы.ПС+ "";
	Для каждого Спецификация Из СписокСпецификаций Цикл
	Текст = Текст + Символы.ПС + СокрЛП(Спецификация.Значение) + ";" + Символы.ПС;
	КонецЦикла;
Текст = Текст + Символы.ПС+ "С уважением, служба автоматической рассылки производственной базы!";
Сообщение.Тексты.Добавить(Текст);	
// Подключиться и отправить. 
Почта = Новый ИнтернетПочта; 
Почта.Подключиться(ИПП);
Почта.Послать(Сообщение); 
Почта.Отключиться();
ПоказатьОповещениеПользователя("Сообщение отправлено!");
КонецПроцедуры

&НаСервере
Функция ПолучитьПеремещениеНаПерепрогон(ЗаказНаПроизводство,Продукция)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ДвижениеМПЗ.ТабличнаяЧасть КАК ДвижениеМПЗТабличнаяЧасть
	|ГДЕ
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.ДокументОснование = &ДокументОснование
	|	И ДвижениеМПЗТабличнаяЧасть.МПЗ = &МПЗ
	|	И ДвижениеМПЗТабличнаяЧасть.Ссылка.МестоХранения = &МестоХранения";
Запрос.УстановитьПараметр("ДокументОснование", ЗаказНаПроизводство);
Запрос.УстановитьПараметр("МестоХранения", Константы.МестоХраненияНеликвидов.Получить());
Запрос.УстановитьПараметр("МПЗ", Продукция);
Результат = Запрос.Выполнить();
ВыборкаДокументы = Результат.Выбрать();
	Пока ВыборкаДокументы.Следующий() Цикл
	Возврат(ВыборкаДокументы.Ссылка);
	КонецЦикла; 
Возврат(Документы.ДвижениеМПЗ.ПустаяСсылка());
КонецФункции

&НаСервере
Функция ПолучитьКоличествоПерепрогонов(ЗаказНаПроизводство,Продукция)
Запрос = Новый Запрос;
Парам = Новый Структура("КоличествоПройдено,КоличествоНеПройдено",0,0);

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Перепрогон.Изделие КАК Изделие,            
	|	Перепрогон.Статус КАК Статус,
	|	СУММА(Перепрогон.Количество) КАК Количество
	|ИЗ
	|	Документ.Перепрогон КАК Перепрогон
	|ГДЕ
	|	Перепрогон.ДокументОснование.ДокументОснование = &ДокументОснование
	|	И Перепрогон.Изделие = &Изделие
	|	И Перепрогон.Проведен = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	Перепрогон.Изделие,
	|	Перепрогон.Статус";
Запрос.УстановитьПараметр("ДокументОснование", ЗаказНаПроизводство);
Запрос.УстановитьПараметр("Изделие", Продукция);
Результат = Запрос.Выполнить();
ВыборкаДетальныхЗаписей = Результат.Выбрать();
	Пока ВыборкаДетальныхЗаписей.Следующий() Цикл
		Если ВыборкаДетальныхЗаписей.Статус = 0 Тогда
		Парам.КоличествоНеПройдено = ВыборкаДетальныхЗаписей.Количество;
		ИначеЕсли ВыборкаДетальныхЗаписей.Статус = 1 Тогда
		Парам.КоличествоПройдено = ВыборкаДетальныхЗаписей.Количество;				
		КонецЕсли;
	КонецЦикла;
Возврат(Парам);
КонецФункции

&НаСервере
Функция ПолучитьКоличествоВПроизводстве(ЗаказНаПроизводство,Продукция)
Запрос = Новый Запрос;
             
Количество = 0;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Номенклатура КАК Номенклатура,
	|	СУММА(МаршрутнаяКарта.Количество) КАК Количество
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.ДокументОснование = &ДокументОснование
	|	И МаршрутнаяКарта.Номенклатура = &Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	МаршрутнаяКарта.Номенклатура";
Запрос.УстановитьПараметр("ДокументОснование", ЗаказНаПроизводство);
Запрос.УстановитьПараметр("Номенклатура", Продукция);
Результат = Запрос.Выполнить();
ВыборкаИзделия = Результат.Выбрать();
	Пока ВыборкаИзделия.Следующий() Цикл
	Количество = ВыборкаИзделия.Количество;
	КонецЦикла;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	РезервированиеТабличнаяЧасть.Продукция КАК Продукция,
	|	СУММА(РезервированиеТабличнаяЧасть.Количество) КАК Количество
	|ИЗ
	|	Документ.Резервирование.ТабличнаяЧасть КАК РезервированиеТабличнаяЧасть
	|ГДЕ
	|	РезервированиеТабличнаяЧасть.Ссылка.ДокументОснование = &ДокументОснование
	|	И РезервированиеТабличнаяЧасть.Продукция = &Продукция
	|
	|СГРУППИРОВАТЬ ПО
	|	РезервированиеТабличнаяЧасть.Продукция";
Запрос.УстановитьПараметр("ДокументОснование", ЗаказНаПроизводство);
Запрос.УстановитьПараметр("Продукция", Продукция);
Результат = Запрос.Выполнить();
ВыборкаИзделия = Результат.Выбрать();
	Пока ВыборкаИзделия.Следующий() Цикл
	Количество = Количество + ВыборкаИзделия.Количество;
	КонецЦикла; 
Возврат(Количество);
КонецФункции

&НаСервере
Процедура ПолучитьПерепрогонНаСервере()
ТаблицаПерепрогон.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоЗаказ.Ссылка КАК Документ,
	|	ЗаказНаПроизводствоЗаказ.Продукция КАК Продукция,
	|	ЗаказНаПроизводствоЗаказ.Количество КАК КоличествоКПроизводству,
	|	ЗаказНаПроизводствоЗаказ.РезервПерепрогон КАК РезервПерепрогон,
	|	ЗаказНаПроизводствоЗаказ.СрокПоставки КАК СрокПоставки,
	|	ЗаказНаПроизводствоЗаказ.ДатаОтгрузкиОбещанная КАК ДатаОтгрузкиОбещанная
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Заказ КАК ЗаказНаПроизводствоЗаказ
	|ГДЕ
	|	ЗаказНаПроизводствоЗаказ.Ссылка.Закрыт = ЛОЖЬ
	|	И ЗаказНаПроизводствоЗаказ.РезервПерепрогон > 0
	|	И ЗаказНаПроизводствоЗаказ.РучнойЗапуск <> 1
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказНаПроизводствоЗаказ.Ссылка.Дата";	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Продукция = ВыборкаДетальныеЗаписи.Продукция;
	Результат = ПолучитьКоличествоПерепрогонов(ВыборкаДетальныеЗаписи.Документ,Продукция);
	КоличествоНеПройдено = Результат.КоличествоНеПройдено;
	КоличествоПройдено = Результат.КоличествоПройдено;				
		Если (КоличествоПройдено + КоличествоНеПройдено) = ВыборкаДетальныеЗаписи.РезервПерепрогон Тогда
			Если КоличествоНеПройдено > 0 Тогда
			КоличествоВПроизводстве = ПолучитьКоличествоВПроизводстве(ВыборкаДетальныеЗаписи.Документ,Продукция);
			КоличествоКПроизводству = ВыборкаДетальныеЗаписи.КоличествоКПроизводству+КоличествоНеПройдено-ОбщийМодульВызовСервера.ПолучитьКорректировкуЗНП(ВыборкаДетальныеЗаписи.Документ,Продукция); 
				Если КоличествоВПроизводстве < КоличествоКПроизводству Тогда
			 	ТЧ = ТаблицаПерепрогон.Добавить();
				ТЧ.ЗаказНаПроизводство = ВыборкаДетальныеЗаписи.Документ;
				ТЧ.Продукция = Продукция;
				ТЧ.КоличествоПерепрогон = ВыборкаДетальныеЗаписи.РезервПерепрогон;
				ТЧ.ПеремещениеНаПерепрогон = ПолучитьПеремещениеНаПерепрогон(ВыборкаДетальныеЗаписи.Документ,Продукция);
				ТЧ.КоличествоПройдено = КоличествоПройдено;
				ТЧ.КоличествоНеПройдено = КоличествоНеПройдено;
				ТЧ.КоличествоКПроизводству = КоличествоКПроизводству-КоличествоВПроизводстве;
				ТЧ.СрокПоставки = ВыборкаДетальныеЗаписи.СрокПоставки;
				ТЧ.ДатаОтгрузкиОбещанная = ВыборкаДетальныеЗаписи.ДатаОтгрузкиОбещанная;
				КонецЕсли;
			КонецЕсли;
		Иначе
	 	ТЧ = ТаблицаПерепрогон.Добавить();
		ТЧ.ЗаказНаПроизводство = ВыборкаДетальныеЗаписи.Документ;
		ТЧ.Продукция = Продукция;
		ТЧ.КоличествоПерепрогон = ВыборкаДетальныеЗаписи.РезервПерепрогон;
		ТЧ.ПеремещениеНаПерепрогон = ПолучитьПеремещениеНаПерепрогон(ВыборкаДетальныеЗаписи.Документ,Продукция);
		ТЧ.КоличествоПройдено = КоличествоПройдено;
		ТЧ.КоличествоНеПройдено = КоличествоНеПройдено;
		ТЧ.КоличествоКПроизводству = 0;
		ТЧ.СрокПоставки = ВыборкаДетальныеЗаписи.СрокПоставки;
		ТЧ.ДатаОтгрузкиОбещанная = ВыборкаДетальныеЗаписи.ДатаОтгрузкиОбещанная;
		КонецЕсли;	  
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПерепрогон(Команда)
Состояние("Обработка...",,"Получение данных...");
ПолучитьПерепрогонНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьПеремещениеНаПерепрогонНаСервере()
МестоХраненияНеликвиды = Константы.МестоХраненияНеликвидов.Получить();
	Для Каждого ТЧ Из ТаблицаПерепрогон Цикл
		Если Не ЗначениеЗаполнено(ТЧ.ПеремещениеНаПерепрогон) Тогда
		Перемещение = Документы.ДвижениеМПЗ.СоздатьДокумент();
		Перемещение.Дата = ТекущаяДата();
		Перемещение.УстановитьНовыйНомер(ПрисвоитьПрефикс(МестоХраненияНеликвиды.Подразделение));
		Перемещение.Автор = ПараметрыСеанса.Пользователь;
		Перемещение.ДокументОснование = ТЧ.ЗаказНаПроизводство;
		Перемещение.Подразделение = МестоХраненияНеликвиды.Подразделение;
		Перемещение.МестоХранения = МестоХраненияНеликвиды;
		Перемещение.МестоХраненияВ = Константы.МестоХраненияПерепрогон.Получить();
		ТекЗНП = ТЧ.ЗаказНаПроизводство;
		ТЧ_Р = Перемещение.ТабличнаяЧасть.Добавить();
			Если ТипЗнч(ТЧ.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
			ТЧ_Р.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
			Иначе				
			ТЧ_Р.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
			КонецЕсли; 
		ТЧ_Р.МПЗ = ТЧ.Продукция;
		ТЧ_Р.Количество = ТЧ.КоличествоПерепрогон/ТЧ.Продукция.ОсновнаяЕдиницаИзмерения.Коэффициент;
		ТЧ_Р.ЕдиницаИзмерения = ТЧ.Продукция.ОсновнаяЕдиницаИзмерения;	
		Перемещение.Записать(РежимЗаписиДокумента.Проведение);
		ТЧ.ПеремещениеНаПерепрогон = Перемещение.Ссылка;
		КонецЕсли; 	
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПеремещениеНаПерепрогон(Команда)
СоздатьПеремещениеНаПерепрогонНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьНедостающиеМТКПерепрогонаНаСервере()
СписокЛинеек.Очистить();
	Для каждого ТЧ Из ТаблицаПерепрогон Цикл
		Если (ТЧ.КоличествоПройдено+ТЧ.КоличествоНеПройдено) = ТЧ.КоличествоПерепрогон Тогда
			Если ТЧ.КоличествоКПроизводству > 0 Тогда
				Если ТипЗнч(ТЧ.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
				Линейка = ТЧ.Продукция.Линейка;
					Если Не Линейка.Пустая() Тогда
						Попытка
						НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
						СтандартныйКомментарий = Справочники.СтандартныеКомментарии.НайтиПоНаименованию("Заказанные изделия для клиентов",Истина);
						МТК = ОбщийМодульСозданиеДокументов.СоздатьМТК(Линейка,ТЧ.Продукция,ТЧ.КоличествоКПроизводству,СтандартныйКомментарий,,,,,ТЧ.ЗаказНаПроизводство.Номер,ТЧ.ДатаОтгрузкиОбещанная,ТЧ.ЗаказНаПроизводство);
							Если Не МТК.Пустая() Тогда
							//ЗНП = ТЧ.ЗаказНаПроизводство.ПолучитьОбъект();
							//ТЧ_З = ЗНП.Заказ.Найти(ТЧ.Продукция,"Продукция");
							//ТЧ_З.РезервПерепрогон = ТЧ_З.РезервПерепрогон - ТЧ.КоличествоКПроизводству;
							//ТЧ_З.Количество = ТЧ_З.Количество + ТЧ.КоличествоКПроизводству;
							//ЗНП.Записать(РежимЗаписиДокумента.Проведение);		
							ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
								Если ТЧ.ЗаказНаПроизводство.СервисЦентр Тогда
									Если СписокЛинеек.НайтиПоЗначению(Линейка) = Неопределено Тогда
									СписокЛинеек.Добавить(Линейка);
									КонецЕсли;
								КонецЕсли;
							Иначе
							Сообщить(ТЧ.ЗаказНаПроизводство.Номер + " - дополнительная МТК не создана!");
							ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
							КонецЕсли;			
						Исключение
						Сообщить(ОписаниеОшибки());
						ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
						КонецПопытки;
					Иначе
					Сообщить("Изделие "+СокрЛП(ТЧ.Продукция.Наименование)+" - не назначена линейка!");
					КонецЕсли;
				Иначе
					Попытка
					ЗНП = ТЧ.ЗаказНаПроизводство.ПолучитьОбъект();
					ТЧ_З = ЗНП.Заказ.Найти(ТЧ.Продукция,"Продукция");
					ТЧ_З.РезервПерепрогон = ТЧ_З.РезервПерепрогон - ТЧ.КоличествоКПроизводству;
					ТЧ_З.Количество = ТЧ_З.Количество + ТЧ.КоличествоКПроизводству;
					ЗНП.Записать(РежимЗаписиДокумента.Проведение);		
					Исключение
					Сообщить(ОписаниеОшибки());
					КонецПопытки;
				КонецЕсли; 
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНедостающиеМТКПерепрогона(Команда)
СоздатьНедостающиеМТКПерепрогонаНаСервере();
ПолучитьПерепрогонНаСервере();
КонецПроцедуры

&НаСервере
Функция ПолучитьEmailПолучателяИзСписка(Сотрудник)
Возврат(Сотрудник.Email);
КонецФункции

&НаКлиенте
Процедура ПочтоваяРассылкаПерепрогон(Команда)
	Если СписокРассылки.Количество() = 0 Тогда
	Сообщить("Список рассылки пуст!");
	Возврат;
	КонецЕсли;
EmailСотрудника = ПолучитьEmailСотрудника();
Сообщение = Новый ИнтернетПочтовоеСообщение;
ИПП = Новый ИнтернетПочтовыйПрофиль; 

НастройкиПочты = ОбщийМодульВызовСервера.ПолучитьНастройкиПочты();
ИПП.АдресСервераSMTP = НастройкиПочты.АдресСервераSMTP; 
ИПП.ПортSMTP = НастройкиПочты.ПортSMTP;
ИПП.ВремяОжидания = 60; 
ИПП.Пароль = НастройкиПочты.ПарольПочтовогоСервера; 
ИПП.Пользователь = EmailСотрудника;
Сообщение.Отправитель.Адрес = EmailСотрудника;
	Для каждого Сотрудник Из СписокРассылки Цикл	
	Сообщение.Получатели.Добавить(ПолучитьEmailПолучателяИзСписка(Сотрудник.Значение));
	КонецЦикла;
Сообщение.Тема = "Изделия для перепрогона (автоматическая рассылка)!"; 
Текст = "Здравствуйте!";
Текст = Текст + Символы.ПС+ "";
Текст = Текст + Символы.ПС+ "Список изделий для перемещения со склада неликвидов на перепрогон:";	
Текст = Текст + Символы.ПС+ "";
	Для каждого ТЧ Из ТаблицаПерепрогон Цикл
		Если Не ТЧ.ПеремещениеНаПерепрогон.Пустая() Тогда	
		Текст = Текст + Символы.ПС + ТЧ.ПеремещениеНаПерепрогон + "; " + СокрЛП(ТЧ.Продукция) + "; " + ТЧ.КоличествоПерепрогон + Символы.ПС;		
		КонецЕсли;
	КонецЦикла;
Текст = Текст + Символы.ПС+ "С уважением, служба автоматической рассылки производственной базы!";
Сообщение.Тексты.Добавить(Текст);	
// Подключиться и отправить. 
Почта = Новый ИнтернетПочта; 
Почта.Подключиться(ИПП);
Почта.Послать(Сообщение); 
Почта.Отключиться();
ПоказатьОповещениеПользователя("Сообщение отправлено!");
КонецПроцедуры

&НаСервере
Функция ПолучитьРеализацию(ЗП,Продукция)
Запрос = Новый Запрос;
Результат = Новый Структура("Документ,Количество",Неопределено,0);

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТабличнаяЧасть.Ссылка КАК Ссылка,
	|	РеализацияТабличнаяЧасть.Количество КАК Количество
	|ИЗ
	|	Документ.Реализация.ТабличнаяЧасть КАК РеализацияТабличнаяЧасть
	|ГДЕ
	|	РеализацияТабличнаяЧасть.Ссылка.ДокументОснование = &ДокументОснование
	|	И РеализацияТабличнаяЧасть.Товар = &Товар";
Запрос.УстановитьПараметр("ДокументОснование",ЗП);
Запрос.УстановитьПараметр("Товар",Продукция);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Результат.Документ = ВыборкаДетальныеЗаписи.Ссылка;
	Результат.Количество = ВыборкаДетальныеЗаписи.Количество; 
	КонецЦикла;
Возврат(Результат);
КонецФункции

&НаСервере
Функция ПолучитьМТК(ЗП,Продукция)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.ДокументОснование = &ДокументОснование
	|	И МаршрутнаяКарта.Номенклатура = &Номенклатура";
Запрос.УстановитьПараметр("ДокументОснование",ЗП);
Запрос.УстановитьПараметр("Номенклатура",Продукция);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.Ссылка); 
	КонецЦикла;
Возврат(Неопределено);
КонецФункции 

&НаСервере
Процедура ПолучитьИзмененияНаСервере()
ТаблицаИзменений.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоЗаказ.Товар КАК Товар,
	|	ЗаказНаПроизводствоЗаказ.Ссылка КАК Ссылка,
	|	ЗаказНаПроизводствоЗаказ.Продукция КАК Продукция,
	|	ЗаказНаПроизводствоЗаказ.Количество КАК Количество
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Заказ КАК ЗаказНаПроизводствоЗаказ
	|ГДЕ
	|	ЗаказНаПроизводствоЗаказ.Изменена = ИСТИНА";	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаИзменений.Добавить();
	ТЧ.ЗаказНаПроизводство = ВыборкаДетальныеЗаписи.Ссылка;
	ТЧ.Товар = ВыборкаДетальныеЗаписи.Товар;
	ТЧ.КоличествоКПроизводству = ВыборкаДетальныеЗаписи.Количество;
		Если ТипЗнч(ВыборкаДетальныеЗаписи.Продукция) = Тип("СправочникСсылка.Материалы") Тогда
		Результат = ПолучитьРеализацию(ВыборкаДетальныеЗаписи.Ссылка,ВыборкаДетальныеЗаписи.Продукция);
		ТЧ.Документ = Результат.Документ;
		ТЧ.Количество = Результат.Количество;		
		ИначеЕсли ТипЗнч(ВыборкаДетальныеЗаписи.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда	
		ТЧ.Документ = ПолучитьМТК(ВыборкаДетальныеЗаписи.Ссылка,ВыборкаДетальныеЗаписи.Продукция);
			Если ТЧ.Документ <> Неопределено Тогда
			ТЧ.Количество = ТЧ.Документ.Количество;
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьИзменения(Команда)
Состояние("Обработка...",,"Получение данных...");
ПолучитьИзмененияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИзмененийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
ОткрытьФорму("Документ.ЗаказНаПроизводство.ФормаОбъекта",Новый Структура("Ключ",Элементы.ТаблицаИзменений.ТекущиеДанные.ЗаказНаПроизводство));
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоКПроизводству(ЗНП,Товар)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоЗаказ.Количество КАК Количество
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Заказ КАК ЗаказНаПроизводствоЗаказ
	|ГДЕ
	|	ЗаказНаПроизводствоЗаказ.Ссылка = &Ссылка
	|	И ЗаказНаПроизводствоЗаказ.Товар = &Товар";
Запрос.УстановитьПараметр("Ссылка",ЗНП);
Запрос.УстановитьПараметр("Товар",Товар);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.Количество); 
	КонецЦикла;
Возврат(0);
КонецФункции 

&НаСервере
Процедура ДобавитьПодчиненныеДетали(Стр,Номенклатура,Норма)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Ссылка КАК Ссылка,
	|	МаршрутнаяКарта.Номенклатура КАК Номенклатура,
	|	МаршрутнаяКарта.Количество КАК Количество
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.ДокументОснование = &ДокументОснование
	|	И МаршрутнаяКарта.Номенклатура = &Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	МаршрутнаяКарта.Номер";
Запрос.УстановитьПараметр("ДокументОснование",Стр.Документ);
Запрос.УстановитьПараметр("Номенклатура",Стр.Документ.Номенклатура);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СтрПодч = Стр.Строки.Добавить();
	СтрПодч.Документ = ВыборкаДетальныеЗаписи.Ссылка;
	СтрПодч.Статус = СтрПодч.Документ.Статус;
	СтрПодч.Количество = СтрПодч.Документ.Количество;
	СтрПодч.КоличествоВыпущено = СтрПодч.Количество - ОбщийМодульВызовСервера.ПолучитьНезавершённоеКоличество(ТекущаяДата(),СтрПодч.Документ);
	ДобавитьПодчиненныеДетали(СтрПодч,СтрПодч.Документ.Номенклатура,1);		
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПолучитьДеревоМТК(ТЧ)
тДерево = РеквизитФормыВЗначение("ДеревоНоменклатуры");
тДерево.Строки.Очистить();
ЗНП = ТЧ.Корректировка.ДокументОснование;
КоличествоПродукции = ПолучитьКоличествоКПроизводству(ЗНП,ТЧ.Товар) - ОбщийМодульВызовСервера.ПолучитьКорректировкуЗНП(ЗНП,ТЧ.Продукция) - ТЧ.Количество;

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Ссылка КАК Ссылка,
	|	МаршрутнаяКарта.Номенклатура КАК Номенклатура,
	|	МаршрутнаяКарта.Количество КАК Количество
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.ДокументОснование = &ДокументОснование
	|	И МаршрутнаяКарта.Номенклатура = &Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	МаршрутнаяКарта.Статус УБЫВ";
Запрос.УстановитьПараметр("ДокументОснование",ЗНП);
Запрос.УстановитьПараметр("Номенклатура",ТЧ.Продукция);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Стр = тДерево.Строки.Добавить();
	Стр.Документ = ВыборкаДетальныеЗаписи.Ссылка;
	Стр.Статус = Стр.Документ.Статус;
	Стр.Количество = ВыборкаДетальныеЗаписи.Количество;
	Стр.КоличествоВыпущено = Стр.Количество - ОбщийМодульВызовСервера.ПолучитьНезавершённоеКоличество(ТекущаяДата(),Стр.Документ);
	ДобавитьПодчиненныеДетали(Стр,Стр.Документ.Номенклатура,1);	
		Если ВыборкаДетальныеЗаписи.Ссылка.Статус = 0 Тогда	
       		Если КоличествоПродукции <= ВыборкаДетальныеЗаписи.Количество Тогда
			Стр.КоличествоУдалить = ВыборкаДетальныеЗаписи.Количество - КоличествоПродукции;
			КоличествоПродукции = 0;
			Иначе
			КоличествоПродукции = КоличествоПродукции - ВыборкаДетальныеЗаписи.Количество;
			КонецЕсли;
		Иначе
	    КоличествоПродукции = КоличествоПродукции - ВыборкаДетальныеЗаписи.Количество;
		КонецЕсли;
			Если КоличествоПродукции < 0 Тогда
			КоличествоПродукции = 0;		
			КонецЕсли;	
	КонецЦикла;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	РезервированиеТабличнаяЧасть.Ссылка КАК Ссылка,
	|	РезервированиеТабличнаяЧасть.Продукция КАК Продукция,
	|	РезервированиеТабличнаяЧасть.Количество КАК Количество
	|ИЗ
	|	Документ.Резервирование.ТабличнаяЧасть КАК РезервированиеТабличнаяЧасть
	|ГДЕ
	|	РезервированиеТабличнаяЧасть.Ссылка.ДокументОснование = &ДокументОснование
	|	И РезервированиеТабличнаяЧасть.Продукция = &Продукция
	|
	|УПОРЯДОЧИТЬ ПО
	|	РезервированиеТабличнаяЧасть.Ссылка.Номер";
Запрос.УстановитьПараметр("ДокументОснование",ЗНП);
Запрос.УстановитьПараметр("Продукция",ТЧ.Продукция);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Стр = тДерево.Строки.Добавить();
	Стр.Документ = ВыборкаДетальныеЗаписи.Ссылка;
	Стр.Количество = ВыборкаДетальныеЗаписи.Количество;
	Стр.КоличествоВыпущено = Стр.Количество - ОбщийМодульВызовСервера.ПолучитьНезавершённоеКоличество(ТекущаяДата(),Стр.Документ);		
	КонецЦикла;
ЗначениеВРеквизитФормы(тДерево, "ДеревоНоменклатуры");
КонецПроцедуры

&НаСервере
Процедура ПолучитьКорректировкиНаСервере()
ТаблицаКорректировок.Очистить();
тДерево = РеквизитФормыВЗначение("ДеревоНоменклатуры");
тДерево.Строки.Очистить();
ЗначениеВРеквизитФормы(тДерево, "ДеревоНоменклатуры");
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаЗаказаНаПроизводствоТабличнаяЧасть.Ссылка КАК Ссылка,
	|	КорректировкаЗаказаНаПроизводствоТабличнаяЧасть.Товар КАК Товар,
	|	КорректировкаЗаказаНаПроизводствоТабличнаяЧасть.Продукция КАК Продукция,
	|	КорректировкаЗаказаНаПроизводствоТабличнаяЧасть.Количество КАК Количество
	|ИЗ
	|	Документ.КорректировкаЗаказаНаПроизводство.ТабличнаяЧасть КАК КорректировкаЗаказаНаПроизводствоТабличнаяЧасть
	|ГДЕ
	|	КорректировкаЗаказаНаПроизводствоТабличнаяЧасть.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И КорректировкаЗаказаНаПроизводствоТабличнаяЧасть.Ссылка.Проведен = ЛОЖЬ";	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаКорректировок.Добавить();
	ТЧ.Корректировка = ВыборкаДетальныеЗаписи.Ссылка;
	ТЧ.Товар = ВыборкаДетальныеЗаписи.Товар;
	ТЧ.Продукция = ВыборкаДетальныеЗаписи.Продукция;
	ТЧ.Количество = ВыборкаДетальныеЗаписи.Количество;
	ТЧ.КоличествоДолг = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокПоДолгам(ТЧ.Корректировка.ДокументОснование,ТЧ.Продукция); 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьКорректировки(Команда)
Состояние("Обработка...",,"Получение данных...");
ПолучитьКорректировкиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПометитьНаУдалениеКорректировкуНаСервере(Корректировка)
КорректировкаОбъект = Корректировка.ПолучитьОбъект();
КорректировкаОбъект.УстановитьПометкуУдаления(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПометитьНаУдалениеКорректировку(Команда)
ПометитьНаУдалениеКорректировкуНаСервере(Элементы.ТаблицаКорректировок.ТекущиеДанные.Корректировка);
ПолучитьКорректировкиНаСервере();
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоКПеремещению(Корректировка,Продукция,Количество)
Запрос = Новый Запрос;

КоличествоКПеремещению = 0;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоЗаказ.КоличествоВЗаказе КАК КоличествоВЗаказе
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Заказ КАК ЗаказНаПроизводствоЗаказ
	|ГДЕ
	|	ЗаказНаПроизводствоЗаказ.Ссылка = &Ссылка
	|	И ЗаказНаПроизводствоЗаказ.Продукция = &Продукция";
Запрос.УстановитьПараметр("Ссылка", Корректировка.ДокументОснование);
Запрос.УстановитьПараметр("Продукция", Продукция);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	КоличествоКПеремещению = КоличествоКПеремещению + ВыборкаДетальныеЗаписи.КоличествоВЗаказе;
	КонецЦикла;
КоличествоКПеремещению = КоличествоКПеремещению - Количество;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДвижениеМПЗТабличнаяЧасть.Количество КАК Количество
	|ИЗ
	|	Документ.ДвижениеМПЗ.ТабличнаяЧасть КАК ДвижениеМПЗТабличнаяЧасть
	|ГДЕ
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.ДокументОснование = &ДокументОснование
	|	И ДвижениеМПЗТабличнаяЧасть.Ссылка.МестоХраненияВ = &МестоХраненияВ
	|	И ДвижениеМПЗТабличнаяЧасть.МПЗ = &МПЗ";
Запрос.УстановитьПараметр("ДокументОснование", Корректировка.ДокументОснование);
Запрос.УстановитьПараметр("МестоХраненияВ", Константы.МестоХраненияГПТНП.Получить());
Запрос.УстановитьПараметр("МПЗ", Продукция);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	КоличествоКПеремещению = КоличествоКПеремещению - ВыборкаДетальныеЗаписи.Количество;
	КонецЦикла;
Возврат(КоличествоКПеремещению);
КонецФункции

&НаСервере
Функция ПровестиКорректировкуНаСервере(Корректировка)
//ТЗ =  Новый ТаблицаЗначений;

//ТЗ.Колонки.Добавить("Продукция");
//ТЗ.Колонки.Добавить("Количество");
//	Для каждого ТЧ Из Корректировка.ТабличнаяЧасть Цикл
//		Если ТипЗнч(ТЧ.Продукция) = Тип("СправочникСсылка.Материалы") Тогда
//		КоличествоКПеремещению = ПолучитьКоличествоКПеремещению(Корректировка,ТЧ.Продукция,ТЧ.Количество);
//			Если КоличествоКПеремещению < 0 Тогда
//			ТЧ_ТЗ = ТЗ.Добавить();
//			ТЧ_ТЗ.Продукция = ТЧ.Продукция;
//			ТЧ_ТЗ.Количество = -1*КоличествоКПеремещению;
//			Иначе
//			Сообщить(СокрЛП(ТЧ.Продукция.Наименование)+" - на складе ГП ТНП нет товара к перемещению!");
//			Возврат;
//			КонецЕсли; 
//		КонецЕсли;
//	КонецЦикла;
//		Если ТЗ.Количество() > 0 Тогда
			Попытка
			//НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
			КорректировкаОбъект = Корректировка.ПолучитьОбъект();
            КорректировкаОбъект.Дата = ТекущаяДата();
			КорректировкаОбъект.Записать(РежимЗаписиДокумента.Проведение);
				//Если КорректировкаОбъект.Проведен Тогда
				//Подразделение = Константы.МестоХраненияГПТНП.Получить().Подразделение;
				//Перемещение = Документы.ДвижениеМПЗ.СоздатьДокумент();
				//Перемещение.Дата = ТекущаяДата();
				//Перемещение.УстановитьНовыйНомер(ПрисвоитьПрефикс(Подразделение));
				//Перемещение.Автор = ПараметрыСеанса.Пользователь;
				//Перемещение.ДокументОснование = Корректировка.ДокументОснование;
				//Перемещение.Подразделение = Подразделение;
				//Перемещение.МестоХранения = Константы.МестоХраненияГПТНП.Получить();
				//Перемещение.МестоХраненияВ = Константы.МестоХраненияТНП.Получить();
				//	Для каждого ТЧ Из ТЗ Цикл
				//	ТЧ_П = Перемещение.ТабличнаяЧасть.Добавить();
				//	ТЧ_П.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
				//	ТЧ_П.МПЗ = ТЧ.Продукция;
				//	ТЧ_П.Количество = ТЧ.Количество;
				//	ТЧ_П.ЕдиницаИзмерения = ТЧ.Продукция.ОсновнаяЕдиницаИзмерения;
				//	КонецЦикла;
				//Перемещение.Записать(РежимЗаписиДокумента.Проведение);
				//КонецЕсли;  	 
			//ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
			Возврат(Истина);
			Исключение
			Сообщить(ОписаниеОшибки());
			//ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			КонецПопытки;
//		КонецЕсли;
Возврат(Ложь); 
КонецФункции
   
&НаСервере
Функция ПолучитьКоличествоВМТК(Стр)
ТЧ = ТаблицаКорректировок.НайтиПоИдентификатору(Стр);
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Количество КАК Количество
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.ПометкаУдаления = ЛОЖЬ
	|	И МаршрутнаяКарта.ДокументОснование = &ДокументОснование
	|	И МаршрутнаяКарта.Номенклатура = &Номенклатура";
Запрос.УстановитьПараметр("ДокументОснование", ТЧ.Корректировка.ДокументОснование);
Запрос.УстановитьПараметр("Номенклатура", ТЧ.Продукция);
РезультатЗапроса = Запрос.Выполнить();
Количество = 0;
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Количество = Количество + ВыборкаДетальныеЗаписи.Количество;
	КонецЦикла;
Возврат(Количество);
КонецФункции 

&НаСервере
Функция ПолучитьДолгПоПродукции(Стр)
ТЧ = ТаблицаКорректировок.НайтиПоИдентификатору(Стр);
Запрос = Новый Запрос;

КолОстПВ = 0;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланыВыпускаОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ПланыВыпуска.Остатки(&НаДату, ) КАК ПланыВыпускаОстатки
	|ГДЕ
	|	ПланыВыпускаОстатки.Номенклатура = &Номенклатура
	|	И ПланыВыпускаОстатки.МаршрутнаяКарта.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("ДокументОснование", ТЧ.Корректировка.ДокументОснование);
Запрос.УстановитьПараметр("Номенклатура", ТЧ.Продукция);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	КолОстПВ = КолОстПВ + ВыборкаДетальныеЗаписи.КоличествоОстаток;
	КонецЦикла;
Возврат(КолОстПВ);
КонецФункции

&НаКлиенте
Процедура ПровестиКорректировку(Команда)
	Если Элементы.ТаблицаКорректировок.ТекущаяСтрока <> Неопределено Тогда
		Если ПолучитьКоличествоВМТК(Элементы.ТаблицаКорректировок.ТекущаяСтрока) <= (Элементы.ТаблицаКорректировок.ТекущиеДанные.КоличествоДолг - Элементы.ТаблицаКорректировок.ТекущиеДанные.Количество) Тогда
			Если ПровестиКорректировкуНаСервере(Элементы.ТаблицаКорректировок.ТекущиеДанные.Корректировка) Тогда
			ПолучитьКорректировкиНаСервере();		
			КонецЕсли;
		Иначе
			Если ПолучитьДолгПоПродукции(Элементы.ТаблицаКорректировок.ТекущаяСтрока) = 0 Тогда	
				Если ПровестиКорректировкуНаСервере(Элементы.ТаблицаКорректировок.ТекущиеДанные.Корректировка) Тогда
				ПолучитьКорректировкиНаСервере();		
				КонецЕсли; 
			Иначе
			Сообщить("Кол-во в МТК превышает (кол-во долга - кол-во в корректировке)!");			
			КонецЕсли;		
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПолучитьДеревоНоменклатуры(Стр)
ТЧ = ТаблицаКорректировок.НайтиПоИдентификатору(Стр);
ПолучитьДеревоМТК(ТЧ);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКорректировокПриАктивизацииСтроки(Элемент)
	Если Элементы.ТаблицаКорректировок.ТекущаяСтрока <> Неопределено Тогда
	ПолучитьДеревоНоменклатуры(Элементы.ТаблицаКорректировок.ТекущаяСтрока);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьЛинейку(МТК)
Возврат(МТК.Линейка);
КонецФункции 

&НаКлиенте
Процедура Диспетчеризация(Команда)
	Если Элементы.ДеревоНоменклатуры.ТекущаяСтрока <> Неопределено Тогда
	ОткрытьФорму("Обработка.ДиспетчеризацияПроизводства.Форма", Новый Структура("Линейка",ПолучитьЛинейку(Элементы.ДеревоНоменклатуры.ТекущиеДанные.Документ)));
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура УдалитьМТК(Команда)
	Если Элементы.ДеревоНоменклатуры.ТекущаяСтрока <> Неопределено Тогда
		Если Элементы.ДеревоНоменклатуры.ТекущиеДанные.КоличествоУдалить = Элементы.ДеревоНоменклатуры.ТекущиеДанные.Количество Тогда
			Если ОткрытьФормуМодально("ОбщаяФорма.УдалениеМТК",Новый Структура("МТК",Элементы.ДеревоНоменклатуры.ТекущиеДанные.Документ)) <> Неопределено Тогда
			ТаблицаКорректировокПриАктивизацииСтроки(Неопределено);
			КонецЕсли;		
		Иначе	
		Сообщить("Выбранная МТК не подлежит удалению!");
		КонецЕсли;
	Иначе
	Сообщить("Выберите строку с МТК в ожидании!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СнятьИзменениеНаСервере(Стр)
ТЧ = ТаблицаИзменений.НайтиПоИдентификатору(Стр);
ЗНП_Объект = ТЧ.ЗаказНаПроизводство.ПолучитьОбъект(); 
Выборка = ЗНП_Объект.Заказ.Найти(ТЧ.Товар,"Товар");
	Если Выборка <> Неопределено Тогда
	Выборка.Изменена = Ложь;	
	ЗНП_Объект.Записать(РежимЗаписиДокумента.Запись); 
	ТаблицаИзменений.Удалить(ТаблицаИзменений.Индекс(ТЧ));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СнятьИзменение(Команда)
СнятьИзменениеНаСервере(Элементы.ТаблицаИзменений.ТекущаяСтрока);
КонецПроцедуры
          
&НаСервере
Функция ПолучитьКоличествоДолгПриход(ЗНП,Продукция)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДолгиОбороты.Продукция КАК Продукция,
	|	СУММА(ДолгиОбороты.КоличествоПриход) КАК КоличествоПриход
	|ИЗ
	|	РегистрНакопления.Долги.Обороты(
	|			,
	|			,
	|			,
	|			Продукция = &Продукция
	|				И Документ = &Документ) КАК ДолгиОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ДолгиОбороты.Продукция";
Запрос.УстановитьПараметр("Документ", ЗНП);
Запрос.УстановитьПараметр("Продукция", Продукция);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.КоличествоПриход);
	КонецЦикла;
Возврат(0);
КонецФункции 

&НаСервере
Процедура ПолучитьСвободныйОстатокНаСервере()
ТаблицаСвободныхОстатков.Очистить();
тДерево = РеквизитФормыВЗначение("ДеревоНоменклатуры");
тДерево.Строки.Очистить();
ЗначениеВРеквизитФормы(тДерево, "ДеревоНоменклатуры");
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДолгиОстатки.Продукция КАК Продукция,
	|	ДолгиОстатки.Документ КАК Документ,
	|	ДолгиОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ЗаказНаПроизводствоЗаказ.ДатаОтгрузкиОбещанная КАК ДатаОтгрузкиОбещанная
	|ИЗ
	|	РегистрНакопления.Долги.Остатки(, Документ.Закрыт = ЛОЖЬ) КАК ДолгиОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Заказ КАК ЗаказНаПроизводствоЗаказ
	|		ПО ДолгиОстатки.Документ = ЗаказНаПроизводствоЗаказ.Ссылка
	|			И ДолгиОстатки.Продукция = ЗаказНаПроизводствоЗаказ.Продукция
	|ГДЕ
	|	ДолгиОстатки.КоличествоОстаток > 0
	|	И ЗаказНаПроизводствоЗаказ.КрупныйЗаказ = ЛОЖЬ
	|	И ЗаказНаПроизводствоЗаказ.РучнойЗапуск = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДолгиОстатки.Продукция.Товар.Наименование,
	|	ДолгиОстатки.Документ.Дата";	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл                            		
	КоличествоСвободныйОстаток = ОбщийМодульВызовСервера.ПолучитьНезарезервированныйОстатокПоМестуХранения(ВыборкаДетальныеЗаписи.Продукция.Линейка.МестоХраненияГП,ВыборкаДетальныеЗаписи.Продукция,ТекущаяДата());
		Если КоличествоСвободныйОстаток > 0 Тогда 
		Количество = ПолучитьКоличествоДолгПриход(ВыборкаДетальныеЗаписи.Документ,ВыборкаДетальныеЗаписи.Продукция) - ПолучитьКоличествоЗарезервированоВсего(ВыборкаДетальныеЗаписи.Документ,ВыборкаДетальныеЗаписи.Продукция);
			Если Количество > 0 Тогда
			ТЧ = ТаблицаСвободныхОстатков.Добавить();
			ТЧ.ЗаказНаПроизводство = ВыборкаДетальныеЗаписи.Документ;
			ТЧ.ДатаЗНП = ВыборкаДетальныеЗаписи.Документ.Дата;
			ТЧ.Товар = ВыборкаДетальныеЗаписи.Продукция.Товар;
			ТЧ.Продукция = ВыборкаДетальныеЗаписи.Продукция;
			ТЧ.КоличествоДолг = Количество;
				Если КоличествоСвободныйОстаток > Количество Тогда
				ТЧ.КоличествоКРезервированию = Количество;
				Иначе	
				ТЧ.КоличествоКРезервированию = КоличествоСвободныйОстаток;
				КонецЕсли;
			ТЧ.ДатаОтгрузкиОбещанная = ВыборкаДетальныеЗаписи.ДатаОтгрузкиОбещанная;
			КонецЕсли;
		КонецЕсли;  
	КонецЦикла;
ТаблицаСвободныхОстатков.Сортировать("Товар,ДатаОтгрузкиОбещанная,ДатаЗНП");
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСвободныйОстаток(Команда)
Состояние("Обработка...",,"Получение данных...");
ПолучитьСвободныйОстатокНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Диспетчеризация1(Команда)
	Если Элементы.ДеревоНоменклатуры1.ТекущаяСтрока <> Неопределено Тогда
	ОткрытьФорму("Обработка.ДиспетчеризацияПроизводства.Форма", Новый Структура("Линейка",ПолучитьЛинейку(Элементы.ДеревоНоменклатуры1.ТекущиеДанные.Документ)));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьМТК1(Команда)
	Если Элементы.ДеревоНоменклатуры1.ТекущаяСтрока <> Неопределено Тогда
		Если Элементы.ДеревоНоменклатуры1.ТекущиеДанные.КоличествоУдалить = Элементы.ДеревоНоменклатуры1.ТекущиеДанные.Количество Тогда
			Если ОткрытьФормуМодально("ОбщаяФорма.УдалениеМТК",Новый Структура("МТК",Элементы.ДеревоНоменклатуры1.ТекущиеДанные.Документ)) <> Неопределено Тогда
			ТаблицаКорректировокПриАктивизацииСтроки(Неопределено);
			КонецЕсли;		
		Иначе	
		Сообщить("Выбранная МТК не подлежит удалению!");
		КонецЕсли;
	Иначе
	Сообщить("Выберите строку с МТК в ожидании!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПолучитьДеревоМТК1(ТЧ)
тДерево = РеквизитФормыВЗначение("ДеревоНоменклатуры");
тДерево.Строки.Очистить();

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Ссылка КАК Ссылка,
	|	МаршрутнаяКарта.Номенклатура КАК Номенклатура,
	|	МаршрутнаяКарта.Количество КАК Количество
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.ДокументОснование = &ДокументОснование
	|	И МаршрутнаяКарта.Номенклатура = &Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	МаршрутнаяКарта.Статус УБЫВ";
Запрос.УстановитьПараметр("ДокументОснование",ТЧ.ЗаказНаПроизводство);
Запрос.УстановитьПараметр("Номенклатура",ТЧ.Продукция);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Стр = тДерево.Строки.Добавить();
	Стр.Документ = ВыборкаДетальныеЗаписи.Ссылка;
	Стр.Статус = Стр.Документ.Статус;
	Стр.Количество = ВыборкаДетальныеЗаписи.Количество;
	Стр.КоличествоВыпущено = Стр.Количество - ОбщийМодульВызовСервера.ПолучитьНезавершённоеКоличество(ТекущаяДата(),Стр.Документ);
	ДобавитьПодчиненныеДетали(Стр,Стр.Документ.Номенклатура,1);                                  
	Стр.КоличествоУдалить = ОбщийМодульВызовСервера.ПолучитьНезапущенноеКоличество(Стр.Документ);	
	КонецЦикла;
ЗначениеВРеквизитФормы(тДерево, "ДеревоНоменклатуры");
КонецПроцедуры

&НаСервере
Процедура ПолучитьДеревоНоменклатуры1(Стр)
ТЧ = ТаблицаСвободныхОстатков.НайтиПоИдентификатору(Стр);
ПолучитьДеревоМТК1(ТЧ);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСвободныхОстатковПриАктивизацииСтроки(Элемент)
	Если Элементы.ТаблицаСвободныхОстатков.ТекущаяСтрока <> Неопределено Тогда
	ПолучитьДеревоНоменклатуры1(Элементы.ТаблицаСвободныхОстатков.ТекущаяСтрока);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ЗарезервироватьСвободныйОстатокНаСервере(Стр)
ТЧ = ТаблицаСвободныхОстатков.НайтиПоИдентификатору(Стр);
Подразделение = ТЧ.Продукция.Линейка.Подразделение;
Резервирование = Документы.Резервирование.СоздатьДокумент();
Резервирование.Дата = ТекущаяДата();
Резервирование.УстановитьНовыйНомер(ПрисвоитьПрефикс(Подразделение));
Резервирование.Автор = ПараметрыСеанса.Пользователь;
Резервирование.ДокументОснование = ТЧ.ЗаказНаПроизводство;
Резервирование.Подразделение = Подразделение;
Резервирование.МестоХранения = ТЧ.Продукция.Линейка.МестоХраненияГП; 
ТЧ_Р = Резервирование.ТабличнаяЧасть.Добавить();
ТЧ_Р.Товар = ТЧ.Продукция.Товар;
ТЧ_Р.Продукция = ТЧ.Продукция;
ТЧ_Р.Количество = ТЧ.КоличествоКРезервированию;	
Резервирование.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры
   
&НаСервере
Процедура ПересчитатьТаблицуСвободныхОстатковПоПродукции(Стр)
МассивУдаления = Новый Массив;

ТЧ = ТаблицаСвободныхОстатков.НайтиПоИдентификатору(Стр);
Продукция = ТЧ.Продукция;
МассивУдаления.Добавить(ТЧ);
КоличествоСвободныйОстаток = ОбщийМодульВызовСервера.ПолучитьНезарезервированныйОстатокПоМестуХранения(Продукция.Линейка.МестоХраненияГП,Продукция,ТекущаяДата());
	Для каждого ТЧ Из ТаблицаСвободныхОстатков Цикл
		Если ТЧ.Продукция = Продукция Тогда			
			Если КоличествоСвободныйОстаток > 0 Тогда		
				Если КоличествоСвободныйОстаток > ТЧ.КоличествоДолг Тогда
				ТЧ.КоличествоКРезервированию = ТЧ.КоличествоДолг;
				Иначе	
				ТЧ.КоличествоКРезервированию = КоличествоСвободныйОстаток;
				КонецЕсли; 
			Иначе
			МассивУдаления.Добавить(ТЧ);          	
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
		Для к = 0 По МассивУдаления.ВГраница() Цикл
		ТаблицаСвободныхОстатков.Удалить(МассивУдаления[к]);		
		КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗарезервироватьСвободныйОстаток(Команда)
	Если СоздатьРезервирование(Элементы.ТаблицаСвободныхОстатков.ТекущиеДанные.ЗаказНаПроизводство,Элементы.ТаблицаСвободныхОстатков.ТекущиеДанные.Продукция,Элементы.ТаблицаСвободныхОстатков.ТекущиеДанные.КоличествоКРезервированию) Тогда
	ПересчитатьТаблицуСвободныхОстатковПоПродукции(Элементы.ТаблицаСвободныхОстатков.ТекущаяСтрока);
	КонецЕсли;
КонецПроцедуры
