
&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаСервере
Процедура ПрисвоитьСтатус()
ВнутренниеСчета = Ложь;
	Для каждого ТЧ Из Объект.НакладнаяНаСборку.ТабличнаяЧасть Цикл
	ВнутренниеСчета = ТЧ.ЗаказНаПроизводство.ВнутренниеСчета;
		Если Не ЗначениеЗаполнено(ТЧ.Исполнитель) Тогда
		Возврат;
		КонецЕсли; 
	КонецЦикла; 
СННС = РегистрыСведений.СтатусыНакладныхНаСборку.СоздатьМенеджерЗаписи();
СННС.Период = ТекущаяДата();
СННС.НакладнаяНаСборку = Объект.НакладнаяНаСборку;
	Если ВнутренниеСчета Тогда
	СННС.Статус = Перечисления.СтатусыНакладнойНаСборку.НаУпаковке; 
	ИначеЕсли СокрЛП(Объект.НакладнаяНаСборку.Контрагент.Код) = "99999951578" Тогда
	СННС.Статус = Перечисления.СтатусыНакладнойНаСборку.НаУпаковке;
	Иначе	
	СННС.Статус = Перечисления.СтатусыНакладнойНаСборку.Собран;
	КонецЕсли;
СННС.Записать();
КонецПроцедуры

&НаСервере
Процедура ЗавершитьЗаданиеНаСервере()
ДатаОкончания = ТекущаяДата();
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	ННС = Объект.НакладнаяНаСборку.ПолучитьОбъект();
		Для каждого НомерТары Из НомераТары Цикл	
		ННС.НомераТары = СокрЛП(НомерТары.Значение) + ",";
		КонецЦикла;
	ННС.НомераТары = Лев(ННС.НомераТары,СтрДлина(СокрЛП(ННС.НомераТары))-1);
		Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл 
		Выборка = ННС.ТабличнаяЧасть.НайтиСтроки(Новый Структура("Товар",ТЧ.Товар));
			Для к = 0 По Выборка.ВГраница() Цикл
			Выборка[к].Исполнитель = Объект.Исполнитель;
			Выборка[к].ДатаОкончания = ДатаОкончания;
			КонецЦикла; 		
		КонецЦикла;	
	ННС.Записать(РежимЗаписиДокумента.Запись);
	ПрисвоитьСтатус();
	Объект.НакладнаяНаСборку = Документы.НакладнаяНаСборку.ПустаяСсылка();
	НомераТары.Очистить();
	Объект.ТабличнаяЧасть.Очистить();
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Сообщить(ОписаниеОшибки());
	КонецПопытки; 
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьЗадание(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	ЗавершитьЗаданиеНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанные(Данные)
Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,";");
ННС = ЗначениеИзСтрокиВнутр(Массив[1]);
	Если ПроверитьСтатусННС(ННС) Тогда
	Объект.НакладнаяНаСборку = ННС;
	флЧётность = Ложь;
		Для к = 2 По Массив.ВГраница() Цикл
			Если флЧётность Тогда
			флЧётность = Ложь;
			Иначе
			ТЧ = Объект.ТабличнаяЧасть.Добавить();
			ТЧ.Товар = Справочники.Товары.НайтиПоКоду(Число(Массив[к]));
			ТЧ.Количество = Число(Массив[к+1]);	
			флЧётность = Истина;
			КонецЕсли;	
		КонецЦикла;
	Иначе
	Сообщить("Отсканируйте документ в статусе На сборке!");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьСотрудника(Данные)
Возврат(ЗначениеИзСтрокиВнутр(Данные));
КонецФункции

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
		Если Найти(Данные,";") > 0 Тогда
		ПолучитьДанные(Данные);
		ИначеЕсли Найти(Данные,"{") > 0 Тогда	
		Объект.Исполнитель = ПолучитьСотрудника(Данные);
		Иначе
			Если НомераТары.НайтиПоЗначению(СокрЛП(Данные)) = Неопределено Тогда
			НомераТары.Добавить(СокрЛП(Данные));
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьДанные(Команда)
	Если Найти(ДанныеСканера,";") > 0 Тогда
	ПолучитьДанные(ДанныеСканера);
	ИначеЕсли Найти(ДанныеСканера,"{") > 0 Тогда	
	Объект.Исполнитель = ПолучитьСотрудника(ДанныеСканера);
	Иначе
		Если НомераТары.НайтиПоЗначению(СокрЛП(ДанныеСканера)) = Неопределено Тогда
		НомераТары.Добавить(СокрЛП(ДанныеСканера));
		КонецЕсли;
	КонецЕсли;
ДанныеСканера = "";
КонецПроцедуры

&НаСервере
Процедура ДобавитьТоварыВТаблицу()
	Для каждого ТЧ Из Объект.НакладнаяНаСборку.ТабличнаяЧасть Цикл
	ТЧ_ТЧ = Объект.ТабличнаяЧасть.Добавить();
	ТЧ_ТЧ.Товар = ТЧ.Товар;
	ТЧ_ТЧ.Количество = ТЧ.Количество;	
	КонецЦикла;  
КонецПроцедуры
 
&НаКлиенте
Процедура НакладнаяНаСборкуОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
Объект.НакладнаяНаСборку = ВыбранноеЗначение;
ДобавитьТоварыВТаблицу();
КонецПроцедуры

&НаСервере
Функция ПроверитьСтатусННС(НакладнаяНаСборку)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатусыНакладныхНаСборкуСрезПоследних.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.СтатусыНакладныхНаСборку.СрезПоследних КАК СтатусыНакладныхНаСборкуСрезПоследних
	|ГДЕ
	|	СтатусыНакладныхНаСборкуСрезПоследних.НакладнаяНаСборку = &НакладнаяНаСборку";
Запрос.УстановитьПараметр("НакладнаяНаСборку", НакладнаяНаСборку);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Статус = Перечисления.СтатусыНакладнойНаСборку.НаСборке Тогда
		Возврат(Истина);
		Иначе
		Возврат(Ложь);
		КонецЕсли; 
	КонецЦикла;
Возврат(Ложь);
КонецФункции

&НаКлиенте
Процедура НакладнаяНаСборкуПриИзменении(Элемент)
	Если Не ПроверитьСтатусННС(Объект.НакладнаяНаСборку) Тогда	
	Сообщить("Выберите документ в статусе На сборке!");
	Объект.НакладнаяНаСборку = "";
	КонецЕсли; 	
КонецПроцедуры

