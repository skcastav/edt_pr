 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
НеПоказыватьЗапрещённые = Истина;
НаДату = ТекущаяДата();
Объект.ДатаИзменения = ТекущаяДата();
ИзменитьНа = 0;
ВидУдаления = 0;
ВидАналога = 0;
флКорневой = 1;
флВсеПозиции = Истина;
Элементы.Операции.ТекущаяСтраница = Элементы.Добавление;
	Если Параметры.Свойство("Элемент") Тогда
	Объект.Элемент = Параметры.Элемент;
		Если ТипЗнч(Объект.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
		Объект.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Материал;
		ИначеЕсли ТипЗнч(Объект.Элемент) = Тип("СправочникСсылка.ТехОперации") Тогда	
		Объект.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.ТехОперация;
		ИначеЕсли ТипЗнч(Объект.Элемент) = Тип("СправочникСсылка.ТехОснастка") Тогда	
		Объект.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.ТехОснастка;
		ИначеЕсли ТипЗнч(Объект.Элемент) = Тип("СправочникСсылка.Документация") Тогда	
		Объект.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Документ;
		Иначе
		Объект.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Узел;	
		КонецЕсли;
	ВыбратьСпецификацииНаСервере();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если КоличествоНеобработанныхСтрок > 0 Тогда
		Если Вопрос("Есть необработанные спецификации. Хотите закрыть обработчик?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПолучитьКоличествоВыбранных()
КоличествоВыбранныхСтрок = 0;
КоличествоНеобработанныхСтрок = 0;
ДатаИзмененияОбщая = Дата(1,1,1);
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		Если ТЧ.Пометка Тогда
		КоличествоВыбранныхСтрок = КоличествоВыбранныхСтрок + 1;
		КоличествоНеобработанныхСтрок = КоличествоНеобработанныхСтрок + 1;
		ДатаИзмененияОбщая = Макс(ДатаИзмененияОбщая,ТЧ.ДатаИзменения);
		КонецЕсли;	
	КонецЦикла; 
КонецПроцедуры  

&НаСервере
Процедура ДобавитьНорму(НР,ДатаИзм,Норма)
РНР = РегистрыСведений.НормыРасходов.СоздатьМенеджерЗаписи();
РНР.Период = ДатаИзм;
РНР.Владелец = НР.Владелец;
РНР.Элемент = НР.Элемент;
РНР.НормаРасходов = НР;
РНР.Норма = Норма;
РНР.Записать();
КонецПроцедуры 

&НаСервере
Процедура ДобавитьНормуАналога(АНР,ДатаИзм,Норма)
РАНР = РегистрыСведений.АналогиНормРасходов.СоздатьМенеджерЗаписи();
РАНР.Период = ДатаИзм;
РАНР.Владелец = АНР.Владелец;
РАНР.АналогНормыРасходов = АНР;
РАНР.Норма = Норма;
РАНР.Записать();
КонецПроцедуры  

&НаСервере
Функция НормаРасходовСуществует(Спецификация,Позиция)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НормыРасходов КАК НормыРасходов
	|ГДЕ
	|	НормыРасходов.Владелец = &Владелец
	|	И НормыРасходов.ВидЭлемента = &ВидЭлемента
	|	И НормыРасходов.Элемент = &Элемент
	|	И НормыРасходов.Позиция = &Позиция
	|	И НормыРасходов.ПометкаУдаления = ЛОЖЬ";
Запрос.УстановитьПараметр("Владелец", Спецификация);
Запрос.УстановитьПараметр("ВидЭлемента", Объект.ВидЭлементаНовый);
Запрос.УстановитьПараметр("Элемент", Объект.ЭлементНовый);
Запрос.УстановитьПараметр("Позиция", СокрЛП(Позиция));
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетельныхЗаписей = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетельныхЗаписей.Следующий() Цикл	
	Возврат(ВыборкаДетельныхЗаписей.Ссылка);
	КонецЦикла; 
Возврат(Неопределено);
КонецФункции
 
&НаСервере
Процедура ДобавитьНаСервере(ДатаИзм)
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл	
		Если Не ТЧ.Пометка Тогда
		Продолжить;
		КонецЕсли;
			Попытка
			НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
			НР = НормаРасходовСуществует(ТЧ.Спецификация,Объект.Позиция); 
				Если НР = Неопределено Тогда
				НР = Справочники.НормыРасходов.СоздатьЭлемент();
				НР.Владелец = ТЧ.Спецификация;
				НР.Позиция = Объект.Позиция;
				НР.Примечание = Примечание;
				НР.ВидЭлемента = Объект.ВидЭлементаНовый;
				НР.Элемент = Объект.ЭлементНовый;
					Если Объект.ВидЭлементаНовый = Перечисления.ВидыЭлементовНормРасходов.Материал Тогда
					НР.Наименование = "Материал, "+Объект.ЭлементНовый;
					ИначеЕсли Объект.ВидЭлементаНовый = Перечисления.ВидыЭлементовНормРасходов.ТехОперация Тогда	
					НР.Наименование = "Тех. операция, "+Объект.ЭлементНовый;
					ИначеЕсли Объект.ВидЭлементаНовый = Перечисления.ВидыЭлементовНормРасходов.ТехОснастка Тогда	
					НР.Наименование = "Тех. оснастка, "+Объект.ЭлементНовый;	
					ИначеЕсли (Объект.ВидЭлементаНовый = Перечисления.ВидыЭлементовНормРасходов.Документ)или
							  (Объект.ВидЭлементаНовый = Перечисления.ВидыЭлементовНормРасходов.Программа)Тогда	
					НР.Наименование = Строка(Объект.ЭлементНовый.ВидДокумента)+", "+Объект.ЭлементНовый;	
					Иначе
					НР.Наименование = Строка(Объект.ВидЭлементаНовый)+", "+Объект.ЭлементНовый;			
					КонецЕсли;
				НР.Записать();			
				КонецЕсли;
        ДобавитьНорму(НР.Ссылка,ДатаИзм,Объект.Количество); 
			Если Не ИзвещениеОбИзменениях.Пустая() Тогда
			Извещение = РегистрыСведений.ИзвещенияОбИзменениях.СоздатьМенеджерЗаписи();
			Извещение.Элемент = ТЧ.Спецификация;
			Извещение.Извещение = ИзвещениеОбИзменениях;
			Извещение.Записать();
			КонецЕсли; 
		ТЧ.Пометка = Ложь;
		КоличествоНеобработанныхСтрок = КоличествоНеобработанныхСтрок - 1;
		ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
		Исключение
		ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
		Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ИзменитьНаСервере(ДатаИзм)
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл	
		Если Не ТЧ.Пометка Тогда
		Продолжить;
		КонецЕсли;
			Попытка
			НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
			//Обнуление старого элемента
			НР = Справочники.НормыРасходов.Выбрать(,ТЧ.Спецификация);
				Пока НР.Следующий() Цикл
					Если НР.ПометкаУдаления Тогда
					Продолжить;
					КонецЕсли; 
						Если НР.Элемент <> Объект.Элемент Тогда
						Продолжить;
						КонецЕсли;
				НормыНР = РегистрыСведений.НормыРасходов.ПолучитьПоследнее(ДатаИзм,Новый Структура("НормаРасходов",НР.Ссылка));
					Если НормыНР.Норма = 0 Тогда
					Продолжить;
					КонецЕсли;
						Если Не флВсеПозиции Тогда
						ПозОбозн = Объект.СписокПозиций.НайтиПоЗначению(НР.Позиция);
							Если ПозОбозн = Неопределено Тогда
							Продолжить;
							КонецЕсли; 
								Если Не ПозОбозн.Пометка Тогда
								Продолжить;
								КонецЕсли; 
						КонецЕсли;
				ДобавитьНорму(НР.Ссылка,ДатаИзм,0);
				ТаблицаАналогов = ОбщегоНазначенияПовтИсп.ПолучитьАналогиНормРасходов(НР.Ссылка,ДатаИзм,Истина);
					Для каждого ТЧ_ТА Из ТаблицаАналогов Цикл
					ДобавитьНормуАналога(ТЧ_ТА.Ссылка,ДатаИзм,0);								
	                КонецЦикла;
				//Добавление нового элемента
				НоваяНР = НормаРасходовСуществует(ТЧ.Спецификация,НР.Позиция);
					Если НоваяНР = Неопределено Тогда
					НоваяНР = Справочники.НормыРасходов.СоздатьЭлемент();
					НоваяНР.Владелец = ТЧ.Спецификация;
					НоваяНР.Позиция = НР.Позиция;
					НоваяНР.Примечание = НР.Примечание;
					НоваяНР.ВидЭлемента = Объект.ВидЭлементаНовый;
					НоваяНР.Элемент = Объект.ЭлементНовый;
						Если Объект.ВидЭлементаНовый = Перечисления.ВидыЭлементовНормРасходов.Материал Тогда
						НоваяНР.Наименование = "Материал, "+Объект.ЭлементНовый;
						ИначеЕсли Объект.ВидЭлементаНовый = Перечисления.ВидыЭлементовНормРасходов.ТехОперация Тогда	
						НоваяНР.Наименование = "Тех. операция, "+Объект.ЭлементНовый;
						ИначеЕсли Объект.ВидЭлементаНовый = Перечисления.ВидыЭлементовНормРасходов.ТехОснастка Тогда	
						НоваяНР.Наименование = "Тех. оснастка, "+Объект.ЭлементНовый;	
						ИначеЕсли (Объект.ВидЭлементаНовый = Перечисления.ВидыЭлементовНормРасходов.Документ)или
								  (Объект.ВидЭлементаНовый = Перечисления.ВидыЭлементовНормРасходов.Программа)Тогда	
						НоваяНР.Наименование = Строка(Объект.ЭлементНовый.ВидДокумента)+", "+Объект.ЭлементНовый;	
						Иначе
						НоваяНР.Наименование = Строка(Объект.ВидЭлементаНовый)+", "+Объект.ЭлементНовый;			
						КонецЕсли;
					НоваяНР.Записать();
					КонецЕсли; 
						Если флПересчетКоличества Тогда
						Кол = НормыНР.Норма*Объект.Количество;
						Иначе
		                Кол = Объект.Количество;
						КонецЕсли; 
	            ДобавитьНорму(НоваяНР.Ссылка,ДатаИзм,Кол);
					Если флСохранитьАналогом Тогда
					НоваяАНР = Справочники.АналогиНормРасходов.СоздатьЭлемент();
					НоваяАНР.Владелец = НоваяНР.Ссылка;
					НоваяАНР.Приоритет = 1;
					НоваяАНР.ВидЭлемента = Объект.ВидЭлемента;
					НоваяАНР.Элемент = Объект.Элемент;
						Если Объект.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Материал Тогда
						НоваяАНР.Наименование = "Материал, "+Объект.Элемент;
						ИначеЕсли Объект.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.ТехОперация Тогда	
						НоваяАНР.Наименование = "Тех. операция, "+Объект.Элемент;
						ИначеЕсли Объект.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.ТехОснастка Тогда	
						НоваяАНР.Наименование = "Тех. оснастка, "+Объект.Элемент;	
						ИначеЕсли (Объект.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Документ)или
								  (Объект.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Программа)Тогда	
						НоваяАНР.Наименование = Строка(Объект.Элемент.ВидДокумента)+", "+Объект.Элемент;	
						Иначе
						НоваяАНР.Наименование = Строка(Объект.ВидЭлемента)+", "+Объект.Элемент;			
						КонецЕсли;
					НоваяАНР.Записать();
					ДобавитьНормуАналога(НоваяАНР.Ссылка,ДатаИзм,Кол);
					КонецЕсли; 
	            КонецЦикла;
					Если Не ИзвещениеОбИзменениях.Пустая() Тогда
					Извещение = РегистрыСведений.ИзвещенияОбИзменениях.СоздатьМенеджерЗаписи();
					Извещение.Элемент = ТЧ.Спецификация;
					Извещение.Извещение = ИзвещениеОбИзменениях;
					Извещение.Записать();
					КонецЕсли;
		ТЧ.Пометка = Ложь;
		КоличествоНеобработанныхСтрок = КоличествоНеобработанныхСтрок - 1;
		ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
		Исключение
		ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
		Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура УдалитьНаСервере(ДатаИзм)
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл	
		Если Не ТЧ.Пометка Тогда
		Продолжить;
		КонецЕсли;
			Попытка
			НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1; 
			НР = Справочники.НормыРасходов.Выбрать(,ТЧ.Спецификация);
				Пока НР.Следующий() Цикл
					Если НР.ПометкаУдаления Тогда
					Продолжить;
					КонецЕсли; 
						Если НР.Элемент <> Объект.Элемент Тогда
						Продолжить;
						КонецЕсли; 
				НормыНР = РегистрыСведений.НормыРасходов.ПолучитьПоследнее(ДатаИзм,Новый Структура("НормаРасходов",НР.Ссылка));
					Если НормыНР.Норма = 0 Тогда
					Продолжить;
					КонецЕсли;
						Если Не флВсеПозиции Тогда
						ПозОбозн = Объект.СписокПозиций.НайтиПоЗначению(НР.Позиция);
							Если ПозОбозн = Неопределено Тогда
							Продолжить;
							КонецЕсли; 
								Если Не ПозОбозн.Пометка Тогда
								Продолжить;
								КонецЕсли; 
						КонецЕсли; 
							Если ВидУдаления = 0 Тогда
							ДобавитьНорму(НР.Ссылка,ДатаИзм,0);
							ТаблицаАналогов = ОбщегоНазначенияПовтИсп.ПолучитьАналогиНормРасходов(НР.Ссылка,ДатаИзм,Истина);
								Для каждого ТЧ_ТА Из ТаблицаАналогов Цикл
								ДобавитьНормуАналога(ТЧ_ТА.Ссылка,ДатаИзм,0);								
				                КонецЦикла;
							ИначеЕсли ВидУдаления = 1 Тогда
                            НРУдаление = НР.Ссылка.ПолучитьОбъект();
							НРУдаление.Удалить();
							ИначеЕсли ВидУдаления = 2 Тогда
							ДобавитьНорму(НР.Ссылка,ДатаИзм,0); 
							ТаблицаАналогов = ОбщегоНазначенияПовтИсп.ПолучитьАналогиНормРасходов(НР.Ссылка,ДатаИзм,Истина);
								Для каждого ТЧ_ТА Из ТаблицаАналогов Цикл
								ДобавитьНормуАналога(ТЧ_ТА.Ссылка,ДатаИзм,0);								
				                КонецЦикла;
							НРУдаление = НР.Ссылка.ПолучитьОбъект();	
                            НРУдаление.УстановитьПометкуУдаления(Истина);
							КонецЕсли;  
				КонецЦикла; 
					Если Не ИзвещениеОбИзменениях.Пустая() Тогда
					Извещение = РегистрыСведений.ИзвещенияОбИзменениях.СоздатьМенеджерЗаписи();
					Извещение.Элемент = ТЧ.Спецификация;
					Извещение.Извещение = ИзвещениеОбИзменениях;
					Извещение.Записать();
					КонецЕсли;
			ТЧ.Пометка = Ложь;
			КоличествоНеобработанныхСтрок = КоличествоНеобработанныхСтрок - 1;
			ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
			Исключение
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура АналогиНаСервере(ДатаИзм)
	Если ТипЗнч(Объект.Элемент) <> Тип("СправочникСсылка.Материалы") и
		 ТипЗнч(Объект.Элемент) <> Тип("СправочникСсылка.Номенклатура") Тогда	
	Сообщить("Запрещено добавлять аналоги к виду элемента "+Объект.ВидЭлемента);
	Возврат;
	КонецЕсли; 
		Если ТипЗнч(Объект.ЭлементНовый) <> Тип("СправочникСсылка.Материалы") и
			 ТипЗнч(Объект.ЭлементНовый) <> Тип("СправочникСсылка.Номенклатура") Тогда	
		Сообщить("Запрещено добавлять в качестве аналога вид элемента "+Объект.ВидЭлементаНовый);
		Возврат;
		КонецЕсли;
			Попытка
			НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
				Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
					Если Не ТЧ.Пометка Тогда
					Продолжить;
					КонецЕсли;
				НР = Справочники.НормыРасходов.Выбрать(,ТЧ.Спецификация);
					Пока НР.Следующий() Цикл
						Если НР.ПометкаУдаления Тогда
						Продолжить;
						КонецЕсли; 
							Если НР.Элемент <> Объект.Элемент Тогда
							Продолжить;
							КонецЕсли; 
								Если Не флВсеПозиции Тогда
								ПозОбозн = Объект.СписокПозиций.НайтиПоЗначению(НР.Позиция);
									Если ПозОбозн = Неопределено Тогда
									Продолжить;
									КонецЕсли; 
										Если Не ПозОбозн.Пометка Тогда
										Продолжить;
										КонецЕсли; 
								КонецЕсли;
					НормыНР = РегистрыСведений.НормыРасходов.ПолучитьПоследнее(ДатаИзм,Новый Структура("НормаРасходов",НР.Ссылка));
						Если НормыНР.Норма = 0 Тогда
						Продолжить;
						КонецЕсли;
					АНРНайденный = Справочники.АналогиНормРасходов.ПустаяСсылка();
					АНРНорма = 0;
					Приоритет = 1;
					АНР = Справочники.АналогиНормРасходов.Выбрать(,НР.Ссылка);
						Пока АНР.Следующий() Цикл
							Если АНР.ПометкаУдаления Тогда
							Продолжить;
							КонецЕсли;
								Если АНР.Элемент = Объект.ЭлементНовый Тогда
								НормыАНР = РегистрыСведений.АналогиНормРасходов.ПолучитьПоследнее(ДатаИзм,Новый Структура("АналогНормыРасходов",АНР.Ссылка));
									Если НормыАНР.Норма > 0 Тогда
									АНРНорма = НормыАНР.Норма;
										Если АНР.Приоритет > Приоритет Тогда
										Приоритет = АНР.Приоритет + 1;
										КонецЕсли; 
									КонецЕсли;
								АНРНайденный = АНР.Ссылка.ПолучитьОбъект();
								КонецЕсли; 												
			            КонецЦикла;
							Если (АНРНайденный.Ссылка = Справочники.АналогиНормРасходов.ПустаяСсылка())или
								 (АНРНорма = 0) Тогда
								Если ДействиеНадАналогом = 0 Тогда
									Если флКоличествоОсновного Тогда
									Кол = НормыНР.Норма;
									Иначе
									Кол = Объект.Количество; 
									КонецЕсли; 
										Если АНРНайденный.Ссылка = Справочники.АналогиНормРасходов.ПустаяСсылка() Тогда
										НоваяАНР = Справочники.АналогиНормРасходов.СоздатьЭлемент();
										НоваяАНР.Владелец = НР.Ссылка;
										НоваяАНР.Приоритет = Приоритет;
										НоваяАНР.ВидЭлемента = Объект.ВидЭлементаНовый;
										НоваяАНР.Элемент = Объект.ЭлементНовый;
										НоваяАНР.ОграниченноеИспользование = ОграниченноеИспользование;
											Если Объект.ВидЭлементаНовый = Перечисления.ВидыЭлементовНормРасходов.Материал Тогда
											НоваяАНР.Наименование = "Материал, "+Объект.ЭлементНовый;
											ИначеЕсли Объект.ВидЭлементаНовый = Перечисления.ВидыЭлементовНормРасходов.ТехОперация Тогда	
											НоваяАНР.Наименование = "Тех. операция, "+Объект.ЭлементНовый;
											ИначеЕсли Объект.ВидЭлементаНовый = Перечисления.ВидыЭлементовНормРасходов.ТехОснастка Тогда	
											НоваяАНР.Наименование = "Тех. оснастка, "+Объект.ЭлементНовый;	
											ИначеЕсли (Объект.ВидЭлементаНовый = Перечисления.ВидыЭлементовНормРасходов.Документ)или
													  (Объект.ВидЭлементаНовый = Перечисления.ВидыЭлементовНормРасходов.Программа)Тогда	
											НоваяАНР.Наименование = Строка(Объект.ЭлементНовый.ВидДокумента)+", "+Объект.ЭлементНовый;	
											Иначе
											НоваяАНР.Наименование = Строка(Объект.ВидЭлементаНовый)+", "+Объект.ЭлементНовый;			
											КонецЕсли;
										НоваяАНР.Записать();	
										ДобавитьНормуАналога(НоваяАНР.Ссылка,ДатаИзм,Кол);
										Иначе
										ДобавитьНормуАналога(АНРНайденный.Ссылка,ДатаИзм,Кол);							
										КонецЕсли; 
								КонецЕсли; 
							Иначе
								Если ДействиеНадАналогом = 1 Тогда					
								АНРНайденный.Удалить();
							    ИначеЕсли ДействиеНадАналогом = 2 Тогда	
		                        ДобавитьНормуАналога(АНРНайденный.Ссылка,ДатаИзм,0);
								ИначеЕсли ДействиеНадАналогом = 3 Тогда
								АНРНайденный.ОграниченноеИспользование = ОграниченноеИспользование;
								АНРНайденный.Записать();		
								КонецЕсли; 					
							КонецЕсли; 
					КонецЦикла;
				КонецЦикла;
					Если Не ИзвещениеОбИзменениях.Пустая() Тогда
					Извещение = РегистрыСведений.ИзвещенияОбИзменениях.СоздатьМенеджерЗаписи();
					Извещение.Элемент = ТЧ.Спецификация;
					Извещение.Извещение = ИзвещениеОбИзменениях;
					Извещение.Записать();
					КонецЕсли;
			ТЧ.Пометка = Ложь;
			КоличествоНеобработанныхСтрок = КоличествоНеобработанныхСтрок - 1;
			ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
			Исключение
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			Сообщить(ОписаниеОшибки());
			КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура КорневыеНаСервере()
СписокМПЗ = Новый СписокЗначений;

	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл	
		Если Не ТЧ.Пометка Тогда
		Продолжить;
		КонецЕсли;
			Попытка
			НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
			СписокМПЗ.Очистить();
			НР = Справочники.НормыРасходов.Выбрать(,ТЧ.Спецификация);
				Пока НР.Следующий() Цикл 
					Если НР.Элемент = Объект.Элемент Тогда
					СписокМПЗ.Добавить(НР.Ссылка);
					КонецЕсли;
				КонецЦикла;	
					Для каждого МПЗ Из СписокМПЗ Цикл
					флНайден = Ложь;
					ПозОбозн = СокрЛП(МПЗ.Значение.Позиция);
					НР = Справочники.НормыРасходов.Выбрать(,ТЧ.Спецификация);
						Пока НР.Следующий() Цикл 
							Если СокрЛП(НР.Позиция) = ПозОбозн Тогда
								Если НР.Элемент = Объект.ЭлементНовый Тогда
								флНайден = Истина;
								НРОбъект = НР.ПолучитьОбъект();
								НРОбъект.Корневой = ?(флКорневой = 1,Истина,Ложь);
								НРОбъект.Записать();
								Прервать;
								КонецЕсли; 
							КонецЕсли;
						КонецЦикла;
							Если Не флНайден Тогда	
							НРОбъект = Справочники.НормыРасходов.СоздатьЭлемент();
							НРОбъект.Владелец = МПЗ.Значение.Владелец;
							НРОбъект.Позиция = ПозОбозн;
							НРОбъект.ВидЭлемента = Объект.ВидЭлементаНовый;
							НРОбъект.Элемент = Объект.ЭлементНовый;
							НРОбъект.Наименование = ""+Объект.ВидЭлементаНовый+", "+Объект.ЭлементНовый;
							НРОбъект.Корневой = ?(флКорневой = 1,Истина,Ложь);
							НРОбъект.Записать();					
							КонецЕсли; 
					КонецЦикла;
						Если Не ИзвещениеОбИзменениях.Пустая() Тогда
						Извещение = РегистрыСведений.ИзвещенияОбИзменениях.СоздатьМенеджерЗаписи();
						Извещение.Элемент = ТЧ.Спецификация;
						Извещение.Извещение = ИзвещениеОбИзменениях;
						Извещение.Записать();
						КонецЕсли;
			ТЧ.Пометка = Ложь;
			КоличествоНеобработанныхСтрок = КоличествоНеобработанныхСтрок - 1; 
			ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
			Исключение
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			Сообщить(ОписаниеОшибки());			
			КонецПопытки;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьИзвещениеОбИзменениях()
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		Если Не ТЧ.Пометка Тогда
		Продолжить;
		КонецЕсли;
	Извещение = РегистрыСведений.ИзвещенияОбИзменениях.СоздатьМенеджерЗаписи();
	Извещение.Элемент = ТЧ.Спецификация;
	Извещение.Извещение = ИзвещениеОбИзменениях;
	Извещение.Записать();	
	КонецЦикла;
КонецПроцедуры  

&НаКлиенте
Процедура Обработать(Команда)
	Если Объект.ДатаИзменения = НачалоДня(ТекущаяДата()) Тогда
		Если Вопрос("Вы уверены, что хотите провести изменения на текущий момент времени?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;		
		КонецЕсли;
	ИначеЕсли Объект.ДатаИзменения < НачалоДня(ТекущаяДата()) Тогда
	Предупреждение("Запрещено проводить изменения задним числом!");
	Возврат;
	КонецЕсли;
		Если Объект.ДатаИзменения = НачалоДня(ТекущаяДата()) Тогда
		ДатаИзм = ТекущаяДата();	
		Иначе
		ДатаИзм = Объект.ДатаИзменения;
		КонецЕсли;
			Если Элементы.Операции.ТекущаяСтраница.Имя = "Добавление" Тогда
				Если ЭтаФорма.ПроверитьЗаполнение() Тогда
				Состояние("Обработка...",,"Добавление элемента...");
				ДобавитьНаСервере(ДатаИзм);
				КонецЕсли;
			ИначеЕсли Элементы.Операции.ТекущаяСтраница.Имя = "Изменение" Тогда
				Если ЭтаФорма.ПроверитьЗаполнение() Тогда
					Если ДатаИзм <= ДатаИзмененияОбщая Тогда
					Сообщить("Дата обработки не может быть раньше Последней даты изменения!");		
					Возврат;
					КонецЕсли;                            
						Если Объект.Количество = 0 Тогда
						Сообщить("Укажите количество нового элемента отличной от нуля!");		
						Возврат;
						КонецЕсли;
				Состояние("Обработка...",,"Изменение элемента...");
		    	ИзменитьНаСервере(ДатаИзм);
				КонецЕсли;
			ИначеЕсли Элементы.Операции.ТекущаяСтраница.Имя = "Удаление" Тогда 
				Если ВидУдаления = 0 Тогда
					Если ДатаИзм <= ДатаИзмененияОбщая Тогда
					Сообщить("Дата обработки не может быть раньше Последней даты изменения!");		
					Возврат;
					КонецЕсли;
				КонецЕсли;
			Состояние("Обработка...",,"Удаление элемента...");
		    УдалитьНаСервере(ДатаИзм);
			ИначеЕсли Элементы.Операции.ТекущаяСтраница.Имя = "Аналоги" Тогда
				Если ДействиеНадАналогом = 0 Тогда
					Если Не ЭтаФорма.ПроверитьЗаполнение() Тогда
					Возврат;
					КонецЕсли;		
				КонецЕсли;
			Состояние("Обработка...",,"Обработка аналога элемента...");
		    АналогиНаСервере(ДатаИзм);
			ИначеЕсли Элементы.Операции.ТекущаяСтраница.Имя = "Корневые" Тогда
			Состояние("Обработка...",,"Обработка корневых элементов...");
		    КорневыеНаСервере();	
			КонецЕсли;  
КонецПроцедуры

&НаСервере
Процедура ВыбратьСпецификацииНаСервере()
Объект.СписокПозиций.Очистить();
Объект.ТабличнаяЧасть.Очистить();
КоличествоВыбранныхСтрок = 0;
КоличествоНеобработанныхСтрок = 0;
ДатаИзмененияОбщая = Дата(1,1,1);

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходовСрезПоследних.Владелец КАК Владелец,
	|	НормыРасходовСрезПоследних.НормаРасходов КАК Ссылка,
	|	НормыРасходовСрезПоследних.НормаРасходов.Позиция КАК Позиция,
	|	НормыРасходовСрезПоследних.Период КАК Период
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(
	|			&НаДату,
	|			Элемент = &Элемент
	|				И НормаРасходов.ВидЭлемента = &ВидЭлемента) КАК НормыРасходовСрезПоследних
	|ГДЕ
	|	НормыРасходовСрезПоследних.Норма > 0
	|	И НормыРасходовСрезПоследних.НормаРасходов.ПометкаУдаления = ЛОЖЬ";
Запрос.УстановитьПараметр("НаДату", КонецДня(НаДату));
Запрос.УстановитьПараметр("ВидЭлемента", Объект.ВидЭлемента);
Запрос.УстановитьПараметр("Элемент", Объект.Элемент);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаСпецификации = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСпецификации.Следующий() Цикл
	Статус = ПолучитьСтатус(ВыборкаСпецификации.Владелец,НаДату);
		Если НеПоказыватьЗапрещённые Тогда
			Если ТипЗнч(ВыборкаСпецификации.Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда
				Если Статус = Перечисления.СтатусыСпецификаций.Запрещённая Тогда
				Продолжить;				
				КонецЕсли; 
			Иначе
				Если Статус = Перечисления.СтатусыМПЗ.Запрещённая Тогда
				Продолжить;				
				КонецЕсли;			
			КонецЕсли;
		КонецЕсли;
	ДатаИзменения = Дата(1,1,1);
	ВыборкаДетальныхЗаписей =  ВыборкаСпецификации.Выбрать();
    	Пока ВыборкаДетальныхЗаписей.Следующий() Цикл
		ДатаИзменения = Макс(ДатаИзменения,ВыборкаДетальныхЗаписей.Период);
			Если Объект.СписокПозиций.НайтиПоЗначению(ВыборкаДетальныхЗаписей.Позиция) = Неопределено Тогда
			Объект.СписокПозиций.Добавить(ВыборкаДетальныхЗаписей.Позиция,СокрЛП(ВыборкаДетальныхЗаписей.Позиция));
			КонецЕсли;                               
		НормыНР = РегистрыСведений.НормыРасходов.СрезПоследних(,Новый Структура("НормаРасходов",ВыборкаДетальныхЗаписей.Ссылка));
			Если НормыНР.Количество() > 0 Тогда
			ДатаИзменения = Макс(ДатаИзменения,НормыНР[0].Период);
			КонецЕсли;
		КонецЦикла;	  
	ТЧ = Объект.ТабличнаяЧасть.Добавить();
	ТЧ.Спецификация = ВыборкаСпецификации.Владелец;
	ТЧ.Статус = Статус;
	ТЧ.ДатаИзменения = ДатаИзменения;
	КонецЦикла;
Объект.СписокПозиций.СортироватьПоЗначению();
Объект.ТабличнаяЧасть.Сортировать("Спецификация");
КоличествоСтрок = Объект.ТабличнаяЧасть.Количество();
КонецПроцедуры 

&НаКлиенте
Процедура ЭлементПриИзменении(Элемент)
ВыбратьСпецификацииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыделитьВсеНаСервере(Фл)
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл	
	ТЧ.Пометка = Фл;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьВсе(Команда)
ВыделитьВсеНаСервере(Истина);
ПолучитьКоличествоВыбранных(); 
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсе(Команда)
ВыделитьВсеНаСервере(Ложь);
ПолучитьКоличествоВыбранных(); 
КонецПроцедуры

&НаСервере
Процедура ВыделитьПоПризнакуНаСервере(Признак,Фл)
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл	
		Если Найти(ТЧ.Спецификация.Наименование,Признак) > 0 Тогда
		ТЧ.Пометка = Фл;
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьПоПризнаку(Команда)
Признак = "";
	Если ВвестиСтроку(Признак,"Введите признак",100) Тогда
	ВыделитьПоПризнакуНаСервере(Признак,Истина);	
	КонецЕсли; 
ПолучитьКоличествоВыбранных();
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПоПризнаку(Команда)
Признак = "";
	Если ВвестиСтроку(Признак,"Введите признак",100) Тогда
	ВыделитьПоПризнакуНаСервере(Признак,Ложь);	
	КонецЕсли;
ПолучитьКоличествоВыбранных();
КонецПроцедуры

&НаСервере
Процедура ИсключитьСоСтатусомНаСервере(Ст)
СтМат = Неопределено;
	Если Ст = Перечисления.СтатусыСпецификаций.Запрещённая Тогда
	СтМат = Перечисления.СтатусыМПЗ.Запрещённая;
	ИначеЕсли Ст = Перечисления.СтатусыСпецификаций.ДоИсчерпанияЗапасов Тогда
	СтМат = Перечисления.СтатусыМПЗ.ДоИсчерпанияЗапасов;	
	ИначеЕсли Ст = Перечисления.СтатусыСпецификаций.Серийная Тогда
	СтМат = Перечисления.СтатусыМПЗ.Основная;		
	ИначеЕсли Ст = Перечисления.СтатусыСпецификаций.ОНР Тогда
	СтМат = Перечисления.СтатусыМПЗ.ОНР;	
	КонецЕсли;
		Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл	
			Если ТЧ.Статус = Ст Тогда
			ТЧ.Пометка = Ложь;
			ИначеЕсли ТЧ.Статус = СтМат Тогда
			ТЧ.Пометка = Ложь; 
			КонецЕсли; 
		КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьСоСтатусом(Команда)
Перем Ст;
	Если ВвестиЗначение(Ст, "Введите статус", Тип("ПеречислениеСсылка.СтатусыСпецификаций")) Тогда 
	ИсключитьСоСтатусомНаСервере(Ст);
	КонецЕсли;	
ПолучитьКоличествоВыбранных();	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	П = Новый Структура("ТекущаяСтрока",Объект.Элемент);
	Если (Элементы.ВидЭлемента.ТекстРедактирования = "Материал")или
		 (Элементы.ВидЭлемента.ТекстРедактирования = "Материал вспомогательный") Тогда
		Результат = ОткрытьФормуМодально("Справочник.Материалы.ФормаВыбора",П);
		Если Результат = Неопределено Тогда
		Возврат;
		КонецЕсли;  
	ИначеЕсли Элементы.ВидЭлемента.ТекстРедактирования = "Тех. операция" Тогда	
		Результат = ОткрытьФормуМодально("Справочник.ТехОперации.ФормаВыбора",П); 
		Если Результат = Неопределено Тогда
		Возврат;
		КонецЕсли;
	ИначеЕсли Элементы.ВидЭлемента.ТекстРедактирования = "Тех. оснастка" Тогда	
		Результат = ОткрытьФормуМодально("Справочник.ТехОснастка.ФормаВыбора",П); 
		Если Результат = Неопределено Тогда
		Возврат;
		КонецЕсли;
	ИначеЕсли (Элементы.ВидЭлемента.ТекстРедактирования = "Документ")или
			  (Элементы.ВидЭлемента.ТекстРедактирования = "Программа")Тогда	
		Результат = ОткрытьФормуМодально("Справочник.Документация.ФормаВыбора",П); 
		Если Результат = Неопределено Тогда
		Возврат;
		КонецЕсли;	
	Иначе
		Результат = ОткрытьФормуМодально("Справочник.Номенклатура.ФормаВыбора",П); 
		Если Результат = Неопределено Тогда
		Возврат;
		КонецЕсли;			
	КонецЕсли;
Объект.Элемент = Результат;
ВыбратьСпецификацииНаСервере();
КоличествоВыбранныхСтрок = 0;
КонецПроцедуры

&НаСервере
Процедура ПроверкаВидаЭлементаНаСервере()
	Если Объект.ВидЭлементаНовый = Объект.ВидЭлемента Тогда
	Объект.ЭлементНовый = Объект.Элемент;
	ПолучитьОснЕИ();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ВидЭлементаНовыйПриИзменении(Элемент)
ПроверкаВидаЭлементаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьОснЕИ()
	Если ТипЗнч(Объект.ЭлементНовый) = Тип("СправочникСсылка.Материалы")или
		 ТипЗнч(Объект.ЭлементНовый) = Тип("СправочникСсылка.Номенклатура") Тогда
	Элементы.ОснЕИ.Заголовок = Объект.ЭлементНовый.ОсновнаяЕдиницаИзмерения.Наименование;
	Элементы.ОснЕИ1.Заголовок = Объект.ЭлементНовый.ОсновнаяЕдиницаИзмерения.Наименование;
	Элементы.ОснЕИ2.Заголовок = Объект.ЭлементНовый.ОсновнаяЕдиницаИзмерения.Наименование;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НовыйЭлементНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	П = Новый Структура("ТекущаяСтрока",Объект.ЭлементНовый);
	Если (Элементы.ВидЭлементаНовый.ТекстРедактирования = "Материал")или
		 ((Элементы.ВидЭлементаНовый.ТекстРедактирования = "Материал вспомогательный")) Тогда
		Результат = ОткрытьФормуМодально("Справочник.Материалы.ФормаВыбора",П);
		Если Результат = Неопределено Тогда
		Возврат;
		КонецЕсли;  
	ИначеЕсли Элементы.ВидЭлементаНовый.ТекстРедактирования = "Тех. операция" Тогда	
		Результат = ОткрытьФормуМодально("Справочник.ТехОперации.ФормаВыбора",П); 
		Если Результат = Неопределено Тогда
		Возврат;
		КонецЕсли;
	ИначеЕсли Элементы.ВидЭлементаНовый.ТекстРедактирования = "Тех. оснастка" Тогда	
		Результат = ОткрытьФормуМодально("Справочник.ТехОснастка.ФормаВыбора",П); 
		Если Результат = Неопределено Тогда
		Возврат;
		КонецЕсли;
	ИначеЕсли (Элементы.ВидЭлементаНовый.ТекстРедактирования = "Документ")или
			  (Элементы.ВидЭлементаНовый.ТекстРедактирования = "Программа")Тогда	
		Результат = ОткрытьФормуМодально("Справочник.Документация.ФормаВыбора",П); 
		Если Результат = Неопределено Тогда
		Возврат;
		КонецЕсли;	
	Иначе
		Результат = ОткрытьФормуМодально("Справочник.Номенклатура.ФормаВыбора",П); 
		Если Результат = Неопределено Тогда
		Возврат;
		КонецЕсли;			
	КонецЕсли;
Объект.ЭлементНовый = Результат;
ПолучитьОснЕИ(); 
КонецПроцедуры

&НаКлиенте
Процедура ОперацииПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница.Имя = "Удаление" Тогда
	Элементы.ВидЭлементаНовый.Доступность = Ложь;
	Элементы.ЭлементНовый.Доступность = Ложь;
	Элементы.Группа2.Доступность = Истина;
	Иначе	
	Элементы.ВидЭлементаНовый.Доступность = Истина;
	Элементы.ЭлементНовый.Доступность = Истина;	
		Если ТекущаяСтраница.Имя = "Аналоги" Тогда
		Элементы.ВидЭлементаНовый.Заголовок = "Вид аналога";
		Элементы.ЭлементНовый.Заголовок = "Аналог";
		Элементы.Группа2.Доступность = Истина;
		ИначеЕсли ТекущаяСтраница.Имя = "Корневые" Тогда
 		Элементы.ВидЭлементаНовый.Заголовок = "Вид корневого элемента";
		Элементы.ЭлементНовый.Заголовок = "Корневой элемент";
		Элементы.Группа2.Доступность = Ложь;
		Иначе
 		Элементы.ВидЭлементаНовый.Заголовок = "Вид нового элемента";
		Элементы.ЭлементНовый.Заголовок = "Новый элемент";
		Элементы.Группа2.Доступность = Истина;
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ИзменитьФлагВсеПозицииНаСервере()
флВсеПозиции = Ложь;
КонецПроцедуры 

&НаКлиенте
Процедура СписокПозицийПометкаПриИзменении(Элемент)
ИзменитьФлагВсеПозицииНаСервере();
КонецПроцедуры

&НаСервере
Процедура НайтиАналогНаСервере()
КоличествоВыбранныхСтрок = 0;
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	ТЧ.Пометка = Ложь;
	НР = Справочники.НормыРасходов.Выбрать(,ТЧ.Спецификация);
		Пока НР.Следующий() Цикл
			Если НР.ПометкаУдаления Тогда
			Продолжить;
			КонецЕсли; 
				Если НР.Элемент <> Объект.Элемент Тогда
				Продолжить;
				КонецЕсли; 
					Если Не флВсеПозиции Тогда
					ПозОбозн = Объект.СписокПозиций.НайтиПоЗначению(НР.Позиция);
						Если ПозОбозн = Неопределено Тогда
						Продолжить;
						КонецЕсли; 
							Если Не ПозОбозн.Пометка Тогда
							Продолжить;
							КонецЕсли; 
					КонецЕсли;
		НормыНР = РегистрыСведений.НормыРасходов.ПолучитьПоследнее(,Новый Структура("НормаРасходов",НР.Ссылка));
			Если НормыНР.Норма = 0 Тогда
			Продолжить;
			КонецЕсли;
		АНР = Справочники.АналогиНормРасходов.Выбрать(,НР.Ссылка);
			Пока АНР.Следующий() Цикл
				Если АНР.ПометкаУдаления Тогда
				Продолжить;
				КонецЕсли;
					Если АНР.Элемент <> Объект.ЭлементНовый Тогда
					Продолжить;
					КонецЕсли; 
			НормыАНР = РегистрыСведений.АналогиНормРасходов.ПолучитьПоследнее(,Новый Структура("АналогНормыРасходов",АНР.Ссылка));
				Если НормыАНР.Норма = 0 Тогда
				Продолжить;
				КонецЕсли;
			ТЧ.Пометка = Истина;
			КоличествоВыбранныхСтрок = КоличествоВыбранныхСтрок + 1;								
            КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура НайтиАналог(Команда)
НайтиАналогНаСервере();
КонецПроцедуры

&НаСервере
Функция ПриИзменениифлКоличествоОсновногоНаСервере()
Возврат(флКоличествоОсновного);
КонецФункции

&НаКлиенте
Процедура флКоличествоОсновногоПриИзменении(Элемент)
Элементы.Количество2.Доступность = Не ПриИзменениифлКоличествоОсновногоНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВидЭлементаПриИзменении(Элемент)
ВыбратьСпецификацииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ТипЗнч(Элементы.ТабличнаяЧасть.ТекущиеДанные.Спецификация) = Тип("СправочникСсылка.Номенклатура") Тогда
	ТекФорма = ПолучитьФорму("Справочник.Номенклатура.ФормаСписка");
	Иначе	
	ТекФорма = ПолучитьФорму("Справочник.Материалы.ФормаСписка");	
	КонецЕсли;
ТекФорма.Открыть();
ТекФорма.Элементы.Список.ТекущаяСтрока = Элементы.ТабличнаяЧасть.ТекущиеДанные.Спецификация;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПометкаПриИзменении(Элемент)
ПолучитьКоличествоВыбранных();
КонецПроцедуры

&НаСервере
Процедура ДобавитьИзГруппыНаСервере(ГруппаНоменклатуры)
Объект.ТабличнаяЧасть.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ПометкаУдаления = ЛОЖЬ
	|	И Номенклатура.ЭтоГруппа = ЛОЖЬ
	|	И Номенклатура.Ссылка В ИЕРАРХИИ(&ГруппаНоменклатуры)";
Запрос.УстановитьПараметр("ГруппаНоменклатуры", ГруппаНоменклатуры);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = Объект.ТабличнаяЧасть.Добавить();
	ТЧ.Спецификация = ВыборкаДетальныеЗаписи.Ссылка;
	ТЧ.Статус = ПолучитьСтатус(ВыборкаДетальныеЗаписи.Ссылка,ТекущаяДата());
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзГруппы(Команда)
ГруппаНоменклатуры = Неопределено;
Результат = ОткрытьФормуМодально("Справочник.Номенклатура.ФормаВыбораГруппы");
	Если Результат <> Неопределено Тогда
	ДобавитьИзГруппыНаСервере(Результат);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция НастройкиНаСервере()
Настройки = Новый Структура;
Настройки.Вставить("СписокСпецификаций",СписокСпецификаций);
Возврат(Новый Структура("КлючНазначенияИспользования,Настройки","ГрупповаяОбработкаНоменклатуры",Настройки));
КонецФункции

&НаСервере
Процедура ПолучитьСписокСпецификаций()
СписокСпецификаций.Очистить();
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	СписокСпецификаций.Добавить(ТЧ.Спецификация);	
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьВТаблицу()
Объект.ТабличнаяЧасть.Очистить();	
	Для каждого СС Из СписокСпецификаций Цикл
	ТЧ = Объект.ТабличнаяЧасть.Добавить();
	ТЧ.Спецификация = СС.Значение;	
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)
ПолучитьСписокСпецификаций();
Результат = ОткрытьФормуМодально("ОбщаяФорма.НастройкиФорм",НастройкиНаСервере());
	Если Результат <> Неопределено Тогда	
	СписокСпецификаций = Результат.СписокСпецификаций;
	ЗагрузитьВТаблицу();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НеПоказыватьЗапрещённыеПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Элемент) Тогда
	ЭлементПриИзменении(Неопределено);
	КонецЕсли;
КонецПроцедуры


