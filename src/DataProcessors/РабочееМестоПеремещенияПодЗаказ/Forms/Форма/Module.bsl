
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
ПечатьТОРГ13 = Истина;
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеНаСервере()
ТаблицаННС.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатусыНакладныхНаСборкуСрезПоследних.НакладнаяНаСборку КАК НакладнаяНаСборку
	|ИЗ
	|	РегистрСведений.СтатусыНакладныхНаСборку.СрезПоследних КАК СтатусыНакладныхНаСборкуСрезПоследних
	|ГДЕ
	|	СтатусыНакладныхНаСборкуСрезПоследних.Статус = &Статус
	|	И СтатусыНакладныхНаСборкуСрезПоследних.НакладнаяНаСборку.Проведен = ИСТИНА
	|	И СтатусыНакладныхНаСборкуСрезПоследних.НакладнаяНаСборку.Контрагент В(&СписокКонтрагентов)";
Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыНакладнойНаСборку.НаУпаковке);
Запрос.УстановитьПараметр("СписокКонтрагентов",СписокКонтрагентов);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ННС = ВыборкаДетальныеЗаписи.НакладнаяНаСборку;
	ТЧ = ТаблицаННС.Добавить();
	ТЧ.Пометка = Истина;
	ТЧ.ННС = ННС;
		Для каждого ТЧ_ННС Из ННС.ТабличнаяЧасть Цикл
		ТЧ_П = ТЧ.ТаблицаПродукции.Добавить();
		ТЧ_П.Продукция = ТЧ_ННС.Продукция;
		ТЧ_П.Товар = ТЧ_ННС.Товар;
		ТЧ_П.Количество = ТЧ_ННС.Количество;
		ТЧ_П.ЗНП = ТЧ_ННС.ЗаказНаПроизводство;
		КонецЦикла;		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанные(Команда)
ПолучитьДанныеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	Для каждого ТЧ Из ТаблицаННС Цикл
	ТЧ.Пометка = Истина;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсе(Команда)
	Для каждого ТЧ Из ТаблицаННС Цикл
	ТЧ.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция СоздатьПеремещенияНаСервере()
СписокДвиженийМПЗ.Очистить();
ТЗ = Новый ТаблицаЗначений;

ТЗ.Колонки.Добавить("ЗНП");
ТЗ.Колонки.Добавить("НомерННС");
ТЗ.Колонки.Добавить("Продукция");
ТЗ.Колонки.Добавить("Количество");

МестоХраненияТранзит = Константы.МестоХраненияТранзит.Получить();
	Для Каждого ТЧ Из ТаблицаННС Цикл
		Если ТЧ.Пометка Тогда
			Для Каждого ТЧ_П Из ТЧ.ТаблицаПродукции Цикл
			ТЧ_ТЗ = ТЗ.Добавить();
			ТЧ_ТЗ.ЗНП = ТЧ_П.ЗНП;
			ТЧ_ТЗ.НомерННС = ТЧ.ННС.Номер;
			ТЧ_ТЗ.Продукция = ТЧ_П.Продукция;
			ТЧ_ТЗ.Количество = ТЧ_П.Количество;	
		    КонецЦикла;
		КонецЕсли;
	КонецЦикла;
ТЗ.Свернуть("ЗНП,Продукция,НомерННС","Количество");
ТЗ.Сортировать("ЗНП,Продукция");
Перемещение = Неопределено;
ЗНП = Неопределено;
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;		
		Для каждого ТЧ Из ТЗ Цикл	
			Если ЗНП <> ТЧ.ЗНП Тогда
				Если ЗНП <> Неопределено Тогда
				Перемещение.Записать(РежимЗаписиДокумента.Проведение);
				СписокДвиженийМПЗ.Добавить(Перемещение.Ссылка);
				КонецЕсли;				
			ЗНП = ТЧ.ЗНП;
			Перемещение = Документы.ДвижениеМПЗ.СоздатьДокумент();
			Перемещение.Дата = ТекущаяДата();
			Перемещение.УстановитьНовыйНомер(ПрисвоитьПрефикс(МестоХраненияТранзит.Подразделение));
			Перемещение.Автор = ПараметрыСеанса.Пользователь;
			Перемещение.ДокументОснование = ЗНП;
			Перемещение.Подразделение = МестоХраненияТранзит.Подразделение;
			Перемещение.МестоХранения = МестоХраненияТранзит;
			Перемещение.МестоХраненияВ = МестоХранения;
			Перемещение.Комментарий = "Накладная на сборку №"+ТЧ.НомерННС;
			КонецЕсли; 
		ТЧ_Р = Перемещение.ТабличнаяЧасть.Добавить();
			Если ТипЗнч(ТЧ.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
			ТЧ_Р.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
			Иначе				
			ТЧ_Р.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
			КонецЕсли;
		ТЧ_Р.МПЗ = ТЧ.Продукция;
		ТЧ_Р.Количество = ТЧ.Количество;
		ТЧ_Р.ЕдиницаИзмерения = ТЧ.Продукция.ОсновнаяЕдиницаИзмерения;	
		КонецЦикла;
			Если ЗНП <> Неопределено Тогда
			Перемещение.Записать(РежимЗаписиДокумента.Проведение);
			СписокДвиженийМПЗ.Добавить(Перемещение.Ссылка);
			КонецЕсли;
				Для Каждого ТЧ Из ТаблицаННС Цикл
					Если ТЧ.Пометка Тогда
					СННС = РегистрыСведений.СтатусыНакладныхНаСборку.СоздатьМенеджерЗаписи();
					СННС.Период = ТекущаяДата();
					СННС.НакладнаяНаСборку = ТЧ.ННС;
					СННС.Статус = Перечисления.СтатусыНакладнойНаСборку.Упакован;
					СННС.Записать();
					КонецЕсли;
				КонецЦикла;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Сообщить(ОписаниеОшибки());
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина);
КонецФункции

&НаСервере
Процедура ПечатьТорг13НаСервере(ТабДок)
Макет = ПолучитьОбщийМакет("ТОРГ13_132");
	 
ОблШапка = Макет.ПолучитьОбласть("Шапка");	
ОблЗаголовок = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
ОблСтрока = Макет.ПолучитьОбласть("Строка");
ОблИтогиПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
ОблВсего = Макет.ПолучитьОбласть("Всего");
ОблПодвал = Макет.ПолучитьОбласть("Подвал");
	Для каждого ДвижениеМПЗ Из СписокДвиженийМПЗ Цикл
	Док = ДвижениеМПЗ.Значение;
	ВсегоСтрок = Док.ТабличнаяЧасть.Количество();
	ВыведеноНаСтраницу = 0; ВыведеноВсего = 0;
	НомерСтраницы = 1;
	// установка размеров секций
	ВысотаШапки = 14;
	ВысотаПодвала = 7;
	СтрокНаСТранице = 32;
	// инициализация
	ВсегоКоличество	= 0; ВсегоСумма = 0;
	ИтогоКоличество = 0; ИтогоСумма = 0;

	ОблШапка.Параметры.ПредставлениеОрганизации = ПолучитьПредставлениеОрганизации();
	ОблШапка.Параметры.НомерДокумента = Док.Номер;
	ОблШапка.Параметры.ДатаДокумента = Формат(Док.Дата,"ДФ=dd.MM.yyyy");
	ОблШапка.Параметры.ОтправительПодразделение = Док.МестоХранения;
	ОблШапка.Параметры.ПолучательПодразделение = Док.МестоХраненияВ;
	ОблШапка.Параметры.ОрганизацияПоОКПО = Константы.КодОКПО.Получить();
	ОблШапка.Параметры.ВидДеятельностиПоОКДП = Константы.КодОКДП.Получить();
	ТабДок.Вывести(ОблШапка);
	ТабДок.Вывести(ОблЗаголовок);
		Для каждого ТЧ Из Док.ТабличнаяЧасть Цикл	
		НомСтр = "";
		ОблСтрока.Параметры.ТоварНаименование = ?(ЗначениеЗаполнено(ТЧ.МПЗ.ПолнНаименование) = 0 ,СокрЛП(ТЧ.МПЗ.ПолнНаименование),СокрЛП(ТЧ.МПЗ.Наименование));
			Если ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы Тогда
			ОблСтрока.Параметры.ТоварКод = ТЧ.МПЗ.Код;
			Иначе
			ОблСтрока.Параметры.ТоварКод = "";		
			КонецЕсли; 
		ОблСтрока.Параметры.КоличествоМест = ТЧ.Количество;
		ОблСтрока.Параметры.ЕдиницаИзмеренияНаименование = СокрЛП(ТЧ.ЕдиницаИзмерения.Наименование);
		ОблСтрока.Параметры.ЕдиницаИзмеренияКодПоОКЕИ = ТЧ.ЕдиницаИзмерения.ЕдиницаИзмерения.Код;
		ОблСтрока.Параметры.КоличествоВОдномМесте = ТЧ.ЕдиницаИзмерения.Коэффициент;
		СуммаПеч = 0;

		ОстатокСтрок = СтрокНаСТранице - ВыведеноНаСтраницу;
		// если 1-я страница, то уменьшим количество строк на высоту шапки
			Если НомерСтраницы = 1 Тогда
			ОстатокСтрок = ОстатокСтрок - ВысотаШапки;
			КонецЕсли;		
				Если ВыведеноВсего = ВсегоСтрок -1  Тогда
				// выводим последнюю строку
				ОстатокСтрок = ОстатокСтрок - ВысотаПодвала;
				КонецЕсли;		
					Если Не(ОстатокСтрок > 0) Тогда
					// выводим итоги по странице
					ТабДок.Вывести(ОблИтогиПоСтранице);			
					// переход на новую страницу
					ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
					ТабДок.Вывести(ОблЗаголовок);
					ВыведеноНаСтраницу = 0;	
					// обнуляем итоги по старанице
					ИтогоКоличество = 0; 
					ИтогоСумма = 0;
					// увеличиваем номер страницы
					НомерСтраницы = НомерСтраницы + 1;
					КонецЕсли;
		ТабДок.Вывести(ОблСтрока);
		ВыведеноНаСтраницу = ВыведеноНаСтраницу + 1;
		ВыведеноВсего      = ВыведеноВсего      + 1;
		// вычисляем итоги
		ВсегоСумма      = ВсегоСумма      + СуммаПеч;
		ИтогоКоличество = ИтогоКоличество + ТЧ.Количество;
		ИтогоСумма      = ИтогоСумма      + СуммаПеч;
		КонецЦикла;
	ОблВсего.Параметры.ИтогоКоличествоМест = ИтогоКоличество; 
	ОблВсего.Параметры.ИтогоСумма = ВсегоСумма;
	ТабДок.Вывести(ОблВсего);
	ОблПодвал.Параметры.ИтогоСуммаПрописью = ВсегоСумма;
	ОблПодвал.Параметры.ИтогоСуммаКоп = Цел((ВсегоСумма-Цел(ВсегоСумма))*100);
	ОблПодвал.Параметры.ФИООтправителя = Док.Автор.Наименование;
	ОблПодвал.Параметры.ФИОПолучателя = Док.Сотрудник.Наименование;
	ТабДок.Вывести(ОблПодвал);
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПеремещения(Команда)
	Если СоздатьПеремещенияНаСервере() Тогда
		Если ПечатьТОРГ13 Тогда
		ТабДок = Новый ТабличныйДокумент;

		ПечатьТорг13НаСервере(ТабДок);
		ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабДок.Показать("Форма ТОРГ-13");
		КонецЕсли; 
	ПолучитьДанныеНаСервере();
	КонецЕсли;
КонецПроцедуры
