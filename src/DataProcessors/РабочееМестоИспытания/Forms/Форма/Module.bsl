
&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
    ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
    ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
    Сообщить(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
	Выборка = ТаблицаСП.НайтиСтроки(Новый Структура("БарКод",СокрЛП(Данные)));
		Если Выборка.Количество() > 0 Тогда
		Элементы.ТаблицаСП.ТекущаяСтрока = Выборка[0].ПолучитьИдентификатор();
		Элементы.ТаблицаСП.ТекущиеДанные.Пометка = Истина;
		Иначе
		Сообщить(Данные + "не найден!");
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьКЗ(ПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоЗаказ.КрупныйЗаказ КАК КрупныйЗаказ
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Заказ КАК ЗаказНаПроизводствоЗаказ
	|ГДЕ
	|	ЗаказНаПроизводствоЗаказ.Ссылка = &Ссылка
	|	И ЗаказНаПроизводствоЗаказ.Продукция = &Продукция";
Запрос.УстановитьПараметр("Продукция", ПЗ.Изделие);
Запрос.УстановитьПараметр("Ссылка", ПЗ.ДокументОснование);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.КрупныйЗаказ);
	КонецЦикла;
Возврат(Ложь);
КонецФункции 

&НаСервере
Процедура ПолучитьЗаданияНаСервере()
ТаблицаЗаданий.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.Испытания = 0
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Линейка,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.Номер";
Запрос.УстановитьПараметр("СписокЛинеек", СписокЛинеек);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаЗаданий.Добавить();
	ТЧ.ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
	ТЧ.РабочееМесто = ВыборкаДетальныеЗаписи.РабочееМесто;
		Если ТипЗнч(ВыборкаДетальныеЗаписи.ПЗ.ДокументОснование) = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда	
		ТЧ.СЦ = ВыборкаДетальныеЗаписи.ПЗ.ДокументОснование.СервисЦентр;
		ТЧ.КЗ = ПолучитьКЗ(ВыборкаДетальныеЗаписи.ПЗ);
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьЗадания(Команда)
ПолучитьЗаданияНаСервере();
КонецПроцедуры

&НаСервере
Функция ПолучитьДатуВыпуска(ПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукции.Дата
	|ИЗ
	|	Документ.ВыпускПродукции КАК ВыпускПродукции
	|ГДЕ
	|	ВыпускПродукции.ДокументОснование = &ДокументОснование
	|	И ВыпускПродукции.НаСклад = ИСТИНА";
Запрос.УстановитьПараметр("ДокументОснование",ПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.Дата);
	КонецЦикла;
Возврат(Дата(1,1,1));
КонецФункции 

&НаСервере
Функция ПроверитьВРемонте(ПЗ)
Ремонт = Документы.РемонтнаяКарта.ПустаяСсылка();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РемонтнаяКарта.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РемонтнаяКарта КАК РемонтнаяКарта
	|ГДЕ
	|	РемонтнаяКарта.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", ПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Ремонт = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
Возврат(Ремонт);
КонецФункции

&НаСервере
Процедура ПолучитьНаИспытанияхНаСервере()
ТаблицаИспытаний.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Ссылка
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.Линейка В ИЕРАРХИИ(&СписокЛинеек)";
	Если Найти(РабочееМесто.Наименование,"ПСИ") > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И ПроизводственноеЗадание.Испытания = 1";
	Иначе	
	Запрос.Текст = Запрос.Текст + " И ПроизводственноеЗадание.Испытания = 2";	
	КонецЕсли;
Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ПроизводственноеЗадание.Линейка,ПроизводственноеЗадание.Номер"; 
Запрос.УстановитьПараметр("СписокЛинеек", СписокЛинеек);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаИспытаний.Добавить();
	ТЧ.Линейка = ВыборкаДетальныеЗаписи.Ссылка.Линейка;
	ТЧ.ПЗ = ВыборкаДетальныеЗаписи.Ссылка;
	ТЧ.ДатаВыпуска = ПолучитьДатуВыпуска(ВыборкаДетальныеЗаписи.Ссылка);
	ТЧ.Ремонт = ПроверитьВРемонте(ВыборкаДетальныеЗаписи.Ссылка);
		Если ТипЗнч(ВыборкаДетальныеЗаписи.Ссылка.ДокументОснование) = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда	
		ТЧ.СЦ = ВыборкаДетальныеЗаписи.Ссылка.ДокументОснование.СервисЦентр;
		ТЧ.КЗ = ПолучитьКЗ(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЕсли;
	ТЧ.Перемещено = ВыборкаДетальныеЗаписи.Ссылка.Перемещено;
	КонецЦикла;
ТаблицаИспытаний.Сортировать("Линейка,ДатаВыпуска");
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьНаИспытаниях(Команда)
ПолучитьНаИспытанияхНаСервере();
КонецПроцедуры

&НаСервере
Функция ЗарезервироватьДляИспытанийНаСервере()
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;	
		Для каждого ТЧ Из ТаблицаЗаданий Цикл	
			Если ТЧ.Пометка Тогда
				Если ТЧ.ПЗ.Испытания = 0 Тогда
				ПЗ = ТЧ.ПЗ.ПолучитьОбъект();
					Если Найти(РабочееМесто.Наименование,"ПСИ") > 0 Тогда
					ПЗ.Испытания = 1;
					Иначе	
					ПЗ.Испытания = 2;
					КонецЕсли;
				ПЗ.Записать();
				Иначе
				Сообщить(ТЧ.ПЗ.Номер + " - уже зарезервировано!");
				КонецЕсли;
			КонецЕсли; 
		КонецЦикла; 
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина);
КонецФункции

&НаКлиенте
Процедура ЗарезервироватьДляИспытаний(Команда)
	Если ЗарезервироватьДляИспытанийНаСервере() Тогда
	ПолучитьЗаданияНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СнятьСРезерваНаСервере()
ТЗ = Новый ТаблицаЗначений;

ТЗ.Колонки.Добавить("МестоХранения");
ТЗ.Колонки.Добавить("Изделие");
ТЗ.Колонки.Добавить("Количество");

	Для каждого ТЧ Из ТаблицаИспытаний Цикл
		Если ТЧ.Пометка Тогда
			Если ТЧ.Перемещено Тогда	
			ТЧ_ТЗ = ТЗ.Добавить();
			ТЧ_ТЗ.МестоХранения = ТЧ.ПЗ.Линейка.МестоХраненияГП;
			ТЧ_ТЗ.Изделие = ТЧ.ПЗ.Изделие;
			ТЧ_ТЗ.Количество = ТЧ.ПЗ.Количество;
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла; 
ТЗ.Свернуть("МестоХранения,Изделие","Количество");
ТЗ.Сортировать("МестоХранения,Изделие");
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
		Если Найти(РабочееМесто.Наименование,"ПСИ") > 0 Тогда
		МестоХраненияИспытаний = Справочники.МестаХранения.НайтиПоНаименованию("Склад ПСИ и поверка",Истина);
		Иначе	
		МестоХраненияИспытаний = Справочники.МестаХранения.НайтиПоНаименованию("Склад ОМО",Истина);		
		КонецЕсли;
	Перемещение = Неопределено;
	МестоХранения = Неопределено;
		Для каждого ТЧ Из ТЗ Цикл
			Если МестоХранения <> ТЧ.МестоХранения Тогда
				Если МестоХранения <> Неопределено Тогда
				Перемещение.Записать(РежимЗаписиДокумента.Проведение);
				КонецЕсли;				
			МестоХранения = ТЧ.МестоХранения;
			Перемещение = Документы.ДвижениеМПЗ.СоздатьДокумент();
			Перемещение.Дата = ТекущаяДата();
			Перемещение.УстановитьНовыйНомер(ПрисвоитьПрефикс(МестоХранения.Подразделение));
			Перемещение.Автор = ПараметрыСеанса.Пользователь;
			Перемещение.Подразделение = МестоХранения.Подразделение;
			Перемещение.МестоХранения = МестоХраненияИспытаний;
			Перемещение.МестоХраненияВ = МестоХранения;
			КонецЕсли;
		ТЧ_П = Перемещение.ТабличнаяЧасть.Добавить();
		ТЧ_П.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
		ТЧ_П.МПЗ = ТЧ.Изделие;
		ТЧ_П.Количество = ТЧ.Количество;
		ТЧ_П.ЕдиницаИзмерения = ТЧ.Изделие.ОсновнаяЕдиницаИзмерения;
		КонецЦикла; 
			Если МестоХранения <> Неопределено Тогда
			Перемещение.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли;
				Для каждого ТЧ Из ТаблицаИспытаний Цикл
					Если ТЧ.Пометка Тогда
						Если ТЧ.Перемещено Тогда	
						ПЗ = ТЧ.ПЗ.ПолучитьОбъект();
						ПЗ.Перемещено = Ложь;
						ПЗ.Испытания = 0;
						ПЗ.Записать(РежимЗаписиДокумента.Запись);
						КонецЕсли;
					КонецЕсли;	
				КонецЦикла;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина);
КонецФункции

&НаКлиенте
Процедура СнятьСРезерва(Команда)
	Если СнятьСРезерваНаСервере() Тогда
	ПолучитьНаИспытанияхНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьИсполнителя()
Возврат(ПараметрыСеанса.Пользователь);
КонецФункции

&НаСервере
Функция РемонтЗавершён(Ремонт)
Возврат(Ремонт.Проведен);
КонецФункции 

&НаКлиенте
Процедура Ремонт(Команда)
	Если Не Элементы.ТаблицаИспытаний.ТекущиеДанные.Ремонт.Пустая() Тогда
		Если Не Элементы.ТаблицаИспытаний.ТекущиеДанные.Перемещено Тогда
		Сообщить("Изделие не перемещено на склад ОМО!");
		Возврат;
		КонецЕсли; 
			Если Не РемонтЗавершён(Элементы.ТаблицаИспытаний.ТекущиеДанные.Ремонт) Тогда
			Сообщить("Изделие уже находится в ремонте!");
			Возврат;
			КонецЕсли; 
	КонецЕсли;  
Результат = ОткрытьФормуМодально("ОбщаяФорма.ОформлениеРемонта",Новый Структура("РабочееМесто,ПроизводственноеЗадание,Исполнитель",РабочееМесто,Элементы.ТаблицаИспытаний.ТекущиеДанные.ПЗ,ПолучитьИсполнителя()));
	Если Результат <> Неопределено Тогда
	ПолучитьНаИспытанияхНаСервере(); 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СоздатьПеремещениеНаИспытанияНаСервере()
ТЗ = Новый ТаблицаЗначений;

ТЗ.Колонки.Добавить("МестоХранения");
ТЗ.Колонки.Добавить("Изделие");
ТЗ.Колонки.Добавить("Количество");

	Для каждого ТЧ Из ТаблицаИспытаний Цикл
		Если ТЧ.Пометка Тогда
			Если Не ТЧ.Перемещено Тогда
				Если ЗначениеЗаполнено(ТЧ.ДатаВыпуска) Тогда
				ТЧ_ТЗ = ТЗ.Добавить();
				ТЧ_ТЗ.МестоХранения = ТЧ.ПЗ.Линейка.МестоХраненияГП;
				ТЧ_ТЗ.Изделие = ТЧ.ПЗ.Изделие;
				ТЧ_ТЗ.Количество = ТЧ.ПЗ.Количество;
				Иначе
				ТЧ.Пометка = Ложь;
				Сообщить(ТЧ.ПЗ.Номер+" - изделие не изготовлено!");
				КонецЕсли;
			Иначе
			ТЧ.Пометка = Ложь;
			Сообщить(ТЧ.ПЗ.Номер+" - изделие уже перемещено!");
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла; 
ТЗ.Свернуть("МестоХранения,Изделие","Количество");
ТЗ.Сортировать("МестоХранения,Изделие");
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
		Если Найти(РабочееМесто.Наименование,"ПСИ") > 0 Тогда
		МестоХраненияИспытаний = Справочники.МестаХранения.НайтиПоНаименованию("Склад ПСИ и поверка",Истина);
		Иначе	
		МестоХраненияИспытаний = Справочники.МестаХранения.НайтиПоНаименованию("Склад ОМО",Истина);		
		КонецЕсли;
	Перемещение = Неопределено;
	МестоХранения = Неопределено;
		Для каждого ТЧ Из ТЗ Цикл
			Если МестоХранения <> ТЧ.МестоХранения Тогда
				Если МестоХранения <> Неопределено Тогда
				Перемещение.Записать(РежимЗаписиДокумента.Проведение);
				КонецЕсли;				
			МестоХранения = ТЧ.МестоХранения;
			Перемещение = Документы.ДвижениеМПЗ.СоздатьДокумент();
			Перемещение.Дата = ТекущаяДата();
			Перемещение.УстановитьНовыйНомер(ПрисвоитьПрефикс(МестоХранения.Подразделение));
			Перемещение.Автор = ПараметрыСеанса.Пользователь;
			Перемещение.Подразделение = МестоХранения.Подразделение;
			Перемещение.МестоХранения = МестоХранения;
			Перемещение.МестоХраненияВ = МестоХраненияИспытаний;
			КонецЕсли;
		ТЧ_П = Перемещение.ТабличнаяЧасть.Добавить();
		ТЧ_П.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
		ТЧ_П.МПЗ = ТЧ.Изделие;
		ТЧ_П.Количество = ТЧ.Количество;
		ТЧ_П.ЕдиницаИзмерения = ТЧ.Изделие.ОсновнаяЕдиницаИзмерения;
		КонецЦикла; 
			Если МестоХранения <> Неопределено Тогда
			Перемещение.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли;
				Для каждого ТЧ Из ТаблицаИспытаний Цикл
					Если ТЧ.Пометка Тогда
						Если Не ТЧ.Перемещено Тогда	
						ПЗ = ТЧ.ПЗ.ПолучитьОбъект();
						ПЗ.Перемещено = Истина;
						ПЗ.Записать(РежимЗаписиДокумента.Запись);
						ТЧ.Перемещено = Истина;
						ТЧ.Пометка = Ложь;
						КонецЕсли;
					КонецЕсли;	
				КонецЦикла;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	КонецПопытки;	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПеремещениеНаИспытания(Команда)
СоздатьПеремещениеНаИспытанияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПолучитьСПНаСервере()
ТаблицаСП.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.СторонняяПоверка = ИСТИНА
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Линейка,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.Номер";
Запрос.УстановитьПараметр("СписокЛинеек", СписокЛинеек);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаСП.Добавить();
	ТЧ.ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
	ТЧ.БарКод = ВыборкаДетальныеЗаписи.ПЗ.БарКод;
	ТЧ.РабочееМесто = ВыборкаДетальныеЗаписи.РабочееМесто;
		Если ТипЗнч(ВыборкаДетальныеЗаписи.ПЗ.ДокументОснование) = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда	
		ТЧ.СЦ = ВыборкаДетальныеЗаписи.ПЗ.ДокументОснование.СервисЦентр;
		ТЧ.КЗ = ПолучитьКЗ(ВыборкаДетальныеЗаписи.ПЗ);
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСП(Команда)
ПолучитьСПНаСервере();
КонецПроцедуры

&НаСервере
Процедура СнятьСПНаСервере()
	Для каждого ТЧ Из ТаблицаСП Цикл
		Если ТЧ.Пометка Тогда
			Попытка
			ПЗ = ТЧ.ПЗ.ПолучитьОбъект();
			ПЗ.СторонняяПоверка = Ложь;
			ПЗ.Записать(РежимЗаписиДокумента.Запись);
			Исключение
			Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьСП(Команда)
СнятьСПНаСервере();
ПолучитьСПНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыбратьИзФайлаНаСервере(БарКод)
	Для каждого ТЧ Из ТаблицаСП Цикл
		Если СокрЛП(ТЧ.ПЗ.БарКод) = БарКод Тогда
		ТЧ.Пометка = Истина;		
		КонецЕсли;          
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзФайла(Команда)
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл c бар-кодами");
	Если Результат <> Неопределено Тогда
		Для каждого ТЧ Из ТаблицаСП Цикл
		ТЧ.Пометка = Ложь;		         
		КонецЦикла;
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок;
	    Для к = 2 по КолСтрок Цикл
		Состояние("Обработка...",к*100/КолСтрок,"Выбрать бар-коды из файла..."); 
		ВыбратьИзФайлаНаСервере(СокрЛП(ExcelЛист.Cells(к,1).Value));
	    КонецЦикла;
	Результат.Excel.Quit();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СоздатьЗаявкуНаПоверкуНаСервере()
БазаУТ = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Справочники.ОбменДанными.НайтиПоНаименованию(Константы.БазаДанных1ССбыт.Получить(),Истина));
	Если БазаУТ = Неопределено Тогда
	Сообщить("Не установлена связь с базой УТ");
	Возврат(Неопределено);
	КонецЕсли;
ТабДок = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблТовар = Макет.ПолучитьОбласть("Товар");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.НаДату = Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy; ДЛФ=DD");
ТабДок.Вывести(ОблШапка);

НомСтр = 1;
	Для каждого ТЧ Из ТаблицаСП Цикл
		Если ТЧ.Пометка Тогда
		Товар = ТЧ.ПЗ.Изделие;
	 	бсНомен = БазаУТ.Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",ОбщийМодульВызовСервера.ПолучитьАртикулПоКодуТовара(Товар.Код));
			Если Не бсНомен.Пустая() Тогда
			НомерРеестра = СокрЛП(бсНомен.ИМРегистрационныйНомер);				
			Иначе
			НомерРеестра = "";
			КонецЕсли;
		ОблТовар.Параметры.НомСтр = НомСтр;
		ОблТовар.Параметры.ПолноеНаименование = СокрЛП(Товар.ПолнНаименование);
		ОблТовар.Параметры.Наименование = СокрЛП(Товар.Наименование);
		ОблТовар.Параметры.БарКод = ТЧ.БарКод;
		ОблТовар.Параметры.НомерРеестра = НомерРеестра;
		ОблТовар.Параметры.ДатаВыпуска = ПолучитьДатуВыпуска(ТЧ.ПЗ); 
		ТабДок.Вывести(ОблТовар);
		НомСтр = НомСтр + 1;
		КонецЕсли; 
	КонецЦикла;
ТабДок.Вывести(ОблКонец);	
ТабДок.ФиксацияСверху = 2;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура СоздатьЗаявкуНаПоверку(Команда)
ТД = СоздатьЗаявкуНаПоверкуНаСервере();
	Если ТД <> Неопределено Тогда
	ТД.Показать("Заявка на стороннюю поверку");
	КонецЕсли;
КонецПроцедуры
