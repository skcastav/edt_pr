
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЭтаФорма.Параметры.Свойство("ГруппаМатериалов") Тогда
	Объект.ГруппаМатериалов = ЭтаФорма.Параметры.ГруппаМатериалов;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция НеВходитВСпецификации(Материал)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НормыРасходовСрезПоследних.НормаРасходов КАК НормаРасходов
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(, Элемент = &Элемент) КАК НормыРасходовСрезПоследних
	|ГДЕ
	|	НормыРасходовСрезПоследних.Норма > 0";
Запрос.УстановитьПараметр("Элемент", Материал);
	Если Не Запрос.Выполнить().Пустой() Тогда
	Возврат(Ложь);	
	КонецЕсли;
Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	АналогиНормРасходов.Ссылка КАК Ссылка,
	|	АналогиНормРасходовСрезПоследних.Норма КАК Норма
	|ИЗ
	|	РегистрСведений.АналогиНормРасходов.СрезПоследних КАК АналогиНормРасходовСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АналогиНормРасходов КАК АналогиНормРасходов
	|		ПО АналогиНормРасходовСрезПоследних.АналогНормыРасходов = АналогиНормРасходов.Ссылка
	|ГДЕ
	|	АналогиНормРасходов.Элемент = &Элемент
	|	И АналогиНормРасходовСрезПоследних.Норма > 0";
Запрос.УстановитьПараметр("Элемент", Материал);
	Если Не Запрос.Выполнить().Пустой() Тогда
	Возврат(Ложь);	
	КонецЕсли;
Возврат(Истина);
КонецФункции

&НаСервере
Функция ОсновнойЭлементВСпецификации(Материал)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НормыРасходов.Ссылка,
	|	НормыРасходовСрезПоследних.Норма
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних КАК НормыРасходовСрезПоследних
	|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.НормыРасходов КАК НормыРасходов
	|		ПО НормыРасходовСрезПоследних.НормаРасходов = НормыРасходов.Ссылка
	|ГДЕ
	|	НормыРасходов.Элемент = &Элемент
	|	И НормыРасходовСрезПоследних.Норма > 0";
Запрос.УстановитьПараметр("Элемент", Материал);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(Истина);
	КонецЦикла;
Возврат(Ложь);
КонецФункции

&НаСервере
Функция АналогВСпецификации(Материал)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	АналогиНормРасходов.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.АналогиНормРасходов.СрезПоследних КАК АналогиНормРасходовСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АналогиНормРасходов КАК АналогиНормРасходов
	|		ПО АналогиНормРасходовСрезПоследних.АналогНормыРасходов = АналогиНормРасходов.Ссылка
	|ГДЕ
	|	АналогиНормРасходов.Элемент = &Элемент
	|	И АналогиНормРасходовСрезПоследних.Норма > 0
	|	И АналогиНормРасходов.ПометкаУдаления = ЛОЖЬ";
Запрос.УстановитьПараметр("Элемент", Материал);
РезультатЗапроса = Запрос.Выполнить(); 
Возврат(Не Запрос.Выполнить().Пустой());
КонецФункции

&НаСервере
Функция ИмеетОстаткиНаСкладах(Материал)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	МестаХраненияОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.МестаХранения.Остатки(, МПЗ = &МПЗ) КАК МестаХраненияОстатки
	|ГДЕ
	|	МестаХраненияОстатки.КоличествоОстаток > 0";
Запрос.УстановитьПараметр("МПЗ", Материал);
Возврат(Не Запрос.Выполнить().Пустой());
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуМатериалов(Критерий)
Объект.ТабличнаяЧасть.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Материалы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Материалы КАК Материалы
	|ГДЕ
	|	Материалы.Ссылка В ИЕРАРХИИ(&ГруппаМатериалов)
	|	И Материалы.ЭтоГруппа = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Материалы.Наименование";
Запрос.УстановитьПараметр("ГруппаМатериалов", Объект.ГруппаМатериалов);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = Объект.ТабличнаяЧасть.Добавить();
	ТЧ.МПЗ = ВыборкаДетальныеЗаписи.Ссылка;
		Если Критерий = 1 Тогда
		ТЧ.Удовлетворяет = НеВходитВСпецификации(ВыборкаДетальныеЗаписи.Ссылка);
		ИначеЕсли Критерий = 2 Тогда
		ТЧ.Удовлетворяет = ОсновнойЭлементВСпецификации(ВыборкаДетальныеЗаписи.Ссылка);
		ИначеЕсли Критерий = 3 Тогда
		ТЧ.Удовлетворяет = АналогВСпецификации(ВыборкаДетальныеЗаписи.Ссылка);
		ИначеЕсли Критерий = 4 Тогда
		ТЧ.Удовлетворяет = ИмеетОстаткиНаСкладах(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура НеВходящиеВСпецификации(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	Элементы.Критерий.Заголовок = "Не входящие в спецификации";
	ЗаполнитьТаблицуМатериалов(1);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеЭлементыВСпецификациях(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	Элементы.Критерий.Заголовок = "Основные элементы в спецификациях";
	ЗаполнитьТаблицуМатериалов(2);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АналогиВСпецификациях(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	Элементы.Критерий.Заголовок = "Аналоги в спецификациях";
	ЗаполнитьТаблицуМатериалов(3);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИмеютОстаткиНаСкладах(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	Элементы.Критерий.Заголовок = "Имеют остатки на складах";
	ЗаполнитьТаблицуМатериалов(4);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГруппаМатериаловПриИзменении(Элемент)
Объект.ТабличнаяЧасть.Очистить();
Элементы.Критерий.Заголовок = "";
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
ТекФорма = ПолучитьФорму("Справочник.Материалы.ФормаСписка");
ТекФорма.Открыть();
ТекФорма.Элементы.Список.ТекущаяСтрока = Элементы.ТабличнаяЧасть.ТекущиеДанные.МПЗ;
КонецПроцедуры
