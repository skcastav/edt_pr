
&НаСервере
Процедура ПриСозданииНаСервере()
СортироватьПо = 1;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
    ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
    ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
    Сообщить(ТекстСообщения);
   	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаСервере
Функция НайтиПЗ(Данные)
Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,";");
	Если Массив[0] = "3" Тогда
	МестоХраненияПотребитель = ЗначениеИзСтрокиВнутр(Массив[1]);
	Спецификация = ЗначениеИзСтрокиВнутр(Массив[3]);
	НомерЯчейки = Число(Массив[5]);
		Для каждого ТЧ Из Объект.ТаблицаПЗ Цикл
			Если ТЧ.ПроизводственноеЗадание.ДокументОснование.МестоХраненияПотребитель = МестоХраненияПотребитель Тогда	
				Если ТЧ.ПроизводственноеЗадание.Изделие = Спецификация Тогда
					Если ТЧ.ПроизводственноеЗадание.ДокументОснование.НомерЯчейки = НомерЯчейки Тогда
					Возврат(ТЧ.ПолучитьИдентификатор());
					КонецЕсли; 
				КонецЕсли; 	
		    КонецЕсли;
		КонецЦикла;
	Иначе
	МТК = ЗначениеИзСтрокиВнутр(Массив[0]);
		Для каждого ТЧ Из Объект.ТаблицаПЗ Цикл
			Если ТЧ.ПроизводственноеЗадание.ДокументОснование = МТК Тогда	
			Возврат(ТЧ.ПолучитьИдентификатор()); 	
		    КонецЕсли;
		КонецЦикла;
	КонецЕсли; 
Возврат(Неопределено);
КонецФункции

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
	ВыбСтрока = НайтиПЗ(Данные);
		Если ВыбСтрока <> Неопределено Тогда
		Элементы.ТаблицаПЗ.ТекущаяСтрока = ВыбСтрока;
		Иначе	
		Сообщить("Производственное задание не найдено!");
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалОбновленияПриИзменении(Элемент)
ОтключитьОбработчикОжидания("ПолучитьДанные");
	Если Объект.ИнтервалОбновления > 0 Тогда
	ПодключитьОбработчикОжидания("ПолучитьДанные", Объект.ИнтервалОбновления*60);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПоПриИзменении(Элемент)
	Если СортироватьПо = 1 Тогда
	Объект.ТаблицаПЗ.Сортировать("ПроизводственноеЗадание");
	ИначеЕсли СортироватьПо = 2 Тогда
	Объект.ТаблицаПЗ.Сортировать("Потребитель");		
	ИначеЕсли СортироватьПо = 3 Тогда
	Объект.ТаблицаПЗ.Сортировать("Изделие");
	ИначеЕсли СортироватьПо = 4 Тогда
	Объект.ТаблицаПЗ.Сортировать("ДатаНачала");	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция МожноРаботатьВАРМ()
	Если ОбщийМодульВызовСервера.МожноВыполнить(Объект.Линейка) Тогда	
	Возврат(Истина);
	Иначе
	Объект.Линейка = Справочники.Линейки.ПустаяСсылка();
	Сообщить("Работа АРМ запрещена в этой базе!");
	Возврат(Ложь);
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ЛинейкаПриИзменении(Элемент)
	Если Не МожноРаботатьВАРМ() Тогда
	Возврат;
	КонецЕсли;
ПолучитьДанныеНаСервере();
СортироватьПоПриИзменении(Неопределено);
	Если Объект.ИнтервалОбновления > 0 Тогда
	ПодключитьОбработчикОжидания("ПолучитьДанные", Объект.ИнтервалОбновления*60);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПроверитьЛОПотребителя(Изделие,МестоХраненияКанбанов)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЛьготнаяОчередьСрезПоследних.ПЗ
	|ИЗ
	|	РегистрСведений.ЛьготнаяОчередь.СрезПоследних КАК ЛьготнаяОчередьСрезПоследних
	|ГДЕ
	|	ЛьготнаяОчередьСрезПоследних.НормаРасходов.Элемент = &МПЗ
	|	И ЛьготнаяОчередьСрезПоследних.Линейка.МестоХраненияКанбанов = &МестоХраненияКанбанов
	|	И ЛьготнаяОчередьСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
Запрос.УстановитьПараметр("МПЗ", Изделие);
Запрос.УстановитьПараметр("МестоХраненияКанбанов", МестоХраненияКанбанов);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(Истина);
	КонецЦикла;
Возврат(Ложь);
КонецФункции

&НаСервере
Функция ПроверитьЛО(Изделие)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЛьготнаяОчередьСрезПоследних.ПЗ
	|ИЗ
	|	РегистрСведений.ЛьготнаяОчередь.СрезПоследних КАК ЛьготнаяОчередьСрезПоследних
	|ГДЕ
	|	ЛьготнаяОчередьСрезПоследних.Изделие = &Изделие
	|	И ЛьготнаяОчередьСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
Запрос.УстановитьПараметр("Изделие", Изделие);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(Истина);
	КонецЦикла;
Возврат(Ложь);
КонецФункции

&НаСервере
Процедура ПолучитьДанныеНаСервере()
Объект.ТаблицаПЗ.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ КАК ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала КАК ДатаНачала,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Период КАК Период,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Исполнитель КАК Исполнитель,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто КАК РабочееМесто
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Линейка = &Линейка
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
Запрос.УстановитьПараметр("Линейка",Объект.Линейка);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
	ТЧ = Объект.ТаблицаПЗ.Добавить();
	ТЧ.Потребитель = ПЗ.ДокументОснование.МестоХраненияПотребитель;
	ТЧ.ПроизводственноеЗадание = ПЗ;
	ТЧ.РабочееМесто = ВыборкаДетальныеЗаписи.РабочееМесто;
	ТЧ.Исполнитель = ВыборкаДетальныеЗаписи.Исполнитель;
	ТЧ.Изделие = ПЗ.Изделие;
	ТЧ.ДатаСоздания = ПЗ.Дата;
	ТЧ.ДатаНачала = ВыборкаДетальныеЗаписи.ДатаНачала;
	ТЧ.ЛО = ПроверитьЛО(ТЧ.Изделие);
	ТЧ.ЛОПотребителя = ПроверитьЛОПотребителя(ТЧ.Изделие,ТЧ.Потребитель);
	ТЧ.КоличествоНаСкладеГП = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокПоМестуХранения(Объект.Линейка.МестоХраненияГП,ТЧ.Изделие);
		Если ПЗ.Прессформы.Количество() > 0 Тогда
		ТЧ.Оборудование = СокрЛП(ПЗ.Прессформы[0].Станок.Наименование)+"-"+СокрЛП(ПЗ.Прессформы[0].Прессформа.Наименование);
		КонецЕсли;
	ТЧ.Остановлено = ПЗ.Остановлено;
	КонецЦикла;
КонецПроцедуры
 
&НаКлиенте
Процедура ПолучитьДанные() Экспорт 
ПолучитьДанныеНаСервере();
СортироватьПоПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
ПолучитьДанныеНаСервере();
СортироватьПоПриИзменении(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ПолучитьТехОснастку(СписокТО,ЭтапСпецификации,КолУзла)
ВыборкаНР = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н_ТОсн(ЭтапСпецификации,ТекущаяДата());
	Пока ВыборкаНР.Следующий() Цикл
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.ТехОснастка") Тогда
		СписокТО.Добавить(ВыборкаНР.Элемент,Строка(ВыборкаНР.Норма*КолУзла));					
		Иначе
			Если ВыборкаНР.Элемент.Канбан.Пустая() Тогда
			ПолучитьТехОснастку(СписокТО,ВыборкаНР.Элемент,ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла);
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПринятьВРаботуНаСервере(Стр)
ТЧ = Объект.ТаблицаПЗ.НайтиПоИдентификатору(Стр);
ПЗ = ТЧ.ПроизводственноеЗадание;
	Если Не ЗначениеЗаполнено(ПЗ.ДатаЗапуска) Тогда
		Если Не ОбщийМодульВызовСервера.СоздатьТаблицуЭтаповПроизводства(ПЗ,Этапы,ЭтапыАРМ,ТЧ.РабочееМесто,ПараметрыСеанса.Пользователь) Тогда	
		Возврат(Ложь);			
		КонецЕсли;
			Попытка
			НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1; 
			Результат = ОбщийМодульВызовСервера.ЗапуститьВПроизводство(ПЗ,ТЧ.РабочееМесто,Этапы,,Истина);
				Если Результат = 1 Тогда
					Если ТЧ.РабочееМесто.ЗаполнитьТехОснастку Тогда
					СписокТО = Новый СписокЗначений;

					ПолучитьТехОснастку(СписокТО,ПЗ.Изделие,ПЗ.Количество);
						Если СписокТО.Количество() > 0 Тогда
						ПЗОбъект = ПЗ.ПолучитьОбъект();
							Для каждого ТО Из СписокТО Цикл
							Выборка = ПЗОбъект.Оборудование.НайтиСтроки(Новый Структура("Оборудование",ТО.Значение));
								Если Выборка.Количество() = 0 Тогда
								ТЧ_О = ПЗОбъект.Оборудование.Добавить();
								ТЧ_О.Оборудование = ТО.Значение;
								ТЧ_О.Количество = Число(ТО.Представление);						
								КонецЕсли; 						
							КонецЦикла;
						ПЗОбъект.Записать();
						Иначе
						Сообщить("Тех. оснастка не найдена в спецификации!");	
						ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);			
						Возврат(Ложь);
						КонецЕсли; 
					КонецЕсли;
				ТЧ.ДатаНачала = ТекущаяДата();
					Если ТЧ.Изделие.Канбан.Подразделение.ОформлятьПустыеКанбаны > 0 Тогда
					ОбщийМодульРаботаСРегистрами.ОформитьПринятиеКанбана(Объект.Линейка.МестоХраненияГП,ТЧ.Потребитель,ТЧ.Изделие,ПЗ.ДокументОснование.НомерЯчейки,ПараметрыСеанса.Пользователь);
					КонецЕсли;	
				КонецЕсли;
			ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
			ТЧ.ЛО = ПроверитьЛО(ТЧ.Изделие);
			ТЧ.ЛОПотребителя = ПроверитьЛОПотребителя(ТЧ.Изделие,ТЧ.Потребитель);
				Если Не ТЧ.ЛО Тогда	
				Возврат(Истина);
				КонецЕсли; 
			Исключение
			Сообщить(ОписаниеОшибки());
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);			
			КонецПопытки;
	КонецЕсли;
Возврат(Ложь); 
КонецФункции

&НаКлиенте
Процедура ПринятьВРаботу(Команда)
	Если Элементы.ТаблицаПЗ.ТекущаяСтрока <> Неопределено Тогда
		Если Не ЗначениеЗаполнено(Элементы.ТаблицаПЗ.ТекущиеДанные.ДатаНачала) Тогда
			Если Не ОбщийМодульВызовСервера.МТКОстановлена(Элементы.ТаблицаПЗ.ТекущиеДанные.ПроизводственноеЗадание) Тогда	
				Если ПринятьВРаботуНаСервере(Элементы.ТаблицаПЗ.ТекущаяСтрока) Тогда
				//Результат = ОткрытьФормуМодально("Обработка.РабочееМестоКанбанВнутреннийПоставщикНовый.Форма.ФормаОборудование",Новый Структура("ПроизводственноеЗадание",Элементы.ТаблицаПЗ.ТекущиеДанные.ПроизводственноеЗадание));
				//	Если Результат <> Неопределено Тогда
				//	Элементы.ТаблицаПЗ.ТекущиеДанные.Оборудование = Результат;						
				//	КонецЕсли; 
						Если ПечатьСпецификации Тогда
						ПечатьТекущейСпецификации(Неопределено);
						КонецЕсли;
							Если ЭтоТовар(Элементы.ТаблицаПЗ.ТекущиеДанные.Изделие) Тогда
							П = Новый Структура("ПЗ,РабочееМесто",Элементы.ТаблицаПЗ.ТекущиеДанные.ПроизводственноеЗадание,Элементы.ТаблицаПЗ.ТекущиеДанные.РабочееМесто);
							ОткрытьФорму("Обработка.СозданныеБарКоды.Форма.Форма",П);
							КонецЕсли;
				Иначе
				Сообщить("Производственное задание не принято в работу!");
				КонецЕсли;
			Иначе
			Сообщить("По выбранному производственному заданию остановлена МТК!");
			КонецЕсли;
		Иначе
		Сообщить("Выбранное производственное задание уже принято в работу!");	
		КонецЕсли;	
	Иначе
	Сообщить("Выберите производственное задание!");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ЗавершитьНаСервере(Стр,НомерВТ,Исполнитель)
ТЧ = Объект.ТаблицаПЗ.НайтиПоИдентификатору(Стр);
	Если Не ЗначениеЗаполнено(ТЧ.ДатаНачала) Тогда
	Сообщить("Выбранное производственное задание ещё не принято в работу!");
	Возврат(Ложь);
	КонецЕсли;
ПЗ = ТЧ.ПроизводственноеЗадание;
ДатаОкончания = ТекущаяДата();
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Парам = Новый Структура("РабочееМесто,ДатаОкончания,Исполнитель",ТЧ.РабочееМесто,ДатаОкончания,Исполнитель);
	ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(ПЗ,Парам);
		Если Не ОбщийМодульСозданиеДокументов.СоздатьВыпускПродукцииКанбан(ПЗ,ДатаОкончания) Тогда
		Сообщить("Документ выпуска по ПЗ "+ПЗ.Номер+" не создан!");
		ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
		Возврат(Ложь);
		КонецЕсли;
			Если ЗначениеЗаполнено(НомерВТ) Тогда
			ПЗОбъект = ПЗ.ПолучитьОбъект();
			ПЗОбъект.ВозвратнаяТара = НомерВТ;
			ПЗОбъект.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли; 
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Объект.ТаблицаПЗ.Удалить(ТЧ);
	Возврат(Истина);	
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Ложь);
	КонецПопытки;
КонецФункции

&НаСервере
Функция ЭтоСлужебныйКанбан(Изделие)
Возврат(Изделие.Канбан.Служебный); 
КонецФункции

&НаСервере
Функция ПолучитьКодБазы()
Возврат(Константы.КодБазы.Получить()); 
КонецФункции

&НаКлиенте
Процедура ЗавершитьКорректировка(Команда)
	Если Элементы.ТаблицаПЗ.ТекущаяСтрока <> Неопределено Тогда
		Если Не ОбщийМодульВызовСервера.МТКОстановлена(Элементы.ТаблицаПЗ.ТекущиеДанные.ПроизводственноеЗадание) Тогда
			Если Не Элементы.ТаблицаПЗ.ТекущиеДанные.Остановлено Тогда
			Результат = ОткрытьФормуМодально("Обработка.РабочееМестоКанбанУчетПрессформ.Форма.ФормаОборудование",Новый Структура("ПроизводственноеЗадание",Элементы.ТаблицаПЗ.ТекущиеДанные.ПроизводственноеЗадание));
				Если Результат = Неопределено Тогда
				Сообщить("Изменения по прессформам не внесены!");
				Возврат;						
				КонецЕсли; 
			НомерВТ = "";
				Если ПолучитьКодБазы() = "БГР" Тогда
					Если ЭтоСлужебныйКанбан(Элементы.ТаблицаПЗ.ТекущиеДанные.Изделие) Тогда
						Если ВвестиСтроку(НомерВТ,"Введите номер возвратной тары",4,Ложь) Тогда
							Если Не ЗначениеЗаполнено(НомерВТ) Тогда					
							Сообщить("Введите номер возвратной тары!");
							Возврат;
							КонецЕсли; 
						Иначе
						Сообщить("Введите номер возвратной тары!");
						Возврат;
						КонецЕсли; 
					КонецЕсли;
				КонецЕсли; 
			ЗавершитьНаСервере(Элементы.ТаблицаПЗ.ТекущаяСтрока,НомерВТ,Результат); 			
			Иначе				
			Сообщить("Производственное задание остановлено!");
			КонецЕсли;
		Иначе
		Сообщить("По выбранному производственному заданию остановлена МТК!");
		КонецЕсли;	
	Иначе
	Сообщить("Выберите производственное задание!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПечатьТекущейСпецификации(Команда)
ОткрытьФорму("Отчет.ПечатьСпецификацииСУчётомАналогов.Форма.ФормаОтчета",Новый Структура("ПЗ",Элементы.ТаблицаПЗ.ТекущиеДанные.ПроизводственноеЗадание));
КонецПроцедуры

&НаСервере
Функция ПечатьМТКНаСервере(Стр)
ТабДок = Новый ТабличныйДокумент;

Макет = ПолучитьОбщийМакет("МТКДетали");
ОблМТК = Макет.ПолучитьОбласть("МТК");
ОблЭтикетка = Макет.ПолучитьОбласть("Этикетка");
ТЧ = Объект.ТаблицаПЗ.НайтиПоИдентификатору(Стр);
МТК = ТЧ.ПроизводственноеЗадание.ДокументОснование;
QRCode = ЗначениеВСтрокуВнутр(МТК);
ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRCode, 0, 100);	
	Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
	КартинкаQRКода = Новый Картинка(ДанныеQRКода);
	ОблМТК.Рисунки.QRCode.Картинка = КартинкаQRКода;
	Иначе
	Сообщить("Не удалось сформировать QR-код!");
	КонецЕсли;
ОблМТК.Параметры.МТКНомер = МТК.Номер;
ОблМТК.Параметры.ДатаСоздания = МТК.Дата;
ОблМТК.Параметры.Счёт = МТК.Счёт;
ОблМТК.Параметры.Номенклатура = СокрЛП(МТК.Номенклатура.Наименование);
ОблМТК.Параметры.Количество = МТК.Количество;
ОблМТК.Параметры.ЕдиницаИзмерения = МТК.Номенклатура.ЕдиницаИзмерения;
ТабДок.Вывести(ОблМТК);
ОблЭтикетка.Параметры.Линейка = МТК.Линейка;
ОблЭтикетка.Параметры.МТКНомер = МТК.Номер;
ОблЭтикетка.Параметры.ДатаСоздания = МТК.Дата;
ОблЭтикетка.Параметры.Номенклатура = СокрЛП(МТК.Номенклатура.Наименование);
ОблЭтикетка.Параметры.Количество = МТК.Количество;
ОблЭтикетка.Параметры.ЕдиницаИзмерения = МТК.Номенклатура.ЕдиницаИзмерения;
ТабДок.Вывести(ОблЭтикетка);
ТабДок.РазмерСтраницы = "A4";
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьМТК(Команда)
ТабДок = ПечатьМТКНаСервере(Элементы.ТаблицаПЗ.ТекущаяСтрока);
ТабДок.Показать("МТК детали");
КонецПроцедуры

&НаСервере
Функция ЭтоТовар(Изделие)
Возврат(ЗначениеЗаполнено(Изделие.Товар));	
КонецФункции

&НаКлиенте
Процедура ПечатьДокументов(Команда)
	Если ЭтоТовар(Элементы.ТаблицаПЗ.ТекущиеДанные.Изделие) Тогда
	П = Новый Структура("ПЗ,РабочееМесто",Элементы.ТаблицаПЗ.ТекущиеДанные.ПроизводственноеЗадание,Элементы.ТаблицаПЗ.ТекущиеДанные.РабочееМесто);
	ОткрытьФорму("Обработка.СозданныеБарКоды.Форма.Форма",П);	
	Иначе	
	Сообщить("Изделию не присвоен товар!");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ТаблицаПЗОстановленоПриИзмененииНаСервере(ПЗ,флУстановлено)
ПЗ_Объект = ПЗ.ПолучитьОбъект();
ПЗ_Объект.Остановлено = флУстановлено;
ПЗ_Объект.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПЗОстановленоПриИзменении(Элемент)
	Если Элементы.ТаблицаПЗ.ТекущиеДанные.Остановлено Тогда
		Если Вопрос("Вы действительно хотите остановить ПЗ", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ТаблицаПЗОстановленоПриИзмененииНаСервере(Элементы.ТаблицаПЗ.ТекущиеДанные.ПроизводственноеЗадание,Истина);		
		Иначе
		Элементы.ТаблицаПЗ.ТекущиеДанные.Остановлено = Ложь;
		КонецЕсли; 	
	Иначе	
		Если Вопрос("Вы действительно хотите снять ПЗ с остановки", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ТаблицаПЗОстановленоПриИзмененииНаСервере(Элементы.ТаблицаПЗ.ТекущиеДанные.ПроизводственноеЗадание,Ложь);		
		Иначе
		Элементы.ТаблицаПЗ.ТекущиеДанные.Остановлено = Истина;
		КонецЕсли; 	
	КонецЕсли; 
КонецПроцедуры
