
&НаСервере
Процедура ДобавитьНаСервере(NAME,NUM) 
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Материалы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Материалы КАК Материалы
	|ГДЕ
	|	Материалы.Наименование = &Наименование
	|	И Материалы.ПометкаУдаления = ЛОЖЬ
	|	И Материалы.ЭтоГруппа = ЛОЖЬ";
Запрос.УстановитьПараметр("Наименование", СокрЛП(NAME));
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Статус = ПолучитьСтатус(ВыборкаДетальныеЗаписи.Ссылка);
		Если Статус <> Перечисления.СтатусыМПЗ.Запрещённая Тогда
		ТЧ = ТаблицаТНП.Добавить();
	    ТЧ.ТНП = ВыборкаДетальныеЗаписи.Ссылка;
		ТЧ.Потребность = NUM;
		Возврат;
		КонецЕсли;
	КонецЦикла;
Сообщить(NAME+" - не найден ТНП в разрешённом статусе!");
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл");
	Если Результат <> Неопределено Тогда
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок;
	флНеНайден = Ложь;
	    Для к = 2 по КолСтрок Цикл
		Состояние("Обработка...",к*100/КолСтрок,"Загрузка МПЗ из файла..."); 
		ДобавитьНаСервере(ExcelЛист.Cells(к,1).Value,ExcelЛист.Cells(к,2).Value);
	    КонецЦикла;
	Результат.Excel.Quit();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТНПТНППриИзменении(Элемент)
Элементы.ТаблицаТНП.ТекущиеДанные.КоличествоОстатокМХ = 0;
Элементы.ТаблицаТНП.ТекущиеДанные.КоличествоОстатокДолги = 0;
Элементы.ТаблицаТНП.ТекущиеДанные.НЗ_Процент = 0;
Элементы.ТаблицаТНП.ТекущиеДанные.КоличествоОстатокЗП = 0;
Элементы.ТаблицаТНП.ТекущиеДанные.РезервКомплектов = 0;
Элементы.ТаблицаТНП.ТекущиеДанные.КоличествоКЗ = 0;
Элементы.ТаблицаТНП.ТекущиеДанные.СрокПоставкиДни = 0;
Элементы.ТаблицаТНП.ТекущиеДанные.ДатаОтгрузки = Дата(1,1,1);
Элементы.ТаблицаТНП.ТекущиеДанные.КоличествоОстатокРезерв = 0;
Элементы.ТаблицаТНП.ТекущиеДанные.КоличествоОстатокТранзит = 0;
Элементы.ТаблицаТНП.ТекущиеДанные.ДатаОтгрузкиДней = 0;
Элементы.ТаблицаТНП.ТекущиеДанные.Ошибка = 0;
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоОстатокЗП(ТНП)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыПоставщикамОстатки.МПЗ КАК МПЗ,
	|	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&НаДату, МПЗ = &МПЗ) КАК ЗаказыПоставщикамОстатки
	|ИТОГИ
	|	СУММА(КоличествоОстаток)
	|ПО
	|	МПЗ";
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());  
Запрос.УстановитьПараметр("МПЗ", ТНП); 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМПЗ.Следующий() Цикл
	Возврат(ВыборкаМПЗ.КоличествоОстаток); 
	КонецЦикла;
Возврат(0);
КонецФункции

&НаСервере
Функция ПолучитьКоличествоОстатокРезерв(ТНП)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РезервированиеГПОстатки.Продукция КАК Продукция,
	|	РезервированиеГПОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.РезервированиеГП.Остатки(
	|			&НаДату,
	|			МестоХранения = &МестоХранения
	|				И Продукция = &Продукция) КАК РезервированиеГПОстатки
	|ИТОГИ
	|	СУММА(КоличествоОстаток)
	|ПО
	|	Продукция";
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("МестоХранения", Константы.МестоХраненияТНП.Получить());  
Запрос.УстановитьПараметр("Продукция", ТНП); 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаПродукция = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПродукция.Следующий() Цикл
	Возврат(ВыборкаПродукция.КоличествоОстаток); 
	КонецЦикла;
Возврат(0);
КонецФункции

&НаСервере
Функция ПолучитьКоличествоОстатокДолг(ТНП)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДолгиОстатки.Продукция КАК Продукция,
	|	ДолгиОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.Долги.Остатки(&НаДату, Продукция = &Продукция) КАК ДолгиОстатки
	|ИТОГИ
	|	СУММА(КоличествоОстаток)
	|ПО
	|	Продукция";
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("Продукция", ТНП);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаПродукция = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПродукция.Следующий() Цикл
	Возврат(ВыборкаПродукция.КоличествоОстаток);
	КонецЦикла;
Возврат(0);
КонецФункции

&НаСервере
Функция ПолучитьКоличествоРК(ТНП)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПерспективныеПланы.МПЗ КАК МПЗ,
	|	ПерспективныеПланы.РезКм КАК РезКм
	|ИЗ
	|	РегистрСведений.ПерспективныеПланы КАК ПерспективныеПланы
	|ГДЕ
	|	ПерспективныеПланы.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И ПерспективныеПланы.МПЗ = &МПЗ
	|	И ПерспективныеПланы.РезКм > 0";
Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ТекущаяДата())); 
Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(ТекущаяДата())); 
Запрос.УстановитьПараметр("МПЗ", ТНП); 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныхЗаписей = РезультатЗапроса.Выбрать();
РезКм = 0;
	Пока ВыборкаДетальныхЗаписей.Следующий() Цикл
	РезКм = РезКм + ВыборкаДетальныхЗаписей.РезКм; 
	КонецЦикла;
Возврат(РезКм);
КонецФункции

&НаСервере
Функция ПолучитьКоличествоКЗ(ТНП)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	КрупныеЗаказы.Продукция КАК Продукция,
	|	КрупныеЗаказы.Количество КАК Количество
	|ИЗ
	|	РегистрСведений.КрупныеЗаказы КАК КрупныеЗаказы
	|ГДЕ
	|	КрупныеЗаказы.Продукция = &Продукция
	|	И КрупныеЗаказы.ДатаРезерва <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И КрупныеЗаказы.Обработан = ЛОЖЬ
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Продукция";
Запрос.УстановитьПараметр("Продукция", ТНП); 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаПродукция = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПродукция.Следующий() Цикл
	Возврат(ВыборкаПродукция.Количество); 
	КонецЦикла;
Возврат(0);
КонецФункции

&НаСервере
Функция ПолучитьДатуПоставки(ЗаказПоставщику,МПЗ)
Возврат(ЗаказПоставщику.ТабличнаяЧасть.Найти(МПЗ,"МПЗ").ДатаПоставки);
КонецФункции

&НаСервере
Функция ПолучитьДатуПослеРаспределенияЗП(ТНП,КоличествоНераспределено)
Запрос = Новый Запрос;
ТаблицаОстатков = Новый ТаблицаЗначений;

ТаблицаОстатков.Колонки.Добавить("ДатаПоставки");
ТаблицаОстатков.Колонки.Добавить("Количество");

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&НаДату, ) КАК ЗаказыПоставщикамОстатки
	|ГДЕ
	|	ЗаказыПоставщикамОстатки.МПЗ = &МПЗ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказыПоставщикамОстатки.ЗаказПоставщику
	|ИТОГИ
	|	СУММА(КоличествоОстаток)
	|ПО
	|	ЗаказПоставщику";
Запрос.УстановитьПараметр("НаДату",ТекущаяДата());
Запрос.УстановитьПараметр("МПЗ",ТНП);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаЗП = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЗП.Следующий() Цикл
	ТЧ = ТаблицаОстатков.Добавить();
	ТЧ.Количество = ВыборкаЗП.КоличествоОстаток;
	ТЧ.ДатаПоставки = ПолучитьДатуПоставки(ВыборкаЗП.ЗаказПоставщику,ТНП);		 
	КонецЦикла;
ТаблицаОстатков.Свернуть("ДатаПоставки","Количество");
ТаблицаОстатков.Сортировать("ДатаПоставки");
	Для каждого ТЧ Из ТаблицаОстатков Цикл
		Если ТЧ.Количество >= КоличествоНераспределено Тогда
		Возврат(ТЧ.ДатаПоставки);
		Иначе
		КоличествоНераспределено = КоличествоНераспределено - ТЧ.Количество;
		КонецЕсли;  
	КонецЦикла;
Возврат(Неопределено);
КонецФункции

&НаСервере
Функция ПолучитьКоличествоПраздничныхДней(ДатаОтгрузки)
КоличествоПраздничныхДней = 0;
ТекДата = НачалоДня(ТекущаяДата());	
	Пока ТекДата <> ДатаОтгрузки Цикл	
	ДПК = РегистрыСведений.ДанныеПроизводственногоКалендаря.СоздатьНаборЗаписей();
	ДПК.Отбор.ПроизводственныйКалендарь.Установить(Константы.ОсновнойПроизводственныйКалендарь.Получить());
	ДПК.Отбор.Дата.Установить(ТекДата);
	ДПК.Отбор.Год.Установить(Год(ТекДата));
	ДПК.Прочитать();
	    Для Каждого Запись Из ДПК Цикл
			Если Запись.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник Тогда	
			КоличествоПраздничныхДней = КоличествоПраздничныхДней + 1;
			КонецЕсли; 
		КонецЦикла; 	
	ТекДата = ТекДата + 86400;
	КонецЦикла;
Возврат(КоличествоПраздничныхДней); 
КонецФункции

&НаСервере
Функция ПолучитьДатуОтгрузки(МПЗ,КоличествоСвободныйОстаток)
Запрос = Новый Запрос;

СрокПоставкиПоставщика = Дата(1,1,1);
Запрос.Текст = 
	"ВЫБРАТЬ
	|	СвободныеОстаткиПоставщиков.МПЗ КАК МПЗ,
	|	СвободныеОстаткиПоставщиков.Количество КАК Количество,
	|	СвободныеОстаткиПоставщиков.СрокПоставки КАК СрокПоставки,
	|	СвободныеОстаткиПоставщиков.Период КАК Период
	|ИЗ
	|	РегистрСведений.СвободныеОстаткиПоставщиков КАК СвободныеОстаткиПоставщиков
	|ГДЕ
	|	СвободныеОстаткиПоставщиков.МПЗ = &МПЗ
	|
	|УПОРЯДОЧИТЬ ПО
	|	СвободныеОстаткиПоставщиков.Период";
Запрос.УстановитьПараметр("МПЗ", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Количество >= КоличествоСвободныйОстаток Тогда			
		Возврат(ОбщийМодульВызовСервера.ПолучитьВремяМеждуДатами(НачалоДня(ТекущаяДата()),ВыборкаДетальныеЗаписи.Период,0,Ложь,0,Ложь)+МПЗ.СрокПоставки*5+1);
		Иначе
		КоличествоСвободныйОстаток = КоличествоСвободныйОстаток - ВыборкаДетальныеЗаписи.Количество; 
		КонецЕсли;
	СрокПоставкиПоставщика = ВыборкаДетальныеЗаписи.СрокПоставки; 
	КонецЦикла;
		Если ЗначениеЗаполнено(СрокПоставкиПоставщика) Тогда
		Возврат(СрокПоставкиПоставщика*5);
		Иначе
			Если МПЗ.СрокПоставки > 0 Тогда
			Возврат(МПЗ.СрокПоставки*5+1);
			Иначе
			Возврат(0);
			КонецЕсли;
		КонецЕсли;
КонецФункции 

&НаСервере
Процедура РассчитатьНаСервере()
	Для каждого ТЧ Из ТаблицаТНП Цикл
	ТНП = ТЧ.ТНП;
	ТЧ.КоличествоОстатокМХ = ОбщийМодульВызовСервера.ПолучитьОстатокПоМестуХранения(Константы.МестоХраненияТНП.Получить(),ТНП);
	ТЧ.КоличествоОстатокТранзит = ОбщийМодульВызовСервера.ПолучитьОстатокПоМестуХранения(Константы.МестоХраненияТранзит.Получить(),ТНП);
	ТЧ.КоличествоОстатокЗП = ПолучитьКоличествоОстатокЗП(ТНП);
	ТЧ.КоличествоОстатокРезерв = ПолучитьКоличествоОстатокРезерв(ТНП);
	ТЧ.КоличествоОстатокДолги = ПолучитьКоличествоОстатокДолг(ТНП);
	ТЧ.НЗ_Процент = ОкруглитьДоБольшегоЦелого(ТНП.МинОстаток/100*60);
		Если ТЧ.НЗ_Процент > 0 Тогда
		ТЧ.Крупность = ТЧ.НЗ_Процент;
		Иначе
		Крупность = ОкруглитьДоБольшегоЦелого((ТЧ.КоличествоОстатокМХ-ТЧ.КоличествоОстатокДолги)/100*60);	
		ТЧ.Крупность = ?(Крупность > 0,Крупность,0);		
		КонецЕсли;
	ТЧ.РезервКомплектов = ПолучитьКоличествоРК(ТНП);
	ТЧ.КоличествоКЗ = ПолучитьКоличествоКЗ(ТНП);
	ТЧ.СрокПоставкиДни = ТНП.СрокПоставки*5;
	КоличествоСвободныйОстаток = ТЧ.КоличествоОстатокМХ - ТЧ.КоличествоОстатокДолги + ТЧ.КоличествоОстатокТранзит - ТЧ.КоличествоКЗ - ТЧ.Потребность - ТЧ.РезервКомплектов; 
		Если КоличествоСвободныйОстаток >= 0 Тогда
		ТЧ.ДатаОтгрузкиДней = 1;
		Иначе
			Если ТЧ.КоличествоОстатокЗП > 0 Тогда
				Если (-1*КоличествоСвободныйОстаток) > ТЧ.КоличествоОстатокЗП Тогда
					Если СокрЛП(ТНП.Товар.Статус) = "Снимаемый с производства" Тогда
					ТЧ.Ошибка = 1;
					Иначе
					ТЧ.ДатаОтгрузкиДней = ПолучитьДатуОтгрузки(ТНП,-1*КоличествоСвободныйОстаток); 
						Если ТЧ.ДатаОтгрузкиДней = 0 Тогда
						ТЧ.Ошибка = 2;
						КонецЕсли; 
					КонецЕсли;
				Иначе
				ДатаРаспределения = ПолучитьДатуПослеРаспределенияЗП(ТНП,-1*КоличествоСвободныйОстаток);
					Если ДатаРаспределения <> Неопределено Тогда
					ТЧ.ДатаОтгрузкиДней = ОбщийМодульВызовСервера.ПолучитьВремяМеждуДатами(НачалоДня(ТекущаяДата()),ДатаРаспределения,0,Ложь,0,Истина)+1;
					КонецЕсли; 	
				КонецЕсли;		
			Иначе
				Если СокрЛП(ТНП.Товар.Статус) = "Снимаемый с производства" Тогда
				ТЧ.Ошибка = 1;
				Иначе	
				ТЧ.ДатаОтгрузкиДней = ПолучитьДатуОтгрузки(ТНП,-1*КоличествоСвободныйОстаток);
					Если ТЧ.ДатаОтгрузкиДней = 0 Тогда
					ТЧ.Ошибка = 2;
					КонецЕсли; 
				КонецЕсли;
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Рассчитать(Команда)
РассчитатьНаСервере();
КонецПроцедуры

&НаСервере
Функция ПечатьНаСервере()
ТабДок = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблТовар = Макет.ПолучитьОбласть("Товар");
ТабДок.Вывести(ОблШапка);
	Для каждого ТЧ Из ТаблицаТНП Цикл	
	ОблТовар.Параметры.Товар = СокрЛП(ТЧ.ТНП.Товар.Наименование);
	ОблТовар.Параметры.Код = ТЧ.ТНП.Товар.Код;
	ОблТовар.Параметры.ДатаОтгрузки = ТЧ.ДатаОтгрузкиДней;
	ТабДок.Вывести(ОблТовар);
	КонецЦикла; 
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура Печать(Команда)
ТабДок = ПечатьНаСервере();
ТабДок.Показать("Отчёт по датам отгрузки");
КонецПроцедуры
