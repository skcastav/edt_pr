
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Объект.Исполнитель = ПараметрыСеанса.Пользователь;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;
РабочееМестоПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеПоЗаданиямНаСервере()
ТаблицаЗаданий.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Изделие,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Период,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Количество
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто = &РабочееМесто
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.Статус = 4
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.Остановлено = ЛОЖЬ
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ЛинияSMD = &ЛинияSMD
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.Ремонт = ЛОЖЬ";
Запрос.УстановитьПараметр("РабочееМесто",Объект.РабочееМесто);
Запрос.УстановитьПараметр("ЛинияSMD",Объект.Линия);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
    ТЧ = ТаблицаЗаданий.Добавить();
	ТЧ.Статус = ПолучитьСтатус(ВыборкаДетальныеЗаписи.Изделие);
	ТЧ.ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
	ТЧ.Количество = ВыборкаДетальныеЗаписи.Количество;
	ТЧ.Приоритет = ?(ВыборкаДетальныеЗаписи.ПЗ.НомерОчереди > 0,Истина,Ложь);
	ТЧ.НомерОчереди = ВыборкаДетальныеЗаписи.ПЗ.НомерОчереди;
	ТЧ.ДатаПередачи = ВыборкаДетальныеЗаписи.Период; 
	КонецЦикла;
		Если ТаблицаЗаданий.Количество() > 0 Тогда
		ТаблицаЗаданий.Сортировать("Приоритет Убыв,НомерОчереди,ДатаПередачи");
		ТаблицаЗаданий[0].ВыборРазрешен = Истина;
		КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДанныеПоЗаданиям() Экспорт
ПолучитьДанныеПоЗаданиямНаСервере();
	Если Не Объект.ПроизводственноеЗадание.Пустая() Тогда
	КоличествоИзделия = ОбщийМодульВызовСервера.ПолучитьКоличествоИзделияНаРабочемМесте(Объект.ПроизводственноеЗадание,Объект.РабочееМесто);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьЗадания(Команда)
ПолучитьДанныеПоЗаданиямНаСервере();
	Если Не Объект.ПроизводственноеЗадание.Пустая() Тогда
	ПолучитьНезавершёноеЗадание();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьЗаданиеНаСервере(Стр)
ТЧ = ТаблицаЗаданий.НайтиПоИдентификатору(Стр);
ПЗ = ТЧ.ПЗ;
	Если СокрЛП(ПЗ.Изделие.Канбан.Наименование) = "Канбан УПЭА SMD ГСС" Тогда
	Элементы.Завершить.Заголовок = "Завершить и передать на ГСС";	
	Иначе	
	Элементы.Завершить.Заголовок = "Завершить";	
	КонецЕсли; 
		Попытка
		НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
		Парам = Новый Структура("РабочееМесто,ДатаНачала",Объект.РабочееМесто,ТекущаяДата());
		ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(ПЗ,Парам);
		Объект.ПроизводственноеЗадание = ПЗ;
		КоличествоИзделия = ТЧ.Количество;
		КоличествоВыполнено = ПолучитьВыполненноеКоличество();
		ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
		Исключение
		Сообщить(ОписаниеОшибки());
		ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
		Возврат(Ложь);
		КонецПопытки;
Возврат(Истина);
КонецФункции

&НаКлиенте
Процедура ВыбратьПЗ(Команда)
	Если Объект.ПроизводственноеЗадание.Пустая() Тогда
		Если Элементы.ТаблицаЗаданий.ТекущиеДанные.ВыборРазрешен Тогда
		ПолучитьЗаданиеНаСервере(Элементы.ТаблицаЗаданий.ТекущаяСтрока);
		Элементы.Завершить.КнопкаПоУмолчанию = Истина;		
		ПолучитьДанныеПоЗаданиямНаСервере();
		Иначе	
		Сообщить("Выберите первое производственное задание!");
		КонецЕсли; 			
	Иначе
	Сообщить("Сначала завершите текущее производственное задание!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗаданийВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
ВыбратьПЗ(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ОчиститьСсылкуНаПЗ()
Объект.ПроизводственноеЗадание = Документы.ПроизводственноеЗадание.ПустаяСсылка();
КоличествоИзделия = 0;
КоличествоВыполнено = 0;
КоличествоБрак = 0;
Элементы.Завершить.КнопкаПоУмолчанию = Ложь;
КонецПроцедуры 

&НаКлиенте
Процедура ПечатьТекущейСпецификации(Команда)
ОткрытьФорму("Отчет.ПечатьСпецификацииСУчётомАналогов.Форма.ФормаОтчета",Новый Структура("ПЗ",Объект.ПроизводственноеЗадание));
КонецПроцедуры

&НаСервере
Функция ПолучитьНезавершёноеЗадание()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданий.ПЗ,
	|	ЭтапыПроизводственныхЗаданий.Количество
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданий.РабочееМесто = &РабочееМесто
	|	И ЭтапыПроизводственныхЗаданий.ПЗ.ДокументОснование.Статус = 4
	|	И ЭтапыПроизводственныхЗаданий.ПЗ.Остановлено = ЛОЖЬ
	|	И ЭтапыПроизводственныхЗаданий.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ЭтапыПроизводственныхЗаданий.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ЭтапыПроизводственныхЗаданий.ПЗ.ЛинияSMD = &ЛинияSMD
	|	И ЭтапыПроизводственныхЗаданий.Ремонт = ЛОЖЬ";
Запрос.УстановитьПараметр("РабочееМесто",Объект.РабочееМесто);
Запрос.УстановитьПараметр("ЛинияSMD",Объект.Линия);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
    Объект.ПроизводственноеЗадание = ВыборкаДетальныеЗаписи.ПЗ;
	КоличествоИзделия = ВыборкаДетальныеЗаписи.Количество;
	КоличествоВыполнено = ПолучитьВыполненноеКоличество();
	КоличествоБрак = ОбщийМодульВызовСервера.ПолучитьКоличествоВБракеПоПЗ(Объект.ПроизводственноеЗадание,Объект.РабочееМесто);
		Если СокрЛП(ВыборкаДетальныеЗаписи.ПЗ.Изделие.Канбан.Наименование) = "Канбан УПЭА SMD ГСС" Тогда
		Элементы.Завершить.Заголовок = "Завершить и передать на ГСС";	
		Иначе	
		Элементы.Завершить.Заголовок = "Завершить";	
		КонецЕсли;
	Возврат(Истина); 
	КонецЦикла;
Возврат(Ложь);
КонецФункции

&НаСервере
Функция МожноРаботатьВАРМ()
	Если ОбщийМодульВызовСервера.МожноВыполнить(Объект.РабочееМесто.Линейка) Тогда	
	Возврат(Истина);
	Иначе
	Объект.РабочееМесто = Справочники.РабочиеМестаЛинеек.ПустаяСсылка();
	Сообщить("Работа АРМ запрещена в этой базе!");
	Возврат(Ложь);
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура РабочееМестоПриИзменении(Элемент)
	Если Не МожноРаботатьВАРМ() Тогда
	Возврат;
	КонецЕсли;
ОчиститьСсылкуНаПЗ();
Объект.Линия = "";
ОтключитьОбработчикОжидания("ПолучитьДанныеПоЗаданиям");
КонецПроцедуры

&НаСервере
Функция ПолучитьКодРабочегоМеста(РабочееМесто)
Возврат(РабочееМесто.Код);
КонецФункции

&НаСервере
Функция ПолучитьОсновуЭтапаГСС()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходовСрезПоследних.Элемент КАК Элемент
	|ИЗ
	|	РегистрСведений.НормыРасходов.СрезПоследних(
	|			&НаДату,
	|			Владелец = &Владелец
	|				И НормаРасходов.ВидЭлемента = &ВидЭлемента) КАК НормыРасходовСрезПоследних
	|ГДЕ
	|	НормыРасходовСрезПоследних.НормаРасходов.ПометкаУдаления = ЛОЖЬ
	|	И НормыРасходовСрезПоследних.Норма > 0";
Запрос.УстановитьПараметр("НаДату", Объект.ПроизводственноеЗадание.ДатаЗапуска);
Запрос.УстановитьПараметр("Владелец", Объект.ПроизводственноеЗадание.Изделие);
Запрос.УстановитьПараметр("ВидЭлемента", Перечисления.ВидыЭлементовНормРасходов.Основа);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаНР = РезультатЗапроса.Выбрать();
	Пока ВыборкаНР.Следующий() Цикл
	Возврат(ВыборкаНР.Элемент);
	КонецЦикла;
Возврат(Справочники.Номенклатура.ПустаяСсылка());
КонецФункции 

&НаСервере
Функция ЗавершитьНаСервере(Количество)
ДатаОкончания = ТекущаяДата();
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
		Если СокрЛП(Объект.ПроизводственноеЗадание.Изделие.Канбан.Наименование) = "Канбан УПЭА SMD ГСС" Тогда
		ОсноваЭтапаГСС = ПолучитьОсновуЭтапаГСС();
		ОбщийМодульРаботаСРегистрами.ЗафиксироватьИсполнениеЭтапаПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,ОсноваЭтапаГСС,Количество,Объект.Исполнитель);
		Парам = Новый Структура("РабочееМесто,ДатаОкончания",Объект.РабочееМесто,ДатаОкончания);
		ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Парам);
		Парам = Новый Структура("РабочееМесто,Количество",ОбщийМодульВызовСервера.ПолучитьСледующееРабочееМесто(Объект.РабочееМесто),КоличествоИзделия-КоличествоБрак);
		ОбщийМодульРаботаСРегистрами.СоздатьЭтапПроизводственногоЗаданияКанбан(Объект.ПроизводственноеЗадание,Парам);		
		Иначе
		ОбщийМодульРаботаСРегистрами.ЗафиксироватьИсполнениеЭтапаПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,Объект.ПроизводственноеЗадание.Изделие,Количество,Объект.Исполнитель);
		МТК = Объект.ПроизводственноеЗадание.ДокументОснование;	
		Парам = Новый Структура("РабочееМесто,ДатаОкончания",Объект.РабочееМесто,ДатаОкончания);
		ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Парам);
			Если ОбщийМодульСозданиеДокументов.СоздатьВыпускПродукцииКанбан(Объект.ПроизводственноеЗадание,ДатаОкончания,КоличествоИзделия-КоличествоБрак) Тогда
				Если МТК.НомерЯчейки > 0 Тогда
					Если ЭтоПоследнееПЗ() Тогда
						Если Не ОбщийМодульСозданиеДокументов.СоздатьПередачуНаЛинейку(МТК,ДатаОкончания+1) Тогда
						Сообщить("Документ передачи на линейку не создан!");
						ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
						Возврат(Ложь);				
						КонецЕсли; 
					КонецЕсли;
				КонецЕсли;  
			Иначе
			Сообщить("Документ выпуска по ПЗ "+Объект.ПроизводственноеЗадание.Номер+" не создан!");
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			Возврат(Ложь);
			КонецЕсли;		
		КонецЕсли;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(Истина);	
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Ложь);
	КонецПопытки;
КонецФункции

&НаСервере
Функция ЗавершитьЧастичноНаСервере(Количество)
	Попытка
		Если СокрЛП(Объект.ПроизводственноеЗадание.Изделие.Канбан.Наименование) = "Канбан УПЭА SMD ГСС" Тогда
		ОсноваЭтапаГСС = ПолучитьОсновуЭтапаГСС();
		ОбщийМодульРаботаСРегистрами.ЗафиксироватьИсполнениеЭтапаПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,ОсноваЭтапаГСС,Количество,Объект.Исполнитель);
		Иначе
		ОбщийМодульРаботаСРегистрами.ЗафиксироватьИсполнениеЭтапаПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,Объект.ПроизводственноеЗадание.Изделие,Количество,Объект.Исполнитель);
		КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина);
КонецФункции 

&НаСервере
Функция ПолучитьКоличествоПЗ()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование
	|ИТОГИ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Ссылка)
	|ПО
	|	ОБЩИЕ";
Запрос.УстановитьПараметр("ДокументОснование", Объект.ПроизводственноеЗадание.ДокументОснование);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
Возврат(ВыборкаДетальныеЗаписи.Количество()-1);
КонецФункции

&НаСервере
Функция ЭтоПоследнееПЗ()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Номер
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПроизводственноеЗадание.Номер";
Запрос.УстановитьПараметр("ДокументОснование", Объект.ПроизводственноеЗадание.ДокументОснование);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
флПоследнее = Ложь;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Номер = Объект.ПроизводственноеЗадание.Номер Тогда	
		флПоследнее = Истина;
		Иначе
		флПоследнее = Ложь;
		КонецЕсли; 
	КонецЦикла; 
Возврат(флПоследнее);
КонецФункции

&НаСервере
Функция ПечатьБиркиНаСервере(Примечание)
ТабДок = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("Макет");
ОблБирка = Макет.ПолучитьОбласть("Бирка");
ОблБирка.Параметры.НомерПЗ = Объект.ПроизводственноеЗадание.Номер;
ОблБирка.Параметры.Наименование = СокрЛП(Объект.ПроизводственноеЗадание.Изделие.Наименование);
ОблБирка.Параметры.Количество = КоличествоИзделия-КоличествоБрак;
ОблБирка.Параметры.НомерЯчейки = Объект.ПроизводственноеЗадание.ДокументОснование.НомерЯчейки;
ОблБирка.Параметры.Примечание = Примечание;
ТабДок.Вывести(ОблБирка);
ТабДок.РазмерСтраницы = "A4";
ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
Возврат(ТабДок);
КонецФункции

&НаСервере
Функция ПолучитьМТК()
Возврат(Объект.ПроизводственноеЗадание.ДокументОснование);
КонецФункции

&НаСервере
Функция ПолучитьНомерЯчейкиМТК()
Возврат(Объект.ПроизводственноеЗадание.ДокументОснование.НомерЯчейки);
КонецФункции

&НаСервере
Функция ПолучитьВыполненноеКоличество()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыполнениеЭтаповПроизводства.МТК КАК МТК,
	|	ВыполнениеЭтаповПроизводства.Количество КАК Количество
	|ИЗ
	|	РегистрСведений.ВыполнениеЭтаповПроизводства КАК ВыполнениеЭтаповПроизводства
	|ГДЕ
	|	ВыполнениеЭтаповПроизводства.МТК = &МТК
	|	И ВыполнениеЭтаповПроизводства.РабочееМесто = &РабочееМесто
	|	И ВыполнениеЭтаповПроизводства.Спецификация = &Спецификация
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	МТК";
Запрос.УстановитьПараметр("МТК", Объект.ПроизводственноеЗадание.ДокументОснование);
Запрос.УстановитьПараметр("РабочееМесто", Объект.РабочееМесто);
Запрос.УстановитьПараметр("Спецификация", Объект.ПроизводственноеЗадание.Изделие);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаВЭП = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаВЭП.Следующий() Цикл
	Возврат(ВыборкаВЭП.Количество);
	КонецЦикла;
Возврат(0);
КонецФункции

&НаСервере
Функция ПолучитьКоличествоВПЗ()
Возврат(Объект.ПроизводственноеЗадание.Количество);
КонецФункции 

&НаКлиенте
Процедура Завершить(Команда)
	Если Не Объект.ПроизводственноеЗадание.Пустая() Тогда
	КоличествоВсего = ПолучитьКоличествоВПЗ() - ПолучитьВыполненноеКоличество();
	Количество = КоличествоВсего;
		Если ВвестиЧисло(Количество,"Введите выполненное кол-во",9,3) Тогда
			Если Количество = КоличествоВсего Тогда
				Если ПолучитьНомерЯчейкиМТК() > 0 Тогда
					Если ПолучитьКоличествоПЗ() > 1 Тогда
					ПечатьБирки = Истина;
					Иначе
					ПечатьБирки = Ложь;			
					КонецЕсли; 
						Если ЗавершитьНаСервере(Количество) Тогда
							Если ПечатьБирки Тогда
								Если ЭтоПоследнееПЗ() Тогда
								ТабДок = ПечатьБиркиНаСервере("Последний выпуск");
								ТабДок.Показать("Бирка");
								ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"МТК завершена! Передайте ячейку пауку!",БиблиотекаКартинок.Пользователь);
								Иначе
								ТабДок = ПечатьБиркиНаСервере("Частичный выпуск");
								ТабДок.Показать("Бирка");
								ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"МТК не завершена! Дождитесь последнего задания!",БиблиотекаКартинок.Пользователь);
								КонецЕсли;
							КонецЕсли;
						ОчиститьСсылкуНаПЗ();
						ПолучитьНезавершёноеЗадание();
						КонецЕсли;			
				Иначе	
					Если ЗавершитьНаСервере(Количество) Тогда
					ОчиститьСсылкуНаПЗ();
					ПолучитьНезавершёноеЗадание();
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли Количество < КоличествоВсего Тогда
			ЗавершитьЧастичноНаСервере(Количество);
			ОчиститьСсылкуНаПЗ();
			ПолучитьНезавершёноеЗадание();
			Иначе
			Сообщить("Количество не может превышать "+КоличествоВсего);		
			КонецЕсли;	
		КонецЕсли; 		 
	Иначе
	Сообщить("Производственное задание не получено!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьСОстановкой(Команда)
	Если Объект.ПроизводственноеЗадание.Пустая() Тогда
	Сообщить("Нет выбранного производственного задания!");
	Возврат;	
	КонецЕсли;
МаксКоличество = КоличествоИзделия - КоличествоВыполнено;
КоличествоВыпущено = МаксКоличество;
ПричинаОстановки = "";
	Если ВвестиСтроку(ПричинаОстановки,"Введите причину остановки",0,Истина) Тогда
		Если ЗначениеЗаполнено(ПричинаОстановки) Тогда
		ПричинаОстановки = СокрЛП(ПричинаОстановки)+" ("+Объект.Исполнитель+")";
			Если ОбщийМодульВызовСервера.ОстановитьПЗ(Объект.ПроизводственноеЗадание,ПричинаОстановки) Тогда
			ОчиститьСсылкуНаПЗ();
			ПолучитьДанныеПоЗаданиямНаСервере();				
			КонецЕсли;
		Иначе
        Сообщить("Введите причину остановки!");
		КонецЕсли;
	Иначе
	Сообщить("Введите причину остановки!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЛинияПриИзменении(Элемент)
ОчиститьСсылкуНаПЗ();
	Если ПолучитьНезавершёноеЗадание() Тогда
	Элементы.Завершить.КнопкаПоУмолчанию = Истина;
	КонецЕсли;
ПолучитьДанныеПоЗаданиямНаСервере();
	Если Объект.ИнтервалОбновления > 0 Тогда
	ПодключитьОбработчикОжидания("ПолучитьДанныеПоЗаданиям", Объект.ИнтервалОбновления*60);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалОбновленияПриИзменении(Элемент)
ОтключитьОбработчикОжидания("ПолучитьДанныеПоЗаданиям");
	Если Объект.ИнтервалОбновления > 0 Тогда
	ПодключитьОбработчикОжидания("ПолучитьДанныеПоЗаданиям", Объект.ИнтервалОбновления*60);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОформитьБрак(Команда)
	Если Объект.ПроизводственноеЗадание.Пустая() Тогда
	Сообщить("Нет выбранного производственного задания!");
	Возврат;	
	КонецЕсли;
КоличествоИзделия = ОбщийМодульВызовСервера.ПолучитьКоличествоИзделияНаРабочемМесте(Объект.ПроизводственноеЗадание,Объект.РабочееМесто);
Результат = ОткрытьФормуМодально("ОбщаяФорма.ОформлениеБракаКанбан",Новый Структура("РабочееМесто,ПЗ,КоличествоИзделия",Объект.РабочееМесто,Объект.ПроизводственноеЗадание,КоличествоИзделия - КоличествоБрак));
	Если Результат <> 0 Тогда
	КоличествоБрак = ОбщийМодульВызовСервера.ПолучитьКоличествоВБракеПоПЗ(Объект.ПроизводственноеЗадание,Объект.РабочееМесто);		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Ремонт(Команда)
	Если Объект.ПроизводственноеЗадание.Пустая() Тогда
	Сообщить("Нет выбранного производственного задания!");
	Возврат;	
	КонецЕсли;
КоличествоИзделия = ОбщийМодульВызовСервера.ПолучитьКоличествоИзделияНаРабочемМесте(Объект.ПроизводственноеЗадание,Объект.РабочееМесто);
Результат = ОткрытьФормуМодально("ОбщаяФорма.ОформлениеРемонтКанбан",Новый Структура("РабочееМесто,ПЗ,КоличествоИзделия",Объект.РабочееМесто,Объект.ПроизводственноеЗадание,КоличествоИзделия - КоличествоБрак));
	Если Результат <> 0 Тогда
	ОчиститьСсылкуНаПЗ();		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьИзделие()
Возврат(Объект.ПроизводственноеЗадание.Изделие);
КонецФункции

&НаКлиенте
Процедура ОтчётПоИзменениям(Команда)
ОткрытьФорму("Отчет.ОтчётПоИзменениямВСпецификации.Форма.ФормаОтчета",Новый Структура("Спецификация",ПолучитьИзделие()));
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаПлат(Команда)
Результат = ОткрытьФормуМодально("Обработка.РабочееМестоКанбанSMD_Электроконтроль.Форма.ПроверкаПлат",Новый Структура("ПЗ",Объект.ПроизводственноеЗадание));
КонецПроцедуры
