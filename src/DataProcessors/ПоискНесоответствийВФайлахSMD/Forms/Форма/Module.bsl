
&НаКлиенте
Процедура РабочийКаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
Диалог.Заголовок = "Выберите рабочий каталог";
Диалог.ПолноеИмяФайла = ""; 
Фильтр = "Все файлы (*.*)|*.*"; 
Диалог.Фильтр = Фильтр; 
Диалог.МножественныйВыбор = Ложь;
Диалог.Каталог = РабочийКаталог;
	Если Диалог.Выбрать() Тогда
	РабочийКаталог = Диалог.Каталог+"\"; 
		Если Прав(СокрЛП(РабочийКаталог),1) <> "\" Тогда
		РабочийКаталог = СокрЛП(РабочийКаталог)+"\";
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьНаименованиеПлаты(Изделие)
Возврат(глНаименованиеВСкобкахБезЭтапа(СокрЛП(Изделие.Наименование)));
КонецФункции 

&НаСервере
Функция ПолучитьСписокПлат()
СписокПлат = Новый СписокЗначений;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НоменклатураЛинейкиSMD.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Номенклатура.ЛинейкиSMD КАК НоменклатураЛинейкиSMD
	|ГДЕ
	|	НоменклатураЛинейкиSMD.Линейка = &Линейка";
	Если СписокСпецификаций.Количество() > 0 Тогда
	Запрос.Текст = Запрос.Текст + " И НоменклатураЛинейкиSMD.Ссылка В ИЕРАРХИИ(&СписокСпецификаций)";
	Запрос.УстановитьПараметр("СписокСпецификаций", СписокСпецификаций);
	КонецЕсли; 
Запрос.УстановитьПараметр("Линейка", Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ПолучитьСтатус(ВыборкаДетальныеЗаписи.Ссылка) = Перечисления.СтатусыСпецификаций.Запрещённая Тогда
		Продолжить;
		КонецЕсли;                                         
	СписокПлат.Добавить(ВыборкаДетальныеЗаписи.Ссылка,ПолучитьНаименованиеПлаты(ВыборкаДетальныеЗаписи.Ссылка)); 
 	КонецЦикла;
СписокПлат.СортироватьПоПредставлению();
Возврат(СписокПлат);
КонецФункции 

&НаСервере
Функция ПолучитьПодкаталогЛинейки()
	Если СокрЛП(Линейка.Наименование) = "С01О" Тогда
	Возврат("Line7");
	ИначеЕсли СокрЛП(Линейка.Наименование) = "С02О" Тогда
	Возврат("Line1");
	ИначеЕсли СокрЛП(Линейка.Наименование) = "С03О" Тогда
	Возврат("Line6");
	Иначе
	Возврат("");
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ВыбратьФайлыПрограммДляСтанка(НаименованиеПлаты,ТЧ)
ПодкаталогЛинейки = ПолучитьПодкаталогЛинейки(); 
МассивНайденных = НайтиФайлы(РабочийКаталог+ПодкаталогЛинейки,"*.ygx",Истина);
к = 0;
	Для Каждого Файл из МассивНайденных Цикл
	ОбработкаПрерыванияПользователя();
	к = к + 1;
	Состояние("Обработка каталога...",к*100/МассивНайденных.Количество(),"Поиск файлов (для отмены Ctrl+Break)");	
		Если Не Файл.ЭтоФайл() Тогда
		Продолжить;		
		КонецЕсли;
			Если Найти(Файл.Имя,"_") = 1 Тогда
			Продолжить;
			КонецЕсли;		 
				Если (Найти(Файл.Имя,НаименованиеПлаты+"_") = 1)или(Файл.Имя = НаименованиеПлаты+".ygx") Тогда
				ТЧ_Ф = ТЧ.ТаблицаФайлов.Добавить();
				ТЧ_Ф.НомерСтроки = ТЧ.ТаблицаФайлов.Количество();
				ТЧ_Ф.Файл = Файл.ПолноеИмя;
				ТЧ.Пометка = Истина;
				КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокМПЗ(ЭтапСпецификации,СписокМПЗ)
ВыборкаНР = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н_М(ЭтапСпецификации,ТекущаяДата());
	Пока ВыборкаНР.Следующий() Цикл
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
		СписокМПЗ.Добавить(ВыборкаНР.Элемент,СокрЛП(ВыборкаНР.Позиция));				
		Иначе
			Если ВыборкаНР.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Основа Тогда
			ПолучитьСписокМПЗ(ВыборкаНР.Элемент,СписокМПЗ);
			КонецЕсли;  
		КонецЕсли;
	КонецЦикла;
КонецФункции

&НаСервере
Функция ПолучитьНаименованиеSMD(МПЗ)
Возврат(СокрЛП(МПЗ.НаименованиеSMD));
КонецФункции

&НаКлиенте
Процедура ЗаполнитьТаблицуМПЗИзФайлов(ТЧ)
Парсер = Новый ЧтениеXML;

	Для каждого Ф Из ТЧ.ТаблицаФайлов Цикл
    Парсер.ОткрытьФайл(Ф.Файл);
    Построитель = Новый ПостроительDOM;
    Документ = Построитель.Прочитать(Парсер);
        Для каждого Узел Из Документ.ЭлементДокумента.ДочерниеУзлы Цикл
			Если Узел.ИмяУзла = "Machine" Тогда
				Для каждого Узел_Machine Из Узел.ДочерниеУзлы Цикл
					Если Узел_Machine.ИмяУзла = "Mounts" Тогда
						Для каждого Узел_Mounts Из Узел_Machine.ДочерниеУзлы Цикл
							Если Узел_Mounts.ИмяУзла = "Mount" Тогда
							Позиция = СокрЛП(Узел_Mounts.Атрибуты.ПолучитьИменованныйЭлемент("Comment").Значение);
							Comp = СокрЛП(Узел_Mounts.Атрибуты.ПолучитьИменованныйЭлемент("Comp").Значение);
							Выборка = ТЧ.ТаблицаМПЗ.НайтиСтроки(Новый Структура("Файл,Позиция,Comp",Ф.НомерСтроки,Позиция,Comp));
								Если Выборка.Количество() = 0 Тогда
								ТЧ_МПЗ = ТЧ.ТаблицаМПЗ.Добавить();
							    ТЧ_МПЗ.Файл = Ф.НомерСтроки;               
				                ТЧ_МПЗ.Позиция = Позиция;
				                ТЧ_МПЗ.Comp = Comp;
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
					ИначеЕсли Узел_Machine.ИмяУзла = "Parts" Тогда
						Для каждого Узел_Parts Из Узел_Machine.ДочерниеУзлы Цикл
							Если Узел_Parts.ИмяУзла = "Part" Тогда
							Выборка = ТЧ.ТаблицаМПЗ.НайтиСтроки(Новый Структура("Файл,Comp",Ф.НомерСтроки,Узел_Parts.Атрибуты.ПолучитьИменованныйЭлемент("No").Значение));
						    	Если Выборка.Количество() > 0 Тогда
									Для каждого Узел_Part Из Узел_Parts.ДочерниеУзлы Цикл
										Если Узел_Part.ИмяУзла = "Part_001" Тогда
											Для к = 0 По Выборка.ВГраница() Цикл
											Выборка[к].МПЗИзФайла = Узел_Part.Атрибуты.ПолучитьИменованныйЭлемент("PartsName").Значение;
											КонецЦикла;	
										КонецЕсли;
									КонецЦикла;
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
 		КонецЦикла;
	Парсер.Закрыть();
	КонецЦикла;
КонецПроцедуры 

&НаКлиенте
Процедура Обработать(Команда) 
	Если Не ЭтаФорма.ПроверитьЗаполнение() Тогда
	Возврат;
	КонецЕсли;
СписокМПЗ = Новый СписокЗначений;

ТаблицаСпецификаций.Очистить();
СписокПлат = ПолучитьСписокПлат();
л = 1;
	Для каждого Плата Из СписокПлат Цикл
	Состояние("Обработка...",,Плата.Значение);
		Если КоличествоСпецификаций > 0 Тогда
			Если л > КоличествоСпецификаций Тогда
			Прервать;
			КонецЕсли; 
		КонецЕсли; 
	ТЧ = ТаблицаСпецификаций.Добавить();
	ТЧ.Спецификация = Плата.Значение;		
	ВыбратьФайлыПрограммДляСтанка(Плата.Представление,ТЧ);
		Если ТЧ.ТаблицаФайлов.Количество() = 0 Тогда
		л = л + 1;
		Продолжить;
		КонецЕсли;
	ЗаполнитьТаблицуМПЗИзФайлов(ТЧ);
	СписокМПЗ.Очистить();
	ПолучитьСписокМПЗ(Плата.Значение,СписокМПЗ); 
		Для каждого МПЗ Из СписокМПЗ Цикл
			Если ЗначениеЗаполнено(МПЗ.Представление) Тогда
			Выборка = ТЧ.ТаблицаМПЗ.НайтиСтроки(Новый Структура("Позиция",МПЗ.Представление));
				Если Выборка.Количество() > 0 Тогда
					Для к = 0 По Выборка.ВГраница() Цикл
					Выборка[к].МПЗ = ПолучитьНаименованиеSMD(МПЗ.Значение);
						Если Выборка[к].МПЗИзФайла = Выборка[к].МПЗ Тогда
						Выборка[к].Пометка = Истина;
						Иначе
					    Выборка[к].КодОшибки = 1;
						КонецЕсли;
					КонецЦикла;	
				Иначе
				ТЧ_МПЗ = ТЧ.ТаблицаМПЗ.Добавить();
				ТЧ_МПЗ.Позиция = МПЗ.Представление;
				ТЧ_МПЗ.МПЗ = МПЗ.Значение;
				ТЧ_МПЗ.КодОшибки = 2;			
				КонецЕсли;
			КонецЕсли;  
		КонецЦикла;
	ТЧ.ТаблицаМПЗ.Сортировать("Позиция"); 
		Для каждого ТЧ_МПЗ Из ТЧ.ТаблицаМПЗ Цикл
		флНайден = Ложь;	
			Для каждого МПЗ Из СписокМПЗ Цикл
			 	Если СокрЛП(МПЗ.Представление) = ТЧ_МПЗ.Позиция Тогда
				флНайден = Истина;
				Прервать;
				КонецЕсли;				
			КонецЦикла;
				Если Не флНайден Тогда
				ТЧ_МПЗ.Пометка = Ложь;
				ТЧ_МПЗ.КодОшибки = 3;
				КонецЕсли;
		КонецЦикла; 
	л = л + 1;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьНомерЛинейки()
	Если СокрЛП(Линейка.Наименование) = "С01О" Тогда
	Возврат("7");
	ИначеЕсли СокрЛП(Линейка.Наименование) = "С02О" Тогда
	Возврат("1");
	ИначеЕсли СокрЛП(Линейка.Наименование) = "С03О" Тогда
	Возврат("6");
	Иначе
	Возврат("");
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура СохранитьВФайл(Команда)
	Попытка
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(РабочийКаталог+"Результаты.xml","UTF-8",Ложь);
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	ЗаписьXML.ЗаписатьНачалоЭлемента("Specifications");

	ЗаписьXML.ЗаписатьАтрибут("Line", ПолучитьНомерЛинейки());
		Для каждого ТЧ Из ТаблицаСпецификаций Цикл
		ЗаписьXML.ЗаписатьНачалоЭлемента("Spec");
		ЗаписьXML.ЗаписатьАтрибут("Name", СтрЗаменить(ПолучитьНаименованиеПлаты(ТЧ.Спецификация),"-","_"));
		ЗаписьXML.ЗаписатьНачалоЭлемента("AddedParts");	
			Для каждого ТЧ_МПЗ Из ТЧ.ТаблицаМПЗ Цикл
				Если ТЧ_МПЗ.КодОшибки = 2 Тогда
				ЗаписьXML.ЗаписатьНачалоЭлемента("Part");	
				ЗаписьXML.ЗаписатьАтрибут("Name", ТЧ_МПЗ.МПЗ);
				ЗаписьXML.ЗаписатьАтрибут("Pos", ТЧ_МПЗ.Позиция);
				ЗаписьXML.ЗаписатьКонецЭлемента();
				КонецЕсли; 
			КонецЦикла;
		ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.ЗаписатьНачалоЭлемента("Programs");
			Для каждого ТЧ_Ф Из ТЧ.ТаблицаФайлов Цикл
			ЗаписьXML.ЗаписатьНачалоЭлемента("Program");	
			ЗаписьXML.ЗаписатьАтрибут("Path", СтрЗаменить(ТЧ_Ф.Файл,РабочийКаталог,""));
			ЗаписьXML.ЗаписатьНачалоЭлемента("Parts");
				Для каждого ТЧ_МПЗ Из ТЧ.ТаблицаМПЗ Цикл
					Если (ТЧ_МПЗ.КодОшибки = 1)и(ТЧ_МПЗ.Файл = ТЧ_Ф.НомерСтроки) Тогда
					ЗаписьXML.ЗаписатьНачалоЭлемента("Part");	
					ЗаписьXML.ЗаписатьАтрибут("Name", ТЧ_МПЗ.МПЗ);
					ЗаписьXML.ЗаписатьАтрибут("Pos", ТЧ_МПЗ.Позиция);
					ЗаписьXML.ЗаписатьКонецЭлемента();
					КонецЕсли; 
				КонецЦикла;
			ЗаписьXML.ЗаписатьКонецЭлемента();
			ЗаписьXML.ЗаписатьНачалоЭлемента("RemovedParts");
				Для каждого ТЧ_МПЗ Из ТЧ.ТаблицаМПЗ Цикл
					Если (ТЧ_МПЗ.КодОшибки = 3)и(ТЧ_МПЗ.Файл = ТЧ_Ф.НомерСтроки) Тогда
					ЗаписьXML.ЗаписатьНачалоЭлемента("Part");	
					ЗаписьXML.ЗаписатьАтрибут("Name", ТЧ_МПЗ.МПЗ);
					ЗаписьXML.ЗаписатьАтрибут("Pos", ТЧ_МПЗ.Позиция);
					ЗаписьXML.ЗаписатьКонецЭлемента();
					КонецЕсли; 
				КонецЦикла;
			ЗаписьXML.ЗаписатьКонецЭлемента();
			ЗаписьXML.ЗаписатьКонецЭлемента();
			КонецЦикла;
		ЗаписьXML.ЗаписатьКонецЭлемента();                    
		ЗаписьXML.ЗаписатьКонецЭлемента();
		КонецЦикла;
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.Закрыть();
	Исключение
	Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры
        
&НаСервере
Функция ПроверитьМатериал(ЭтапСпецификации)
ВыборкаНР = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н_М(ЭтапСпецификации,ТекущаяДата());
	Пока ВыборкаНР.Следующий() Цикл
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
			Если ВыборкаНР.Элемент = Материал Тогда
			Возврат(Истина);
			КонецЕсли;		
		ИначеЕсли ВыборкаНР.Элемент.Канбан.Пустая() Тогда
			Если ПроверитьМатериал(ВыборкаНР.Элемент) Тогда
			Возврат(Истина);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
Возврат(Ложь);
КонецФункции

&НаСервере
Процедура ПолучитьПоОткрытымМТКНаСервере()
СписокСпецификаций.Очистить();

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Номенклатура КАК Номенклатура
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.Статус <> 3
	|	И МаршрутнаяКарта.Линейка = &Линейка
	|ИТОГИ ПО
	|	Номенклатура";
Запрос.УстановитьПараметр("Линейка",Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл   
		Если Не Материал.Пустая() Тогда
			Если Не ПроверитьМатериал(ВыборкаНоменклатура.Номенклатура) Тогда
			Продолжить;
			КонецЕсли;
		КонецЕсли;
	СписокСпецификаций.Добавить(ВыборкаНоменклатура.Номенклатура);
	КонецЦикла;
СписокСпецификаций.СортироватьПоЗначению();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПоОткрытымМТК(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	ПолучитьПоОткрытымМТКНаСервере();
	КонецЕсли;
КонецПроцедуры
