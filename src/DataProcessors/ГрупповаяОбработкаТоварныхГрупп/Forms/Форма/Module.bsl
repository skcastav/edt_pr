
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ОбщийМодульВызовСервера.ДоступностьРоли("Администратор") Тогда
	Элементы.Изменить.Доступность = Ложь;
	Элементы.Добавить.Доступность = Ложь;
	Элементы.ИзменитьШаблон.Доступность = Ложь;
	Элементы.ДобавитьШаблон.Доступность = Ложь;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПараметров()
ТаблицаПараметров.Очистить();
Запрос = Новый Запрос;

	Если ЗначениеЗаполнено(ПараметрТоварнойГруппы2) Тогда
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПараметрыТоварныхГрупп.ТоварнаяГруппа КАК ТоварнаяГруппа,
	|	ПараметрыТоварныхГрупп.ПараметрТоварнойГруппы,
	|	ПараметрыТоварныхГрупп.ЗначениеПараметра
	|ИЗ
	|	РегистрСведений.ПараметрыТоварныхГрупп КАК ПараметрыТоварныхГрупп
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТоварныхГрупп КАК ПараметрыТоварныхГрупп1
	|		ПО ПараметрыТоварныхГрупп.ТоварнаяГруппа = ПараметрыТоварныхГрупп1.ТоварнаяГруппа
	|ГДЕ
	|	ПараметрыТоварныхГрупп.ПараметрТоварнойГруппы = &ПараметрТоварнойГруппы
	|	И ПараметрыТоварныхГрупп1.ПараметрТоварнойГруппы = &ПараметрТоварнойГруппы2
	|	И ПараметрыТоварныхГрупп1.ЗначениеПараметра В ИЕРАРХИИ(&ЗначениеПараметра2)";
	Запрос.УстановитьПараметр("ПараметрТоварнойГруппы", ПараметрТоварнойГруппы);
	Запрос.УстановитьПараметр("ПараметрТоварнойГруппы2", ПараметрТоварнойГруппы2);
	Запрос.УстановитьПараметр("ЗначениеПараметра2", ЗначенияПараметра2);
		Если ЗначениеЗаполнено(ПодстрокаДляПоиска) Тогда
		Запрос.Текст = Запрос.Текст + " И ПараметрыТоварныхГрупп.ТоварнаяГруппа.Наименование ПОДОБНО &Наименование";
		Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(ПодстрокаДляПоиска,";");
		Подстроки = "%";
			Для к = 0 По Массив.Количество()-1 Цикл
			Подстроки = Подстроки + Массив[к] + "%";
			КонецЦикла; 
		Запрос.УстановитьПараметр("Наименование", Подстроки);
		КонецЕсли;
			Если ЗначенияПараметра.Количество() > 0 Тогда
			Запрос.Текст = Запрос.Текст + " И ПараметрыТоварныхГрупп.ЗначениеПараметра В ИЕРАРХИИ(&ЗначениеПараметра)";
			Запрос.УстановитьПараметр("ЗначениеПараметра", ЗначенияПараметра);
			КонецЕсли;
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТЧ = ТаблицаПараметров.Добавить();
		ТЧ.ТоварнаяГруппа = ВыборкаДетальныеЗаписи.ТоварнаяГруппа;
		ТЧ.Параметр = ВыборкаДетальныеЗаписи.ПараметрТоварнойГруппы;
		ТЧ.Значение = ВыборкаДетальныеЗаписи.ЗначениеПараметра;
		КонецЦикла;
	ИначеЕсли ЗначениеЗаполнено(ПараметрТоварнойГруппы) Тогда
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПараметрыТоварныхГрупп.ТоварнаяГруппа КАК ТоварнаяГруппа,
	|	ПараметрыТоварныхГрупп.ПараметрТоварнойГруппы КАК ПараметрТоварнойГруппы,
	|	ПараметрыТоварныхГрупп.ЗначениеПараметра КАК ЗначениеПараметра
	|ИЗ
	|	РегистрСведений.ПараметрыТоварныхГрупп КАК ПараметрыТоварныхГрупп
	|ГДЕ
	|	ПараметрыТоварныхГрупп.ПараметрТоварнойГруппы = &ПараметрТоварнойГруппы";
	Запрос.УстановитьПараметр("ПараметрТоварнойГруппы", ПараметрТоварнойГруппы);
		Если ЗначениеЗаполнено(ПодстрокаДляПоиска) Тогда
		Запрос.Текст = Запрос.Текст + " И ПараметрыТоварныхГрупп.ТоварнаяГруппа.Наименование ПОДОБНО &Наименование";
		Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(ПодстрокаДляПоиска,";");
		Подстроки = "%";
			Для к = 0 По Массив.Количество()-1 Цикл
			Подстроки = Подстроки + Массив[к] + "%";
			КонецЦикла; 
		Запрос.УстановитьПараметр("Наименование", Подстроки);
		КонецЕсли;
			Если ЗначенияПараметра.Количество() > 0 Тогда
			Запрос.Текст = Запрос.Текст + " И ПараметрыТоварныхГрупп.ЗначениеПараметра В ИЕРАРХИИ(&ЗначениеПараметра)";
			Запрос.УстановитьПараметр("ЗначениеПараметра", ЗначенияПараметра);
			КонецЕсли;
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТЧ = ТаблицаПараметров.Добавить();
		ТЧ.ТоварнаяГруппа = ВыборкаДетальныеЗаписи.ТоварнаяГруппа;
		ТЧ.Параметр = ВыборкаДетальныеЗаписи.ПараметрТоварнойГруппы;
		ТЧ.Значение = ВыборкаДетальныеЗаписи.ЗначениеПараметра;
		КонецЦикла;
	Иначе
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварныеГруппы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ТоварныеГруппы КАК ТоварныеГруппы
	|ГДЕ
	|	ТоварныеГруппы.Наименование ПОДОБНО &Наименование
	|	И ТоварныеГруппы.ЭтоГруппа = ЛОЖЬ";
	Запрос.УстановитьПараметр("Наименование", ПодстрокаДляПоиска);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТЧ = ТаблицаПараметров.Добавить();
		ТЧ.ТоварнаяГруппа = ВыборкаДетальныеЗаписи.Ссылка;
		КонецЦикла;
	КонецЕсли;
ТаблицаПараметров.Сортировать("ТоварнаяГруппа,Параметр");
КонецПроцедуры

&НаСервере
Функция ПолучитьТип()
Возврат(ПараметрТоварнойГруппы.ТипЗначения);
КонецФункции

&НаСервере
Функция ПолучитьТип2()
Возврат(ПараметрТоварнойГруппы2.ТипЗначения);
КонецФункции

&НаКлиенте
Процедура ПараметрТоварнойГруппыПриИзменении(Элемент)
ЗначенияПараметра.ТипЗначения = ПолучитьТип();
КонецПроцедуры

&НаКлиенте
Процедура ПараметрТоварнойГруппы2ПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ЗначенияПараметра2) Тогда
	ЗначенияПараметра2.ТипЗначения = ПолучитьТип2();	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ИзменитьНаСервере()
	Попытка
		Для каждого ТЧ Из ТаблицаПараметров Цикл	
			Если ТЧ.Пометка Тогда
			НаборЗаписей = РегистрыСведений.ПараметрыТоварныхГрупп.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ТоварнаяГруппа.Установить(ТЧ.ТоварнаяГруппа);
			НаборЗаписей.Отбор.ПараметрТоварнойГруппы.Установить(ТЧ.Параметр);
			НаборЗаписей.Прочитать();
			    Для Каждого Запись Из НаборЗаписей Цикл 
			    	Если Запись.ЗначениеПараметра <> ЗначениеПараметраИзм Тогда
					Запись.ЗначениеПараметра = ЗначениеПараметраИзм;
					КонецЕсли;  
			    КонецЦикла;
			НаборЗаписей.Записать(Истина);
			ТЧ.Значение = ЗначениеПараметраИзм;
			КонецЕсли; 
		КонецЦикла;
	Исключение
	Сообщить(ОписаниеОшибки());
	КонецПопытки; 
КонецПроцедуры

&НаКлиенте
Процедура Изменить(Команда)
	Если ЗначениеЗаполнено(ЗначениеПараметраИзм) Тогда
	ИзменитьНаСервере();
	Иначе
	Сообщить("Не выбрано новое значение параметра!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура Показать(Команда)
ЗаполнитьТаблицуПараметров();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	Для каждого ТЧ Из ТаблицаПараметров Цикл
	ТЧ.Пометка = Истина;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсе(Команда)
	Для каждого ТЧ Из ТаблицаПараметров Цикл
	ТЧ.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВыбратьПоПризнакуНаСервере(Признак,Фл)
	Для каждого ТЧ Из ТаблицаПараметров Цикл	
		Если Найти(ТЧ.ТоварнаяГруппа.Наименование,Признак) > 0 Тогда
		ТЧ.Пометка = Фл;
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПоПризнаку(Команда)
Признак = "";
	Если ВвестиСтроку(Признак,"Введите признак (с учетом регистра)",100) Тогда
	ВыбратьПоПризнакуНаСервере(Признак,Истина);	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПоПризнаку(Команда)
Признак = "";
	Если ВвестиСтроку(Признак,"Введите признак (с учетом регистра)",100) Тогда
	ВыбратьПоПризнакуНаСервере(Признак,Ложь);	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьКлючЗаписи(ТоварнаяГруппа,Параметр)
Ключ = Новый Структура();
Ключ.Вставить("ТоварнаяГруппа", ТоварнаяГруппа);
Ключ.Вставить("ПараметрТоварнойГруппы",Параметр);
Возврат(РегистрыСведений.ПараметрыТоварныхГрупп.СоздатьКлючЗаписи(Ключ));
КонецФункции

&НаКлиенте
Процедура ТаблицаПараметровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
ОткрытьФорму("РегистрСведений.ПараметрыТоварныхГрупп.ФормаЗаписи",Новый Структура("Ключ",ПолучитьКлючЗаписи(Элементы.ТаблицаПараметров.ТекущиеДанные.ТоварнаяГруппа,Элементы.ТаблицаПараметров.ТекущиеДанные.Параметр)));
КонецПроцедуры

&НаСервере
Процедура ДобавитьНаСервере()
	Попытка
		Для каждого ТЧ Из ТаблицаПараметров Цикл	
			Если ТЧ.Пометка Тогда
			ПТГ = РегистрыСведений.ПараметрыТоварныхГрупп.СоздатьМенеджерЗаписи();
			ПТГ.ТоварнаяГруппа = ТЧ.ТоварнаяГруппа;
			ПТГ.ПараметрТоварнойГруппы = ПараметрТоварнойГруппы3;
			ПТГ.ЗначениеПараметра = ЗначениеПараметраДоб;
			ПТГ.Записать(Истина);
			ТЧ.Параметр = ПараметрТоварнойГруппы3;
			ТЧ.Значение = ЗначениеПараметраДоб;
			КонецЕсли; 
		КонецЦикла;
	Исключение
	Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура Добавить(Команда)
	Если ЗначениеЗаполнено(ЗначениеПараметраДоб) Тогда
	ДобавитьНаСервере();
	Иначе
	Сообщить("Не выбрано значение добавляемого параметра!");
	КонецЕсли;
КонецПроцедуры

//Обработка шаблонов печатных документов

&НаСервере
Процедура ПоказатьТГ_ШПДНаСервере()
Запрос = Новый Запрос;

	Если ШаблонПД.Пустая() Тогда
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварныеГруппы.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ТоварныеГруппы КАК ТоварныеГруппы
		|ГДЕ
		|	ТоварныеГруппы.Наименование ПОДОБНО &Наименование
		|	И ТоварныеГруппы.ЭтоГруппа = ЛОЖЬ"; 
	Запрос.УстановитьПараметр("Наименование", ПодстрокаДляПоиска1);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТЧ = ТаблицаШаблонов.Добавить();
		ТЧ.ТоварнаяГруппа = ВыборкаДетальныеЗаписи.Ссылка;
		КонецЦикла;	
	Иначе	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварныеГруппыШаблоныПечатныхДокументов.Ссылка КАК Ссылка,
		|	ТоварныеГруппыШаблоныПечатныхДокументов.Шаблон КАК Шаблон
		|ИЗ
		|	Справочник.ТоварныеГруппы.ШаблоныПечатныхДокументов КАК ТоварныеГруппыШаблоныПечатныхДокументов
		|ГДЕ
		|	ТоварныеГруппыШаблоныПечатныхДокументов.Шаблон = &Шаблон";
		Если ЗначениеЗаполнено(ПодстрокаДляПоиска1) Тогда
		Запрос.Текст = Запрос.Текст + " И ТоварныеГруппыШаблоныПечатныхДокументов.Ссылка.Наименование ПОДОБНО &Наименование";
		Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(ПодстрокаДляПоиска1,";");
		Подстроки = "%";
			Для к = 0 По Массив.Количество() - 1 Цикл
			Подстроки = Подстроки + Массив[к] + "%";
			КонецЦикла; 
		Запрос.УстановитьПараметр("Наименование", Подстроки);
		КонецЕсли; 
	Запрос.УстановитьПараметр("Шаблон", ШаблонПД);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТЧ = ТаблицаШаблонов.Добавить();
		ТЧ.ТоварнаяГруппа = ВыборкаДетальныеЗаписи.Ссылка;
		ТЧ.Шаблон = ВыборкаДетальныеЗаписи.Шаблон;
		КонецЦикла;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьТГ_ШПД(Команда)
ТаблицаШаблонов.Очистить();
ПоказатьТГ_ШПДНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсеШПД(Команда)
	Для каждого ТЧ Из ТаблицаШаблонов Цикл
	ТЧ.Пометка = Истина;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсеШПД(Команда)
	Для каждого ТЧ Из ТаблицаШаблонов Цикл
	ТЧ.Пометка = Ложь;
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ВыбратьПоПризнакуШПДНаСервере(Признак,Фл)
	Для каждого ТЧ Из ТаблицаШаблонов Цикл	
		Если Найти(ТЧ.ТоварнаяГруппа.Наименование,Признак) > 0 Тогда
		ТЧ.Пометка = Фл;
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПоПризнакуШПД(Команда)
Признак = "";
	Если ВвестиСтроку(Признак,"Введите признак (с учетом регистра)",100) Тогда
	ВыбратьПоПризнакуШПДНаСервере(Признак,Истина);	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПоПризнакуШПД(Команда)
Признак = "";
	Если ВвестиСтроку(Признак,"Введите признак (с учетом регистра)",100) Тогда
	ВыбратьПоПризнакуШПДНаСервере(Признак,Ложь);	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьШаблонНаСервере()
	Для каждого ТЧ Из ТаблицаШаблонов Цикл
		Если ТЧ.Пометка Тогда
		ТГ = ТЧ.ТоварнаяГруппа.ПолучитьОбъект();
		Выборка = ТГ.ШаблоныПечатныхДокументов.НайтиСтроки(Новый Структура("Шаблон",ШаблонПД1));
			Если Выборка.Количество() = 0 Тогда
			ТГ_ШПД = ТГ.ШаблоныПечатныхДокументов.Добавить();
		    ТГ_ШПД.Шаблон = ШаблонПД1;
			КонецЕсли; 
		ТГ.Записать();
		ТЧ.Шаблон = ШаблонПД1;
		КонецЕсли;
	КонецЦикла;  
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьШаблон(Команда)
ДобавитьШаблонНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИзменитьШаблонНаСервере()
	Для каждого ТЧ Из ТаблицаШаблонов Цикл
		Если ТЧ.Пометка Тогда
		ТГ = ТЧ.ТоварнаяГруппа.ПолучитьОбъект();
		Выборка = ТГ.ШаблоныПечатныхДокументов.НайтиСтроки(Новый Структура("Шаблон",ШаблонПД));
			Если Выборка.Количество() > 0 Тогда
		    Выборка[0].Шаблон = ШаблонПД1;
			КонецЕсли; 
		ТГ.Записать();
		ТЧ.Шаблон = ШаблонПД1;
		КонецЕсли;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьШаблон(Команда)
ИзменитьШаблонНаСервере();
КонецПроцедуры

&НаСервере
Процедура УдалитьШаблонНаСервере()
	Для каждого ТЧ Из ТаблицаШаблонов Цикл
		Если ТЧ.Пометка Тогда
		ТГ = ТЧ.ТоварнаяГруппа.ПолучитьОбъект();
		Выборка = ТГ.ШаблоныПечатныхДокументов.НайтиСтроки(Новый Структура("Шаблон",ШаблонПД));
			Если Выборка.Количество() > 0 Тогда
			ТГ.ШаблоныПечатныхДокументов.Удалить(Выборка[0]);
			КонецЕсли; 
		ТГ.Записать();
		ТЧ.Шаблон = Справочники.ШаблоныПечатныхДокументов.ПустаяСсылка();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьШаблон(Команда)
УдалитьШаблонНаСервере();
КонецПроцедуры

