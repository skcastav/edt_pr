
&НаСервере
Процедура ПриСозданииНаСервере()
Объект.Исполнитель = ПараметрыСеанса.Пользователь;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;
	Если Не Объект.РабочееМесто.Пустая() Тогда
	РабочееМестоПриИзменении(Неопределено);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеНаСервере()
Объект.ТаблицаПЗ.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Период КАК Период
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто = &РабочееМесто
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1,1,1,0,0,0)";
Запрос.УстановитьПараметр("РабочееМесто",Объект.РабочееМесто);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = Объект.ТаблицаПЗ.Добавить();
	ТЧ.ПроизводственноеЗадание = ВыборкаДетальныеЗаписи.ПЗ;
	ТЧ.ДатаСоздания = ВыборкаДетальныеЗаписи.ПЗ.Дата;
	ТЧ.ДатаНачала = ВыборкаДетальныеЗаписи.ДатаНачала;
	КонецЦикла;
Объект.ТаблицаПЗ.Сортировать("ДатаСоздания");
КонецПроцедуры
 
&НаКлиенте
Процедура ПолучитьДанные() Экспорт
ПолучитьДанныеНаСервере();
КонецПроцедуры

&НаСервере
Функция МожноРаботатьВАРМ()
	Если ОбщийМодульВызовСервера.МожноВыполнить(Объект.РабочееМесто.Линейка) Тогда	
	Возврат(Истина);
	Иначе
	Объект.РабочееМесто = Справочники.РабочиеМестаЛинеек.ПустаяСсылка();
	Сообщить("Работа АРМ запрещена в этой базе!");
	Возврат(Ложь);
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура РабочееМестоПриИзменении(Элемент)
	Если Не МожноРаботатьВАРМ() Тогда
	Возврат;
	КонецЕсли;
ПолучитьДанныеНаСервере();
	Если Объект.ИнтервалОбновления > 0 Тогда
	ПодключитьОбработчикОжидания("ПолучитьДанные", Объект.ИнтервалОбновления*60);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
ПолучитьДанныеНаСервере();
КонецПроцедуры

&НаСервере
Функция ПолучитьЗаданиеНаСервере(Стр)
ТЧ = Объект.ТаблицаПЗ.НайтиПоИдентификатору(Стр);
ПЗ = ТЧ.ПроизводственноеЗадание;
	Если Не ЗначениеЗаполнено(ПЗ.ДатаЗапуска) Тогда
		Если Не ОбщийМодульВызовСервера.СоздатьТаблицуЭтаповПроизводства(ПЗ,Этапы,ЭтапыАРМ,Объект.РабочееМесто,Объект.Исполнитель) Тогда	
		Возврат(Ложь);			
		КонецЕсли;
	Результат = ОбщийМодульВызовСервера.ЗапуститьВПроизводство(ПЗ,Объект.РабочееМесто,Этапы);
		Если Результат = 1 Тогда
		ТЧ.ДатаНачала = ТекущаяДата();
		Возврат(Истина);
		КонецЕсли;
	КонецЕсли;
Возврат(Ложь); 
КонецФункции

&НаКлиенте
Процедура ПринятьВРаботу(Команда)
	Если Элементы.ТаблицаПЗ.ТекущаяСтрока <> Неопределено Тогда
		Если ПолучитьЗаданиеНаСервере(Элементы.ТаблицаПЗ.ТекущаяСтрока) Тогда				
		ПечатьТекущейСпецификации(Неопределено);
		КонецЕсли;	
	Иначе
	Сообщить("Выберите производственное задание!");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ЗавершитьНаСервере(Стр)
ТЧ = Объект.ТаблицаПЗ.НайтиПоИдентификатору(Стр);
	Если Не ЗначениеЗаполнено(ТЧ.ДатаНачала) Тогда
	Сообщить("Выбранное производственное задание ещё не принято в работу!");
	Возврат(Ложь);
	КонецЕсли;
ПЗ = ТЧ.ПроизводственноеЗадание;
ДатаОкончания = ТекущаяДата();
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Парам = Новый Структура("РабочееМесто,ДатаОкончания",Объект.РабочееМесто,ДатаОкончания);
	ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(ПЗ,Парам);
		Если Не ОбщийМодульСозданиеДокументов.СоздатьВыпускПродукцииКанбан(ПЗ,ДатаОкончания) Тогда
		Сообщить("Документ выпуска по ПЗ "+ПЗ.Номер+" не создан!");
		ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
		Возврат(Ложь);
		КонецЕсли;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Объект.ТаблицаПЗ.Удалить(ТЧ);
	Возврат(Истина);	
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Ложь);
	КонецПопытки;
КонецФункции

&НаКлиенте
Процедура Завершить(Команда)
	Если Элементы.ТаблицаПЗ.ТекущаяСтрока <> Неопределено Тогда
	ЗавершитьНаСервере(Элементы.ТаблицаПЗ.ТекущаяСтрока);	
	Иначе
	Сообщить("Выберите производственное задание!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалОбновленияПриИзменении(Элемент)
ОтключитьОбработчикОжидания("ПолучитьДанные");
	Если Объект.ИнтервалОбновления > 0 Тогда
	ПодключитьОбработчикОжидания("ПолучитьДанные", Объект.ИнтервалОбновления*60);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПечатьТекущейСпецификации(Команда)
ОткрытьФорму("Отчет.ПечатьСпецификацииСУчётомАналогов.Форма.ФормаОтчета",Новый Структура("ПЗ",Элементы.ТаблицаПЗ.ТекущиеДанные.ПроизводственноеЗадание));
КонецПроцедуры

&НаСервере
Функция НайтиПЗ(Данные)
Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,";");
ЛинейкаПотребитель = ЗначениеИзСтрокиВнутр(Массив[0]);
Спецификация = ЗначениеИзСтрокиВнутр(Массив[1]);
	Для каждого ТЧ Из Объект.ТаблицаПЗ Цикл
		Если ТЧ.ПроизводственноеЗадание.ДокументОснование.МестоХраненияПотребитель = ЛинейкаПотребитель.МестоХраненияКанбанов Тогда	
			Если ТЧ.ПроизводственноеЗадание.Изделие = Спецификация Тогда
			Возврат(ТЧ.ПолучитьИдентификатор());
			КонецЕсли; 	
	    КонецЕсли;
	КонецЦикла;
Возврат(Неопределено);
КонецФункции

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
	ВыбСтрока = НайтиПЗ(Данные);
		Если ВыбСтрока <> Неопределено Тогда
		Элементы.ТаблицаПЗ.ТекущаяСтрока = ВыбСтрока;
		Завершить(Неопределено);
		Иначе	
		Сообщить("Производственное задание не найдено!");
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры
