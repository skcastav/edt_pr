
&НаКлиенте
Процедура ФайлОстаткиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
Диалог.Заголовок = "Выберите файл с остатками";
Диалог.ПолноеИмяФайла = ""; 
Фильтр = "Все файлы (*.*)|*.*"; 
Диалог.Фильтр = Фильтр; 
Диалог.МножественныйВыбор = Ложь;
Диалог.Каталог = "C:";
	Если Диалог.Выбрать() Тогда
	ДолгиПоЗаказам = Диалог.ПолноеИмяФайла; 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция МТКНеСозданы(ЗаказНаПроизводство,Продукция)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Ссылка
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.ДокументОснование = &ДокументОснование
	|	И МаршрутнаяКарта.Номенклатура = &Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	МаршрутнаяКарта.Дата";
Запрос.УстановитьПараметр("ДокументОснование",ЗаказНаПроизводство);	
Запрос.УстановитьПараметр("Номенклатура",Продукция);	
РезультатЗапроса = Запрос.Выполнить();
Возврат(РезультатЗапроса.Пустой());
КонецФункции

&НаСервере
Функция ПолучитьКоличествоПерепрогонПройден(ЗаказНаПроизводство,Продукция)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Перепрогон.Изделие КАК Изделие,
	|	Перепрогон.Количество КАК Количество
	|ИЗ
	|	Документ.Перепрогон КАК Перепрогон
	|ГДЕ
	|	Перепрогон.ДокументОснование = &ДокументОснование
	|	И Перепрогон.Проведен = ИСТИНА
	|	И Перепрогон.Изделие = &Изделие
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Изделие";
Запрос.УстановитьПараметр("ДокументОснование",ЗаказНаПроизводство);	
Запрос.УстановитьПараметр("Изделие",Продукция);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
    Возврат(ВыборкаДетальныеЗаписи.Количество);
	КонецЦикла;
Возврат(0);
КонецФункции 

&НаСервере
Функция ПолучитьОстаткиПоСкладам(Продукция)
	
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.МестаХранения.Остатки КАК МестаХраненияОстатки
	|ГДЕ
	|	МестаХраненияОстатки.МестоХранения В ИЕРАРХИИ(&СписокМестХранения)
	|	И МестаХраненияОстатки.МПЗ = &МПЗ";
Запрос.УстановитьПараметр("СписокМестХранения",СписокМестХраненияГП);
Запрос.УстановитьПараметр("МПЗ",Продукция);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
Количество = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
    Количество = Количество + ВыборкаДетальныеЗаписи.КоличествоОстаток;
	КонецЦикла;
Возврат(Количество);
КонецФункции

&НаСервере
Процедура СформироватьНаСервере()
Запрос = Новый Запрос;
ЗапросВыпуск = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыНаПроизводствоОстатки.Документ,
	|	ЗаказыНаПроизводствоОстатки.Продукция,
	|	ЗаказыНаПроизводствоОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПроизводство.Остатки КАК ЗаказыНаПроизводствоОстатки
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ЗаказыНаПроизводствоОстатки.Продукция) = ТИП(Справочник.Номенклатура)
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказыНаПроизводствоОстатки.Документ.Дата";	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Продукция = ВыборкаДетальныеЗаписи.Продукция;
	ТЧ_Заказ = ВыборкаДетальныеЗаписи.Документ.Заказ.Найти(Продукция,"Продукция");
		Если ТЧ_Заказ <> Неопределено Тогда
			Если ТЧ_Заказ.РучнойЗапуск = 0 Тогда
				Если Не ТЧ_Заказ.КрупныйЗаказ Тогда
					Если МТКНеСозданы(ВыборкаДетальныеЗаписи.Документ,Продукция) Тогда
					ТЧ = ТаблицаИзделий.Добавить();
					ТЧ.Товар = Продукция.Товар;
					ТЧ.Продукция = Продукция;
						Если Найти(Продукция.Наименование,"ОВЕН") > 0 Тогда
						ТЧ.ВидПродукции = 2;
						Иначе	
						ТЧ.ВидПродукции = 3;
						КонецЕсли; 
					ТЧ.КоличествоНеСозданныхМТК = ТЧ_Заказ.Количество;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;	  	
		КонецЕсли; 
	КонецЦикла;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказНаПроизводствоЗаказ.Ссылка КАК Ссылка,
	|	ЗаказНаПроизводствоЗаказ.Товар КАК Товар,
	|	ЗаказНаПроизводствоЗаказ.Количество КАК Количество
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Заказ КАК ЗаказНаПроизводствоЗаказ
	|ГДЕ
	|	ЗаказНаПроизводствоЗаказ.Продукция = НЕОПРЕДЕЛЕНО
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказНаПроизводствоЗаказ.Ссылка.Дата";	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Выборка = ТаблицаИзделий.НайтиСтроки(Новый Структура("Товар",ВыборкаДетальныеЗаписи.Товар));
		Если Выборка.Количество() = 0 Тогда
		ТЧ = ТаблицаИзделий.Добавить();
		ТЧ.Товар = ВыборкаДетальныеЗаписи.Товар;
		ТЧ.КоличествоНедостаёт = ВыборкаДетальныеЗаписи.Количество;		
		Иначе	
		Выборка[0].КоличествоНедостаёт = Выборка[0].КоличествоНедостаёт + ВыборкаДетальныеЗаписи.Количество;		
		КонецЕсли;
	КонецЦикла;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыНаПроизводствоОстатки.Документ КАК Документ,
	|	ЗаказыНаПроизводствоОстатки.Продукция КАК Продукция,
	|	ЗаказыНаПроизводствоОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПроизводство.Остатки КАК ЗаказыНаПроизводствоОстатки
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ЗаказыНаПроизводствоОстатки.Продукция) = ТИП(Справочник.Номенклатура)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказыНаПроизводствоОстатки.Документ.Дата";	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Продукция = ВыборкаДетальныеЗаписи.Продукция;
	ТЧ_Заказ = ВыборкаДетальныеЗаписи.Документ.Заказ.Найти(Продукция,"Продукция");
		Если ТЧ_Заказ <> Неопределено Тогда
			Если ТЧ_Заказ.РучнойЗапуск = 0 Тогда
				Если ТЧ_Заказ.КрупныйЗаказ Тогда
				КоличествоНеСоздано = ТЧ_Заказ.Количество - ПолучитьКоличествоСозданых(ВыборкаДетальныеЗаписи.Документ,Продукция);
					Если КоличествоНеСоздано > 0 Тогда
					Выборка = ТаблицаИзделий.НайтиСтроки(Новый Структура("Продукция",Продукция));
						Если Выборка.Количество() = 0 Тогда
						ТЧ = ТаблицаИзделий.Добавить();
						ТЧ.Товар = Продукция.Товар;
						ТЧ.Продукция = Продукция;
							Если Найти(Продукция.Наименование,"ОВЕН") > 0 Тогда
							ТЧ.ВидПродукции = 2;
							Иначе	
							ТЧ.ВидПродукции = 3;
							КонецЕсли;
						ТЧ.КоличествоОстатокПоКЗ = КоличествоНеСоздано;
						Иначе	
						Выборка[0].КоличествоОстатокПоКЗ = Выборка[0].КоличествоОстатокПоКЗ + КоличествоНеСоздано;		
						КонецЕсли;
					КонецЕсли;	
				КонецЕсли;  
			КонецЕсли; 	
		КонецЕсли;  
	КонецЦикла;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыНаПроизводствоОстатки.Документ,
	|	ЗаказыНаПроизводствоОстатки.Продукция,
	|	ЗаказыНаПроизводствоОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПроизводство.Остатки КАК ЗаказыНаПроизводствоОстатки
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ЗаказыНаПроизводствоОстатки.Продукция) = ТИП(Справочник.Номенклатура)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказыНаПроизводствоОстатки.Документ.Дата";	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Продукция = ВыборкаДетальныеЗаписи.Продукция;
	ТЧ_Заказ = ВыборкаДетальныеЗаписи.Документ.Заказ.Найти(Продукция,"Продукция");
		Если ТЧ_Заказ <> Неопределено Тогда
			Если ТЧ_Заказ.РезервПерепрогон > 0 Тогда
			КоличествоПерепрогон = ТЧ_Заказ.РезервПерепрогон - ПолучитьКоличествоПерепрогонПройден(ВыборкаДетальныеЗаписи.Документ,Продукция);
			Выборка = ТаблицаИзделий.НайтиСтроки(Новый Структура("Продукция",ВыборкаДетальныеЗаписи.Продукция));
				Если Выборка.Количество() = 0 Тогда
				ТЧ = ТаблицаИзделий.Добавить();
				ТЧ.Товар = ВыборкаДетальныеЗаписи.Продукция.Товар;
				ТЧ.Продукция = Продукция;
					Если Найти(Продукция.Наименование,"ОВЕН") > 0 Тогда
					ТЧ.ВидПродукции = 2;
					Иначе	
					ТЧ.ВидПродукции = 3;
					КонецЕсли;
				ТЧ.КоличествоПерепрогон = КоличествоПерепрогон;		
				Иначе	
				Выборка[0].КоличествоПерепрогон = Выборка[0].КоличествоПерепрогон + КоличествоПерепрогон;		
				КонецЕсли;  
			КонецЕсли; 	
		КонецЕсли; 
	КонецЦикла;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Ссылка КАК Ссылка,
	|	ПроизводственноеЗадание.Изделие КАК Изделие,
	|	ПроизводственноеЗадание.Количество КАК Количество
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ПроизводственноеЗадание.Изделие.Линейка <> &Линейка
	|	И ПроизводственноеЗадание.Выгружено = ЛОЖЬ";
Запрос.УстановитьПараметр("ДатаНач", Период.ДатаНачала);
Запрос.УстановитьПараметр("ДатаКон", Период.ДатаОкончания);
Запрос.УстановитьПараметр("Линейка", Справочники.Линейки.ПустаяСсылка());
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Продукция = ВыборкаДетальныеЗаписи.Изделие;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВыпускПродукции.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ВыпускПродукции КАК ВыпускПродукции
		|ГДЕ
		|	ВыпускПродукции.ДокументОснование = &ДокументОснование
		|	И ВыпускПродукции.НаСклад = ИСТИНА";
	Запрос.УстановитьПараметр("ДокументОснование", ВыборкаДетальныеЗаписи.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
		Выборка = ТаблицаИзделий.НайтиСтроки(Новый Структура("Продукция",Продукция));
			Если Выборка.Количество() = 0 Тогда
			ТЧ = ТаблицаИзделий.Добавить();
			ТЧ.Товар = Продукция.Товар;
			ТЧ.Продукция = Продукция;
				Если Найти(Продукция.Наименование,"ОВЕН") > 0 Тогда
				ТЧ.ВидПродукции = 2;
				Иначе	
				ТЧ.ВидПродукции = 3;
				КонецЕсли;
			ТЧ.КоличествоПЗ = ВыборкаДетальныеЗаписи.Количество;
			Иначе	
			Выборка[0].КоличествоПЗ = Выборка[0].КоличествоПЗ + ВыборкаДетальныеЗаписи.Количество;		
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыНаПроизводствоОстатки.Документ КАК Документ,
	|	ЗаказыНаПроизводствоОстатки.Продукция КАК Продукция,
	|	ЗаказыНаПроизводствоОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыНаПроизводство.Остатки КАК ЗаказыНаПроизводствоОстатки
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ЗаказыНаПроизводствоОстатки.Продукция) = ТИП(Справочник.Материалы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказыНаПроизводствоОстатки.Документ.Дата";	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Продукция = ВыборкаДетальныеЗаписи.Продукция;
	ТЧ_Заказ = ВыборкаДетальныеЗаписи.Документ.Заказ.Найти(Продукция,"Продукция");
		Если ТЧ_Заказ <> Неопределено Тогда
		Выборка = ТаблицаИзделий.НайтиСтроки(Новый Структура("Продукция",Продукция));
			Если Выборка.Количество() = 0 Тогда
			ТЧ = ТаблицаИзделий.Добавить();
			ТЧ.Товар = ВыборкаДетальныеЗаписи.Продукция.Товар;
			ТЧ.Продукция = Продукция;	
			ТЧ.ВидПродукции = 1;
			КонецЕсли;	
		КонецЕсли;  
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ПолучитьВсеОстаткиПоМестамХранения()
	
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОстатки.МПЗ КАК МПЗ,
	|	МестаХраненияОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.МестаХранения.Остатки КАК МестаХраненияОстатки
	|ГДЕ
	|	МестаХраненияОстатки.МестоХранения В ИЕРАРХИИ(&СписокМестХранения)
	|ИТОГИ
	|	СУММА(КоличествоОстаток)
	|ПО
	|	МПЗ";
Запрос.УстановитьПараметр("СписокМестХранения",СписокМестХраненияГП);	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМПЗ.Следующий() Цикл
	Продукция = ВыборкаМПЗ.МПЗ;
	Выборка = ТаблицаИзделий.НайтиСтроки(Новый Структура("Продукция",Продукция));
		Если Выборка.Количество() = 0 Тогда
		ТЧ = ТаблицаИзделий.Добавить();
		ТЧ.Товар = Продукция.Товар;
		ТЧ.Продукция = Продукция;
			Если ТипЗнч(Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
				Если Найти(Продукция.Наименование,"ОВЕН") > 0 Тогда
				ТЧ.ВидПродукции = 2;
				Иначе	
				ТЧ.ВидПродукции = 3;
				КонецЕсли; 			
			Иначе	
			ТЧ.ВидПродукции = 1;
			КонецЕсли; 
		ТЧ.КоличествоОстатки = ВыборкаМПЗ.КоличествоОстаток;
		Иначе	
		Выборка[0].КоличествоОстатки = Выборка[0].КоличествоОстатки + ВыборкаМПЗ.КоличествоОстаток;		
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПолучитьВсеОстаткиПоТранзитнойЗоне()
	
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОстатки.МПЗ КАК МПЗ,
	|	МестаХраненияОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.МестаХранения.Остатки КАК МестаХраненияОстатки
	|ГДЕ
	|	МестаХраненияОстатки.МестоХранения = &МестоХранения
	|ИТОГИ
	|	СУММА(КоличествоОстаток)
	|ПО
	|	МПЗ";
Запрос.УстановитьПараметр("МестоХранения",Константы.МестоХраненияТранзит.Получить());	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаМПЗ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМПЗ.Следующий() Цикл
	Продукция = ВыборкаМПЗ.МПЗ;
	Выборка = ТаблицаИзделий.НайтиСтроки(Новый Структура("Продукция",Продукция));
		Если Выборка.Количество() = 0 Тогда
		ТЧ = ТаблицаИзделий.Добавить();
		ТЧ.Товар = Продукция.Товар;
		ТЧ.Продукция = Продукция;
			Если ТипЗнч(Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
				Если Найти(Продукция.Наименование,"ОВЕН") > 0 Тогда
				ТЧ.ВидПродукции = 2;
				Иначе	
				ТЧ.ВидПродукции = 3;
				КонецЕсли; 			
			Иначе	
			ТЧ.ВидПродукции = 1;
			КонецЕсли; 
		ТЧ.КоличествоТранзитнаяЗона = ВыборкаМПЗ.КоличествоОстаток;
		Иначе	
		Выборка[0].КоличествоТранзитнаяЗона = Выборка[0].КоличествоТранзитнаяЗона + ВыборкаМПЗ.КоличествоОстаток;		
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПолучитьВсеДолги()
	
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДолгиОстатки.Продукция КАК Продукция,
	|	ДолгиОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.Долги.Остатки КАК ДолгиОстатки
	|ИТОГИ
	|	СУММА(КоличествоОстаток)
	|ПО
	|	Продукция";	
РезультатЗапроса = Запрос.Выполнить();
ВыборкаПродукция = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПродукция.Следующий() Цикл
	Продукция = ВыборкаПродукция.Продукция;
	Выборка = ТаблицаИзделий.НайтиСтроки(Новый Структура("Продукция",Продукция));
		Если Выборка.Количество() = 0 Тогда
		ТЧ = ТаблицаИзделий.Добавить();
		ТЧ.Товар = Продукция.Товар;
		ТЧ.Продукция = Продукция;
			Если ТипЗнч(Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
				Если Найти(Продукция.Наименование,"ОВЕН") > 0 Тогда
				ТЧ.ВидПродукции = 2;
				Иначе	
				ТЧ.ВидПродукции = 3;
				КонецЕсли; 			
			Иначе	
			ТЧ.ВидПродукции = 1;
			КонецЕсли; 
		ТЧ.КоличествоДолгПроизводства = ВыборкаПродукция.КоличествоОстаток;
		Иначе	
		Выборка[0].КоличествоДолгПроизводства = Выборка[0].КоличествоДолгПроизводства + ВыборкаПродукция.КоличествоОстаток;		
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьСпецификации(Товар)
СписокСпецификаций = Новый СписокЗначений;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка,
	|	СтатусыМПЗСрезПоследних.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.СтатусыМПЗ.СрезПоследних(&НаДату, ) КАК СтатусыМПЗСрезПоследних
	|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО СтатусыМПЗСрезПоследних.МПЗ = Номенклатура.Ссылка
	|ГДЕ
	|	Номенклатура.Товар = &Товар
	|	И СтатусыМПЗСрезПоследних.Статус <> &Статус";
Запрос.УстановитьПараметр("Товар",Товар);
Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыСпецификаций.Запрещённая);
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
РезультатЗапроса = Запрос.Выполнить();
Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл 
		Если Выборка.Статус = Перечисления.СтатусыСпецификаций.ДоИсчерпанияЗапасов Тогда
		СписокСпецификаций.Вставить(0,Выборка.Ссылка,СокрЛП(Выборка.Ссылка.Наименование)+" ["+Выборка.Статус+"]");
		Иначе
		СписокСпецификаций.Добавить(Выборка.Ссылка,СокрЛП(Выборка.Ссылка.Наименование)+" ["+Выборка.Статус+"]");
		КонецЕсли;	
	КонецЦикла;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	Материалы.Ссылка КАК Ссылка,
	|	СтатусыМПЗСрезПоследних.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.СтатусыМПЗ.СрезПоследних(&НаДату, ) КАК СтатусыМПЗСрезПоследних
	|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Материалы КАК Материалы
	|		ПО СтатусыМПЗСрезПоследних.МПЗ = Материалы.Ссылка
	|ГДЕ
	|	Материалы.Товар = &Товар
	|	И СтатусыМПЗСрезПоследних.Статус <> &Статус";
Запрос.УстановитьПараметр("Товар",Товар);
Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыСпецификаций.Запрещённая);
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
РезультатЗапроса = Запрос.Выполнить();
Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл 
		Если Выборка.Статус = Перечисления.СтатусыСпецификаций.ДоИсчерпанияЗапасов Тогда
		СписокСпецификаций.Вставить(0,Выборка.Ссылка,СокрЛП(Выборка.Ссылка.Наименование)+" ["+Выборка.Статус+"]");
		Иначе
		СписокСпецификаций.Добавить(Выборка.Ссылка,СокрЛП(Выборка.Ссылка.Наименование)+" ["+Выборка.Статус+"]");
		КонецЕсли;	
	КонецЦикла;
Возврат(СписокСпецификаций);
КонецФункции

&НаСервере
Процедура ЗагрузитьОстаткиНаСервере(Код,Резерв,ВидТМЦ)
	Если (СокрЛП(ВидТМЦ) <> "Продукция")и(СокрЛП(ВидТМЦ) <> "Товар") Тогда
	Возврат;
	КонецЕсли;
		Если Код = 0 Тогда
		Возврат;
		КонецЕсли;  
Товар = Справочники.Товары.НайтиПоКоду(Код);
	Если Не Товар.Пустая() Тогда
	Выборка = ТаблицаИзделий.НайтиСтроки(Новый Структура("Товар",Товар));
		Если Выборка.Количество() = 0 Тогда
		ТЧ = ТаблицаИзделий.Добавить();
		ТЧ.Товар = Товар;
		ТЧ.КоличествоРезерв = Резерв;
		СписокСпецификаций = ПолучитьСпецификации(Товар);
			Если СписокСпецификаций.Количество() > 0 Тогда
			ТЧ.Продукция = СписокСпецификаций[0].Значение;
			КонецЕсли;
				Если ТипЗнч(ТЧ.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
					Если Найти(ТЧ.Продукция.Наименование,"ОВЕН") > 0 Тогда
					ТЧ.ВидПродукции = 2;
					Иначе	
					ТЧ.ВидПродукции = 3;
					КонецЕсли; 			
				Иначе	
				ТЧ.ВидПродукции = 1;
				КонецЕсли; 
 		ТЧ.КоличествоОстатки = ПолучитьОстаткиПоСкладам(ТЧ.Продукция);
		Иначе	
		Выборка[0].КоличествоРезерв = Резерв;		
		КонецЕсли;
	Иначе	
	Сообщить(""+Код+" - товар не найден!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
ТаблицаИзделий.Очистить();
Состояние("Обработка...",,"Проверка остатков по заказам на производство...");
СформироватьНаСервере();
Состояние("Обработка...",,"Проверка остатков по местам хранения...");
ПолучитьВсеОстаткиПоМестамХранения();
Состояние("Обработка...",,"Проверка остатков по транзитной зоне...");
ПолучитьВсеОстаткиПоТранзитнойЗоне();
Состояние("Обработка...",,"Проверка остатков по регистру долгов...");
ПолучитьВсеДолги();
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("",ДолгиПоЗаказам);
	Если Результат <> Неопределено Тогда
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок;
	    Для к = 2 по КолСтрок Цикл
		Состояние("Обработка...",к*100/КолСтрок,"Загрузка резервов из УТ...");
		Код = ?(ExcelЛист.Cells(к,3).Value = Неопределено,0,Число(ExcelЛист.Cells(к,3).Value));
        Резерв = ?(ExcelЛист.Cells(к,10).Value = Неопределено,0,Число(ExcelЛист.Cells(к,10).Value));
        ЗагрузитьОстаткиНаСервере(Код,Резерв,ExcelЛист.Cells(к,5).Value);
	    КонецЦикла;
	Результат.Excel.Quit();
	КонецЕсли;
ТаблицаИзделий.Сортировать("ВидПродукции,Товар");
	Для каждого ТЧ Из ТаблицаИзделий Цикл	
	ТЧ.КоличествоИтого = ТЧ.КоличествоОстатки+ТЧ.КоличествоНедостаёт+ТЧ.КоличествоНеСозданныхМТК+ТЧ.КоличествоПЗ+ТЧ.КоличествоОстатокПоКЗ+ТЧ.КоличествоПерепрогон-ТЧ.КоличествоРезерв;
	ТЧ.КоличествоРазницаРезервов = ТЧ.КоличествоДолгПроизводства-ТЧ.КоличествоТранзитнаяЗона-ТЧ.КоличествоРезерв;
	КонецЦикла;
КонецПроцедуры
