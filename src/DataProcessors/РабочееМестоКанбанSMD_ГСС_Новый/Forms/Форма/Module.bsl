
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
Объект.Исполнитель = ПараметрыСеанса.Пользователь;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;
		Если Не Объект.РабочееМесто.Пустая() Тогда
		РабочееМестоПриИзменении(Неопределено);
		КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьЗаданиеНаСервере()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Период КАК Период,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Количество
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто = &РабочееМесто
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.Статус = 1
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";	
Запрос.УстановитьПараметр("РабочееМесто",Объект.РабочееМесто);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаНачала) Тогда
			Попытка
			Парам = Новый Структура("РабочееМесто,Исполнитель,ДатаНачала",Объект.РабочееМесто,Объект.Исполнитель,ТекущаяДата());
			ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Парам);
			Исключение
			Сообщить(ОписаниеОшибки());
			Возврат(Ложь);
			КонецПопытки;
		КонецЕсли;
	Объект.ПроизводственноеЗадание = ВыборкаДетальныеЗаписи.ПЗ;
	КоличествоИзделия = ВыборкаДетальныеЗаписи.Количество;
	КоличествоБрак = ОбщийМодульВызовСервера.ПолучитьКоличествоВБракеПоПЗ(Объект.ПроизводственноеЗадание,Объект.РабочееМесто);
	Возврат(Истина);
	КонецЦикла;
Возврат(Ложь); 
КонецФункции

&НаКлиенте
Процедура ПолучитьЗадание(Команда)
	Если Объект.ПроизводственноеЗадание.Пустая() Тогда
		Если ПолучитьЗаданиеНаСервере() Тогда
		Элементы.Завершить.КнопкаПоУмолчанию = Истина;		
		Иначе	
		Сообщить("Нет производственных заданий!");
		КонецЕсли; 			
	Иначе
	Сообщить("Сначала завершите текущее производственное задание!");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ОчиститьСсылкуНаПЗ()
Объект.ПроизводственноеЗадание = Документы.ПроизводственноеЗадание.ПустаяСсылка();
КоличествоИзделия = 0;
КоличествоБрак = 0;
Элементы.ПолучитьЗадание.КнопкаПоУмолчанию = Истина;
КонецПроцедуры 

&НаКлиенте
Процедура ПечатьТекущейСпецификации(Команда)
ОткрытьФорму("Отчет.ПечатьСпецификацииСУчётомАналогов.Форма.ФормаОтчета",Новый Структура("ПЗ",Объект.ПроизводственноеЗадание));
КонецПроцедуры

&НаСервере
Функция МожноРаботатьВАРМ()
	Если ОбщийМодульВызовСервера.МожноВыполнить(Объект.РабочееМесто.Линейка) Тогда	
	Возврат(Истина);
	Иначе
	Объект.РабочееМесто = Справочники.РабочиеМестаЛинеек.ПустаяСсылка();
	Сообщить("Работа АРМ запрещена в этой базе!");
	Возврат(Ложь);
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура РабочееМестоПриИзменении(Элемент)
	Если Не МожноРаботатьВАРМ() Тогда
	Возврат;
	КонецЕсли;
ОчиститьСсылкуНаПЗ();
КонецПроцедуры

&НаСервере
Функция ЭтоПоследнееПЗ()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Номер
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПроизводственноеЗадание.Номер";
Запрос.УстановитьПараметр("ДокументОснование", Объект.ПроизводственноеЗадание.ДокументОснование);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
флПоследнее = Ложь;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Номер = Объект.ПроизводственноеЗадание.Номер Тогда	
		флПоследнее = Истина;
		Иначе
		флПоследнее = Ложь;
		КонецЕсли; 
	КонецЦикла; 
Возврат(флПоследнее);
КонецФункции

&НаСервере
Функция ЗавершитьНаСервере()
ДатаОкончания = ТекущаяДата();
МТК = Объект.ПроизводственноеЗадание.ДокументОснование;
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	Парам = Новый Структура("РабочееМесто,Исполнитель,ДатаОкончания",Объект.РабочееМесто,Объект.Исполнитель,ТекущаяДата());
	ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Парам);
		Если ОбщийМодульСозданиеДокументов.СоздатьВыпускПродукцииКанбан(Объект.ПроизводственноеЗадание,ДатаОкончания,КоличествоИзделия-КоличествоБрак) Тогда
			Если МТК.НомерЯчейки > 0 Тогда
				Если ЭтоПоследнееПЗ() Тогда
					Если Не ОбщийМодульСозданиеДокументов.СоздатьПередачуНаЛинейку(МТК,ДатаОкончания+1) Тогда
					Сообщить("Документ передачи на линейку не создан!");
					ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
					Возврат(Ложь);				
					КонецЕсли;
				КонецЕсли; 
			КонецЕсли;  
		Иначе
		Сообщить("Документ выпуска по ПЗ "+Объект.ПроизводственноеЗадание.Номер+" не создан!");
		ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
		Возврат(Ложь);
		КонецЕсли;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(Истина);	
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Ложь);
	КонецПопытки;
КонецФункции

&НаКлиенте
Процедура Завершить(Команда)
	Если Не Объект.ПроизводственноеЗадание.Пустая() Тогда
		Если ЗавершитьНаСервере() Тогда
		ОчиститьСсылкуНаПЗ();
		КонецЕсли;					
	Иначе
	Сообщить("Производственное задание не получено!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоВПЗ()
Возврат(Объект.ПроизводственноеЗадание.Количество);
КонецФункции 

&НаКлиенте
Процедура ОформитьБрак(Команда)
	Если Объект.ПроизводственноеЗадание.Пустая() Тогда
	Сообщить("Нет выбранного производственного задания!");
	Возврат;	
	КонецЕсли;
Результат = ОткрытьФормуМодально("ОбщаяФорма.ОформлениеБракаКанбан",Новый Структура("РабочееМесто,ПЗ,КоличествоИзделия",Объект.РабочееМесто,Объект.ПроизводственноеЗадание,ПолучитьКоличествоВПЗ()));
	Если Результат <> 0 Тогда
	КоличествоБрак = ОбщийМодульВызовСервера.ПолучитьКоличествоВБракеПоПЗ(Объект.ПроизводственноеЗадание,Объект.РабочееМесто);		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаСервере
Функция ПечатьQRКодыНаСервере()
ТабДок = Новый ТабличныйДокумент;

barcode = ПолучитьCOMОбъект("","STROKESCRIBE.StrokeScribeClass.1");
barcode.Alphabet=25; //QRCODE
Макет = ПолучитьОбщийМакет("QRКод_10х17_2");
ОблQRКод = Макет.ПолучитьОбласть("QRКод|Ячейка");
НомерМТК = Объект.ПроизводственноеЗадание.Номер;
Кол = 1;
	Для к = 1 По КоличествоИзделия Цикл
	QRCode = ""+НомерМТК+";"+к;
	ИмяФайла=ПолучитьИмяВременногоФайла("wmf");
	barcode.Text=QRCode;
	barcode.UTF8=1;
	barcode.QrECL=2;
	код=barcode.SavePicture(ИмяФайла,7,100,100);          
		Если код <> 0 Тогда //Проверка результата генерации штрихкода
		Сообщить(строка(код) + " - " + barcode.ErrorDescription);
		Возврат(ТабДок);
		КонецЕсли;
	рис=ОблQRКод.Рисунки.QRCode;
	рис.РазмерКартинки=РазмерКартинки.Пропорционально;
	рис.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
	рис.Картинка = Новый Картинка(ИмяФайла);
		Если Кол = 1 Тогда
		ТабДок.Вывести(ОблQRКод);
		Кол = 2;
		Иначе
		ТабДок.Присоединить(ОблQRКод);
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();	
		Кол = 1;
		КонецЕсли; 
	УдалитьФайлы(ИмяФайла);
	КонецЦикла; 
ТабДок.РазмерСтраницы = "Custom";
ТабДок.ВысотаСтраницы = 10;
ТабДок.ШиринаСтраницы = 17;
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьQRКоды(Команда)
ТабДок = ПечатьQRКодыНаСервере();
ТабДок.Показать("QR-коды");
КонецПроцедуры

&НаСервере
Функция ПолучитьСпецификацию()
Возврат(Объект.ПроизводственноеЗадание.Изделие);
КонецФункции 

&НаКлиенте
Процедура ОтчётПоИзмененияВСпецификации(Команда)
	Если Не Объект.ПроизводственноеЗадание.Пустая() Тогда
	ОткрытьФорму("Отчет.ОтчётПоИзменениямВСпецификации.Форма.ФормаОтчета",Новый Структура("Спецификация",ПолучитьСпецификацию()));
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура Ремонт(Команда)
	Если Объект.ПроизводственноеЗадание.Пустая() Тогда
	Сообщить("Нет выбранного производственного задания!");
	Возврат;	
	КонецЕсли;
Результат = ОткрытьФормуМодально("ОбщаяФорма.ОформлениеРемонтКанбан",Новый Структура("РабочееМесто,ПЗ,КоличествоИзделия",Объект.РабочееМесто,Объект.ПроизводственноеЗадание,КоличествоИзделия - КоличествоБрак));
	Если Результат <> 0 Тогда
	ОчиститьСсылкуНаПЗ();		
	КонецЕсли;
КонецПроцедуры
