
&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
    ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
    ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
    Сообщить(ТекстСообщения);
   	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаСервере
Процедура ПрисвоитьПартиюНаСервере()
Партия = Новый УникальныйИдентификатор;

	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
		Для каждого ТЧ Из ТаблицаПЗ Цикл
			Если ТЧ.Пометка Тогда
			ПЗОбъект = ТЧ.ПЗ.ПолучитьОбъект();
		    ПЗОбъект.Партия = Партия;
            ПЗОбъект.Записать(РежимЗаписиДокумента.Запись);
			ТЧ.Партия = Партия;
			КонецЕсли;
		КонецЦикла; 
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;	
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	КонецПопытки;
КонецПроцедуры
    
&НаСервере       
Функция ПроверитьПартии()
флОК = Истина;  
	Для каждого ТЧ Из ТаблицаПЗ Цикл
		Если ТЧ.Пометка Тогда
			Если ЗначениеЗаполнено(ТЧ.Партия) Тогда
			Сообщить(""+ТЧ.ПЗ+" - партия уже присвоена!");
			флОК = Ложь;	
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
Возврат(флОК);
КонецФункции

&НаКлиенте
Процедура ПрисвоитьПартию(Команда)
	Если ПроверитьПартии() Тогда
	ПрисвоитьПартиюНаСервере();
	КонецЕсли;
КонецПроцедуры
 
&НаСервере
Функция ЗавершитьНаСервере()
ДатаОкончания = ТекущаяДата();
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
		Для каждого ТЧ Из ТаблицаПЗ Цикл
			Если ТЧ.Пометка Тогда
			ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(ТЧ.ПЗ,Новый Структура("РабочееМесто,ДатаОкончания",ТЧ.РабочееМесто,ДатаОкончания));
				Если Не ОбщийМодульСозданиеДокументов.СоздатьВыпускПродукцииКанбан(ТЧ.ПЗ,ДатаОкончания) Тогда
				Сообщить("Документ выпуска по ПЗ "+ТЧ.ПЗ.Номер+" не создан!");
				ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
				Возврат(Ложь);
				КонецЕсли;
					Если ТЧ.ПЗ.Линейка.МестоХраненияГП.СоздаватьПередачуНаЛинейкуПотребитель Тогда	
						Если Не ОбщийМодульСозданиеДокументов.СоздатьПередачуНаЛинейку(ТЧ.ПЗ.ДокументОснование,ДатаОкончания+1) Тогда
						Сообщить("Документ передачи на линейку не создан!");
						ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
						Возврат(Неопределено);				
						КонецЕсли;			
					КонецЕсли;
			ПЗОбъект = ТЧ.ПЗ.ПолучитьОбъект();
			ПЗОбъект.ВозвратнаяТара = ВозвратнаяТара;
			ПЗОбъект.Оборудование.Очистить();
				Для каждого ТЧ_О Из ТЧ.ТаблицаТО Цикл
				ТЧ_ТО = ПЗОбъект.Оборудование.Добавить();
				ТЧ_ТО.ТехОперация = ТЧ_О.ТехОперация;
				ТЧ_ТО.Оборудование = ТЧ_О.Оборудование;
				ТЧ_ТО.Исполнитель = ТЧ_О.Исполнитель;
				ТЧ_ТО.Количество = ТЧ_О.Количество;
				КонецЦикла;
			ПЗОбъект.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;	
		КонецЦикла;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(Истина);	
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Неопределено);
	КонецПопытки;
Возврат(Ложь);
КонецФункции
  
&НаСервере       
Функция ПроверитьТЗ()
флОК = Истина;  
	Для каждого ТЧ Из ТаблицаПЗ Цикл
		Если ТЧ.Пометка Тогда
			Если ОбщийМодульВызовСервера.МТКОстановлена(ТЧ.ПЗ) Тогда
			Сообщить(""+ТЧ.ПЗ+" - МТК остановлена!");
			флОК = Ложь;
			КонецЕсли;
				Если ТЧ.ТребуетсяВТ Тогда
					Если Не ЗначениеЗаполнено(ТЧ.ВозвратнаяТара) Тогда
					Сообщить(""+ТЧ.ПЗ+" - не заполнена возвратная тара!");
					флОК = Ложь;	
					КонецЕсли;
				КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
Возврат(флОК);
КонецФункции

&НаКлиенте
Процедура Завершить(Команда)
   	Если ПроверитьТЗ() Тогда
		Если ЗавершитьНаСервере() Тогда
		ПолучитьЗаданияНаСервере();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция НайтиПоПЗ(Значение)
ПЗ = ЗначениеИзСтрокиВнутр(Значение);
Выборка = ТаблицаПЗ.НайтиСтроки(Новый Структура("ПЗ",ПЗ));
	Если Выборка.Количество() > 0 Тогда
	Возврат(Выборка[0].ПолучитьИдентификатор());
	КонецЕсли;
Сообщить("Производственное задание не найдено!");
Возврат(Неопределено); 
КонецФункции

&НаСервере
Процедура ПолучитьЯчейкуХранения(Значение)
ВозвратнаяТара = ЗначениеИзСтрокиВнутр(Значение);
КонецПроцедуры

&НаСервере
Функция МожноРаботатьВАРМ()
	Если ОбщийМодульВызовСервера.МожноВыполнить(СписокЛинеек[0].Значение) Тогда	
	Возврат(Истина);
	Иначе
	Сообщить("Работа АРМ запрещена в этой базе!");
	Возврат(Ложь);
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
	Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,";");
		Если Массив[0] = "4" Тогда	
		Элементы.ТаблицаПЗ.ТекущаяСтрока = НайтиПоПЗ(Массив[1]);
		Элементы.ТаблицаПЗ.ТекущиеДанные.Пометка = Истина;
		Иначе
			Если Элементы.ТаблицаПЗ.ТекущиеДанные.ТребуетсяВТ Тогда
			Элементы.ТаблицаПЗ.ТекущиеДанные.ВозвратнаяТара = Массив[0];
			Элементы.ТаблицаПЗ.ТекущиеДанные.Пометка = Истина;
			Иначе
			Сообщить("Для выбранной ПЗ не требуется возвратная тара!");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ТребуетсяВозвратнаяТара(ПЗ)
	Если Константы.КодБазы.Получить() = "БГР" Тогда
	Док = ПЗ.ДокументОснование.ДокументОснование;
		Если ТипЗнч(Док) = Тип("ДокументСсылка.МаршрутнаяКарта") Тогда
		Возврат(Истина);
		ИначеЕсли ТипЗнч(Док) = Тип("ДокументСсылка.РемонтнаяКарта") Тогда
		Возврат(Истина);
		КонецЕсли; 
	КонецЕсли;
Возврат(Ложь);
КонецФункции 

&НаСервере
Функция ПолучитьСписокСотрудников(Оборудование)
СписокСотрудников = Новый СписокЗначений;

	Для каждого ТЧ Из Оборудование.Сотрудники Цикл	
	СписокСотрудников.Добавить(ТЧ.Сотрудник);	
	КонецЦикла;
Возврат(СписокСотрудников);
КонецФункции

&НаСервере
Функция ПолучитьСписокИсполнителей(ТО)
СписокИсполнителей = Новый СписокЗначений;

	Для каждого ТЧ Из ТО.Оборудование Цикл	
	СписокИсполнителей.Добавить(ТЧ.Сотрудник,СокрЛП(ТЧ.Сотрудник.Наименование)+" ("+СокрЛП(ТЧ.Оборудование.Наименование)+")");
	КонецЦикла;
Возврат(СписокИсполнителей); 
КонецФункции

&НаСервере
Функция ПолучитьОборудование(ТО,Исполнитель)
	Для каждого ТЧ Из ТО.Оборудование Цикл	
		Если ТЧ.Сотрудник = Исполнитель Тогда
		Возврат(ТЧ.Оборудование);
		КонецЕсли;
	КонецЦикла;
Возврат(Справочники.Сотрудники.ПустаяСсылка()); 
КонецФункции 

&НаСервере                            
Процедура ПолучитьЗаданияНаСервере()
ТаблицаПЗ.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ КАК ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПервых.Изделие КАК Изделие,
	|	ЭтапыПроизводственныхЗаданийСрезПервых.ДатаНачала КАК ДатаНачала,
	|	ЭтапыПроизводственныхЗаданийСрезПервых.РабочееМесто КАК РабочееМесто
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПервых КАК ЭтапыПроизводственныхЗаданийСрезПервых
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПервых.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	И ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.ДокументОснование.Статус = 4
	|	И ЭтапыПроизводственныхЗаданийСрезПервых.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.Линейка.Наименование,
	|	ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.Номер";
Запрос.УстановитьПараметр("СписокЛинеек",СписокЛинеек);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл   
    ТЧ = ТаблицаПЗ.Добавить();
	ТЧ.ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
	ТЧ.Партия = ВыборкаДетальныеЗаписи.ПЗ.Партия;
	ТЧ.ТребуетсяВТ = ТребуетсяВозвратнаяТара(ВыборкаДетальныеЗаписи.ПЗ);
	ТЧ.ВозвратнаяТара = ВыборкаДетальныеЗаписи.ПЗ.ВозвратнаяТара;
	ТЧ.РабочееМесто = ВыборкаДетальныеЗаписи.РабочееМесто;
		Для каждого ТЧ_О Из ТЧ.ПЗ.Оборудование Цикл	
		ТЧ_ТО = ТЧ.ТаблицаТО.Добавить();
		ТЧ_ТО.ТехОперация = ТЧ_О.ТехОперация;
		ТЧ_ТО.Оборудование = ТЧ_О.Оборудование;
		ТЧ_ТО.Исполнитель = ТЧ_О.Исполнитель;
		ТЧ_ТО.Количество = ТЧ_О.Количество;
		КонецЦикла; 	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьЗадания(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		Если Не МожноРаботатьВАРМ() Тогда
		Возврат;
		КонецЕсли;
	ПолучитьЗаданияНаСервере();
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПолучитьСписокОборудования(СписокОборудования,ТехОперация)
	Для каждого ТЧ Из ТехОперация.Оборудование Цикл
	СписокОборудования.Добавить(ТЧ.Оборудование);
	КонецЦикла;
КонецПроцедуры 

&НаКлиенте
Процедура ТаблицаПЗТаблицаТООборудованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
СписокОборудования = Новый СписокЗначений;

ПолучитьСписокОборудования(СписокОборудования, Элементы.ТаблицаПЗТаблицаТО.ТекущиеДанные.ТехОперация);
ВыбОборудование = СписокОборудования.ВыбратьЭлемент("Выберите оборудование");
	Если ВыбОборудование <> Неопределено Тогда
	Элементы.ТаблицаПЗТаблицаТО.ТекущиеДанные.Оборудование = ВыбОборудование.Значение;
	флИзменено = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПЗТаблицаТОИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
СписокИсполнителей = ПолучитьСписокИсполнителей(Элементы.ТаблицаПЗТаблицаТО.ТекущиеДанные.ТехОперация);
Исполнитель = СписокИсполнителей.ВыбратьЭлемент("Выберите исполнителя");
	Если Исполнитель <> Неопределено Тогда
	Элементы.ТаблицаПЗТаблицаТО.ТекущиеДанные.Исполнитель = Исполнитель.Значение; 
	Элементы.ТаблицаПЗТаблицаТО.ТекущиеДанные.Оборудование = ПолучитьОборудование(Элементы.ТаблицаПЗТаблицаТО.ТекущиеДанные.ТехОперация,Исполнитель.Значение);
	флИзменено = Истина;
	КонецЕсли;
КонецПроцедуры
