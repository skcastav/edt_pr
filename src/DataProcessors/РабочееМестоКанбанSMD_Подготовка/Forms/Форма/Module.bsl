 
&НаСервере 
Перем ТаблицаСклада,ТаблицаСкладаКопия;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
КоличествоПЗ = 5;
КонецПроцедуры

&НаСервере
Функция ПроверитьНаСкладеНаСервере(МПЗ,Количество)
Выборка = ТаблицаСклада.Найти(МПЗ,"МПЗ");
	Если Выборка <> Неопределено Тогда
		Если Выборка.Количество >= Количество Тогда
		Выборка.Количество = Выборка.Количество - Количество;
		Возврат(Истина);
		КонецЕсли;
	КонецЕсли;
Возврат(Ложь);
КонецФункции

&НаСервере
Процедура РаскрытьНаМПЗиПроверить(Узел,ЭтапСпецификации,КолУзла,СледующееПЗ)
ВыборкаНР = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н_М(ЭтапСпецификации,ТекущаяДата());
	Пока ВыборкаНР.Следующий() Цикл
		Если ТипЗнч(ВыборкаНР.Элемент) = Тип("СправочникСсылка.Номенклатура")Тогда
			Если ВыборкаНР.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Набор Тогда
			РаскрытьНаМПЗиПроверить(Узел,ВыборкаНР.Элемент,ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла,СледующееПЗ);
			Продолжить;
			ИначеЕсли Не ВыборкаНР.Элемент.Канбан.Пустая() Тогда
				Если Не ВыборкаНР.Элемент.Канбан.РезервироватьВПроизводстве Тогда		
				Продолжить;
				КонецЕсли;			
			КонецЕсли;
		Выборка = Этапы.НайтиСтроки(Новый Структура("ЭтапСпецификации",ВыборкаНР.Элемент));
        	Если Выборка.Количество() > 0 Тогда
			Продолжить;
			КонецЕсли;
		КонецЕсли;
	ТаблицаМПЗ.Очистить();	
	ТЧ = ТаблицаМПЗ.Добавить();
	ТЧ.МПЗ = ВыборкаНР.Элемент;
	ТЧ.Количество = ПолучитьБазовоеКоличество(ВыборкаНР.Норма,ВыборкаНР.Элемент.ОсновнаяЕдиницаИзмерения)*КолУзла;
	ТЧ.Приоритет = 1;
	ТаблицаАналогов = ОбщегоНазначенияПовтИсп.ПолучитьАналогиНормРасходов(ВыборкаНР.Ссылка,ТекущаяДата(),Истина);
		Для каждого ТЧ_ТА Из ТаблицаАналогов Цикл
		ТЧ = ТаблицаМПЗ.Добавить();
		ТЧ.МПЗ = ТЧ_ТА.Элемент;
		ТЧ.Количество = ТЧ_ТА.Норма*КолУзла;
		ТЧ.Приоритет = ?(ПолучитьСтатус(ТЧ_ТА.Элемент) = Перечисления.СтатусыМПЗ.ДоИсчерпанияЗапасов,0,ТЧ_ТА.Ссылка.Приоритет + 1); 
		КонецЦикла;
	ТаблицаМПЗ.Сортировать("Приоритет");
	флЗарезервирован = Ложь;
		Для каждого ТЧ Из ТаблицаМПЗ Цикл
			Если ПроверитьНаСкладеНаСервере(ТЧ.МПЗ,ТЧ.Количество) Тогда 
				Если Найти(ТЧ.МПЗ.Родитель.Наименование,"0 - Платы") = 0 Тогда
					Если СледующееПЗ Тогда
						Если СписокПереналадки.НайтиПоЗначению(ТЧ.МПЗ) = Неопределено Тогда
							Если ТЧ.МПЗ.СтационарныеПитатели.Найти(РабочееМесто.Линейка,"Линейка") = Неопределено Тогда
							СписокПереналадки.Добавить(ТЧ.МПЗ);
							КонецЕсли;
						КонецЕсли;
					Иначе	
						Если СписокНаСтанке.НайтиПоЗначению(ТЧ.МПЗ) = Неопределено Тогда
							Если ТЧ.МПЗ.СтационарныеПитатели.Найти(РабочееМесто.Линейка,"Линейка") = Неопределено Тогда
							СписокНаСтанке.Добавить(ТЧ.МПЗ);
							КонецЕсли;
						КонецЕсли;				
					КонецЕсли;
				КонецЕсли; 
			флЗарезервирован = Истина;
			Прервать;				
			КонецЕсли; 
		КонецЦикла;
			Если Не флЗарезервирован Тогда
			СписокЛО.Добавить(ВыборкаНР.Ссылка);
			КонецЕсли;  		
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Функция ПроверитьНаЛО(ПЗ,СледующееПЗ)
	Если СледующееПЗ Тогда
	СписокПереналадки.Очистить();
	Иначе	
	СписокНаСтанке.Очистить();
	КонецЕсли;
СписокЛО.Очистить();
Этапы.Очистить();
ЭтапыАРМ.Очистить();
СохранитьТаблицуСклада();	
РезультатПроверки = ОбщийМодульСозданиеДокументов.ПроверитьЭтапыСпецификации(ПЗ.Линейка,ПЗ.Изделие);
	Если РезультатПроверки.Пустая() Тогда
	ОбщийМодульВызовСервера.ПолучитьТаблицуЭтаповСпецификации(Этапы,ПЗ.Изделие,ПЗ.Количество,Ложь,ТекущаяДата());
		Для каждого ТЧ_Этап Из Этапы Цикл
		РаскрытьНаМПЗиПроверить(ТЧ_Этап.ЭтапСпецификации,ТЧ_Этап.ЭтапСпецификации,ТЧ_Этап.Количество,СледующееПЗ);
		КонецЦикла;
	ОбщийМодульРаботаСРегистрами.ОбработкаЛьготнойОчереди(ПЗ,СписокЛО);
		Если СписокЛО.Количество() > 0 Тогда
		ВосстановитьТаблицуСклада();
		Возврат(Истина);
		Иначе
			Если СледующееПЗ Тогда
			ВосстановитьТаблицуСклада();			
			КонецЕсли; 
		КонецЕсли;  
	Иначе
	Сообщить("Не найдено рабочее место для "+РезультатПроверки);
	КонецЕсли;
Возврат(Ложь);
КонецФункции

&НаСервере
Процедура ПолучитьЗаданияПоПриоритету()
Запрос = Новый Запрос;                 

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ КАК ПЗ
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних(, РабочееМесто = &РабочееМесто) КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.Статус = 0
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.НомерОчереди > 0
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.НомерОчереди";
Запрос.УстановитьПараметр("РабочееМесто",РабочееМесто);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл   
		Если Не ПроверитьНаЛО(ВыборкаДетальныеЗаписи.ПЗ,Ложь) Тогда
	    ТЧ = ТаблицаЗаданий.Добавить();
		ТЧ.ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
		ТЧ.Комментарий = "Приоритет";
			Для каждого МПЗ Из СписокНаСтанке Цикл	
			ТЧ_П = ТЧ.ТаблицаМПЗ.Добавить();
			ТЧ_П.МПЗ = МПЗ.Значение;
			КонецЦикла;
		ТЧ.ТаблицаМПЗ.Сортировать("МПЗ");
			Если ТаблицаЗаданий.Количество() = КоличествоПЗ Тогда
			Возврат;
			КонецЕсли; 
		Иначе
		СписокПЗВЛО.Добавить(ВыборкаДетальныеЗаписи.ПЗ);
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПроверитьНаБыструюПереналадку(ПЗ)
КоличествоОтличийТекущее = 0;
	Для каждого МПЗ Из СписокПереналадки Цикл	
		Если СписокНаСтанке.НайтиПоЗначению(МПЗ.Значение) = Неопределено Тогда
		КоличествоОтличийТекущее = КоличествоОтличийТекущее + 1;
		КонецЕсли; 
	КонецЦикла;
		Если КоличествоОтличийТекущее <= КоличествоОтличий Тогда
		ТЧ = ТаблицаПереналадок.Добавить();
		ТЧ.Дата = ПЗ.Дата;
		ТЧ.ПЗ = ПЗ;
		ТЧ.КоличествоОтличий = КоличествоОтличийТекущее;
			Для каждого МПЗ Из СписокПереналадки Цикл	
			ТЧ_П = ТЧ.ТаблицаМПЗ.Добавить();
			ТЧ_П.МПЗ = МПЗ.Значение;
			КонецЦикла;
		КонецЕсли;  
КонецПроцедуры 

&НаСервере
Функция ПолучитьЗаданиеПоБыстройПереналадке()
ТаблицаПереналадок.Очистить();
Запрос = Новый Запрос;

СписокПЗ = СписокПЗВЛО.ВыгрузитьЗначения();
	Для каждого ТЧ Из ТаблицаЗаданий Цикл
	СписокПЗ.Добавить(ТЧ.ПЗ);	
	КонецЦикла; 

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ КАК ПЗ
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних(, РабочееМесто = &РабочееМесто) КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.Статус = 0
	|	И НЕ ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ В (&СписокПЗ)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.НомерОчереди = 0
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.НомерОчереди";
Запрос.УстановитьПараметр("РабочееМесто",РабочееМесто);
Запрос.УстановитьПараметр("СписокПЗ",СписокПЗ);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл   
		Если Не ПроверитьНаЛО(ВыборкаДетальныеЗаписи.ПЗ,Истина) Тогда
		ПроверитьНаБыструюПереналадку(ВыборкаДетальныеЗаписи.ПЗ);
		КонецЕсли;
	КонецЦикла;
		Если ТаблицаПереналадок.Количество() > 0 Тогда
		ТаблицаПереналадок.Сортировать("КоличествоОтличий,Дата,ПЗ");
			Если Не ПроверитьНаЛО(ТаблицаПереналадок[0].ПЗ,Ложь) Тогда
			ТЧ = ТаблицаЗаданий.Добавить();
			ТЧ.ПЗ = ТаблицаПереналадок[0].ПЗ;
			ТЧ.КоличествоОтличий = ТаблицаПереналадок[0].КоличествоОтличий;
				Для каждого ТЧ_МПЗ Из ТаблицаПереналадок[0].ТаблицаМПЗ Цикл	
				ТЧ_П = ТЧ.ТаблицаМПЗ.Добавить();
				ТЧ_П.МПЗ = ТЧ_МПЗ.МПЗ;
				КонецЦикла;
			ТЧ.ТаблицаМПЗ.Сортировать("МПЗ");		
			ТЧ.Комментарий = "Быстрая переналадка";
			КонецЕсли;		
		Возврат(Истина);		
		КонецЕсли;
Возврат(Ложь);
КонецФункции

&НаСервере
Процедура ПолучитьЗаданияПоБыстройПереналадке()
	Пока ТаблицаЗаданий.Количество() < КоличествоПЗ Цикл	
		Если Не ПолучитьЗаданиеПоБыстройПереналадке() Тогда
		Прервать;
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Функция ПолучитьЗаданиеПоФИФО()
Запрос = Новый Запрос;

СписокПЗ = СписокПЗВЛО.ВыгрузитьЗначения();
	Для каждого ТЧ Из ТаблицаЗаданий Цикл
	СписокПЗ.Добавить(ТЧ.ПЗ);	
	КонецЦикла; 

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ КАК ПЗ
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних(, РабочееМесто = &РабочееМесто) КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.Статус = 0
	|	И НЕ ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ В (&СписокПЗ)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.НомерОчереди = 0
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.Дата,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.НомерОчереди";
Запрос.УстановитьПараметр("РабочееМесто",РабочееМесто);
Запрос.УстановитьПараметр("СписокПЗ",СписокПЗ);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл     
		Если Не ПроверитьНаЛО(ВыборкаДетальныеЗаписи.ПЗ,Ложь) Тогда
	    ТЧ = ТаблицаЗаданий.Добавить();
		ТЧ.ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
		ТЧ.Комментарий = "ФИФО";
			Для каждого МПЗ Из СписокНаСтанке Цикл	
			ТЧ_П = ТЧ.ТаблицаМПЗ.Добавить();
			ТЧ_П.МПЗ = МПЗ.Значение;
			КонецЦикла;
		ТЧ.ТаблицаМПЗ.Сортировать("МПЗ");
		Возврат(Истина);
		КонецЕсли; 
	КонецЦикла;
Возврат(Ложь);
КонецФункции

&НаСервере
Процедура ПолучитьЗаданияПоФИФО()
СписокПЗ = СписокПЗВЛО.ВыгрузитьЗначения();
	Для каждого ТЧ Из ТаблицаЗаданий Цикл
	СписокПЗ.Добавить(ТЧ.ПЗ);	
	КонецЦикла;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ КАК ПЗ
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних(, РабочееМесто = &РабочееМесто) КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.Статус = 0
	|	И НЕ ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ В (&СписокПЗ)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.НомерОчереди = 0
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.Дата,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.НомерОчереди";
Запрос.УстановитьПараметр("РабочееМесто",РабочееМесто);
Запрос.УстановитьПараметр("СписокПЗ",СписокПЗ);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл   
		Если СписокПЗВЛО.НайтиПоЗначению(ВыборкаДетальныеЗаписи.ПЗ) <> Неопределено Тогда
		Продолжить;
		КонецЕсли;  
			Если Не ПроверитьНаЛО(ВыборкаДетальныеЗаписи.ПЗ,Ложь) Тогда
		    ТЧ = ТаблицаЗаданий.Добавить();
			ТЧ.ПЗ = ВыборкаДетальныеЗаписи.ПЗ;
			ТЧ.Комментарий = "ФИФО";
				Если ТаблицаЗаданий.Количество() = КоличествоПЗ Тогда
				Возврат;
				КонецЕсли;
			КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПолучитьТаблицуСклада()
Запрос = Новый Запрос;
СписокМестХранения = Новый СписокЗначений;

СписокМестХранения.Добавить(РабочееМесто.Линейка.Подразделение.МестоХраненияПоУмолчанию);
СписокМестХранения.Добавить(РабочееМесто.Линейка.Подразделение.МестоХраненияДополнительный);
СписокМестХранения.Добавить(РабочееМесто.Линейка.МестоХраненияКанбанов); 

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОстатки.МПЗ КАК МПЗ,
	|	СУММА(МестаХраненияОстатки.КоличествоОстаток) КАК Количество
	|ИЗ
	|	РегистрНакопления.МестаХранения.Остатки(&НаДату, МестоХранения В (&СписокМестХранения)) КАК МестаХраненияОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	МестаХраненияОстатки.МПЗ";
Запрос.УстановитьПараметр("СписокМестХранения", СписокМестХранения);
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
РезультатЗапроса = Запрос.Выполнить();
ТаблицаСклада = РезультатЗапроса.Выгрузить();
ТаблицаСклада.Индексы.Добавить("МПЗ");
КонецПроцедуры

&НаСервере
Процедура СохранитьТаблицуСклада()
ТаблицаСкладаКопия = ТаблицаСклада.Скопировать(); 
КонецПроцедуры 

&НаСервере
Процедура ВосстановитьТаблицуСклада()
ТаблицаСклада = ТаблицаСкладаКопия.Скопировать(); 
КонецПроцедуры 
              
&НаСервере
Процедура ПолучитьЗаданияНаСервере()
ТаблицаЗаданий.Очистить(); 
СписокПЗВЛО.Очистить();
ПолучитьТаблицуСклада();
ПолучитьЗаданияПоПриоритету();
	Если ТаблицаЗаданий.Количество() = 0 Тогда
		Если Не ПолучитьЗаданиеПоФИФО() Тогда
		Возврат;
		КонецЕсли;
	КонецЕсли; 
		Пока ТаблицаЗаданий.Количество() < КоличествоПЗ Цикл
			Если Не ПолучитьЗаданиеПоФИФО() Тогда
			Возврат;
			КонецЕсли;
		КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьЗадания(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Состояние("Обработка...",,"Поиск заданий для запуска");
	ПолучитьЗаданияНаСервере();
	ОкончаниеЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Элементы.ВремяОбработки.Заголовок = ""+Окр(((ОкончаниеЗамера-НачалоЗамера)/60000),1,РежимОкругления.Окр15как20)+"мин.";
	КонецЕсли;  
КонецПроцедуры

&НаСервере
Функция ЗапуститьЗаданияНаСервере()
ДатаНачала = ТекущаяДата();
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1; 
		Для каждого ТЧ Из ТаблицаЗаданий Цикл	
		МТК = ТЧ.ПЗ.ДокументОснование.ПолучитьОбъект();
		МТК.Статус = 4;
		МТК.Записать(РежимЗаписиДокумента.Запись);
		ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(ТЧ.ПЗ,Новый Структура("РабочееМесто,ДатаНачала",РабочееМесто,ДатаНачала)); 
		ДатаНачала = ДатаНачала + 1;
		КонецЦикла; 		
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат(Ложь);
	КонецПопытки;
Возврат(Истина); 
КонецФункции

&НаКлиенте
Процедура ЗапуститьЗадания(Команда)
	Если ЗапуститьЗаданияНаСервере() Тогда
	ТаблицаЗаданий.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСпецификацию(ПЗ)
Возврат(ПЗ.Изделие);
КонецФункции 

&НаКлиенте
Процедура ОтчётПоИзмененияВСпецификации(Команда)
	Если Элементы.ТаблицаЗаданий.ТекущаяСтрока <> Неопределено Тогда
	ОткрытьФорму("Отчет.ОтчётПоИзменениямВСпецификации.Форма.ФормаОтчета",Новый Структура("Спецификация",ПолучитьСпецификацию(Элементы.ТаблицаЗаданий.ТекущиеДанные.ПЗ)));
	КонецЕсли; 
КонецПроцедуры
