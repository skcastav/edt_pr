
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
ДатаВыпуска = ТекущаяДата();
ДатаВыпускаТекущая = ДатаВыпуска;
Объект.Исполнитель = ПараметрыСеанса.Пользователь;
	Если Константы.КодБазы.Получить() = "БГР" Тогда
	ИзменитьПоМаске = Истина;
	КонецЕсли; 
		Если Объект.Исполнитель.Пустая() Тогда
		Элементы.РабочееМесто.Доступность = Ложь;
		Сообщить("Вы не внесены в справочник Сотрудников! Работа невозможна!");
		КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   	Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
    ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
    ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
    Сообщить(ТекстСообщения);
	КонецЕсли;
		Если СписокРабочихМест.Количество() > 0 Тогда
		СписокРабочихМестПриИзменении(Неопределено);
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаКлиенте
Процедура ДатаВыпускаПриИзменении(Элемент)
ДатаВыпускаТекущая = ДатаВыпуска;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево(ЭтапСпецификации)
Объект.Спецификация.Сортировать("ТипСправочника Убыв,ВидМПЗ,Позиция,МПЗ");
тДерево = РеквизитФормыВЗначение("ДеревоСпецификации");
тДерево.Строки.Очистить();
ТипСпр = "";
	Для каждого ТЧ Из Объект.Спецификация Цикл
		Если ТЧ.ЭтапСпецификации <> ЭтапСпецификации Тогда
		Продолжить;		
		КонецЕсли; 
			Если ТипСпр <> ТЧ.ТипСправочника Тогда
			Стр = тДерево.Строки.Добавить();
			Стр.ТипСправочника = ТЧ.ТипСправочника;
			ТипСпр = ТЧ.ТипСправочника;
			КонецЕсли; 
	СтрЗнч = Стр.Строки.Добавить();
	СтрЗнч.Позиция = ТЧ.Позиция;
	СтрЗнч.ВидЭлемента = ТЧ.ВидМПЗ;
	СтрЗнч.МПЗ = ТЧ.МПЗ;
	СтрЗнч.Количество = ТЧ.Количество;
	СтрЗнч.ЕдиницаИзмерения = ТЧ.ЕдиницаИзмерения;
	СтрЗнч.Аналог = ТЧ.Аналог;
	СтрЗнч.Примечание = ТЧ.Примечание;
		Если ТЧ.Владелец <> Неопределено Тогда
		СтрЗнч.Владелец = ТЧ.Владелец.Элемент;
		КонецЕсли; 		 
	КонецЦикла;
ЗначениеВРеквизитФормы(тДерево, "ДеревоСпецификации");
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКомплектацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
ЗаполнитьДерево(Элемент.ТекущиеДанные.ЭтапСпецификации);
РазвернутьДерево(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ПолучитьСписокЛО(ЭтапСпецификации,СписокНезавершенных,СписокЛО)
ВыборкаНР = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н(ЭтапСпецификации,ТекущаяДата());
	Пока ВыборкаНР.Следующий() Цикл
		Если ВыборкаНР.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Набор Тогда	
		ПолучитьСписокЛО(ВыборкаНР.Элемент,СписокНезавершенных,СписокЛО);
		Иначе
			Если СписокНезавершенных.НайтиПоЗначению(ВыборкаНР.Элемент) <> Неопределено Тогда
			СписокЛО.Добавить(ВыборкаНР.Ссылка);
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры 

&НаСервере
Функция ПолучитьПЗ(МТК)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Ссылка КАК ПЗ
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", МТК);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл  
	Возврат(ВыборкаДетальныеЗаписи.ПЗ);
	КонецЦикла;
Возврат(Документы.ПроизводственноеЗадание.ПустаяСсылка());
КонецФункции 

&НаСервере
Функция ПеремещеноНаСкладЛинейки(МТК)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДвижениеМПЗ.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ДвижениеМПЗ КАК ДвижениеМПЗ
	|ГДЕ
	|	ДвижениеМПЗ.ДокументОснование.ДокументОснование = &ДокументОснование
	|	И ДвижениеМПЗ.Проведен = ИСТИНА";
Запрос.УстановитьПараметр("ДокументОснование", МТК);
РезультатЗапроса = Запрос.Выполнить();
Возврат(Не РезультатЗапроса.Пустой());
КонецФункции

&НаСервере
Функция ПолучитьВТ(МТК)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Ссылка КАК ПЗ
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", МТК);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл  
	Возврат(ВыборкаДетальныеЗаписи.ПЗ.ВозвратнаяТара);
	КонецЦикла;
Возврат("");
КонецФункции

&НаСервере
Процедура ПолучитьПодчиненныеДокументы(ПЗ)
ТаблицаПодчиненныхДокументов.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МаршрутнаяКарта.Ссылка КАК Ссылка,
	|	МаршрутнаяКарта.Номенклатура КАК Номенклатура
	|ИЗ
	|	Документ.МаршрутнаяКарта КАК МаршрутнаяКарта
	|ГДЕ
	|	МаршрутнаяКарта.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", ПЗ.ДокументОснование);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаПодчиненныхДокументов.Добавить();
	ТЧ.ВозвратнаяТара = ПолучитьВТ(ВыборкаДетальныеЗаписи.Ссылка);
	ТЧ.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
		Если ВыборкаДетальныеЗаписи.Ссылка.Статус = 3 Тогда		
			Если Не ПеремещеноНаСкладЛинейки(ВыборкаДетальныеЗаписи.Ссылка) Тогда
			ТЧ.Незавершена = Истина;
			КонецЕсли 
		Иначе
		ТЧ.Незавершена = Истина;
		КонецЕсли;
	КонецЦикла;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка КАК Ссылка,
	|	ДвижениеМПЗТабличнаяЧасть.МПЗ КАК Номенклатура
	|ИЗ
	|	Документ.ДвижениеМПЗ.ТабличнаяЧасть КАК ДвижениеМПЗТабличнаяЧасть
	|ГДЕ
	|	ДвижениеМПЗТабличнаяЧасть.Ссылка.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", ПЗ.ДокументОснование);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаПодчиненныхДокументов.Добавить();
	ТЧ.ВозвратнаяТара = ВыборкаДетальныеЗаписи.Ссылка.ВозвратнаяТара;
	ТЧ.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПроверитьПодчиненныеМТК(ПЗ)
	Если Константы.КодБазы.Получить() = "БГР" Тогда
	СписокЛО = Новый СписокЗначений;
	СписокНезавершенных = Новый СписокЗначений;

		Для каждого ТЧ Из ТаблицаПодчиненныхДокументов Цикл
			Если ТЧ.Незавершена Тогда
			СписокНезавершенных.Добавить(ТЧ.Номенклатура);
			КонецЕсли;	
		КонецЦикла;
			Если СписокНезавершенных.Количество() > 0 Тогда
				Для каждого ТЧ Из Этапы Цикл
				ПолучитьСписокЛО(ТЧ.ЭтапСпецификации,СписокНезавершенных,СписокЛО);
				КонецЦикла;		
					Если СписокЛО.Количество() > 0 Тогда
					ОбщийМодульРаботаСРегистрами.ОбработкаЛьготнойОчереди(ПЗ,СписокЛО);
					КонецЕсли;
			Возврат(Ложь);			
			КонецЕсли;
	КонецЕсли;
Возврат(Истина);
КонецФункции 

&НаСервере
Функция ПолучитьЗаданиеНаСервере()
НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
КолПЗ = 0;
        
СписокИзделийЛО = Новый СписокЗначений;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование КАК МТК
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто В(&РабочиеМеста)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.Ремонт = ЛОЖЬ
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.Статус <> 2";
	Если СписокРабочихМест[0].Значение.ОбработкаЗаданийПоВремениПоступления Тогда
	Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ЭтапыПроизводственныхЗаданийСрезПоследних.Период
									|ИТОГИ ПО МТК";
	Иначе                           
	Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.НомерОчереди,
									|ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.ДатаОтгрузки,
									|ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.Номер
									|ИТОГИ ПО МТК";
	КонецЕсли; 
Запрос.УстановитьПараметр("РабочиеМеста",СписокРабочихМест); 
Результат = Запрос.Выполнить();

ВыборкаМТК = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМТК.Следующий() Цикл
		Если ОбщийМодульВызовСервера.ЛинейкаОстановлена(ВыборкаМТК.МТК.Линейка) Тогда
		Продолжить;
		КонецЕсли;
	ВыборкаДетальныеЗаписи = ВыборкаМТК.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КолПЗ = КолПЗ + 1;
			Если СписокИзделийЛО.НайтиПоЗначению(ВыборкаДетальныеЗаписи.ПЗ.Изделие) <> Неопределено Тогда
			Прервать; //Переходим к следующей МТК
			КонецЕсли;
				Если Не ОбщийМодульВызовСервера.СоздатьТаблицуЭтаповПроизводства(ВыборкаДетальныеЗаписи.ПЗ,Этапы,ЭтапыАРМ,ВыборкаДетальныеЗаписи.РабочееМесто,Объект.Исполнитель) Тогда	
				Прервать; //Переходим к следующей МТК			
				КонецЕсли;
 		ПолучитьПодчиненныеДокументы(ВыборкаДетальныеЗаписи.ПЗ);
			Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ПЗ.ДатаЗапуска) Тогда
				Если ТаблицаПодчиненныхДокументов.Количество() > 0 Тогда
					Если Не ПроверитьПодчиненныеМТК(ВыборкаДетальныеЗаписи.ПЗ) Тогда						
					Прервать; //Переходим к следующей МТК
					КонецЕсли;
				Иначе
					Если ОбщийМодульВызовСервера.ИмеетНестандартныеДетали(ВыборкаДетальныеЗаписи.ПЗ.Изделие,Ложь) Тогда
					Прервать; //Переходим к следующей МТК
					КонецЕсли; 
				КонецЕсли; 
			Результат = ОбщийМодульВызовСервера.ЗапуститьВПроизводство(ВыборкаДетальныеЗаписи.ПЗ,ВыборкаДетальныеЗаписи.РабочееМесто,Этапы);
				Если Результат = 0 Тогда
				СписокИзделийЛО.Добавить(ВыборкаДетальныеЗаписи.ПЗ.Изделие);
				Прервать; //Переходим к следующей МТК
				ИначеЕсли Результат = -1 Тогда
				Возврат(-1);
				КонецЕсли; 					
			КонецЕсли;
				Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаНачала) Тогда 
				Парам = Новый Структура("РабочееМесто,Исполнитель,ДатаНачала",ВыборкаДетальныеЗаписи.РабочееМесто,Объект.Исполнитель,ТекущаяДата());
				ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(ВыборкаДетальныеЗаписи.ПЗ,Парам);
				КонецЕсли;
		Объект.ПроизводственноеЗадание = ВыборкаДетальныеЗаписи.ПЗ;
		Объект.РабочееМесто = ВыборкаДетальныеЗаписи.РабочееМесто;
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ПЗ.ВозвратнаяТара) Тогда
			НомерВТ = ВыборкаДетальныеЗаписи.ПЗ.ВозвратнаяТара+" (получите на разукомплектовке)";
			КонецЕсли;
		ПолучитьСпецификациюЭтапов(Объект.РабочееМесто);
		ОкончаниеЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
		ОбщийМодульРаботаСРегистрами.СборИнформацииПоАРМ(1,ВыборкаДетальныеЗаписи.РабочееМесто,Объект.ПроизводственноеЗадание.Изделие,КолПЗ,(ОкончаниеЗамера - НачалоЗамера)/1000);
		Возврат(1);
		КонецЦикла;
	КонецЦикла;
ОкончаниеЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
ОбщийМодульРаботаСРегистрами.СборИнформацииПоАРМ(1,Объект.РабочееМесто,Справочники.Номенклатура.ПустаяСсылка(),КолПЗ,(ОкончаниеЗамера - НачалоЗамера)/1000);
Возврат(0);
КонецФункции

&НаСервере
Функция ПолучитьЗаданиеНаПромежуточномЭтапеНаСервере(БарКод = Неопределено)
НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
КолПЗ = 0;

Запрос = Новый Запрос;

	Если СписокРабочихМест[0].Значение.ЗаканчиватьПредыдущийЭтап Тогда
	СписокРабочихМестПредыдущегоЭтапа = ПолучитьСписокРабочихМест();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ,
		|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто,
		|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала
		|ИЗ
		|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
		|ГДЕ
		|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто В(&РабочиеМеста)
		|	И ЭтапыПроизводственныхЗаданийСрезПоследних.Ремонт = ЛОЖЬ
		|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.Статус <> 2";
		Если БарКод <> Неопределено Тогда
		Запрос.Текст = Запрос.Текст + " И ЭтапыПроизводственныхЗаданийСрезПоследних.БарКод = &БарКод";
		Запрос.УстановитьПараметр("БарКод", БарКод);
		КонецЕсли;
			Если СписокРабочихМестПредыдущегоЭтапа[0].Значение.ОбработкаЗаданийПоВремениПоступления Тогда
			Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ЭтапыПроизводственныхЗаданийСрезПоследних.Период";
			Иначе	
			Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.НомерОчереди,ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.ДатаОтгрузки,ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.Номер";
			КонецЕсли;
	Запрос.УстановитьПараметр("РабочиеМеста", СписокРабочихМестПредыдущегоЭтапа);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			КолПЗ = КолПЗ + 1;
				Если ОбщийМодульВызовСервера.ЛинейкаОстановлена(ВыборкаДетальныеЗаписи.РабочееМесто.Линейка) Тогда
				Продолжить;
				КонецЕсли;
			ПолучитьПодчиненныеДокументы(ВыборкаДетальныеЗаписи.ПЗ);
			Объект.ПроизводственноеЗадание = ВыборкаДетальныеЗаписи.ПЗ;
			ПредыдущееРабочееМесто = ВыборкаДетальныеЗаписи.РабочееМесто;
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ПЗ.ВозвратнаяТара) Тогда
				НомерВТ = ВыборкаДетальныеЗаписи.ПЗ.ВозвратнаяТара+" (получите на разукомплектовке)";
				КонецЕсли;
					Если Не ОбщийМодульВызовСервера.СоздатьТаблицуЭтаповПроизводства(ВыборкаДетальныеЗаписи.ПЗ,Этапы,ЭтапыАРМ,ВыборкаДетальныеЗаписи.РабочееМесто,Объект.Исполнитель) Тогда	
					Сообщить(СокрЛП(ВыборкаДетальныеЗаписи.ПЗ.ДокументОснование.Номер)+" - МТК остановлена! Ошибка записана в МТК!");			
					Продолжить;
					КонецЕсли; 
			ДатаПринятия = ТекущаяДата();
				Попытка
				НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
				Парам = Новый Структура("РабочееМесто,ДатаОкончания",ПредыдущееРабочееМесто,ДатаПринятия);
				ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Парам);
					Если СокрЛП(ПредыдущееРабочееМесто.ГруппаРабочихМест.Префикс) = "СТ" Тогда
					НаборЗаписей = РегистрыСведений.СтендовыйПрогон.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.ПЗ.Установить(Объект.ПроизводственноеЗадание);
					НаборЗаписей.Прочитать();
					    Для Каждого Запись Из НаборЗаписей Цикл
							Если Не ЗначениеЗаполнено(Запись.ДатаСнятия) Тогда
							Запись.ИсполнительСнятие = Объект.Исполнитель;
							Запись.ДатаСнятия = ДатаПринятия;
							Прервать; 
							КонецЕсли;  
					    КонецЦикла;
					НаборЗаписей.Записать();
					КонецЕсли; 
				ПолучитьСпецификациюЭтапов(ПредыдущееРабочееМесто);
					Если ОбщийМодульСозданиеДокументов.СоздатьВыпускПродукции(Объект.ПроизводственноеЗадание,ПредыдущееРабочееМесто,Объект.Спецификация,Этапы,ДатаПринятия) Тогда	
					Объект.РабочееМесто = ОбщийМодульВызовСервера.ПолучитьСледующееРабочееМесто(ВыборкаДетальныеЗаписи.РабочееМесто);
					ОбщийМодульРаботаСРегистрами.СоздатьЭтапПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,Объект.Исполнитель,ДатаПринятия);
					ПолучитьСпецификациюЭтапов(Объект.РабочееМесто);
					ОкончаниеЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
					ОбщийМодульРаботаСРегистрами.СборИнформацииПоАРМ(1,Объект.РабочееМесто,Объект.ПроизводственноеЗадание.Изделие,КолПЗ,(ОкончаниеЗамера - НачалоЗамера)/1000);
					ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
					Возврат(1);
					Иначе
					Сообщить("Документ выпуска по производственному заданию "+Объект.ПроизводственноеЗадание.Номер+" не создан!");
					ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
					КонецЕсли;
				Исключение
				Сообщить(ОписаниеОшибки());
				ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
				КонецПопытки;				
			КонецЦикла;			
		КонецЕсли;
	Иначе
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ,
		|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто,
		|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала
		|ИЗ
		|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
		|ГДЕ
		|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто В(&РабочиеМеста)
		|	И ЭтапыПроизводственныхЗаданийСрезПоследних.Ремонт = ЛОЖЬ
		|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.Статус <> 2";
		Если БарКод <> Неопределено Тогда
		Запрос.Текст = Запрос.Текст + " И ЭтапыПроизводственныхЗаданийСрезПоследних.БарКод = &БарКод";
		Запрос.УстановитьПараметр("БарКод", БарКод);
		КонецЕсли;
			Если СписокРабочихМест[0].Значение.ОбработкаЗаданийПоВремениПоступления Тогда
			Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ЭтапыПроизводственныхЗаданийСрезПоследних.Период";
			Иначе	
			Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.НомерОчереди,ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.ДатаОтгрузки,ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.Номер";
			КонецЕсли;
	Запрос.УстановитьПараметр("РабочиеМеста", СписокРабочихМест);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			КолПЗ = КолПЗ + 1;
				Если ОбщийМодульВызовСервера.ЛинейкаОстановлена(ВыборкаДетальныеЗаписи.РабочееМесто.Линейка) Тогда
				Продолжить;
				КонецЕсли;
			ПолучитьПодчиненныеДокументы(ВыборкаДетальныеЗаписи.ПЗ);
			Объект.ПроизводственноеЗадание = ВыборкаДетальныеЗаписи.ПЗ;
			Объект.РабочееМесто = ВыборкаДетальныеЗаписи.РабочееМесто;
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ПЗ.ВозвратнаяТара) Тогда
				НомерВТ = ВыборкаДетальныеЗаписи.ПЗ.ВозвратнаяТара+" (получите на разукомплектовке)";
				КонецЕсли;
					Если Не ОбщийМодульВызовСервера.СоздатьТаблицуЭтаповПроизводства(ВыборкаДетальныеЗаписи.ПЗ,Этапы,ЭтапыАРМ,ВыборкаДетальныеЗаписи.РабочееМесто,Объект.Исполнитель) Тогда	
					Продолжить;	
					КонецЕсли; 
						Если Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаНачала) Тогда	
						Парам = Новый Структура("РабочееМесто,Исполнитель,ДатаНачала",Объект.РабочееМесто,Объект.Исполнитель,ТекущаяДата());
						ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Парам);						
						КонецЕсли; 	
			ПолучитьСпецификациюЭтапов(Объект.РабочееМесто);
			ОкончаниеЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
			ОбщийМодульРаботаСРегистрами.СборИнформацииПоАРМ(1,Объект.РабочееМесто,Объект.ПроизводственноеЗадание.Изделие,КолПЗ,(ОкончаниеЗамера - НачалоЗамера)/1000);
			Возврат(1);				
			КонецЦикла;			
		КонецЕсли;
	КонецЕсли;
ОкончаниеЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
ОбщийМодульРаботаСРегистрами.СборИнформацииПоАРМ(1,Объект.РабочееМесто,Справочники.Номенклатура.ПустаяСсылка(),КолПЗ,(ОкончаниеЗамера - НачалоЗамера)/1000); 
Возврат(0); 	
КонецФункции

&НаСервере
Функция ПолучитьСпецификациюЭтапов(РабочееМесто)
ТаблицаКомплектации.Очистить();
Объект.Спецификация.Очистить();
Возврат(ОбщийМодульАРМ.ПолучитьСпецификациюЭтапов(Объект.ПроизводственноеЗадание,РабочееМесто,Этапы,Объект.Спецификация,ТаблицаКомплектации,ТаблицаПодчиненныхДокументов));
КонецФункции
 
&НаСервере
Функция ПолучитьКодРабочегоМеста()
Возврат(СписокРабочихМест[0].Значение.Код);
КонецФункции 

&НаСервере
Функция НеобходимаВозвратнаяТара()
Возврат(Объект.РабочееМесто.ВозвратнаяТара);
КонецФункции 

&НаСервере
Процедура ЗаполнитьТаблицуТехОпераций()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыРасходов.Элемент
	|ИЗ
	|	Справочник.НормыРасходов КАК НормыРасходов
	|ГДЕ
	|	НормыРасходов.Владелец = &Изделие
	|	И НормыРасходов.Элемент В ИЕРАРХИИ(&СписокТО)";
Запрос.УстановитьПараметр("Изделие", Объект.ПроизводственноеЗадание.Изделие);
Запрос.УстановитьПараметр("СписокТО", Объект.РабочееМесто.ТехОперации.ВыгрузитьКолонку("ТехОперация"));
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаТехОпераций.Добавить();
	ТЧ.ТехОперация = ВыборкаДетальныеЗаписи.Элемент;
	КонецЦикла;
//Запрос = Новый Запрос;

//Запрос.Текст = 
//	"ВЫБРАТЬ
//	|	НормыВремениСрезПоследних.ТехОперация
//	|ИЗ
//	|	РегистрСведений.НормыВремени.СрезПоследних КАК НормыВремениСрезПоследних
//	|ГДЕ
//	|	НормыВремениСрезПоследних.МПЗ = &МПЗ
//	|	И НормыВремениСрезПоследних.ТехОперация В(&СписокТО)";
//Запрос.УстановитьПараметр("МПЗ", Объект.ПроизводственноеЗадание.Изделие);
//Запрос.УстановитьПараметр("СписокТО", Объект.РабочееМесто.ТехОперации.ВыгрузитьКолонку("ТехОперация"));
//РезультатЗапроса = Запрос.Выполнить();
//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//	ТЧ = ТаблицаТехОпераций.Добавить();
//	ТЧ.ТехОперация = ВыборкаДетальныеЗаписи.ТехОперация;
//	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучениеЗаданиеСканированием()
Возврат (СписокРабочихМест[0].Значение.ПолучениеЗаданияСканированием);
КонецФункции

&НаСервере
Функция ПолучитьНезавершенноеЗадание(БарКод)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ КАК ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Количество КАК Количество,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто КАК РабочееМесто,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала КАК ДатаНачала
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних(, РабочееМесто В (&СписокРабочихМест)) КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.Ремонт = ЛОЖЬ
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ.ДокументОснование.Статус <> 2";
	Если ПолучениеЗаданиеСканированием() Тогда	
	Запрос.Текст = Запрос.Текст + " И ЭтапыПроизводственныхЗаданийСрезПоследних.БарКод = &БарКод";
	Запрос.УстановитьПараметр("БарКод",БарКод);
	КонецЕсли; 
Запрос.УстановитьПараметр("СписокРабочихМест",СписокРабочихМест);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ОбщийМодульВызовСервера.ЛинейкаОстановлена(ВыборкаДетальныеЗаписи.РабочееМесто.Линейка) Тогда
		Продолжить;
		КонецЕсли;
			Если Не ОбщийМодульВызовСервера.СоздатьТаблицуЭтаповПроизводства(ВыборкаДетальныеЗаписи.ПЗ,Этапы,ЭтапыАРМ,ВыборкаДетальныеЗаписи.РабочееМесто,Объект.Исполнитель) Тогда	
			Продолжить;			
			КонецЕсли;
 	ПолучитьПодчиненныеДокументы(ВыборкаДетальныеЗаписи.ПЗ);
    Объект.ПроизводственноеЗадание = ВыборкаДетальныеЗаписи.ПЗ;
    Объект.РабочееМесто = ВыборкаДетальныеЗаписи.РабочееМесто;
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ПЗ.ВозвратнаяТара) Тогда
		НомерВТ = ВыборкаДетальныеЗаписи.ПЗ.ВозвратнаяТара+" (получите на разукомплектовке)";
		КонецЕсли;	
	ПолучитьСпецификациюЭтапов(Объект.РабочееМесто);
		Если НачалоДня(ВыборкаДетальныеЗаписи.ДатаНачала) <> НачалоДня(ТекущаяДата()) Тогда
		Парам = Новый Структура("РабочееМесто,Исполнитель,ДатаНачала",Объект.РабочееМесто,Объект.Исполнитель,ТекущаяДата());
		ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(ВыборкаДетальныеЗаписи.ПЗ,Парам);				
		КонецЕсли; 
	Возврат(1);
	КонецЦикла;
Возврат(0);
КонецФункции

&НаСервере
Функция ПолучитьСписокРабочихМест()
Запрос = Новый Запрос;
СписокРМ = Новый СписокЗначений;

	Для каждого РабочееМесто Из СписокРабочихМест Цикл
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РабочиеМестаЛинеек.Ссылка
		|ИЗ
		|	Справочник.РабочиеМестаЛинеек КАК РабочиеМестаЛинеек
		|ГДЕ
		|	РабочиеМестаЛинеек.Линейка = &Линейка
		|	И РабочиеМестаЛинеек.Код = &Код"; 
	Запрос.УстановитьПараметр("Код", РабочееМесто.Значение.Код-1);
	Запрос.УстановитьПараметр("Линейка", РабочееМесто.Значение.Линейка);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокРМ.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
	КонецЦикла;
Возврат(СписокРМ);
КонецФункции

&НаСервере
Функция ПолучитьСписокБарКодов()
СписокБарКодов = Новый СписокЗначений;
Запрос = Новый Запрос;

Запрос.Текст =
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.БарКод,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.ПЗ,
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПоследних КАК ЭтапыПроизводственныхЗаданийСрезПоследних
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.РабочееМесто В(&РабочиеМеста)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И ЭтапыПроизводственныхЗаданийСрезПоследних.Ремонт = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтапыПроизводственныхЗаданийСрезПоследних.Линейка.Наименование";
	Если СписокРабочихМест[0].Значение.ЗаканчиватьПредыдущийЭтап Тогда
	Запрос.УстановитьПараметр("РабочиеМеста", ПолучитьСписокРабочихМест());
	Иначе	
	Запрос.УстановитьПараметр("РабочиеМеста", СписокРабочихМест);
	КонецЕсли;
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ОбщийМодульВызовСервера.ЛинейкаОстановлена(ВыборкаДетальныеЗаписи.РабочееМесто.Линейка) Тогда
		Продолжить;
		КонецЕсли;
	СписокБарКодов.Добавить(ВыборкаДетальныеЗаписи.БарКод, ВыборкаДетальныеЗаписи.БарКод+Символы.Таб+"("+ВыборкаДетальныеЗаписи.ПЗ.Номер+")"+Символы.Таб+ВыборкаДетальныеЗаписи.ПЗ.Линейка);
	КонецЦикла;
СписокБарКодов.СортироватьПоЗначению();
Возврат(СписокБарКодов);
КонецФункции

&НаСервере
Функция ТребуетсяВводДМ()
Возврат(Объект.ПроизводственноеЗадание.Изделие.Товар.ТребуютсяДМ);
КонецФункции

&НаСервере
Процедура ПолучитьДатуВыпускаПоМаске()
ДатаВыпуска = ДатаВыпускаТекущая;
//Наименование = СокрЛП(Объект.ПроизводственноеЗадание.Изделие.Наименование);
//	Если Найти(Наименование,"ДТС") > 0 Тогда
//		Если Найти(Наименование,".И") > 0 Тогда
//			Если Найти(Наименование,"5Е") > 0 Тогда
//				Если Найти(Наименование,"ЕХI") > 0 Тогда
//				ДатаВыпуска = Дата(2021,5,28,0,0,0);
//			    КонецЕсли;
//			ИначеЕсли Найти(Наименование,"5Д") > 0 Тогда
//				Если Найти(Наименование,"ЕХD") > 0 Тогда
//				ДатаВыпуска = Дата(2021,5,28,0,0,0);
//			    КонецЕсли;
//			КонецЕсли;
//		Иначе
//			Если Найти(Наименование,"4-") > 0 Тогда
//				Если Найти(Наименование,"ЕХI") > 0 Тогда
//				ДатаВыпуска = Дата(2022,6,7,0,0,0);
//			    КонецЕсли;
//			ИначеЕсли Найти(Наименование,"5-") > 0 Тогда
//				Если Найти(Наименование,"ЕХI") > 0 Тогда
//				ДатаВыпуска = Дата(2022,6,7,0,0,0);
//			    КонецЕсли;
//			ИначеЕсли Найти(Наименование,"5Л") > 0 Тогда
//				Если Найти(Наименование,"ЕХI") > 0 Тогда
//				ДатаВыпуска = Дата(2022,6,7,0,0,0);
//			    КонецЕсли;			
//			КонецЕсли;
//		КонецЕсли;
	//ИначеЕсли Найти(Наименование,"ДТП") > 0 Тогда
	//	Если Найти(Наименование,".И") > 0 Тогда
	//		Если Найти(Наименование,"5Е") > 0 Тогда
	//			Если Найти(Наименование,"ЕХI") > 0 Тогда
	//			ДатаВыпуска = Дата(2021,7,14,0,0,0);
	//		    КонецЕсли;
	//		ИначеЕсли Найти(Наименование,"5Д") > 0 Тогда
	//			Если Найти(Наименование,"ЕХD") > 0 Тогда
	//			ДатаВыпуска = Дата(2021,7,14,0,0,0);
	//		    КонецЕсли;
	//		КонецЕсли;
	//	КонецЕсли;	
	//КонецЕсли;  
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьЗадание(Команда,БарКод = "")
	Если ОбщийМодульВызовСервера.ОстановкаЛинейки(СписокРабочихМест[0].Значение) Тогда
		Если ПолучитьКодРабочегоМеста() = 1 Тогда
			Если Вопрос("Линейка остановлена! Снять остановку?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				Если Не ОбщийМодульРаботаСРегистрами.СнятьОстановкуЛинейки(ОбщийМодульВызовСервера.ПолучитьЛинейкуПоРабочемуМесту(СписокРабочихМест[0].Значение)) Тогда	
				Возврат;
				КонецЕсли;
			Иначе
			Возврат;			
			КонецЕсли;
		Иначе
		Возврат; 
		КонецЕсли;
	КонецЕсли;
		Если Не ЭтаФорма.ПроверитьЗаполнение() Тогда
		Возврат;
		КонецЕсли;
Состояние("Обработка...",,"Получение задания...");
Результат = ПолучитьНезавершенноеЗадание(БарКод);
	Если Результат = 0 Тогда
		Если ПолучениеЗаданиеСканированием() Тогда
			Если Не ЗначениеЗаполнено(БарКод) Тогда
			ВвестиСтроку(БарКод,"Введите бар-код",18);
			КонецЕсли;
		Результат = ПолучитьЗаданиеНаПромежуточномЭтапеНаСервере(БарКод);
			Если Результат = 0 Тогда
			СписокБарКодов = ПолучитьСписокБарКодов();
			ВыбЭлемент = СписокБарКодов.ВыбратьЭлемент("Выберите бар-код",ВыбЭлемент);
				Если ВыбЭлемент <> Неопределено Тогда
				Результат = ПолучитьЗаданиеНаПромежуточномЭтапеНаСервере(ВыбЭлемент.Значение);
				Иначе
				Возврат;		
				КонецЕсли;
			КонецЕсли;  	
		Иначе
			Если ОбщийМодульВызовСервера.ПолучитьПрефиксРабочегоМеста(СписокРабочихМест[0].Значение) = "УП" Тогда
			Результат = ПолучитьЗаданиеНаПромежуточномЭтапеНаСервере();
			Иначе	
			Результат = ПолучитьЗаданиеНаСервере();
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли;
		Если Результат = 1 Тогда		
			Если ТипЗнч(ТаблицаКомплектации[0].Комплектация) = Тип("СправочникСсылка.Номенклатура") Тогда
			Элементы.ТаблицаКомплектации.ТекущаяСтрока = ТаблицаКомплектации[0].ПолучитьИдентификатор();
			ТаблицаКомплектацииВыборЗначения(Элементы.ТаблицаКомплектации,Элементы.ТаблицаКомплектации.ТекущаяСтрока,Истина);
			КонецЕсли;
		ЗаполнитьТаблицуТехОпераций();
			Если ИзменитьПоМаске Тогда
			ПолучитьДатуВыпускаПоМаске();
			КонецЕсли; 
				Если ОбщийМодульВызовСервера.ПолучитьПрефиксРабочегоМеста(Объект.РабочееМесто) = "УП" Тогда
				ОткрытьФорму("Обработка.СозданныеБарКоды.Форма.Форма",Новый Структура("ПЗ,РабочееМесто,ДатаВыпуска,ДатаПоверки",Объект.ПроизводственноеЗадание,Объект.РабочееМесто,ДатаВыпуска,ТекущаяДата()));
				КонецЕсли; 
		Элементы.ЗавершитьЗадание.КнопкаПоУмолчанию = Истина;
		Элементы.ПолучитьЗадание.Доступность = Ложь;
		Элементы.ПростойЛинейки.Доступность = Ложь;
		Элементы.Гравировка.Доступность = Истина;
		Элементы.ПечатьДокументов.Доступность = Истина;
		Элементы.ЗавершитьЗадание.Доступность = Истина;
		Элементы.Разукомплектовка.Доступность = Истина;
			Если ТребуетсяВводДМ() Тогда
			Элементы.ВвестиДМ.Доступность = Истина;
			КонецЕсли; 		
		ИначеЕсли Результат = 0 Тогда
		Сообщить("Нет производственных заданий!");  		
		КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ОчиститьСсылкуНаПЗ()
Объект.ПроизводственноеЗадание = Документы.ПроизводственноеЗадание.ПустаяСсылка();
Объект.РабочееМесто  = Справочники.РабочиеМестаЛинеек.ПустаяСсылка();
НомерВТ = "";
Этапы.Очистить();
ЭтапыАРМ.Очистить();
ТаблицаКомплектации.Очистить();
ТаблицаТехОпераций.Очистить();
Объект.Спецификация.Очистить();
тДерево = РеквизитФормыВЗначение("ДеревоСпецификации");
тДерево.Строки.Очистить();
ЗначениеВРеквизитФормы(тДерево,"ДеревоСпецификации");
Элементы.ПолучитьЗадание.КнопкаПоУмолчанию = Истина;
Элементы.ПолучитьЗадание.Доступность = Истина;
Элементы.ПростойЛинейки.Доступность = Истина;
Элементы.ПечатьДокументов.Доступность = Ложь;
Элементы.Гравировка.Доступность = Ложь;
Элементы.ЗавершитьЗадание.Доступность = Ложь;
Элементы.Разукомплектовка.Доступность = Ложь;
Элементы.ВвестиДМ.Доступность = Ложь;
флПечать = Ложь;
КонецПроцедуры  

&НаСервере
Функция ПоказатьПечать()
РабочееМесто = СписокРабочихМест[0].Значение;
Возврат(?(РабочееМесто.Линейка.Принтеры.Найти(РабочееМесто,"РабочееМесто") = Неопределено,Ложь,Истина));
КонецФункции

&НаСервере
Функция ПрефиксПредыдущегоРабочегоМеста()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РабочиеМестаЛинеек.Ссылка
	|ИЗ
	|	Справочник.РабочиеМестаЛинеек КАК РабочиеМестаЛинеек
	|ГДЕ
	|	РабочиеМестаЛинеек.Линейка = &Линейка
	|	И РабочиеМестаЛинеек.Код = &Код";
Запрос.УстановитьПараметр("Код", Объект.РабочееМесто.Код-1);
Запрос.УстановитьПараметр("Линейка", Объект.РабочееМесто.Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(СокрЛП(ВыборкаДетальныеЗаписи.Ссылка.ГруппаРабочихМест.Префикс));
	КонецЦикла;
Возврат("");
КонецФункции

&НаСервере
Процедура УстановитьДатуГрупповойУпаковки(МТК)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование = &ДокументОснование";
Запрос.УстановитьПараметр("ДокументОснование", МТК);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ПЗ = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
	ПЗ.ДатаГрупповойУпаковки = ТекущаяДата();
	ПЗ.Записать();
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ЗавершитьЗаданиеНаСервере()
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	НовоеРабочееМесто = Справочники.РабочиеМестаЛинеек.ПустаяСсылка();
	флТекущийЭтапПоследний = Ложь;
	ТекРМ = ЭтапыАРМ.НайтиПоЗначению(Объект.РабочееМесто);
		Если ТекРМ <> Неопределено Тогда
		НомСтр = ЭтапыАРМ.Индекс(ТекРМ)+1;
			Если НомСтр <> ЭтапыАРМ.Количество() Тогда
				Для к = НомСтр По ЭтапыАРМ.Количество()-1 Цикл
					Если ЭтапыАРМ[к].Значение.Авторизовано Тогда
					НовоеРабочееМесто = ЭтапыАРМ[к].Значение;
					Прервать;
					КонецЕсли; 
				КонецЦикла; 	
			Иначе
			флТекущийЭтапПоследний = Истина;			
			КонецЕсли; 
		Иначе
		Сообщить("В списке этапов рабочих мест этого изделия не найдено текущее рабочее место!");
		ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
		Возврат("");		
		КонецЕсли;
			Если НовоеРабочееМесто.Пустая() Тогда
				Если Не флТекущийЭтапПоследний Тогда
				Сообщить("Нет авторизованных рабочих мест!");
				ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
				Возврат("");
				КонецЕсли; 
			Иначе
			ПрефиксРМ = ОбщийМодульВызовСервера.ПолучитьПрефиксРабочегоМеста(НовоеРабочееМесто);
			КонецЕсли;
	ОбщийМодульРаботаСРегистрами.ИзменитьЭтапПроизводственногоЗадания(Объект.ПроизводственноеЗадание,Новый Структура("РабочееМесто,Исполнитель,ДатаОкончания",Объект.РабочееМесто,Объект.Исполнитель,ТекущаяДата())); 
		Если Не флТекущийЭтапПоследний Тогда
		МестоПередачи = "на "+СокрЛП(НовоеРабочееМесто.Наименование);
			Если (ПрефиксРМ = "СТ")или(ПрефиксРМ = "СТ2") Тогда
			ОбщийМодульРаботаСРегистрами.СоздатьЭтапПроизводственногоЗадания(Объект.ПроизводственноеЗадание,НовоеРабочееМесто,НовоеРабочееМесто.Стенд.Исполнитель,ТекущаяДата());	
			СуществующийСП = РегистрыСведений.СтендовыйПрогон.ПолучитьПоследнее(,Новый Структура("ПЗ,Стенд",Объект.ПроизводственноеЗадание,НовоеРабочееМесто.Стенд));
			СП = РегистрыСведений.СтендовыйПрогон.СоздатьМенеджерЗаписи();
			СП.Период = ТекущаяДата();
			СП.ПЗ = Объект.ПроизводственноеЗадание;
			СП.Изделие = Объект.ПроизводственноеЗадание.Изделие;
			СП.БарКод = Объект.ПроизводственноеЗадание.БарКод;
			СП.Стенд = НовоеРабочееМесто.Стенд;
			СП.Прогон = СуществующийСП.Прогон+1;
			СП.ИсполнительПоступление = НовоеРабочееМесто.Стенд.Исполнитель;
			СП.ДатаПоступления = ТекущаяДата();
			СП.ИсполнительПостановка = НовоеРабочееМесто.Стенд.Исполнитель;
			СП.ДатаПостановки = ТекущаяДата();
			СП.Записать();	
			Иначе
			ОбщийМодульРаботаСРегистрами.СоздатьЭтапПроизводственногоЗадания(Объект.ПроизводственноеЗадание,НовоеРабочееМесто,Неопределено,Неопределено);	
			КонецЕсли;
				Если НовоеРабочееМесто.ГруппаРабочихМест <> Объект.РабочееМесто.ГруппаРабочихМест Тогда
					Если Не ОбщийМодульСозданиеДокументов.СоздатьВыпускПродукции(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,Объект.Спецификация,Этапы,ТекущаяДата()) Тогда
					Сообщить("Документ выпуска не создан!");
					ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
					Возврат("");
					КонецЕсли; 		
				КонецЕсли;					
		Иначе
			Если Не ОбщийМодульСозданиеДокументов.СоздатьВыпускПродукции(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,Объект.Спецификация,Этапы,ТекущаяДата()) Тогда
			Сообщить("Документ выпуска не создан!"); 
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			Возврат("");
			КонецЕсли;
		Испытания = Объект.ПроизводственноеЗадание.Испытания;
			Если Испытания = 0 Тогда
				Если Объект.ПроизводственноеЗадание.ДокументОснование.МестоХраненияПотребитель.Пустая() Тогда
				МестоПередачи = "на склад линейки";
				Иначе	
				МестоПередачи = "на склад "+СокрЛП(Объект.ПроизводственноеЗадание.ДокументОснование.МестоХраненияПотребитель.Наименование);
				КонецЕсли;					
			ИначеЕсли Испытания = 1 Тогда
			МестоПередачи = "Отложите изделие для ПСИ!";
			ИначеЕсли Испытания = 2 Тогда	
			МестоПередачи = "Отложите изделие для поверки!";
			КонецЕсли;			
		КонецЕсли;
			Если ЗначениеЗаполнено(НомерВТ)и(ПрефиксПредыдущегоРабочегоМеста() = "СТ") Тогда
			ОбщийМодульВызовСервера.ОчиститьНомерВозвратнойТары(Объект.ПроизводственноеЗадание);					
			КонецЕсли;
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Возврат(МестоПередачи);
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	Возврат("");
	КонецПопытки;
КонецФункции

&НаСервере
Функция ПолучитьКодРМ()
Возврат(Объект.РабочееМесто.Код);
КонецФункции

&НаСервере
Функция ПолучитьБарКод()
Возврат(Объект.ПроизводственноеЗадание.БарКод);
КонецФункции

&НаКлиенте
Процедура ЗавершитьЗадание(Команда)
	Если ОбщийМодульВызовСервера.ЛинейкаОстановлена(ОбщийМодульВызовСервера.ПолучитьЛинейкуПоРабочемуМесту(Объект.РабочееМесто)) Тогда
	Возврат;
	КонецЕсли;
		Если ОбщийМодульВызовСервера.ТребуетсяВводДМ(Объект.ПроизводственноеЗадание) Тогда
			Если Не ОбщийМодульВызовСервера.ВесУзлаДрагметаловВнесен(Объект.ПроизводственноеЗадание) Тогда
			Сообщить("Введите вес узла драг. металлов!");
			Возврат;
			КонецЕсли; 
		КонецЕсли;
МестоПередачи = ЗавершитьЗаданиеНаСервере();
	Если МестоПередачи <> "" Тогда
		Если Найти(МестоПередачи,"Отложите") > 0 Тогда
		Предупреждение(МестоПередачи,,"ВНИМАНИЕ!");
		Иначе	
		ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"Передайте изделие "+МестоПередачи,БиблиотекаКартинок.Пользователь);
		КонецЕсли;
	ОчиститьСсылкуНаПЗ(); 
	КонецЕсли;  
КонецПроцедуры

&НаКлиенте
Процедура ПечатьДокументов(Команда)
	Если флПечать Тогда
		Если Вопрос("Распечатать повторно?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;
		КонецЕсли; 
	КонецЕсли;  
ОткрытьФорму("Обработка.СозданныеБарКоды.Форма.Форма",Новый Структура("ПЗ,РабочееМесто,ДатаВыпуска,ДатаПоверки",Объект.ПроизводственноеЗадание,Объект.РабочееМесто,ДатаВыпуска,ТекущаяДата())); 
флПечать = Истина;
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДерево(Команда)
тЭлементы = ДеревоСпецификации.ПолучитьЭлементы();
   Для Каждого тСтр Из тЭлементы Цикл
   Элементы.ДеревоСпецификации.Развернуть(тСтр.ПолучитьИдентификатор(), Истина);
   КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СвернутьДерево(Команда)
тЭлементы = ДеревоСпецификации.ПолучитьЭлементы();
   Для Каждого тСтр Из тЭлементы Цикл
   Элементы.ДеревоСпецификации.Свернуть(тСтр.ПолучитьИдентификатор());
   КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСпецификацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ТипЗнч(Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ) = Тип("СправочникСсылка.Документация") Тогда
	ОбщийМодульКлиент.ОткрытьФайлДокумента(Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКомплектацииВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
ЗаполнитьДерево(Элемент.ТекущиеДанные.ЭтапСпецификации);
РазвернутьДерево(Неопределено);
КонецПроцедуры
           
&НаСервере
Функция ПолучитьМестоХранения(Линейка)
Возврат(Линейка.МестоХраненияКанбанов);
КонецФункции 

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
	Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,";");
		Если Массив[0] = "3" Тогда
		ЗначениеПараметра1 = ОбщийМодульВызовСервера.ПолучитьЗначениеИзСтрокиВнутр(Массив[1]);
			Если ЗначениеПараметра1 = Неопределено Тогда
			Сообщить("Линейка или место хранения не найдена!");
			Возврат;	
			КонецЕсли; 
		МПЗ = ОбщийМодульВызовСервера.ПолучитьЗначениеИзСтрокиВнутр(Массив[3]);
			Если МПЗ = Неопределено Тогда
			Сообщить(Массив[3]+" - МПЗ не найдена!");
			Возврат;	
			КонецЕсли;
				Если ТипЗнч(ЗначениеПараметра1) = Тип("СправочникСсылка.Линейки") Тогда
				МестоХранения = ПолучитьМестоХранения(ЗначениеПараметра1);
				Иначе
				МестоХранения = ЗначениеПараметра1;			
				КонецЕсли;
		МестоХраненияОтправитель = ОбщийМодульВызовСервера.ПолучитьМестоХраненияПоКоду(Массив[2]);
		П = Новый Структура("МестоХраненияОтправитель,МестоХраненияКанбанов,МПЗ,НомерЯчейки,Сотрудник",МестоХраненияОтправитель,МестоХранения,МПЗ,Массив[5],Объект.Исполнитель);
		ОткрытьФорму("ОбщаяФорма.ОформлениеПустыхКанбанов",П,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе
			Если ПолучениеЗаданиеСканированием() Тогда
			ПолучитьЗадание(Неопределено,Данные); 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЭтоКанбанБезРезервирования(МПЗ)
	Если Не МПЗ.Канбан.Пустая() Тогда
	 	Если Не МПЗ.Канбан.РезервироватьВПроизводстве Тогда
		Возврат(Истина);
		КонецЕсли;
	КонецЕсли; 
Возврат(Ложь);
КонецФункции 

&НаКлиенте
Процедура ОформитьПустойКанбан(Команда)
	Если Этаформа.ТекущийЭлемент = Этаформа.Элементы.ДеревоСпецификации Тогда
	МПЗ = Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ;
	Иначе
	МПЗ = Элементы.ТаблицаКомплектации.ТекущиеДанные.Комплектация;
	КонецЕсли;
		Если ОбщийМодульВызовСервера.МожноОформитьПустойКанбан(МПЗ) Тогда
		П = Новый Структура("МестоХраненияКанбанов,МПЗ",ОбщийМодульВызовСервера.ПолучитьМестоХраненияПоРабочемуМесту(Объект.РабочееМесто),МПЗ);
		ОткрытьФорму("ОбщаяФорма.ОформлениеПустыхКанбанов",П,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
		КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЭтоКанбан(МПЗ)
Возврат(МПЗ.Канбан);
КонецФункции 

&НаКлиенте
Процедура ОформитьНедостачу(Команда)
	Если Этаформа.ТекущийЭлемент = Этаформа.Элементы.ДеревоСпецификации Тогда
	МПЗ = Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ;
	Иначе
	МПЗ = Элементы.ТаблицаКомплектации.ТекущиеДанные.Комплектация;
	КонецЕсли;
		Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
			Если ЭтоКанбан(МПЗ).Пустая() Тогда	
			Сообщить("Выберите МПЗ ячейки канбана!");
			Возврат;
			КонецЕсли;
		ИначеЕсли ТипЗнч(МПЗ) <> Тип("СправочникСсылка.Материалы")Тогда	
		Сообщить("Выберите МПЗ ячейки канбана!");
		Возврат;
		КонецЕсли; 
П = Новый Структура("ВидОперации,МестоХраненияКанбанов,ПЗ,МПЗ",1,ОбщийМодульВызовСервера.ПолучитьМестоХраненияПоРабочемуМесту(Объект.РабочееМесто),Объект.ПроизводственноеЗадание,МПЗ);
	Если ОткрытьФормуМодально("ОбщаяФорма.ОформлениеНедостачиИзлишков",П) Тогда
		Если ОбщийМодульВызовСервера.МТКОстановлена(Объект.ПроизводственноеЗадание) Тогда
		ОчиститьСсылкуНаПЗ();
		ПоказатьОповещениеПользователя("ВНИМАНИЕ!",,"МТК остановлена по причине недостачи комплектации. Отложите изготавливаемый полуфабрикат!",БиблиотекаКартинок.Пользователь);
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОформитьИзлишки(Команда)
	Если Этаформа.ТекущийЭлемент = Этаформа.Элементы.ДеревоСпецификации Тогда
	МПЗ = Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ;
	Иначе
	МПЗ = Элементы.ТаблицаКомплектации.ТекущиеДанные.Комплектация;
	КонецЕсли; 
		Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
			Если ЭтоКанбан(МПЗ).Пустая() Тогда	
			Сообщить("Выберите МПЗ ячейки канбана!");
			Возврат;
			КонецЕсли;
		ИначеЕсли ТипЗнч(МПЗ) <> Тип("СправочникСсылка.Материалы")Тогда	
		Сообщить("Выберите МПЗ ячейки канбана!");
		Возврат;
		КонецЕсли; 
П = Новый Структура("ВидОперации,МестоХраненияКанбанов,ПЗ,МПЗ",2,ОбщийМодульВызовСервера.ПолучитьМестоХраненияПоРабочемуМесту(Объект.РабочееМесто),Объект.ПроизводственноеЗадание,МПЗ);
ОткрытьФорму("ОбщаяФорма.ОформлениеНедостачиИзлишков",П,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОформитьБрак(Команда)
	Если Этаформа.ТекущийЭлемент = Этаформа.Элементы.ДеревоСпецификации Тогда
	МПЗ = Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ;
	Количество = Элементы.ДеревоСпецификации.ТекущиеДанные.Количество;
	Иначе
	МПЗ = Элементы.ТаблицаКомплектации.ТекущиеДанные.Комплектация;
	Количество = Элементы.ТаблицаКомплектации.ТекущиеДанные.Количество;
	КонецЕсли;
		Если ОбщийМодульВызовСервера.МожноПеремещатьВБрак(МПЗ) Тогда
		П = Новый Структура("РабочееМесто,ПЗ,ЭтапСпецификации,МПЗ,Количество",Объект.РабочееМесто,Объект.ПроизводственноеЗадание,Элементы.ТаблицаКомплектации.ТекущиеДанные.ЭтапСпецификации,МПЗ,Количество);
		ОткрытьФорму("ОбщаяФорма.ОформлениеБракаНовый",П,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
		Иначе
		Сообщить("Выбранную МПЗ запрещено перемещать в брак!");
		КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ОстановкаЛинейкиНаСервере(МПЗ)
ОбщийМодульРаботаСРегистрами.ОстановитьЛинейку(Объект.РабочееМесто.Линейка,МПЗ);
КонецФункции

&НаКлиенте
Процедура ОстановкаЛинейки(Команда)
	Если Этаформа.ТекущийЭлемент = Этаформа.Элементы.ДеревоСпецификации Тогда
	МПЗ = Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ;
	Иначе
	МПЗ = Элементы.ТаблицаКомплектации.ТекущиеДанные.Комплектация;
	КонецЕсли;
		Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Номенклатура") Тогда
			Если ЭтоКанбанБезРезервирования(МПЗ) Тогда
				Если Вопрос("Вы уверены, что хотите остановить линейку?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				ОстановкаЛинейкиНаСервере(МПЗ);
				КонецЕсли;
			Иначе
			Сообщить("Выберите МПЗ ячейки канбана без резервирования!");
			КонецЕсли;
		Иначе	
		Сообщить("Выберите МПЗ ячейки канбана без резервирования!");
		КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	Если ТипЗнч(Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ) = Тип("СправочникСсылка.Документация") Тогда
	ОбщийМодульКлиент.ОткрытьФайлДокумента(Элементы.ДеревоСпецификации.ТекущиеДанные.МПЗ);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументКомплектации(Команда)
	Если ТипЗнч(Элементы.ТаблицаКомплектации.ТекущиеДанные.Комплектация) = Тип("СправочникСсылка.Документация") Тогда
	ОбщийМодульКлиент.ОткрытьФайлДокумента(Элементы.ТаблицаКомплектации.ТекущиеДанные.Комплектация);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьИзделие()
Возврат(Объект.ПроизводственноеЗадание.Изделие);
КонецФункции

&НаКлиенте
Процедура ПроизводственноеЗаданиеИзделиеНажатие(Элемент, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
ОткрытьФорму("Справочник.Номенклатура.ФормаСписка",Новый Структура("ТекущаяСтрока",ПолучитьИзделие()));
КонецПроцедуры

&НаСервере
Процедура ПроверитьПравильностьВыбора()
	Для каждого РМ Из СписокРабочихМест Цикл
		Если Найти(РМ.Значение.Наименование,"Стенд") > 0 Тогда
		Сообщить("Из списка рабочих мест удалено "+РМ.Значение.Наименование);
		Сообщить("Для работы на Стенде выберите правильный АРМ");
		СписокРабочихМест.Удалить(РМ);
		КонецЕсли; 
	КонецЦикла;  
КонецПроцедуры

&НаСервере
Функция МожноРаботатьВАРМ()
	Если ОбщийМодульВызовСервера.МожноВыполнить(СписокРабочихМест[0].Значение.Линейка) Тогда	
	Возврат(Истина);
	Иначе
	СписокРабочихМест.Очистить();
	Сообщить("Работа АРМ запрещена в этой базе!");
	Возврат(Ложь);
	КонецЕсли;
КонецФункции 

&НаКлиенте
Процедура СписокРабочихМестПриИзменении(Элемент)
	Если СписокРабочихМест.Количество() > 0 Тогда
		Если Не МожноРаботатьВАРМ() Тогда
		Возврат;
		КонецЕсли;
	ПроверитьПравильностьВыбора();
	Элементы.ПростойЛинейки.Видимость = ?(ПолучитьКодРабочегоМеста() = 1,Истина,Ложь);
		Если Не СписокРабочихМест[0].Значение.Пустая() Тогда
		Элементы.ПечатьДокументов.Видимость = ПоказатьПечать();
		Элементы.ЗавершитьЗадание.Заголовок = "Завершить и передать на следующее АРМ"; 
		ПрефиксРМ = ОбщийМодульВызовСервера.ПолучитьПрефиксРабочегоМеста(СписокРабочихМест[0].Значение);
			Если ПрефиксРМ = "УП" Тогда
			Элементы.ЗавершитьЗадание.Заголовок = "Выпустить на склад линейки";
			Элементы.ПечатьДокументов.Видимость = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокРабочихМестНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Не Объект.ПроизводственноеЗадание.Пустая() Тогда
		Если Вопрос("Производственное задание не завершено! Продолжить выбор?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ОчиститьСсылкуНаПЗ();
		Иначе
		СтандартнаяОбработка = Ложь;
		КонецЕсли; 	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьВидРемонтаРазукомплектовка()
Возврат(Перечисления.ВидыРемонта.Разукомплектовка);
КонецФункции

&НаСервере
Функция ПолучитьИзделиеРемонта()
	Для каждого ТЧ_Этап Из Этапы Цикл
	ЭтапАРМ = Объект.РабочееМесто.ТабличнаяЧасть.Найти(ТЧ_Этап.ГруппаНоменклатуры,"ГруппаНоменклатуры");
		Если ЭтапАРМ = Неопределено Тогда
		Продолжить;
		ИначеЕсли ЭтапАРМ.Комплектация Тогда
	    Продолжить;
		КонецЕсли;
			Если ТЧ_Этап.ЭтапСпецификации.Виртуальный Тогда
			Продолжить;
			КонецЕсли;
	Возврат(Новый Структура("Изделие,Количество",ТЧ_Этап.ЭтапСпецификации,ТЧ_Этап.Количество));
	КонецЦикла;
КонецФункции 

&НаКлиенте
Процедура Разукомплектовка(Команда)
	Если Объект.ПроизводственноеЗадание.Пустая() Тогда
	Возврат;
	КонецЕсли;
Результат = ОткрытьФормуМодально("ОбщаяФорма.ВыборПричинРемонта",Новый Структура("РабочееМесто",Объект.РабочееМесто));
	Если Результат <> Неопределено Тогда
	НомерБирки = "";
		Если ВвестиСтроку(НомерБирки,"Введите номер бирки",4) Тогда
			Если ОбщийМодульСозданиеДокументов.СоздатьРемонтнуюКарту(Объект.ПроизводственноеЗадание,Объект.РабочееМесто,ПолучитьИзделиеРемонта(),Объект.Исполнитель,ПолучитьВидРемонтаРазукомплектовка(),Результат,,НомерБирки) Тогда
			ОчиститьСсылкуНаПЗ();
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВвестиДМ(Команда)
ОткрытьФорму("Обработка.РабочееМестоУД_ЗапускУпаковка.Форма.ДрагМеталлы",Новый Структура("ПроизводственноеЗадание",Объект.ПроизводственноеЗадание),,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ПростойЛинейки(Команда)
Линейка = ОбщийМодульВызовСервера.ПолучитьЛинейкуПоРабочемуМесту(СписокРабочихМест[0].Значение);
	Если Не ОбщийМодульВызовСервера.ЛинейкаОстановлена(Линейка) Тогда
	ОткрытьФормуМодально("ОбщаяФорма.ОформлениеПростояЛинейки",Новый Структура("Линейка",Линейка));
	КонецЕсли;
КонецПроцедуры
                
&НаСервере 
Функция ПолучитьФайлыДокументовДляПечати()
Возврат(ОбщийМодульВызовСервера.ПолучитьФайлыДокументовДляПечати(Объект.Спецификация));
КонецФункции

&НаКлиенте
Процедура ПечатьКР(Команда)
ОбщийМодульАРМКлиент.ПечатьДокументовА4(ПолучитьФайлыДокументовДляПечати());
КонецПроцедуры

