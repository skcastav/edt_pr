
//Процедура УстановкаПараметровСеанса(ТребуемыеПараметры)
//ПараметрыСеанса.Пользователь = Справочники.Сотрудники.НайтиПоНаименованию(ПолноеИмяПользователя(),Истина);
//	Если Не РольДоступна("СервисЦентр") Тогда	
//	ПараметрыСеанса.ЭлементМатериал = Справочники.Материалы.ПустаяСсылка();	
//	ПараметрыСеанса.ЭлементНоменклатура = Справочники.Номенклатура.ПустаяСсылка();
//	ПараметрыСеанса.ЭлементДокументация = Справочники.Документация.ПустаяСсылка();
//	ПараметрыСеанса.ЭлементТовар = Справочники.Товары.ПустаяСсылка();
//	ПараметрыСеанса.ЭлементТехОперация = Справочники.ТехОперации.ПустаяСсылка();
//	ПараметрыСеанса.ЭлементТехОснастка = Справочники.ТехОснастка.ПустаяСсылка();	
//	КонецЕсли; 
//КонецПроцедуры

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура УстановкаПараметровСеанса(ИменаПараметровСеанса)

	// УниверсальныеМеханизмы
	Если ИменаПараметровСеанса = Неопределено Тогда

		// Раздел безусловной установки параметров сеанса.

	// Конец УниверсальныеМеханизмы
	
	// Переопределяемый блок
	//
	// Конец переопределяемого блока.
	
	// УниверсальныеМеханизмы
	Иначе
		// Установка параметров сеанса "по требованию".
		
		// Параметры сеанса, инициализация которых требует обращения к одним и тем же данным
		// следует инициализировать сразу группой. для того, чтобы избежать их повторной инициализации, 
		// имена уже установленных параметров сеанса сохраняются в структуре УстановленныеПараметры.
		УстановленныеПараметры = Новый Массив();
		Для Каждого ИмяПараметра Из ИменаПараметровСеанса Цикл
			УстановитьЗначениеПараметраСеанса(ИмяПараметра, УстановленныеПараметры);
		КонецЦикла;
		
	КонецЕсли;
	// Конец УниверсальныеМеханизмы

ПараметрыСеанса.Пользователь = Справочники.Сотрудники.НайтиПоНаименованию(ПолноеИмяПользователя(),Истина);
	Если (Не РольДоступна("СервисЦентр"))и(Не РольДоступна("Danfoss")) Тогда	
	ПараметрыСеанса.ЭлементМатериал = Справочники.Материалы.ПустаяСсылка();	
	ПараметрыСеанса.ЭлементНоменклатура = Справочники.Номенклатура.ПустаяСсылка();
	ПараметрыСеанса.ЭлементДокументация = Справочники.Документация.ПустаяСсылка();
	ПараметрыСеанса.ЭлементТовар = Справочники.Товары.ПустаяСсылка();
	ПараметрыСеанса.ЭлементТехОперация = Справочники.ТехОперации.ПустаяСсылка();
	ПараметрыСеанса.ЭлементТехОснастка = Справочники.ТехОснастка.ПустаяСсылка();	
	КонецЕсли; 
//петренко
ПараметрыСеанса.АктивнаТранзакция = 0;
ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
//петренко
	Если Не ПараметрыСеанса.Пользователь.Пустая() Тогда
	РПСП = РегистрыСведений.ПоследниеСеансыПользователей.СоздатьМенеджерЗаписи();
	РПСП.Сотрудник = ПараметрыСеанса.Пользователь;
	РПСП.Дата = ТекущаяДата();
	РПСП.Записать(Истина);
	КонецЕсли; 
КонецПроцедуры

Процедура УстановитьЗначениеПараметраСеанса(Знач ИмяПараметра, УстановленныеПараметры)
	
	// Конец УниверсальныеМеханизмы
	Если УстановленныеПараметры.Найти(ИмяПараметра) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	// Конец УниверсальныеМеханизмы

	// Переопределяемый блок

	// ПодключаемоеОборудование
	МенеджерОборудованияВызовСервера.УстановитьПараметрыСеансаПодключаемогоОборудования(ИмяПараметра, УстановленныеПараметры);
	// Конец ПодключаемоеОборудование

	// Конец переопределяемого блока.

КонецПроцедуры

#КонецЕсли