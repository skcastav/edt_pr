
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если Номер = "" Тогда
	УстановитьНовыйНомер(ПрисвоитьПрефикс(Подразделение,Дата));
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
Автор = ПараметрыСеанса.Пользователь;
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
	ДокументОснование = ДанныеЗаполнения.Ссылка;
	Подразделение = ДанныеЗаполнения.Подразделение;
	Контрагент = ДанныеЗаполнения.Контрагент;
	Договор = ДанныеЗаполнения.Договор;
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьННС(ЗНП)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НакладнаяНаСборкуТабличнаяЧасть.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.НакладнаяНаСборку.ТабличнаяЧасть КАК НакладнаяНаСборкуТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыНакладныхНаСборку.СрезПоследних КАК СтатусыНакладныхНаСборкуСрезПоследних
	|		ПО НакладнаяНаСборкуТабличнаяЧасть.Ссылка = СтатусыНакладныхНаСборкуСрезПоследних.НакладнаяНаСборку
	|ГДЕ
	|	СтатусыНакладныхНаСборкуСрезПоследних.Статус = &Статус
	|	И НакладнаяНаСборкуТабличнаяЧасть.ЗаказНаПроизводство = &ЗаказНаПроизводство
	|ИТОГИ ПО
	|	Ссылка";
Запрос.УстановитьПараметр("ЗаказНаПроизводство", ЗНП);
Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыНакладнойНаСборку.НаУпаковке);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСсылка.Следующий() Цикл
	СННС = РегистрыСведений.СтатусыНакладныхНаСборку.СоздатьМенеджерЗаписи();
	СННС.Период = ТекущаяДата();
	СННС.НакладнаяНаСборку = ВыборкаСсылка.Ссылка;
	СННС.Статус = Перечисления.СтатусыНакладнойНаСборку.Упакован;
	СННС.Записать();
	КонецЦикла;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
// регистр МестаХранения
Движения.МестаХранения.Записывать = Истина;
ВиртуальнаяТабличнаяЧасть = ТабличнаяЧасть.Выгрузить();
ВиртуальнаяТабличнаяЧасть.Свернуть("ВидМПЗ,МПЗ,ЕдиницаИзмерения","Количество");
	Для Каждого ТЧ Из ВиртуальнаяТабличнаяЧасть Цикл
	Требуется = ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения);
	КолОстаток = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокПоМестуХранения(МестоХранения,ТЧ.МПЗ,Дата);		
		Если КолОстаток >= Требуется Тогда
		Движение = Движения.МестаХранения.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.МестоХранения = МестоХранения;
		Движение.ВидМПЗ = ТЧ.ВидМПЗ;
		Движение.МПЗ = ТЧ.МПЗ;
		Движение.Количество = Требуется;
		Иначе
		Отказ = Истина;
		Сообщить("МПЗ: "+СокрЛП(ТЧ.МПЗ.Наименование)+" требуется: "+Требуется+" недостаёт на складе: "+Строка(Требуется-КолОстаток));
		КонецЕсли;		
	КонецЦикла;
		Если Отказ Тогда
		Возврат;
		КонецЕсли;
// регистр ПередачиВПереработку Приход
Движения.ПередачиВПереработку.Записывать = Истина;
	Для Каждого ТЧ Из ВиртуальнаяТабличнаяЧасть Цикл
	Движение = Движения.ПередачиВПереработку.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Номенклатура = Номенклатура;
	Движение.ВидМПЗ = ТЧ.ВидМПЗ;
	Движение.МПЗ = ТЧ.МПЗ;
	Движение.ПередачаВПереработку = Ссылка;
	Движение.Количество = ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения);
	КонецЦикла;
Запрос = Новый Запрос;
// регистр ГТД Расход
Движения.ГТД.Записывать = Истина;
	Для Каждого ТЧ Из ТабличнаяЧасть Цикл
	КоличествоОстаток = ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ГТДОстатки.НомерГТД КАК НомерГТД,
		|	ГТДОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ГТД.Остатки(&НаДату, Товар = &Товар) КАК ГТДОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ГТДОстатки.НомерГТД.ДатаВнесения";
	Запрос.УстановитьПараметр("НаДату", Дата);
	Запрос.УстановитьПараметр("Товар", ТЧ.МПЗ);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если КоличествоОстаток > 0 Тогда
			Движение = Движения.ГТД.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Товар = ТЧ.МПЗ;
			Движение.НомерГТД = ВыборкаДетальныеЗаписи.НомерГТД;
				Если ВыборкаДетальныеЗаписи.КоличествоОстаток <= КоличествоОстаток Тогда
				Движение.Количество = ВыборкаДетальныеЗаписи.КоличествоОстаток;
				КоличествоОстаток = КоличествоОстаток - ВыборкаДетальныеЗаписи.КоличествоОстаток;
				Иначе
				Движение.Количество = КоличествоОстаток;
				КоличествоОстаток = 0;
				КонецЕсли;
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла;
		Если ЗначениеЗаполнено(ДокументОснование.ДокументОснование) Тогда
			Если ТипЗнч(ДокументОснование.ДокументОснование) = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
			ВиртуальнаяТабличнаяЧасть = ДокументОснование.ДокументОснование.Заказ.Выгрузить();
			ВиртуальнаяТабличнаяЧасть.Свернуть("Продукция","КоличествоВЗаказе");
			// регистр Долги Расход
			Движения.Долги.Записывать = Истина;
			КоличествоВсего = 0;
				Для Каждого ТЧ Из ВиртуальнаяТабличнаяЧасть Цикл
				КоличествоВсего = КоличествоВсего + ТЧ.КоличествоВЗаказе;
				КолОстаток = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокПоДолгам(ДокументОснование.ДокументОснование,ТЧ.Продукция,Дата);
					Если КолОстаток >= ТЧ.КоличествоВЗаказе Тогда
					Движение = Движения.Долги.Добавить();
					Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
					Движение.Период = Дата;
					Движение.Документ = ДокументОснование.ДокументОснование;
					Движение.Продукция = ТЧ.Продукция;
					Движение.Количество = ТЧ.КоличествоВЗаказе;
					Иначе
					Отказ = Истина;
					Сообщить(""+СокрЛП(ТЧ.Продукция.Наименование)+" требуется передать в переработку: "+ТЧ.КоличествоВЗаказе+" недостаёт в регистре долгов: "+Строка(ТЧ.КоличествоВЗаказе-КолОстаток));
					КонецЕсли;
				КонецЦикла;
			ОбщийМодульВызовСервера.ПроверитьЗаказНаПроизводство(ДокументОснование.ДокументОснование,КоличествоВсего,Дата);			
			КонецЕсли;		
		КонецЕсли; 
КонецПроцедуры
