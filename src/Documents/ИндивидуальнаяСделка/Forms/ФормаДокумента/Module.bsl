
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не Объект.Ссылка.Пустая() Тогда
		Если ПараметрыСеанса.Пользователь.Подразделения.Найти(Объект.Подразделение,"Подразделение") = Неопределено Тогда
		Сообщить("У Вас нет прав для просмотра этого документа!");
		Отказ = Истина;
		Возврат;
		КонецЕсли;
			Если Не ПараметрыСеанса.Пользователь.Должность.ПросмотрВсехДокументовРазрешенныхПодразделений Тогда	
				Если ПараметрыСеанса.Пользователь <> Объект.Автор Тогда
				Сообщить("У Вас нет прав для просмотра этого документа!");
				Отказ = Истина;
				КонецЕсли; 
			КонецЕсли;
				Если Не Объект.Линейка.Пустая() Тогда
				ПолучитьПроцентПремии();				
				КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ЭтотОбъект.ТолькоПросмотр = ОбщийМодульСозданиеДокументов.ЗапретРедактирования(Объект.Ссылка,Истина,Истина);
Элементы.БезУчётаВыходныхДней.Доступность = Не Объект.ВедомостьВыходногоДня;
Элементы.ПроцентПремии.ТолькоПросмотр = Не Объект.ВедомостьВыходногоДня;
Элементы.ТабличнаяЧастьОплатаВВыходной.Видимость = Объект.ВедомостьВыходногоДня;
	Если (ПолучитьНаименованиеПодразделения() = "Богородицк УПЭА")или
		 (ПолучитьНаименованиеПодразделения() = "Богородицк УД")или
		 (ПолучитьНаименованиеПодразделения() = "Богородицк датчики давления")или
		 (ПолучитьНаименованиеПодразделения() = "Богородицк УИТ")Тогда
	Элементы.ТехОперации.Видимость = Истина;
	Иначе
	Элементы.ТехОперации.Видимость = Ложь;
	КонецЕсли;
ДополнительнаяСделка = ИспользоватьДС();
Элементы.БезУчётаВыходныхДней.Доступность = Не ДополнительнаяСделка;
Элементы.ВедомостьВыходногоДня.Доступность = Не ДополнительнаяСделка;
Элементы.ТабличнаяЧастьДС.Заголовок = ?(ДополнительнаяСделка,"ДС","ДВТФ/Оклад");
Элементы.ТабличнаяЧастьДП.Заголовок = ?(ДополнительнаяСделка,"ДП","ПВТФ");
Элементы.РабочихЧасовВМесяце.Видимость = Не ДополнительнаяСделка;
Элементы.ТабличнаяЧастьОклад.Видимость = Не ДополнительнаяСделка;
КонецПроцедуры
             
&НаСервере
Процедура ПересчитатьСтрокуТабличнойЧасти(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
ТЧ.ОплатаВВыходной = ?(Объект.ВедомостьВыходногоДня,ТЧ.СуммаПоНаряду,0);
ТЧ.ПроцентПремии = ПроцентПремии;
ТЧ.Премия = (ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной)/100*ТЧ.ПроцентПремии;
ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП;
КонецПроцедуры

&НаКлиенте
Процедура ВедомостьВыходногоДняПриИзменении(Элемент)
	Если Вопрос("Табличная часть будет пересчитана! Вы действительно хотите изменить условия документа?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
	Элементы.БезУчётаВыходныхДней.Доступность = Не Объект.ВедомостьВыходногоДня;
	Элементы.ТабличнаяЧастьОплатаВВыходной.Видимость = Объект.ВедомостьВыходногоДня;
	Объект.БезУчётаВыходныхДней = Не Объект.ВедомостьВыходногоДня;
	Элементы.ПроцентПремии.ТолькоПросмотр = Не Объект.ВедомостьВыходногоДня;
	ПолучитьПроцентПремии();
		Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		ПересчитатьСтрокуТабличнойЧасти(ТЧ.ПолучитьИдентификатор());
		КонецЦикла;
	Иначе
	Объект.ВедомостьВыходногоДня = Не Объект.ВедомостьВыходногоДня;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроцентПремииПриИзменении(Элемент)
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	ПересчитатьСтрокуТабличнойЧасти(ТЧ.ПолучитьИдентификатор());
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПолучитьПроцентПремии()
	Если Объект.Линейка.ЭтоГруппа Тогда
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Линейки.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Линейки КАК Линейки
		|ГДЕ
		|	Линейки.Родитель = &Родитель
		|
		|УПОРЯДОЧИТЬ ПО
		|	Линейки.Код";
	Запрос.УстановитьПараметр("Родитель", Объект.Линейка);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Линейка = ВыборкаДетальныеЗаписи.Ссылка;
		КонецЦикла;
	Иначе	
	Линейка = Объект.Линейка; 
	КонецЕсли;
ПаспортЛинейки = РегистрыСведений.ПаспортЛинейки.ПолучитьПоследнее(Объект.Дата,Новый Структура("Линейка",Линейка));
ПроцентПремии = ПаспортЛинейки.ПроцентПремии;
	Если Объект.ВедомостьВыходногоДня Тогда
		Если Объект.ТабличнаяЧасть.Количество() > 0 Тогда			
		ПроцентПремии = Объект.ТабличнаяЧасть[0].ПроцентПремии;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущаяСтрока <> Неопределено Тогда
	Элементы.ТехОперации.ОтборСтрок = Новый ФиксированнаяСтруктура("Исполнитель", Элемент.ТекущиеДанные.Исполнитель); 
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьЛиниюSMD(МТК)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.ЛинияSMD
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование = &МТК";
Запрос.УстановитьПараметр("МТК", МТК);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.ЛинияSMD);
	КонецЦикла;
Возврат(Справочники.ЛинииSMD.ПустаяСсылка());
КонецФункции

&НаСервере
Процедура РасчитатьДляSMDНаСервере(РабочееМесто)
Запрос = Новый Запрос;
ТаблицаВыпуска = Новый ТаблицаЗначений;

ТаблицаВыпуска.Колонки.Добавить("Исполнитель",Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
ТаблицаВыпуска.Колонки.Добавить("Сумма",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));

ПрефиксРМ = СокрЛП(РабочееМесто.ГруппаРабочихМест.Префикс);

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыполнениеЭтаповПроизводства.МТК КАК МТК,
	|	ВыполнениеЭтаповПроизводства.Спецификация КАК Спецификация,
	|	ВыполнениеЭтаповПроизводства.Исполнитель КАК Исполнитель,
	|	ВыполнениеЭтаповПроизводства.Количество КАК Количество,
	|	ВыполнениеЭтаповПроизводства.Период КАК Период
	|ИЗ
	|	РегистрСведений.ВыполнениеЭтаповПроизводства КАК ВыполнениеЭтаповПроизводства
	|ГДЕ
	|	ВыполнениеЭтаповПроизводства.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыполнениеЭтаповПроизводства.МТК.Линейка В ИЕРАРХИИ(&ГруппаЛинеек)
	|	И ВыполнениеЭтаповПроизводства.МТК.Линейка.Проектная = &Проектные
	|	И ВыполнениеЭтаповПроизводства.РабочееМесто = &РабочееМесто";
	Если Объект.ВедомостьВыходногоДня Тогда
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.Дата));	
	Иначе	
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Объект.Дата)+25200);
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Объект.Дата)+25200);	
	КонецЕсли;
Запрос.УстановитьПараметр("ГруппаЛинеек", Объект.Линейка);
Запрос.УстановитьПараметр("Проектные", Объект.Проектные);
Запрос.УстановитьПараметр("РабочееМесто", РабочееМесто);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = ТаблицаВыпуска.Добавить();
	ТЧ.Исполнитель = ВыборкаДетальныеЗаписи.Исполнитель;
		Если ПрефиксРМ = "СТ" Тогда
		НормыSMD = РегистрыСведений.НормыSMDПоЛинейкам.ПолучитьПоследнее(ВыборкаДетальныеЗаписи.Период,Новый Структура("МПЗ,Линейка",ВыборкаДетальныеЗаписи.Спецификация,ВыборкаДетальныеЗаписи.МТК.Линейка));
		ТЧ.Сумма = ВыборкаДетальныеЗаписи.Количество*НормыSMD.ЦенаНормоЧаса*ТЧ.Исполнитель.Должность.КоэффициентРазряда;
		ИначеЕсли ПрефиксРМ = "ОТ" Тогда
		НормыSMD = РегистрыСведений.НормыОптическогоТеста.ПолучитьПоследнее(Объект.Дата,Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.Спецификация));
		ТЧ.Сумма = ВыборкаДетальныеЗаписи.Количество*НормыSMD.Расценка;
		ИначеЕсли ПрефиксРМ = "ЭК" Тогда
		НормыSMD = РегистрыСведений.НормыЭлектроконтроля.ПолучитьПоследнее(Объект.Дата,Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.Спецификация));
		ТЧ.Сумма = ВыборкаДетальныеЗаписи.Количество*НормыSMD.Расценка;
		КонецЕсли;
	КонецЦикла;
ТаблицаВыпуска.Свернуть("Исполнитель","Сумма");
ТаблицаВыпуска.Сортировать("Исполнитель");
Объект.ТабличнаяЧасть.Очистить();
	Для каждого ТЧ_Вып Из ТаблицаВыпуска Цикл
	ТЧ = Объект.ТабличнаяЧасть.Добавить();
	ТЧ.Исполнитель = ТЧ_Вып.Исполнитель;
	ТЧ.СуммаПоНаряду = ТЧ_Вып.Сумма;
	ТЧ.ПроцентПремии = ПроцентПремии; 
	ТЧ.Премия = 0;
		Если ИспользоватьДС() Тогда
		ТЧ.ДС = 0;
		Иначе	
		ТЧ.ДС = ТЧ.Исполнитель.Должность.Оклад/Объект.РабочихЧасовВМесяце*ТЧ.РабочихЧасов*?(Объект.ВедомостьВыходногоДня,2,1);		
		КонецЕсли; 
	ТЧ.ДП = 0;
	ТЧ.ОплатаВВыходной = ?(Объект.ВедомостьВыходногоДня,ТЧ.СуммаПоНаряду,0);
   	ТЧ.Итого = ТЧ.СуммаПоНаряду+?(Объект.ВедомостьВыходногоДня,ТЧ.ОплатаВВыходной,0)+ТЧ.ДС;
	КонецЦикла;
Объект.Комментарий = "Линейки: "+Объект.Линейка+" Рабочее место: "+РабочееМесто.Наименование; 
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокВыходныхДней()
СписокВыходныхДней = Новый СписокЗначений;

Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИндивидуальнаяСделка.Дата КАК Дата
	|ИЗ
	|	Документ.ИндивидуальнаяСделка КАК ИндивидуальнаяСделка
	|ГДЕ
	|	ИндивидуальнаяСделка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ИндивидуальнаяСделка.Подразделение = &Подразделение
	|	И ИндивидуальнаяСделка.Линейка = &Линейка
	|	И ИндивидуальнаяСделка.ВедомостьВыходногоДня = ИСТИНА
	|	И ИндивидуальнаяСделка.ПометкаУдаления = ЛОЖЬ";
Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Объект.Дата));
Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Объект.Дата));
Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
Запрос.УстановитьПараметр("Линейка", Объект.Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокВыходныхДней.Добавить(КонецДня(ВыборкаДетальныеЗаписи.Дата));
	КонецЦикла;
Возврат(СписокВыходныхДней);
КонецФункции

&НаСервере
Процедура ИсключитьПеориод(ВыходнойДень,СписокТО,ТаблицаТО)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииПоступление.Номенклатура КАК Изделие,
	|	ВыпускПродукцииПоступление.Количество КАК Количество,
	|	ВыпускПродукцииПоступление.Номенклатура.Наименование КАК НоменклатураНаименование,
	|	ВыпускПродукцииПоступление.Ссылка.Дата КАК Дата
	|ИЗ
	|	Документ.ВыпускПродукции.Поступление КАК ВыпускПродукцииПоступление
	|ГДЕ
	|	ВыпускПродукцииПоступление.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииПоступление.Ссылка.НаСклад = ИСТИНА
	|	И ВыпускПродукцииПоступление.Ссылка.ДокументОснование.Линейка В ИЕРАРХИИ(&ГруппаЛинеек)
	|	УПОРЯДОЧИТЬ ПО НоменклатураНаименование 
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Изделие"; 
Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ВыходнойДень));
Запрос.УстановитьПараметр("ДатаКон", КонецДня(ВыходнойДень));
Запрос.УстановитьПараметр("ГруппаЛинеек", Объект.Линейка); 
РезультатЗапроса = Запрос.Выполнить();
ВыборкаИзделия = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИзделия.Следующий() Цикл
		Для каждого ТО Из СписокТО Цикл
		НормыВремени = РегистрыСведений.НормыВремени.ПолучитьПоследнее(НачалоМесяца(Объект.Дата),Новый Структура("МПЗ,ТехОперация",ВыборкаИзделия.Изделие,ТО.Значение));
		НормыТО = РегистрыСведений.НормыТО.ПолучитьПоследнее(НачалоМесяца(Объект.Дата),Новый Структура("ТехОперация",ТО.Значение));
		Выборка = ТаблицаТО.НайтиСтроки(Новый Структура("ТехОперация",ТО.Значение));
		Выборка[0].СуммаТО = Выборка[0].СуммаТО - НормыВремени.НормаВремени/60*НормыТО.Стоимость*ВыборкаИзделия.Количество;				
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры 

&НаСервере
Функция ПолучитьСписокТО(ПЗ)
СписокТО = Новый СписокЗначений;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыВремениСрезПоследних.ТехОперация КАК ТО,
	|	НормыВремениСрезПоследних.НормаВремени КАК НормаВремени
	|ИЗ
	|	РегистрСведений.НормыВремени.СрезПоследних(&НаДату, МПЗ = &МПЗ) КАК НормыВремениСрезПоследних";
Запрос.УстановитьПараметр("НаДату", ПЗ.ДатаЗапуска);
Запрос.УстановитьПараметр("МПЗ", ПЗ.Изделие);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокТО.Добавить(ВыборкаДетальныеЗаписи.ТО,ВыборкаДетальныеЗаписи.НормаВремени);
	КонецЦикла;
Возврат(СписокТО);
КонецФункции

&НаСервере
Функция РасчитатьДляУПЭАНаСервере_2(ЗаполнитьТаблицу)
Запрос = Новый Запрос;
ТаблицаРасчёта = Новый ТаблицаЗначений;
ТаблицаРМ = Новый ТаблицаЗначений;

ТаблицаРасчёта.Колонки.Добавить("Исполнитель");
ТаблицаРасчёта.Колонки.Добавить("ТО");
ТаблицаРасчёта.Колонки.Добавить("ГруппаРМ");

ТаблицаРМ.Колонки.Добавить("ГруппаРМ");
ТаблицаРМ.Колонки.Добавить("Количество");

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукции.ДокументОснование КАК ПЗ
	|ИЗ
	|	Документ.ВыпускПродукции КАК ВыпускПродукции
	|ГДЕ
	|	ВыпускПродукции.НаСклад = ИСТИНА
	|	И ВыпускПродукции.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукции.ДокументОснование.Линейка В ИЕРАРХИИ(&ГруппаЛинеек)
	|	И ВыпускПродукции.ДокументОснование.Линейка.Проектная = &Проектная"; 
	Если Объект.ВедомостьВыходногоДня Тогда
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.Дата));	
	Иначе	
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Объект.Дата));	
	КонецЕсли;
Запрос.УстановитьПараметр("ГруппаЛинеек", Объект.Линейка); 
Запрос.УстановитьПараметр("Проектная", Объект.Проектные);  
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныхЗаписей = РезультатЗапроса.Выбрать();
к = 0;
	Пока ВыборкаДетальныхЗаписей.Следующий() Цикл
	ТаблицаРасчёта.Очистить();
	ТаблицаРМ.Очистить();
		//Если к = 10 Тогда
		//Прервать;	
		//КонецЕсли; 
	СписокТО = ПолучитьСписокТО(ВыборкаДетальныхЗаписей.ПЗ);
	НаборЗаписей = РегистрыСведений.ЭтапыПроизводственныхЗаданий.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПЗ.Установить(ВыборкаДетальныхЗаписей.ПЗ);
	НаборЗаписей.Прочитать();
    	Для Каждого Запись Из НаборЗаписей Цикл
			Для каждого ТЧ Из Запись.РабочееМесто.ТехОперации Цикл
				Если СписокТО.НайтиПоЗначению(ТЧ.ТехОперация) <> Неопределено Тогда
			    ТЧ_ТР = ТаблицаРасчёта.Добавить();
				ТЧ_ТР.Исполнитель = Запись.Исполнитель;
				ТЧ_ТР.ГруппаРМ = Запись.РабочееМесто.ГруппаРабочихМест;
				ТЧ_ТР.ТО = ТЧ.ТехОперация;
				ТЧ_РМ = ТаблицаРМ.Добавить();
				ТЧ_РМ.ГруппаРМ = Запись.РабочееМесто.ГруппаРабочихМест;
				ТЧ_РМ.Количество = 1;
				КонецЕсли; 		
			КонецЦикла; 
		КонецЦикла;
	ТаблицаРасчёта.Свернуть("Исполнитель,ТО,ГруппаРМ");		
	ТаблицаРМ.Свернуть("ГруппаРМ","Количество");
		Для Каждого ТЧ Из ТаблицаРасчёта Цикл
		НормыВремени = РегистрыСведений.НормыВремени.ПолучитьПоследнее(НачалоМесяца(Объект.Дата),Новый Структура("МПЗ,ТехОперация",ВыборкаДетальныхЗаписей.ПЗ.Изделие,ТЧ.ТО));
		ВыборкаРМ = ТаблицаРМ.Найти(ТЧ.ГруппаРМ,"ГруппаРМ");
		Выборка = Объект.ТабличнаяЧасть.НайтиСтроки(Новый Структура("Исполнитель",ТЧ.Исполнитель));
			Если Выборка.Количество() = 0 Тогда
			ТЧ_ТЧ = Объект.ТабличнаяЧасть.Добавить();
			ТЧ_ТЧ.Исполнитель = ТЧ.Исполнитель;
			ТЧ_ТЧ.ПроцентПремии = ПроцентПремии;	
			ТЧ_ТО = Объект.ТехОперации.Добавить();
			ТЧ_ТО.Исполнитель = ТЧ.Исполнитель;
			ТЧ_ТО.ТехОперация = ТЧ.ТО;
			ТЧ_ТО.РабочихЧасов = НормыВремени.НормаВремени/ВыборкаРМ.Количество;			
			Иначе	
			ТЧ_ТО = Объект.ТехОперации.Добавить();
			ТЧ_ТО.Исполнитель = ТЧ.Исполнитель;
			ТЧ_ТО.ТехОперация = ТЧ.ТО;
			ТЧ_ТО.РабочихЧасов = НормыВремени.НормаВремени/ВыборкаРМ.Количество;
			КонецЕсли;	
		КонецЦикла;
	к = к + 1;
	КонецЦикла; 
ТЗ = Объект.ТехОперации.Выгрузить();
ТЗ.Свернуть("Исполнитель,ТехОперация","РабочихЧасов");
Объект.ТехОперации.Загрузить(ТЗ);
КонецФункции

&НаСервере
Функция РасчитатьДляУПЭАНаСервере(ЗаполнитьТаблицу)
ТабДок = Новый ТабличныйДокумент;
Запрос = Новый Запрос;
СписокТО = Новый СписокЗначений;
ТаблицаТО = Новый ТаблицаЗначений;

ТаблицаТО.Колонки.Добавить("ТехОперация",Новый ОписаниеТипов("СправочникСсылка.ТехОперации"));
ТаблицаТО.Колонки.Добавить("СуммаТО",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(9,2)));

ГруппаТехОпераций = Справочники.ТехОперации.НайтиПоРеквизиту("Подразделение",Объект.Подразделение);	
ВыборкаТО = Справочники.ТехОперации.ВыбратьИерархически(ГруппаТехОпераций);
	Пока ВыборкаТО.Следующий() Цикл
		Если ВыборкаТО.ЭтоГруппа Тогда
		Продолжить;	
		КонецЕсли;
	СписокТО.Добавить(ВыборкаТО.Ссылка,ВыборкаТО.Ссылка.Код);
	ТЧ = ТаблицаТО.Добавить();
	ТЧ.ТехОперация = ВыборкаТО.Ссылка;
	КонецЦикла;
СписокТО.СортироватьПоПредставлению();

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("ОтчётПоНормированию");

ОблШапкаОбщая = Макет.ПолучитьОбласть("Шапка|Общая");
ОблШапкаТехОперация = Макет.ПолучитьОбласть("Шапка|ТехОперация");
ОблШапкаИтого = Макет.ПолучитьОбласть("Шапка|Итого");
ОблИсполнительОбщая = Макет.ПолучитьОбласть("Исполнитель|Общая");
ОблИсполнительТехОперация = Макет.ПолучитьОбласть("Исполнитель|ТехОперация");
ОблИсполнительИтого = Макет.ПолучитьОбласть("Исполнитель|Итого");
ОблКонецОбщая = Макет.ПолучитьОбласть("Конец|Общая");
ОблКонецТехОперация = Макет.ПолучитьОбласть("Конец|ТехОперация");
ОблКонецИтого = Макет.ПолучитьОбласть("Конец|Итого");

	Если Объект.ВедомостьВыходногоДня Тогда
	ОблШапкаОбщая.Параметры.ДатаНач = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
	ОблШапкаОбщая.Параметры.ДатаКон = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
	Иначе	
	ОблШапкаОбщая.Параметры.ДатаНач = Формат(НачалоМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");
	ОблШапкаОбщая.Параметры.ДатаКон = Формат(КонецМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");
	КонецЕсли;
ОблШапкаОбщая.Параметры.ВидОтчёта = ?(Объект.БезУчётаВыходныхДней,"Без учёта выходных дней",""); 
ТабДок.Вывести(ОблШапкаОбщая);
	Для каждого ТО Из СписокТО Цикл	
	ОблШапкаТехОперация.Параметры.ТО = ТО.Значение;
	ТабДок.Присоединить(ОблШапкаТехОперация);				
	КонецЦикла;
ТабДок.Присоединить(ОблШапкаИтого);

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииПоступление.Номенклатура КАК Изделие,
	|	ВыпускПродукцииПоступление.Количество КАК Количество,
	|	ВыпускПродукцииПоступление.Номенклатура.Наименование КАК НоменклатураНаименование,
	|	ВыпускПродукцииПоступление.Ссылка.Дата КАК Дата
	|ИЗ
	|	Документ.ВыпускПродукции.Поступление КАК ВыпускПродукцииПоступление
	|ГДЕ
	|	ВыпускПродукцииПоступление.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииПоступление.Ссылка.НаСклад = ИСТИНА
	|	И ВыпускПродукцииПоступление.Ссылка.ДокументОснование.Линейка В ИЕРАРХИИ(&ГруппаЛинеек)
	|	И ВыпускПродукцииПоступление.Ссылка.ДокументОснование.Линейка.Проектная = &Проектные
	|	УПОРЯДОЧИТЬ ПО НоменклатураНаименование 
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Изделие"; 
	Если Объект.ВедомостьВыходногоДня Тогда
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.Дата));	
	Иначе	
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Объект.Дата));	
	КонецЕсли;
Запрос.УстановитьПараметр("ГруппаЛинеек", Объект.Линейка); 
Запрос.УстановитьПараметр("Проектные", Объект.Проектные);  
РезультатЗапроса = Запрос.Выполнить();
ВыборкаИзделия = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИзделия.Следующий() Цикл
		Для каждого ТО Из СписокТО Цикл
		НормыВремени = РегистрыСведений.НормыВремени.ПолучитьПоследнее(НачалоМесяца(Объект.Дата),Новый Структура("МПЗ,ТехОперация",ВыборкаИзделия.Изделие,ТО.Значение));
		НормыТО = РегистрыСведений.НормыТО.ПолучитьПоследнее(НачалоМесяца(Объект.Дата),Новый Структура("ТехОперация",ТО.Значение));
		Выборка = ТаблицаТО.НайтиСтроки(Новый Структура("ТехОперация",ТО.Значение));
		Выборка[0].СуммаТО = Выборка[0].СуммаТО + Окр(НормыВремени.НормаВремени/60*НормыТО.Стоимость,2,РежимОкругления.Окр15как20)*ВыборкаИзделия.Количество;				
		КонецЦикла;
	КонецЦикла;
		Если Объект.БезУчётаВыходныхДней Тогда
		СписокВыходныхДней = ПолучитьСписокВыходныхДней();
			Для каждого Стр Из СписокВыходныхДней Цикл
			ИсключитьПеориод(Стр.Значение,СписокТО,ТаблицаТО);
			КонецЦикла;
		КонецЕсли;
ТЗ_ТО = Объект.ТехОперации.Выгрузить();
ТЗ_ТО.Свернуть("ТехОперация","РазрядоЧасов");
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	СуммаИтого = 0;
	СуммаПОНаряду = 0;
	ОблИсполнительОбщая.Параметры.Исполнитель = ТЧ.Исполнитель;
	ТабДок.Вывести(ОблИсполнительОбщая);
		Для каждого ТО Из СписокТО Цикл
		ВыборкаТО = Объект.ТехОперации.НайтиСтроки(Новый Структура("Исполнитель,ТехОперация",ТЧ.Исполнитель,ТО.Значение));
			Если ВыборкаТО.Количество() > 0 Тогда
			РЧ = ВыборкаТО[0].РазрядоЧасов;
			РЧВсего = ТЗ_ТО.Найти(ТО.Значение,"ТехОперация").РазрядоЧасов;
			Выборка = ТаблицаТО.Найти(ТО.Значение,"ТехОперация");
				Если Выборка <> Неопределено Тогда
				Сумма = Выборка.СуммаТО/РЧВсего*РЧ;
				СуммаПОНаряду = СуммаПОНаряду + Сумма;
				СуммаИтого = СуммаИтого + Сумма;
				Иначе
				Сумма = 0;
				КонецЕсли;			
			Иначе	
			РЧ = 0;
			Сумма = 0;
			КонецЕсли; 
		ОблИсполнительТехОперация.Параметры.РЧ = РЧ;
		ОблИсполнительТехОперация.Параметры.Сумма = Сумма;
		ТабДок.Присоединить(ОблИсполнительТехОперация);				
		КонецЦикла;
			Если ЗаполнитьТаблицу Тогда
			ТЧ.СуммаПОНаряду = СуммаПОНаряду;
			ТЧ.ПроцентПремии = ПроцентПремии;
				Если ИспользоватьДС() Тогда
				ТЧ.ДС = 0;
				Иначе	
				ТЧ.ДС = ТЧ.Исполнитель.Должность.Оклад/Объект.РабочихЧасовВМесяце*ТЧ.РабочихЧасов*?(Объект.ВедомостьВыходногоДня,2,1);		
				КонецЕсли; 
			ТЧ.ДП = 0;
			ТЧ.ОплатаВВыходной = ?(Объект.ВедомостьВыходногоДня,ТЧ.СуммаПоНаряду,0);
			//ТЧ.Премия = (ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной)/100*ТЧ.ПроцентПремии;
			ТЧ.Премия = 0;
		   	ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной+ТЧ.ДС;
			КонецЕсли; 
	ОблИсполнительИтого.Параметры.СуммаИтого = СуммаИтого;
	ТабДок.Присоединить(ОблИсполнительИтого); 
	КонецЦикла;
ТабДок.Вывести(ОблКонецОбщая);
	Для каждого ТО Из СписокТО Цикл
	Выборка = ТаблицаТО.Найти(ТО.Значение,"ТехОперация");
	ОблКонецТехОперация.Параметры.СуммаВсего = Выборка.СуммаТО;
	ТабДок.Присоединить(ОблКонецТехОперация);				
	КонецЦикла;
ОблКонецИтого.Параметры.СуммаИтогоВсего = ТаблицаТО.Итог("СуммаТО");
ТабДок.Присоединить(ОблКонецИтого);
ТабДок.ФиксацияСверху = 4;
ТабДок.ФиксацияСлева = 1;
Объект.Комментарий = "Линейка: "+Объект.Линейка;
Возврат(ТабДок);
КонецФункции

&НаСервере
Функция ПолучитьСписокТОИзделия(Изделие)
СписокТОИзделия = Новый СписокЗначений;

ВыборкаДетальныеЗаписи = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_ТО(Изделие,КонецМесяца(Объект.Дата));
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокТОИзделия.Добавить(ВыборкаДетальныеЗаписи.Элемент);
	КонецЦикла;
Возврат(СписокТОИзделия);
КонецФункции

&НаСервере
Процедура РасчитатьДляУИТНаСервере()
Запрос = Новый Запрос;
СписокТО = Новый СписокЗначений;
ТаблицаТО = Новый ТаблицаЗначений;

ТаблицаТО.Колонки.Добавить("Исполнитель",Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
ТаблицаТО.Колонки.Добавить("ТехОперация",Новый ОписаниеТипов("СправочникСсылка.ТехОперации"));
ТаблицаТО.Колонки.Добавить("СуммаПоНаряду",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(14,3)));

	Если Объект.БезУчётаВыходныхДней Тогда
	СписокВыходныхДней = ПолучитьСписокВыходныхДней();
	КонецЕсли;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииКанбан.ДокументОснование КАК ПЗ,
	|	ВыпускПродукцииКанбан.Изделие КАК Изделие,
	|	ВыпускПродукцииКанбан.Количество КАК Количество,
	|	ВыпускПродукцииКанбан.Дата КАК Дата
	|ИЗ
	|	Документ.ВыпускПродукцииКанбан КАК ВыпускПродукцииКанбан
	|ГДЕ
	|	ВыпускПродукцииКанбан.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииКанбан.ДокументОснование.Линейка В ИЕРАРХИИ(&СписокЛинеек)"; 
	Если Объект.ВедомостьВыходногоДня Тогда
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.Дата));	
	Иначе	
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Объект.Дата));	
	КонецЕсли;
Запрос.УстановитьПараметр("СписокЛинеек", Объект.Линейка);
РезультатЗапроса = Запрос.Выполнить();
Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		Если Объект.БезУчётаВыходныхДней Тогда
			Если СписокВыходныхДней.НайтиПоЗначению(КонецДня(Выборка.Дата)) <> Неопределено Тогда
			Продолжить;
			КонецЕсли; 
		КонецЕсли;	
	ЭтапыПЗ = РегистрыСведений.ЭтапыПроизводственныхЗаданий.Выбрать(,,Новый Структура("ПЗ",Выборка.ПЗ));	
		Пока ЭтапыПЗ.Следующий() Цикл
			Если ЭтапыПЗ.РабочееМесто.ТехОперации.Количество() > 0 Тогда
			ТЧ = ТаблицаТО.Добавить();
			ТЧ.Исполнитель = ЭтапыПЗ.Исполнитель;
			ТО = ЭтапыПЗ.РабочееМесто.ТехОперации[0].ТехОперация;
			ТЧ.ТехОперация = ТО;
			НормыВремени = РегистрыСведений.НормыВремени.ПолучитьПоследнее(НачалоМесяца(Объект.Дата),Новый Структура("МПЗ,ТехОперация",Выборка.Изделие,ТО));
			НормыТО = РегистрыСведений.НормыТО.ПолучитьПоследнее(НачалоМесяца(Объект.Дата),Новый Структура("ТехОперация",ТО));
			ТЧ.СуммаПоНаряду = Окр(НормыВремени.НормаВремени/60*НормыТО.Стоимость,2,РежимОкругления.Окр15как20)*Выборка.Количество;
			КонецЕсли; 	
		КонецЦикла; 
	КонецЦикла;
ТаблицаИсполнителей = ТаблицаТО.Скопировать();
ТаблицаИсполнителей.Свернуть("Исполнитель","СуммаПоНаряду");
ТаблицаТО.Свернуть("Исполнитель,ТехОперация","СуммаПоНаряду");
Объект.ТабличнаяЧасть.Очистить();
Объект.ТехОперации.Очистить();
	Для каждого ТЧ Из ТаблицаИсполнителей Цикл
	ТЧ_ТЧ = Объект.ТабличнаяЧасть.Добавить();
	ТЧ_ТЧ.Исполнитель = ТЧ.Исполнитель;
	ТЧ_ТЧ.СуммаПоНаряду = ТЧ.СуммаПоНаряду;
	ТЧ_ТЧ.ПроцентПремии = ПроцентПремии;
	ТЧ_ТЧ.ОплатаВВыходной = ?(Объект.ВедомостьВыходногоДня,ТЧ_ТЧ.СуммаПоНаряду,0);
	ТЧ_ТЧ.Премия = (ТЧ_ТЧ.СуммаПоНаряду+ТЧ_ТЧ.ОплатаВВыходной)/100*ТЧ_ТЧ.ПроцентПремии;
	ТЧ_ТЧ.Итого = ТЧ_ТЧ.СуммаПоНаряду+ТЧ_ТЧ.ОплатаВВыходной+ТЧ_ТЧ.Премия;
	Выборка = ТаблицаТО.НайтиСтроки(Новый Структура("Исполнитель",ТЧ_ТЧ.Исполнитель));	
		Для к = 0 По Выборка.Количество()-1 Цикл
		ТЧ_ТО = Объект.ТехОперации.Добавить();
		ТЧ_ТО.Исполнитель = Выборка[к].Исполнитель;
		ТЧ_ТО.ТехОперация = Выборка[к].ТехОперация;			
		КонецЦикла; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция РасчитатьДляУДНаСервере(ЗаполнитьТаблицу)
Объект.ТабличнаяЧасть.Очистить();
Запрос = Новый Запрос;
ТабДок = Новый ТабличныйДокумент;
СписокТО = Новый СписокЗначений;
ТаблицаТО = Новый ТаблицаЗначений;

ТаблицаТО.Колонки.Добавить("Исполнитель",Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
ТаблицаТО.Колонки.Добавить("ТехОперация",Новый ОписаниеТипов("СправочникСсылка.ТехОперации"));
ТаблицаТО.Колонки.Добавить("СуммаПоНаряду",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(9,2)));
	Если Объект.БезУчётаВыходныхДней Тогда
	СписокВыходныхДней = ПолучитьСписокВыходныхДней();
	КонецЕсли;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииПоступление.Ссылка.ДокументОснование КАК ПЗ,
	|	ВыпускПродукцииПоступление.Ссылка.Дата
	|ИЗ
	|	Документ.ВыпускПродукции.Поступление КАК ВыпускПродукцииПоступление
	|ГДЕ
	|	ВыпускПродукцииПоступление.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииПоступление.Ссылка.НаСклад = ИСТИНА
	|	И ВыпускПродукцииПоступление.Ссылка.ДокументОснование.Линейка В ИЕРАРХИИ(&ГруппаЛинеек)
	|	И ВыпускПродукцииПоступление.Ссылка.ДокументОснование.Линейка.Проектная = &Проектные"; 
	Если Объект.ВедомостьВыходногоДня Тогда
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.Дата));	
	Иначе	
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Объект.Дата));	
	КонецЕсли;
Запрос.УстановитьПараметр("ГруппаЛинеек", Объект.Линейка); 
Запрос.УстановитьПараметр("Проектные", Объект.Проектные);  
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныхЗаписей = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныхЗаписей.Следующий() Цикл
		Если Объект.БезУчётаВыходныхДней Тогда
			Если СписокВыходныхДней.НайтиПоЗначению(КонецДня(ВыборкаДетальныхЗаписей.Дата)) <> Неопределено Тогда
			Продолжить;
			КонецЕсли; 
		КонецЕсли;
	СписокТО = ПолучитьСписокТОИзделия(ВыборкаДетальныхЗаписей.ПЗ.Изделие);
	ЭтапыПЗ = РегистрыСведений.ЭтапыПроизводственныхЗаданий.Выбрать(,,Новый Структура("ПЗ",ВыборкаДетальныхЗаписей.ПЗ));
		Пока ЭтапыПЗ.Следующий() Цикл
		РабочееМесто = ЭтапыПЗ.РабочееМесто;
			Для каждого ТЧ Из РабочееМесто.ТехОперации Цикл
				Если ТЧ.ТехОперация.ЭтоГруппа Тогда
				ТО = Справочники.ТехОперации.ВыбратьИерархически(ТЧ.ТехОперация);
					Пока ТО.Следующий() Цикл
				    	Если Не ТО.ЭтоГруппа Тогда
							Если СписокТО.НайтиПоЗначению(ТО.Ссылка) <> Неопределено Тогда	
							НормыТО = РегистрыСведений.НормыТО.ПолучитьПоследнее(КонецМесяца(Объект.Дата),Новый Структура("ТехОперация",ТО.Ссылка));
							ТЧ_ТО = ТаблицаТО.Добавить();
							ТЧ_ТО.Исполнитель = ЭтапыПЗ.Исполнитель;
							ТЧ_ТО.ТехОперация = ТО.Ссылка;
							ТЧ_ТО.СуммаПоНаряду = Окр(НормыТО.Норма/60*НормыТО.Стоимость,2,РежимОкругления.Окр15как20);				
							КонецЕсли;
						КонецЕсли;				
					КонецЦикла; 
				Иначе					
					Если СписокТО.НайтиПоЗначению(ТЧ.ТехОперация) <> Неопределено Тогда	
					НормыТО = РегистрыСведений.НормыТО.ПолучитьПоследнее(КонецМесяца(Объект.Дата),Новый Структура("ТехОперация",ТЧ.ТехОперация));
					ТЧ_ТО = ТаблицаТО.Добавить();
					ТЧ_ТО.Исполнитель = ЭтапыПЗ.Исполнитель;
					ТЧ_ТО.ТехОперация = ТЧ.ТехОперация;
					ТЧ_ТО.СуммаПоНаряду = Окр(НормыТО.Норма/60*НормыТО.Стоимость,2,РежимОкругления.Окр15как20);				
					КонецЕсли;				
				КонецЕсли; 			
			КонецЦикла;
		КонецЦикла; 
	КонецЦикла;
ТаблицаТО.Свернуть("Исполнитель,ТехОперация","СуммаПоНаряду");
ТаблицаТО.Сортировать("Исполнитель,ТехОперация");
ТаблицаИсполнителей = ТаблицаТО.Скопировать();
ТаблицаИсполнителей.Свернуть("Исполнитель","СуммаПоНаряду");
ТаблицаИсполнителей.Сортировать("Исполнитель");
Объект.ТабличнаяЧасть.Загрузить(ТаблицаИсполнителей);
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	ТЧ.ПроцентПремии = ПроцентПремии;
	ТЧ.ОплатаВВыходной = ?(Объект.ВедомостьВыходногоДня,ТЧ.СуммаПоНаряду,0);
	ТЧ.Премия = (ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной)/100*ТЧ.ПроцентПремии;
   	ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной;
	КонецЦикла; 
Объект.ТехОперации.Загрузить(ТаблицаТО); 
//Вывод отчёта по исполнителям
ТаблицаТО1 = ТаблицаТО.Скопировать();
ТаблицаТО1.Свернуть("ТехОперация","СуммаПоНаряду");
ТаблицаТО1.Сортировать("ТехОперация");
СписокТО.Очистить();
	Для каждого ТЧ Из ТаблицаТО1 Цикл
	СписокТО.Добавить(ТЧ.ТехОперация,СокрЛП(ТЧ.ТехОперация.Родитель.Наименование+ТЧ.ТехОперация.Код))
	КонецЦикла; 
СписокТО.СортироватьПоПредставлению();
ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("ОтчётПоНормированию");

ОблШапкаОбщая = Макет.ПолучитьОбласть("Шапка|Общая");
ОблШапкаТехОперация = Макет.ПолучитьОбласть("Шапка|ТехОперация");
ОблШапкаИтого = Макет.ПолучитьОбласть("Шапка|Итого");
ОблИсполнительОбщая = Макет.ПолучитьОбласть("Исполнитель|Общая");
ОблИсполнительТехОперация = Макет.ПолучитьОбласть("Исполнитель|ТехОперация");
ОблИсполнительИтого = Макет.ПолучитьОбласть("Исполнитель|Итого");
ОблКонецОбщая = Макет.ПолучитьОбласть("Конец|Общая");
ОблКонецТехОперация = Макет.ПолучитьОбласть("Конец|ТехОперация");
ОблКонецИтого = Макет.ПолучитьОбласть("Конец|Итого");

	Если Объект.ВедомостьВыходногоДня Тогда
	ОблШапкаОбщая.Параметры.ДатаНач = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
	ОблШапкаОбщая.Параметры.ДатаКон = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
	Иначе	
	ОблШапкаОбщая.Параметры.ДатаНач = Формат(НачалоМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");
	ОблШапкаОбщая.Параметры.ДатаКон = Формат(КонецМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");
	КонецЕсли;
ОблШапкаОбщая.Параметры.ВидОтчёта = ?(Объект.БезУчётаВыходныхДней,"Без учёта выходных дней",""); 
ТабДок.Вывести(ОблШапкаОбщая);
	Для каждого ТО Из СписокТО Цикл	
	ОблШапкаТехОперация.Параметры.ТО = ТО.Значение;
	ТабДок.Присоединить(ОблШапкаТехОперация);				
	КонецЦикла;
ТабДок.Присоединить(ОблШапкаИтого);

	Для каждого ТЧ Из ТаблицаИсполнителей Цикл
	СуммаИтого = 0;
	ОблИсполнительОбщая.Параметры.Исполнитель = ТЧ.Исполнитель;
	ТабДок.Вывести(ОблИсполнительОбщая);		
		Для каждого ТО Из СписокТО Цикл
		Выборка = ТаблицаТО.НайтиСтроки(Новый Структура("Исполнитель,ТехОперация",ТЧ.Исполнитель,ТО.Значение));
			Если Выборка.Количество() > 0 Тогда			
			ОблИсполнительТехОперация.Параметры.РЧ = 0;
			ОблИсполнительТехОперация.Параметры.Сумма = Выборка[0].СуммаПоНаряду;
			СуммаИтого = СуммаИтого + Выборка[0].СуммаПоНаряду;
			Иначе	
			ОблИсполнительТехОперация.Параметры.РЧ = 0;
			ОблИсполнительТехОперация.Параметры.Сумма = 0;			
			КонецЕсли;	
		ТабДок.Присоединить(ОблИсполнительТехОперация);				
		КонецЦикла;	
	ОблИсполнительИтого.Параметры.СуммаИтого = СуммаИтого;
	ТабДок.Присоединить(ОблИсполнительИтого);
	КонецЦикла; 
ТабДок.Вывести(ОблКонецОбщая);
	Для каждого ТО Из СписокТО Цикл
	Выборка = ТаблицаТО1.НайтиСтроки(Новый Структура("ТехОперация",ТО.Значение));
	ОблКонецТехОперация.Параметры.СуммаВсего = Выборка[0].СуммаПоНаряду;
	ТабДок.Присоединить(ОблКонецТехОперация);				
	КонецЦикла;
ОблКонецИтого.Параметры.СуммаИтогоВсего = ТаблицаТО1.Итог("СуммаПоНаряду");
ТабДок.Присоединить(ОблКонецИтого);
ТабДок.ФиксацияСверху = 4;
ТабДок.ФиксацияСлева = 1;
Объект.Комментарий = "Линейка: "+Объект.Линейка;
Возврат(ТабДок); 
КонецФункции

&НаСервере
Функция РасчитатьДляКанбанУДНаСервере(ЗаполнитьТаблицу)
Объект.ТабличнаяЧасть.Очистить();
Запрос = Новый Запрос;
ТабДок = Новый ТабличныйДокумент;
СписокТО = Новый СписокЗначений;
ТаблицаТО = Новый ТаблицаЗначений;

ТаблицаТО.Колонки.Добавить("Исполнитель",Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
ТаблицаТО.Колонки.Добавить("ТехОперация",Новый ОписаниеТипов("СправочникСсылка.ТехОперации"));
ТаблицаТО.Колонки.Добавить("СуммаПоНаряду",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(9,2)));
	Если Объект.БезУчётаВыходныхДней Тогда
	СписокВыходныхДней = ПолучитьСписокВыходныхДней();
	КонецЕсли;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииКанбан.ДокументОснование КАК ПЗ,
	|	ВыпускПродукцииКанбан.Дата,
	|	ВыпускПродукцииКанбан.Количество
	|ИЗ
	|	Документ.ВыпускПродукцииКанбан КАК ВыпускПродукцииКанбан
	|ГДЕ
	|	ВыпускПродукцииКанбан.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииКанбан.ДокументОснование.Линейка В ИЕРАРХИИ(&ГруппаЛинеек)
	|	И ВыпускПродукцииКанбан.ДокументОснование.Линейка.Проектная = &Проектные"; 
	Если Объект.ВедомостьВыходногоДня Тогда
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.Дата));	
	Иначе	
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Объект.Дата));	
	КонецЕсли;
Запрос.УстановитьПараметр("ГруппаЛинеек", Объект.Линейка); 
Запрос.УстановитьПараметр("Проектные", Объект.Проектные);  
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныхЗаписей = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныхЗаписей.Следующий() Цикл
		Если Объект.БезУчётаВыходныхДней Тогда
			Если СписокВыходныхДней.НайтиПоЗначению(КонецДня(ВыборкаДетальныхЗаписей.Дата)) <> Неопределено Тогда
			Продолжить;
			КонецЕсли; 
		КонецЕсли;
	СписокТО = ПолучитьСписокТОИзделия(ВыборкаДетальныхЗаписей.ПЗ.Изделие);
	ЭтапыПЗ = РегистрыСведений.ЭтапыПроизводственныхЗаданий.Выбрать(,,Новый Структура("ПЗ",ВыборкаДетальныхЗаписей.ПЗ));
		Пока ЭтапыПЗ.Следующий() Цикл
		РабочееМесто = ЭтапыПЗ.РабочееМесто;
			Для каждого ТЧ Из РабочееМесто.ТехОперации Цикл
				Если ТЧ.ТехОперация.ЭтоГруппа Тогда
				ТО = Справочники.ТехОперации.ВыбратьИерархически(ТЧ.ТехОперация);
					Пока ТО.Следующий() Цикл
				    	Если Не ТО.ЭтоГруппа Тогда
							Если СписокТО.НайтиПоЗначению(ТО.Ссылка) <> Неопределено Тогда	
							НормыТО = РегистрыСведений.НормыТО.ПолучитьПоследнее(КонецМесяца(Объект.Дата),Новый Структура("ТехОперация",ТО.Ссылка));
							ТЧ_ТО = ТаблицаТО.Добавить();
							ТЧ_ТО.Исполнитель = ЭтапыПЗ.Исполнитель;
							ТЧ_ТО.ТехОперация = ТО.Ссылка;
							ТЧ_ТО.СуммаПоНаряду = Окр(НормыТО.Норма/60*НормыТО.Стоимость,2,РежимОкругления.Окр15как20)*ВыборкаДетальныхЗаписей.Количество;				
							КонецЕсли;
						КонецЕсли;				
					КонецЦикла; 
				Иначе					
					Если СписокТО.НайтиПоЗначению(ТЧ.ТехОперация) <> Неопределено Тогда	
					НормыТО = РегистрыСведений.НормыТО.ПолучитьПоследнее(КонецМесяца(Объект.Дата),Новый Структура("ТехОперация",ТЧ.ТехОперация));
					ТЧ_ТО = ТаблицаТО.Добавить();
					ТЧ_ТО.Исполнитель = ЭтапыПЗ.Исполнитель;
					ТЧ_ТО.ТехОперация = ТЧ.ТехОперация;
					ТЧ_ТО.СуммаПоНаряду = Окр(НормыТО.Норма/60*НормыТО.Стоимость,2,РежимОкругления.Окр15как20)*ВыборкаДетальныхЗаписей.Количество;				
					КонецЕсли;				
				КонецЕсли; 			
			КонецЦикла;
		КонецЦикла; 
	КонецЦикла;
ТаблицаТО.Свернуть("Исполнитель,ТехОперация","СуммаПоНаряду");
ТаблицаТО.Сортировать("Исполнитель,ТехОперация");
ТаблицаИсполнителей = ТаблицаТО.Скопировать();
ТаблицаИсполнителей.Свернуть("Исполнитель","СуммаПоНаряду");
ТаблицаИсполнителей.Сортировать("Исполнитель");
Объект.ТабличнаяЧасть.Загрузить(ТаблицаИсполнителей);
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	ТЧ.ПроцентПремии = ПроцентПремии;
	ТЧ.ОплатаВВыходной = ?(Объект.ВедомостьВыходногоДня,ТЧ.СуммаПоНаряду,0);
	ТЧ.Премия = (ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной)/100*ТЧ.ПроцентПремии;
   	ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной;
	КонецЦикла; 
Объект.ТехОперации.Загрузить(ТаблицаТО); 
//Вывод отчёта по исполнителям
ТаблицаТО1 = ТаблицаТО.Скопировать();
ТаблицаТО1.Свернуть("ТехОперация","СуммаПоНаряду");
ТаблицаТО1.Сортировать("ТехОперация");
СписокТО.Очистить();
	Для каждого ТЧ Из ТаблицаТО1 Цикл
	СписокТО.Добавить(ТЧ.ТехОперация,СокрЛП(ТЧ.ТехОперация.Родитель.Наименование+ТЧ.ТехОперация.Код))
	КонецЦикла; 
СписокТО.СортироватьПоПредставлению();
ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("ОтчётПоНормированию");

ОблШапкаОбщая = Макет.ПолучитьОбласть("Шапка|Общая");
ОблШапкаТехОперация = Макет.ПолучитьОбласть("Шапка|ТехОперация");
ОблШапкаИтого = Макет.ПолучитьОбласть("Шапка|Итого");
ОблИсполнительОбщая = Макет.ПолучитьОбласть("Исполнитель|Общая");
ОблИсполнительТехОперация = Макет.ПолучитьОбласть("Исполнитель|ТехОперация");
ОблИсполнительИтого = Макет.ПолучитьОбласть("Исполнитель|Итого");
ОблКонецОбщая = Макет.ПолучитьОбласть("Конец|Общая");
ОблКонецТехОперация = Макет.ПолучитьОбласть("Конец|ТехОперация");
ОблКонецИтого = Макет.ПолучитьОбласть("Конец|Итого");

	Если Объект.ВедомостьВыходногоДня Тогда
	ОблШапкаОбщая.Параметры.ДатаНач = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
	ОблШапкаОбщая.Параметры.ДатаКон = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
	Иначе	
	ОблШапкаОбщая.Параметры.ДатаНач = Формат(НачалоМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");
	ОблШапкаОбщая.Параметры.ДатаКон = Формат(КонецМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");
	КонецЕсли;
ОблШапкаОбщая.Параметры.ВидОтчёта = ?(Объект.БезУчётаВыходныхДней,"Без учёта выходных дней",""); 
ТабДок.Вывести(ОблШапкаОбщая);
	Для каждого ТО Из СписокТО Цикл	
	ОблШапкаТехОперация.Параметры.ТО = ТО.Значение;
	ТабДок.Присоединить(ОблШапкаТехОперация);				
	КонецЦикла;
ТабДок.Присоединить(ОблШапкаИтого);

	Для каждого ТЧ Из ТаблицаИсполнителей Цикл
	СуммаИтого = 0;
	ОблИсполнительОбщая.Параметры.Исполнитель = ТЧ.Исполнитель;
	ТабДок.Вывести(ОблИсполнительОбщая);		
		Для каждого ТО Из СписокТО Цикл
		Выборка = ТаблицаТО.НайтиСтроки(Новый Структура("Исполнитель,ТехОперация",ТЧ.Исполнитель,ТО.Значение));
			Если Выборка.Количество() > 0 Тогда			
			ОблИсполнительТехОперация.Параметры.РЧ = 0;
			ОблИсполнительТехОперация.Параметры.Сумма = Выборка[0].СуммаПоНаряду;
			СуммаИтого = СуммаИтого + Выборка[0].СуммаПоНаряду;
			Иначе	
			ОблИсполнительТехОперация.Параметры.РЧ = 0;
			ОблИсполнительТехОперация.Параметры.Сумма = 0;			
			КонецЕсли;	
		ТабДок.Присоединить(ОблИсполнительТехОперация);				
		КонецЦикла;	
	ОблИсполнительИтого.Параметры.СуммаИтого = СуммаИтого;
	ТабДок.Присоединить(ОблИсполнительИтого);
	КонецЦикла; 
ТабДок.Вывести(ОблКонецОбщая);
	Для каждого ТО Из СписокТО Цикл
	Выборка = ТаблицаТО1.НайтиСтроки(Новый Структура("ТехОперация",ТО.Значение));
	ОблКонецТехОперация.Параметры.СуммаВсего = Выборка[0].СуммаПоНаряду;
	ТабДок.Присоединить(ОблКонецТехОперация);				
	КонецЦикла;
ОблКонецИтого.Параметры.СуммаИтогоВсего = ТаблицаТО1.Итог("СуммаПоНаряду");
ТабДок.Присоединить(ОблКонецИтого);
ТабДок.ФиксацияСверху = 4;
ТабДок.ФиксацияСлева = 1;
Объект.Комментарий = "Линейка: "+Объект.Линейка;
Возврат(ТабДок); 
КонецФункции

&НаСервере
Функция РасчитатьДляКанбанУДСОборудованиемНаСервере(ЗаполнитьТаблицу)
Объект.ТабличнаяЧасть.Очистить();
Запрос = Новый Запрос;
ТабДок = Новый ТабличныйДокумент;
СписокТО = Новый СписокЗначений;
ТаблицаТО = Новый ТаблицаЗначений;

ТаблицаТО.Колонки.Добавить("Исполнитель",Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
ТаблицаТО.Колонки.Добавить("ТехОперация",Новый ОписаниеТипов("СправочникСсылка.ТехОперации"));
ТаблицаТО.Колонки.Добавить("СуммаПоНаряду",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(9,2)));
	Если Объект.БезУчётаВыходныхДней Тогда
	СписокВыходныхДней = ПолучитьСписокВыходныхДней();
	КонецЕсли;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииКанбан.ДокументОснование КАК ПЗ,
	|	ВыпускПродукцииКанбан.Дата,
	|	ВыпускПродукцииКанбан.Количество
	|ИЗ
	|	Документ.ВыпускПродукцииКанбан КАК ВыпускПродукцииКанбан
	|ГДЕ
	|	ВыпускПродукцииКанбан.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииКанбан.ДокументОснование.Линейка В ИЕРАРХИИ(&ГруппаЛинеек)
	|	И ВыпускПродукцииКанбан.ДокументОснование.Линейка.Проектная = &Проектные"; 
	Если Объект.ВедомостьВыходногоДня Тогда
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.Дата));	
	Иначе	
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Объект.Дата));	
	КонецЕсли;
Запрос.УстановитьПараметр("ГруппаЛинеек", Объект.Линейка); 
Запрос.УстановитьПараметр("Проектные", Объект.Проектные);  
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныхЗаписей = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныхЗаписей.Следующий() Цикл
		Если Объект.БезУчётаВыходныхДней Тогда
			Если СписокВыходныхДней.НайтиПоЗначению(КонецДня(ВыборкаДетальныхЗаписей.Дата)) <> Неопределено Тогда
			Продолжить;
			КонецЕсли; 
		КонецЕсли;
			Для каждого ТЧ Из ВыборкаДетальныхЗаписей.ПЗ.Оборудование Цикл	
			НормыТО = РегистрыСведений.НормыТО.ПолучитьПоследнее(КонецМесяца(Объект.Дата),Новый Структура("ТехОперация",ТЧ.ТехОперация));
			ТЧ_ТО = ТаблицаТО.Добавить();
			ТЧ_ТО.Исполнитель = ТЧ.Исполнитель;
			ТЧ_ТО.ТехОперация = ТЧ.ТехОперация;
			ТЧ_ТО.СуммаПоНаряду = Окр(НормыТО.Норма/60*НормыТО.Стоимость,2,РежимОкругления.Окр15как20)*ВыборкаДетальныхЗаписей.Количество*ТЧ.Количество;			
			КонецЦикла; 
	КонецЦикла;
ТаблицаТО.Свернуть("Исполнитель,ТехОперация","СуммаПоНаряду");
ТаблицаТО.Сортировать("Исполнитель,ТехОперация");
ТаблицаИсполнителей = ТаблицаТО.Скопировать();
ТаблицаИсполнителей.Свернуть("Исполнитель","СуммаПоНаряду");
ТаблицаИсполнителей.Сортировать("Исполнитель");
Объект.ТабличнаяЧасть.Загрузить(ТаблицаИсполнителей);
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	ТЧ.ПроцентПремии = ПроцентПремии;
	ТЧ.ОплатаВВыходной = ?(Объект.ВедомостьВыходногоДня,ТЧ.СуммаПоНаряду,0);
	ТЧ.Премия = (ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной)/100*ТЧ.ПроцентПремии;
   	ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной;
	КонецЦикла; 
Объект.ТехОперации.Загрузить(ТаблицаТО); 
//Вывод отчёта по исполнителям
ТаблицаТО1 = ТаблицаТО.Скопировать();
ТаблицаТО1.Свернуть("ТехОперация","СуммаПоНаряду");
ТаблицаТО1.Сортировать("ТехОперация");
СписокТО.Очистить();
	Для каждого ТЧ Из ТаблицаТО1 Цикл
	СписокТО.Добавить(ТЧ.ТехОперация,СокрЛП(ТЧ.ТехОперация.Родитель.Наименование+ТЧ.ТехОперация.Код))
	КонецЦикла; 
СписокТО.СортироватьПоПредставлению();
ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("ОтчётПоНормированию");

ОблШапкаОбщая = Макет.ПолучитьОбласть("Шапка|Общая");
ОблШапкаТехОперация = Макет.ПолучитьОбласть("Шапка|ТехОперация");
ОблШапкаИтого = Макет.ПолучитьОбласть("Шапка|Итого");
ОблИсполнительОбщая = Макет.ПолучитьОбласть("Исполнитель|Общая");
ОблИсполнительТехОперация = Макет.ПолучитьОбласть("Исполнитель|ТехОперация");
ОблИсполнительИтого = Макет.ПолучитьОбласть("Исполнитель|Итого");
ОблКонецОбщая = Макет.ПолучитьОбласть("Конец|Общая");
ОблКонецТехОперация = Макет.ПолучитьОбласть("Конец|ТехОперация");
ОблКонецИтого = Макет.ПолучитьОбласть("Конец|Итого");

	Если Объект.ВедомостьВыходногоДня Тогда
	ОблШапкаОбщая.Параметры.ДатаНач = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
	ОблШапкаОбщая.Параметры.ДатаКон = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
	Иначе	
	ОблШапкаОбщая.Параметры.ДатаНач = Формат(НачалоМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");
	ОблШапкаОбщая.Параметры.ДатаКон = Формат(КонецМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");
	КонецЕсли;
ОблШапкаОбщая.Параметры.ВидОтчёта = ?(Объект.БезУчётаВыходныхДней,"Без учёта выходных дней",""); 
ТабДок.Вывести(ОблШапкаОбщая);
	Для каждого ТО Из СписокТО Цикл	
	ОблШапкаТехОперация.Параметры.ТО = ТО.Значение;
	ТабДок.Присоединить(ОблШапкаТехОперация);				
	КонецЦикла;
ТабДок.Присоединить(ОблШапкаИтого);

	Для каждого ТЧ Из ТаблицаИсполнителей Цикл
	СуммаИтого = 0;
	ОблИсполнительОбщая.Параметры.Исполнитель = ТЧ.Исполнитель;
	ТабДок.Вывести(ОблИсполнительОбщая);		
		Для каждого ТО Из СписокТО Цикл
		Выборка = ТаблицаТО.НайтиСтроки(Новый Структура("Исполнитель,ТехОперация",ТЧ.Исполнитель,ТО.Значение));
			Если Выборка.Количество() > 0 Тогда			
			ОблИсполнительТехОперация.Параметры.РЧ = 0;
			ОблИсполнительТехОперация.Параметры.Сумма = Выборка[0].СуммаПоНаряду;
			СуммаИтого = СуммаИтого + Выборка[0].СуммаПоНаряду;
			Иначе	
			ОблИсполнительТехОперация.Параметры.РЧ = 0;
			ОблИсполнительТехОперация.Параметры.Сумма = 0;			
			КонецЕсли;	
		ТабДок.Присоединить(ОблИсполнительТехОперация);				
		КонецЦикла;	
	ОблИсполнительИтого.Параметры.СуммаИтого = СуммаИтого;
	ТабДок.Присоединить(ОблИсполнительИтого);
	КонецЦикла; 
ТабДок.Вывести(ОблКонецОбщая);
	Для каждого ТО Из СписокТО Цикл
	Выборка = ТаблицаТО1.НайтиСтроки(Новый Структура("ТехОперация",ТО.Значение));
	ОблКонецТехОперация.Параметры.СуммаВсего = Выборка[0].СуммаПоНаряду;
	ТабДок.Присоединить(ОблКонецТехОперация);				
	КонецЦикла;
ОблКонецИтого.Параметры.СуммаИтогоВсего = ТаблицаТО1.Итог("СуммаПоНаряду");
ТабДок.Присоединить(ОблКонецИтого);
ТабДок.ФиксацияСверху = 4;
ТабДок.ФиксацияСлева = 1;
Объект.Комментарий = "Линейка: "+Объект.Линейка;
Возврат(ТабДок);
КонецФункции

&НаСервере
Функция ПолучитьНаименованиеПодразделения()
Возврат(СокрЛП(Объект.Подразделение.Наименование));
КонецФункции

&НаСервере
Функция ПолучитьНаименованиеЛинейки(Линейка)
Возврат(СокрЛП(Линейка.Наименование));
КонецФункции

&НаСервере
Процедура ЗаполнитьПоДополнительнымРаботамНаСервере()
Запрос = Новый Запрос;

	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеРаботы.ТехОперация,
		|	ДополнительныеРаботы.Количество
		|ИЗ
		|	РегистрСведений.ДополнительныеРаботы КАК ДополнительныеРаботы
		|ГДЕ
		|	ДополнительныеРаботы.Период МЕЖДУ &ДатаНач И &ДатаКон
		|	И ДополнительныеРаботы.Подразделение = &Подразделение
		|	И ДополнительныеРаботы.Сотрудник = &Сотрудник";
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("Сотрудник", ТЧ.Исполнитель);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	СуммаДР = 0;
	СуммаОД = 0;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НормыТО = РегистрыСведений.НормыТО.ПолучитьПоследнее(КонецМесяца(Объект.Дата),Новый Структура("ТехОперация",ВыборкаДетальныеЗаписи.ТехОперация));
		Стоимость = ВыборкаДетальныеЗаписи.Количество/НормыТО.Норма*НормыТО.Стоимость*ТЧ.Исполнитель.Должность.КоэффициентРазряда;
			Если ВыборкаДетальныеЗаписи.ТехОперация.ДополнительныеРаботы Тогда
			СуммаДР = СуммаДР + Стоимость;
			Иначе	
			СуммаОД = СуммаОД + Стоимость;
			КонецЕсли;		
		КонецЦикла;
	ТЧ.СуммаПоНаряду = ТЧ.СуммаПоНаряду + СуммаОД;
	ТЧ.ДС = СуммаДР;
	ТЧ.ДП = ТЧ.ДС*ТЧ.ПроцентПремии/100;
	ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП;
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокРабочихМест()
Запрос = Новый Запрос;
СписокРМ = Новый СписокЗначений;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РабочиеМестаЛинеек.Ссылка
	|ИЗ
	|	Справочник.РабочиеМестаЛинеек КАК РабочиеМестаЛинеек
	|ГДЕ
	|	РабочиеМестаЛинеек.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	И РабочиеМестаЛинеек.ПометкаУдаления = ЛОЖЬ
	|	И РабочиеМестаЛинеек.ЭтоГруппа = ЛОЖЬ";
Запрос.УстановитьПараметр("СписокЛинеек", Объект.Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокРМ.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
Возврат(СписокРМ);
КонецФункции

&НаКлиенте
Процедура Заполнить(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		Если ПолучитьНаименованиеПодразделения() = "Богородицк линия SMD" Тогда
		РабочееМесто = Неопределено;
		СписокРМ = ПолучитьСписокРабочихМест();
		РабочееМесто = СписокРМ.ВыбратьЭлемент("Выберите рабочее место",РабочееМесто);
			Если РабочееМесто <> Неопределено Тогда
			РасчитатьДляSMDНаСервере(РабочееМесто.Значение);
			КонецЕсли;
		ИначеЕсли ПолучитьНаименованиеПодразделения() = "Богородицк УПЭА" Тогда
		РасчитатьДляУПЭАНаСервере_2(Истина);
		ИначеЕсли (ПолучитьНаименованиеПодразделения() = "Богородицк УД")или
				  (ПолучитьНаименованиеПодразделения() = "Богородицк датчики давления") Тогда
		ТД = РасчитатьДляУДНаСервере(Истина);
		ТД.Показать("Отчёт по нормированию за период");
		ИначеЕсли (ПолучитьНаименованиеПодразделения() = "Богородицк ДД (канбан РМ)")или
				  (ПолучитьНаименованиеПодразделения() = "Богородицк УД (канбан ЧЭ)")или
				  (ПолучитьНаименованиеПодразделения() = "Богородицк УД (канбан РМ)")Тогда                                                                            
		ТД = РасчитатьДляКанбанУДНаСервере(Истина);
		ТД.Показать("Отчёт по нормированию за период");
		ИначеЕсли ПолучитьНаименованиеПодразделения() = "Богородицк УД (канбан)" Тогда
		ТД = РасчитатьДляКанбанУДСОборудованиемНаСервере(Истина);
		ТД.Показать("Отчёт по нормированию за период");
		ИначеЕсли ПолучитьНаименованиеПодразделения() = "Богородицк УИТ" Тогда
		РасчитатьДляУИТНаСервере();
		Иначе
		Сообщить("Для выбранного подразделения заполнение не предусмотрено!");
		Возврат;
		КонецЕсли;
			Если ИспользоватьДС() Тогда
			ЗаполнитьПоДополнительнымРаботамНаСервере();
			КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПечатьИндивидуальныйНарядНаСервере()
ТабДок = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("ИндивидуальныйНаряд");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблСтрока = Макет.ПолучитьОбласть("Строка");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.Директор = ОбщийМодульВызовСервера.ПолучитьСотрудникаПоДолжности("Директор завода");
ОблШапка.Параметры.ГодДаты = Формат(КонецМесяца(Объект.Дата),"ДФ=yyyy");
	Если Объект.ВедомостьВыходногоДня Тогда
	ОблШапка.Параметры.ДатаНач = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
	ОблШапка.Параметры.ДатаКон = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");	
	Иначе	
	ОблШапка.Параметры.ДатаНач = Формат(НачалоМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");
	ОблШапка.Параметры.ДатаКон = Формат(КонецМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");	
	КонецЕсли;
ОблШапка.Параметры.ДС = ?(ИспользоватьДС(),"Сумма по дополнительной сделке, руб.","Доплата за выполнение трудовых функций/Оклад, руб.");
ОблШапка.Параметры.Подразделение = Объект.Подразделение;
ОблШапка.Параметры.Комментарий = Объект.Комментарий;
ТабДок.Вывести(ОблШапка);
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	ОблСтрока.Параметры.Заполнить(ТЧ);		
	ОблСтрока.Параметры.Сотрудник = СокрЛП(ТЧ.Исполнитель.Наименование);
	ОблСтрока.Параметры.Должность = СокрЛП(ТЧ.Исполнитель.Должность.Наименование);
	ОблСтрока.Параметры.ТабНомер = ТЧ.Исполнитель.ТабельныйНомер;
		Если Объект.ВедомостьВыходногоДня Тогда
		ОблСтрока.Параметры.СуммаПоНаряду = ОблСтрока.Параметры.СуммаПоНаряду + ТЧ.ОплатаВВыходной; 
		КонецЕсли; 
	ТабДок.Вывести(ОблСтрока);
	КонецЦикла;
ОблКонец.Параметры.Мастер = Объект.Автор;
ОблКонец.Параметры.РабочихЧасовВсего = Объект.ТабличнаяЧасть.Итог("РабочихЧасов");
ОблКонец.Параметры.СуммаПоНарядуВсего = Объект.ТабличнаяЧасть.Итог("СуммаПоНаряду");
ОблКонец.Параметры.ДСВсего = Объект.ТабличнаяЧасть.Итог("ДС");
	Если Объект.ВедомостьВыходногоДня Тогда
	ОблКонец.Параметры.СуммаПоНарядуВсего = ОблКонец.Параметры.СуммаПоНарядуВсего + Объект.ТабличнаяЧасть.Итог("ОплатаВВыходной"); 
	КонецЕсли;
ОблКонец.Параметры.Документ = Объект.Ссылка;  
ТабДок.Вывести(ОблКонец);
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьИндивидуальныйНаряд(Команда)
ТД = ПечатьИндивидуальныйНарядНаСервере();
ТД.Показать("Индивидуальный наряд");
КонецПроцедуры

&НаСервере
Функция ПечатьПредставлениеНаПремированиеНаСервере()
ТабДок = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("ПредставлениеНаПремирование");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблСтрока = Макет.ПолучитьОбласть("Строка");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.Директор = ОбщийМодульВызовСервера.ПолучитьСотрудникаПоДолжности("Директор завода");
ОблШапка.Параметры.ГодДаты = Формат(КонецМесяца(Объект.Дата),"ДФ=yyyy");
	Если Объект.ВедомостьВыходногоДня Тогда
	ОблШапка.Параметры.ДатаНач = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
	ОблШапка.Параметры.ДатаКон = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");	
	Иначе	
	ОблШапка.Параметры.ДатаНач = Формат(НачалоМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");
	ОблШапка.Параметры.ДатаКон = Формат(КонецМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");	
	КонецЕсли;
ОблШапка.Параметры.Заполнить(Объект);
ТабДок.Вывести(ОблШапка);
СделкаИтого = 0;
ПремияИтого = 0;
ОплатаВВыходнойИтого = 0;
КНачислениюИтого = 0;
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	ОблСтрока.Параметры.Заполнить(ТЧ);		
	ОблСтрока.Параметры.Сотрудник = СокрЛП(ТЧ.Исполнитель.Наименование);
	ОблСтрока.Параметры.Должность = СокрЛП(ТЧ.Исполнитель.Должность.Наименование);
	ОблСтрока.Параметры.СуммаСделки = ТЧ.СуммаПоНаряду+ТЧ.ДС;
	ОблСтрока.Параметры.СуммаПремии = ТЧ.Премия+ТЧ.ДП;
	ОблСтрока.Параметры.Дополнительная = ТЧ.ДС+ТЧ.ДП;
	ОблСтрока.Параметры.Основная = ТЧ.СуммаПоНаряду+ТЧ.Премия+ТЧ.ОплатаВВыходной;
	ОблСтрока.Параметры.КНачислению = ОблСтрока.Параметры.Дополнительная+ОблСтрока.Параметры.Основная;
	ТабДок.Вывести(ОблСтрока);
	СделкаИтого = СделкаИтого + ОблСтрока.Параметры.СуммаСделки;
	ПремияИтого = ПремияИтого + ОблСтрока.Параметры.СуммаПремии;
	ОплатаВВыходнойИтого = ОплатаВВыходнойИтого + ТЧ.ОплатаВВыходной;
	КНачислениюИтого = КНачислениюИтого + ОблСтрока.Параметры.КНачислению;
	КонецЦикла;
ОблКонец.Параметры.Мастер = Объект.Автор;
ОблКонец.Параметры.СделкаИтого = СделкаИтого;
ОблКонец.Параметры.ПремияИтого = ПремияИтого;
ОблКонец.Параметры.КНачислениюИтого = КНачислениюИтого;
ОблКонец.Параметры.ОплатаВВыходнойИтого = ОплатаВВыходнойИтого; 
ТабДок.Вывести(ОблКонец);
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьПредставлениеНаПремирование(Команда)
ТД = ПечатьПредставлениеНаПремированиеНаСервере();
ТД.Показать("Представление на премирование");
КонецПроцедуры

&НаКлиенте
Процедура ПечатьОтчётПоНормированиюПоИсполнителям(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		Если ПолучитьНаименованиеПодразделения() = "Богородицк УПЭА" Тогда
		ТД = РасчитатьДляУПЭАНаСервере(Ложь);
		ТД.Показать("Отчёт по нормированию по исполнителям за период");
		//ИначеЕсли ПолучитьНаименованиеПодразделения() = "Богородицк УД" Тогда
		//ТД = ОтчётПоНормированиюПоИсполнителям();
		//ТД.Показать("Отчёт по нормированию по исполнителям за период");
		ИначеЕсли ПолучитьНаименованиеПодразделения() = "Богородицк линия SMD" Тогда
		ОткрытьФорму("Отчет.ОтчетПоНормированиюSMD_Установка.Форма.ФормаОтчета",Новый Структура("Документ",Объект.Ссылка));
		Иначе
		Сообщить("Не поддерживается для выбранного подразделения!");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПечатьОтчётПоНормированию(Команда)
	Если ЭтаФорма.Модифицированность Тогда
	Сообщить("Запишите документ!");
	Возврат;
	КонецЕсли;
		Если ПолучитьНаименованиеПодразделения() = "Богородицк УПЭА" Тогда
		ОткрытьФорму("Отчет.ОтчетПоНормированиюПриборов.Форма.ФормаОтчета",Новый Структура("Документ",Объект.Ссылка));
		ИначеЕсли (ПолучитьНаименованиеПодразделения() = "Богородицк УД")или
				  (ПолучитьНаименованиеПодразделения() = "Богородицк датчики давления") Тогда
		ОткрытьФорму("Отчет.ОтчетПоНормированиюДатчиков.Форма.ФормаОтчета",Новый Структура("Документ",Объект.Ссылка));
		ИначеЕсли (ПолучитьНаименованиеПодразделения() = "Богородицк ДД (канбан РМ)")или
				  (ПолучитьНаименованиеПодразделения() = "Богородицк УД (канбан ЧЭ)")или
				  (ПолучитьНаименованиеПодразделения() = "Богородицк УД (канбан РМ)") Тогда
		ОткрытьФорму("Отчет.ОтчетПоНормированиюКанбановДатчиков.Форма.ФормаОтчета",Новый Структура("Документ",Объект.Ссылка));
		ИначеЕсли ПолучитьНаименованиеПодразделения() = "Богородицк УД (канбан)" Тогда
		ОткрытьФорму("Отчет.ОтчетПоНормированиюКанбановДатчиков.Форма.ФормаОтчета",Новый Структура("Документ",Объект.Ссылка));
		ИначеЕсли ПолучитьНаименованиеПодразделения() = "Богородицк УИТ" Тогда
		ОткрытьФорму("Отчет.ОтчетПоНормированиюКанбанов.Форма.ФормаОтчета",Новый Структура("Документ",Объект.Ссылка));
		ИначеЕсли ПолучитьНаименованиеПодразделения() = "Богородицк линия SMD" Тогда
		РабочееМесто = Неопределено;
		СписокРМ = ПолучитьСписокРабочихМест();
		РабочееМесто = СписокРМ.ВыбратьЭлемент("Выберите рабочее место",РабочееМесто);
			Если РабочееМесто <> Неопределено Тогда
			ОткрытьФорму("Отчет.ОтчетПоНормированиюSMDПоЛинейкам.Форма.ФормаОтчета",Новый Структура("Документ,РабочееМесто",Объект.Ссылка,РабочееМесто.Значение));
			КонецЕсли;
		Иначе
		Сообщить("Не поддерживается для выбранного подразделения!");
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПечатьДополнительныеРаботы(Команда)
ОткрытьФорму("Отчет.ОтчетПоДополнительнымРаботам.Форма.ФормаОтчета",Новый Структура("Документ",Объект.Ссылка));
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
Отказ = Не ЭтаФорма.ПроверитьЗаполнение();
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСуммаПоНарядуПриИзменении(Элемент)
ТЧ = Элементы.ТабличнаяЧасть.ТекущиеДанные;
ТЧ.ОплатаВВыходной = ?(Объект.ВедомостьВыходногоДня,ТЧ.СуммаПоНаряду,0);
ТЧ.Премия = (ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной)/100*ТЧ.ПроцентПремии; 
ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьДСПриИзменении(Элемент)
ТЧ = Элементы.ТабличнаяЧасть.ТекущиеДанные;
ТЧ.ДП = ТЧ.ДС/100*ТЧ.ПроцентПремии;
ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьДППриИзменении(Элемент)
ТЧ = Элементы.ТабличнаяЧасть.ТекущиеДанные;
ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП;
КонецПроцедуры

&НаСервере
Функция ИспользоватьДС()
Возврат(Объект.Подразделение.ДополнительнаяСделка);
КонецФункции

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	Если (ПолучитьНаименованиеПодразделения() = "Богородицк УПЭА")или
		 (ПолучитьНаименованиеПодразделения() = "Богородицк УД")или
		 (ПолучитьНаименованиеПодразделения() = "Богородицк датчики давления")или
		 (ПолучитьНаименованиеПодразделения() = "Богородицк УИТ")Тогда
	Элементы.ТехОперации.Видимость = Истина;
	Иначе
	Элементы.ТехОперации.Видимость = Ложь;
	КонецЕсли;
ДополнительнаяСделка = ИспользоватьДС();
Элементы.БезУчётаВыходныхДней.Доступность = Не ДополнительнаяСделка;
Элементы.ВедомостьВыходногоДня.Доступность = Не ДополнительнаяСделка;
Объект.БезУчётаВыходныхДней = ?(ДополнительнаяСделка,Ложь,Ложь);
Объект.ВедомостьВыходногоДня = ?(ДополнительнаяСделка,Ложь,Ложь);
Элементы.ТабличнаяЧастьДС.Заголовок = ?(ДополнительнаяСделка,"ДС","ДВТФ/Оклад");
Элементы.ТабличнаяЧастьДП.Заголовок = ?(ДополнительнаяСделка,"ДП","ПВТФ");
Элементы.РабочихЧасовВМесяце.Видимость = Не ДополнительнаяСделка;
Элементы.ТабличнаяЧастьОклад.Видимость = Не ДополнительнаяСделка; 
КонецПроцедуры

&НаКлиенте
Процедура ТехОперацииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
	Элемент.ТекущиеДанные.Исполнитель = Элементы.ТабличнаяЧасть.ТекущиеДанные.Исполнитель;
	КонецЕСли;
КонецПроцедуры

&НаСервере
Процедура УдалитьТО(Исполнитель)
МассивСтрок = Объект.ТехОперации.НайтиСтроки(Новый Структура("Исполнитель",Исполнитель)); 
	Для каждого Стр Из МассивСтрок Цикл 
	Объект.ТехОперации.Удалить(Стр); 
	КонецЦикла;  
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПередУдалением(Элемент, Отказ)
УдалитьТО(Элемент.ТекущиеДанные.Исполнитель);
КонецПроцедуры

&НаСервере
Процедура ИзменитьИсполнителя(Исполнитель,ИсполнительНовый)
МассивСтрок = Объект.ТехОперации.НайтиСтроки(Новый Структура("Исполнитель",Исполнитель)); 
	Для каждого Стр Из МассивСтрок Цикл
	Стр.Исполнитель = ИсполнительНовый;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьИсполнительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
ИзменитьИсполнителя(Элементы.ТабличнаяЧасть.ТекущиеДанные.Исполнитель,ВыбранноеЗначение);
Элементы.ТабличнаяЧасть.ТекущиеДанные.ПроцентПремии = ПроцентПремии;
КонецПроцедуры

&НаСервере
Функция ПолучитьКоэффициентРазряда(Исполнитель)
Возврат(Исполнитель.Должность.КоэффициентРазряда);
КонецФункции

&НаКлиенте
Процедура ТехОперацииРабочихЧасовПриИзменении(Элемент)
ТЧ = Элементы.ТехОперации.ТекущиеДанные;
ТЧ.РазрядоЧасов = ТЧ.РабочихЧасов*ПолучитьКоэффициентРазряда(ТЧ.Исполнитель);
КонецПроцедуры

&НаСервере
Функция ЭтоГруппаЛинеек()
Возврат(Объект.Линейка.ЭтоГруппа);
КонецФункции 

&НаКлиенте
Процедура ЛинейкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
	Ф = ПолучитьФорму("Справочник.Линейки.Форма.ФормаВыбораЭлементовИГрупп");
	ЭлементОтбора = Ф.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбора.ПравоеЗначение = Объект.Подразделение;

	ЭлементОформления = Ф.Список.УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	УслОформ = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	УслОформ.Использование = Истина;
	УслОформ.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение");
	УслОформ.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	УслОформ.ПравоеЗначение = Объект.Подразделение;
	Результат = Ф.ОткрытьМодально();
		Если Результат <> Неопределено Тогда
		ЭтаФорма.Модифицированность = Истина;
		Объект.Линейка = Результат;
		ПолучитьПроцентПремии();
		КонецЕсли;  
	Иначе
	Сообщить("Выберите подразделение!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьОклад(Исполнитель)
Возврат(Исполнитель.Должность.Оклад);
КонецФункции

&НаКлиенте
Процедура ТабличнаяЧастьРабочихЧасовПриИзменении(Элемент)
	Если Не ИспользоватьДС() Тогда
	ТЧ = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	ТЧ.ОплатаВВыходной = ?(Объект.ВедомостьВыходногоДня,ТЧ.СуммаПоНаряду,0);
	ТЧ.ДС = ПолучитьОклад(ТЧ.Исполнитель)/Объект.РабочихЧасовВМесяце*ТЧ.РабочихЧасов*?(Объект.ВедомостьВыходногоДня,2,1);
	ТЧ.ДП = ТЧ.ДС/100*ТЧ.ПроцентПремии;
	ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не ОбщийМодульВызовСервера.РазрешенноеПодразделение(ВыбранноеЗначение) Тогда
	Сообщить("У Вас нет прав для создания документа по выбранному подразделению!");
	СтандартнаяОбработка = Ложь;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьСотрудника(Сотрудник)
Возврат(Новый Структура("Наименование,Код",СокрЛП(Сотрудник.Наименование),СокрЛП(Сотрудник.ТабельныйНомер)));
КонецФункции

&НаКлиенте
Процедура Выгрузить(Команда)
НастройкиОбменаДанными = ОбщийМодульСинхронизации.ПолучитьНастройкиОбменаДанными("Зарплата");
V7 = ОбщийМодульКлиент.ПодключитьсяК1С77(НастройкиОбменаДанными.ПутьКБазеДанных,НастройкиОбменаДанными.Пользователь,НастройкиОбменаДанными.Пароль);
	Если V7 = Неопределено Тогда
	Возврат;	
	КонецЕсли;
Состояние("Обработка...",,"Выгрузка данных...");
Сотрудники = V7.CreateObject("Справочник.Сотрудники");
ВидыРасчетов = V7.CreateObject("Справочник.ВидыРасчетов");
ЗарплатаПремия = V7.CreateObject("Документ.НачисленияУдержанияСписком");

	Если Объект.ВедомостьВыходногоДня Тогда
	ЗарплатаПриказ = V7.CreateObject("Документ.ПриказОРаботеВПраздники");

	ЗарплатаПремия.Новый();	
	ЗарплатаПремия.ДатаДок = Объект.Дата;
	ЗарплатаПремия.УстановитьНовыйНомер("П"+Прав(Год(Объект.Дата),2)+"-");
	ВидыРасчетов.НайтиПоНаименованию("Доплата  (фикс.суммой)",0,1);
	ЗарплатаПремия.Расчет = ВидыРасчетов.Расчет;
	ЗарплатаПремия.Комментарий = "Доплата за период с "+Формат(Объект.Дата,"ДФ=dd.MM.yyyy")+" по "+Формат(Объект.Дата,"ДФ=dd.MM.yyyy") + "; мастер: "+Объект.Автор+"; бригада: "+Объект.Линейка;
	ЗарплатаПриказ.Новый();
	ЗарплатаПриказ.ДатаДок = Объект.Дата;
	ЗарплатаПриказ.УстановитьНовыйНомер("П"+Прав(Год(Объект.Дата),2)+"-");
	ЗарплатаПриказ.ДатаРаботы = Объект.Дата;
	ЗарплатаПриказ.ВДняхЧасах = 2;
	ЗарплатаПриказ.Комментарий = "Приказ за период с "+Формат(Объект.Дата,"ДФ=dd.MM.yyyy")+" по "+Формат(Объект.Дата,"ДФ=dd.MM.yyyy") + "; мастер: "+Объект.Автор+"; бригада: "+Объект.Линейка;
		Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл 
		Исполнитель = ПолучитьСотрудника(ТЧ.Исполнитель);
			Если Сотрудники.НайтиПоКоду(Исполнитель.Код,0) = 1 Тогда
				Если СокрЛП(Сотрудники.Наименование) = Исполнитель.Наименование Тогда				 
				ЗарплатаПремия.НоваяСтрока();                          		
				ЗарплатаПремия.Сотрудник = Сотрудники.ТекущийЭлемент();
				ЗарплатаПремия.Начало = Объект.Дата;
				ЗарплатаПремия.Окончание = Объект.Дата; 
				ЗарплатаПремия.НазначитьТип("Величина","Число", 10, 2);
				ЗарплатаПремия.Величина = ТЧ.ДС;
			    ЗарплатаПриказ.НоваяСтрока();
				ЗарплатаПриказ.Сотрудник = Сотрудники.ТекущийЭлемент();
				ЗарплатаПриказ.КолвоРабочихЧасов = ТЧ.РабочихЧасов;			
				Иначе
				Сообщить("Сотрудник "+ТЧ.Исполнитель+" не найден!");
				КонецЕсли; 
			Иначе
			Сообщить("Сотрудник "+ТЧ.Исполнитель+" не найден!");
			КонецЕсли;
		КонецЦикла;                                             
	ЗарплатаПремия.Записать();
	ЗарплатаПриказ.Записать(); 
	Сообщить("Создан документ Ввод расчёта списку сотрудников №"+ЗарплатаПремия.НомерДок);
	Сообщить("Приказ о работе в праздничные и выходные дни №"+ЗарплатаПриказ.НомерДок);	
	Иначе
	ЗарплатаБН = V7.CreateObject("Документ.НарядБригадный"); 
	
	ЗарплатаБН.Новый();	
	ЗарплатаБН.ДатаДок = Объект.Дата;
	ЗарплатаБН.УстановитьНовыйНомер("П"+Прав(Год(Объект.Дата),2)+"-");
	ЗарплатаБН.СуммаПоНаряду = Объект.ТабличнаяЧасть.Итог("СуммаПоНаряду")+?(ИспользоватьДС(),Объект.ТабличнаяЧасть.Итог("ДС"),0);
	ЗарплатаБН.Комментарий = "ЗП за период с "+Формат(НачалоМесяца(Объект.Дата),"ДФ=dd.MM.yyyy")+" по "+Формат(КонецМесяца(Объект.Дата),"ДФ=dd.MM.yyyy") + "; мастер: "+Объект.Автор+"; бригада: "+Объект.Линейка;
	ЗарплатаПремия.Новый();	
	ЗарплатаПремия.ДатаДок = Объект.Дата;
	ЗарплатаПремия.УстановитьНовыйНомер("П"+Прав(Год(Объект.Дата),2)+"-");
	ВидыРасчетов.НайтиПоНаименованию("Премия месячная(сумм)",0,1);
	ЗарплатаПремия.Расчет = ВидыРасчетов.Расчет;
	ЗарплатаПремия.Комментарий = "Премия за период с "+Формат(НачалоМесяца(Объект.Дата),"ДФ=dd.MM.yyyy")+" по "+Формат(КонецМесяца(Объект.Дата),"ДФ=dd.MM.yyyy") + "; мастер: "+Объект.Автор+"; бригада: "+Объект.Линейка;
		Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		Исполнитель = ПолучитьСотрудника(ТЧ.Исполнитель);
			Если Сотрудники.НайтиПоКоду(Исполнитель.Код,0) = 1 Тогда
				Если СокрЛП(Сотрудники.Наименование) = Исполнитель.Наименование Тогда				 
				ЗарплатаБН.НоваяСтрока(); 
				ЗарплатаБН.Сотрудник = Сотрудники.ТекущийЭлемент();
				ЗарплатаБН.Результат = ТЧ.СуммаПоНаряду+?(ИспользоватьДС(),ТЧ.ДС,0);
				ЗарплатаПремия.НоваяСтрока();                          		
				ЗарплатаПремия.Сотрудник = Сотрудники.ТекущийЭлемент();
				ЗарплатаПремия.Начало = НачалоМесяца(Объект.Дата);
				ЗарплатаПремия.Окончание = КонецМесяца(Объект.Дата);
				ЗарплатаПремия.НазначитьТип("Величина","Число", 10, 2);
				ЗарплатаПремия.Величина = ТЧ.Премия+ТЧ.ДП;			
				Иначе
				Сообщить("Сотрудник "+ТЧ.Исполнитель+" не найден!");
				КонецЕсли; 
			Иначе
			Сообщить("Сотрудник "+ТЧ.Исполнитель+" не найден!");
			КонецЕсли;
		КонецЦикла; 
	ЗарплатаБН.Записать();                                             
	ЗарплатаПремия.Записать();
	Сообщить("Создан документ Бригадный наряд №"+ЗарплатаБН.НомерДок); 
	Сообщить("Создан документ Ввод расчёта списку сотрудников №"+ЗарплатаПремия.НомерДок);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьПоОтработаннымЧасам(Команда)
СписокИсполнителей = Новый СписокЗначений;

	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	СписокИсполнителей.Добавить(ТЧ.ПолучитьИдентификатор(),ТЧ.Исполнитель);
	КонецЦикла; 
		Если СписокИсполнителей.ОтметитьЭлементы("Выберите исполнителей для обработки") Тогда
		ВсегоОтработанныхЧасов = 0;
		Сумма = 0;
			Для каждого Стр Из СписокИсполнителей Цикл	
			 	Если Стр.Пометка Тогда
				ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр.Значение);
				ВсегоОтработанныхЧасов = ВсегоОтработанныхЧасов + ТЧ.РабочихЧасов;
				Сумма = Сумма + ТЧ.СуммаПоНаряду;
				КонецЕсли; 
			КонецЦикла;
				Если ВвестиЧисло(Сумма,"Введите общую сумму по наряду",9,2) Тогда
					Для каждого Стр Из СписокИсполнителей Цикл	
					 	Если Стр.Пометка Тогда
						ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр.Значение);
						ТЧ.СуммаПоНаряду = Сумма/ВсегоОтработанныхЧасов*ТЧ.РабочихЧасов;
						ТЧ.ОплатаВВыходной = ?(Объект.ВедомостьВыходногоДня,ТЧ.СуммаПоНаряду,0); 
						ТЧ.Премия = (ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной)/100*ТЧ.ПроцентПремии;
						ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП;					
						КонецЕсли; 
					КонецЦикла;
				КонецЕсли; 		
		КонецЕсли;
КонецПроцедуры
