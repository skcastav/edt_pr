
Процедура СоздатьТаблицуМПЗ(ТаблицаМПЗ,Инвентаризация)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтруктураПодчиненности.Ссылка
	|ИЗ
	|	КритерийОтбора.ПодчиненныеДокументы(&ЗначениеКритерияОтбора) КАК СтруктураПодчиненности
	|ГДЕ
	|	СтруктураПодчиненности.Ссылка.ПометкаУдаления = ЛОЖЬ";
Запрос.УстановитьПараметр("ЗначениеКритерияОтбора", Инвентаризация);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Ссылка = Ссылка Тогда
		Продолжить;
		КонецЕсли; 
			Если ТипЗнч(ВыборкаДетальныеЗаписи.Ссылка) = Тип("ДокументСсылка.СписаниеМПЗПрочее") Тогда
				Для каждого ТЧ Из ВыборкаДетальныеЗаписи.Ссылка.ТабличнаяЧасть Цикл
				ТЧ_П = ТаблицаМПЗ.Добавить();
				ТЧ_П.МПЗ = ТЧ.МПЗ;
				ТЧ_П.Количество = ТЧ.Количество; 		
				КонецЦикла;	
			КонецЕсли; 
	КонецЦикла;
КонецПроцедуры 

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
Автор = ПараметрыСеанса.Пользователь;
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИнвентаризацияМПЗ") Тогда
	МестоХранения = ДанныеЗаполнения.МестоХранения;
	Подразделение = ДанныеЗаполнения.Подразделение;
	ДокументОснование = ДанныеЗаполнения.Ссылка;
	Комментарий = "Введен на основании инвентаризации № " + ДанныеЗаполнения.Номер;
	ТаблицаМПЗ = Новый ТаблицаЗначений;

	ТаблицаМПЗ.Колонки.Добавить("МПЗ");
	ТаблицаМПЗ.Колонки.Добавить("Количество");
	СоздатьТаблицуМПЗ(ТаблицаМПЗ,ДанныеЗаполнения.Ссылка);
	ТаблицаМПЗ.Свернуть("МПЗ","Количество");
		Для Каждого ТЧ Из ДанныеЗаполнения.ТабличнаяЧасть Цикл
		Выборка = ТаблицаМПЗ.Найти(ТЧ.МПЗ,"МПЗ");
			Если Выборка <> Неопределено Тогда
			КолСпис = (ТЧ.КоличествоУчет - ТЧ.Количество) - Выборка.Количество;
			Иначе	
			КолСпис = ТЧ.КоличествоУчет - ТЧ.Количество;
			КонецЕсли; 
				Если КолСпис > 0 Тогда
				НоваяСтрока = ТабличнаяЧасть.Добавить();
				НоваяСтрока.ВидМПЗ = ТЧ.ВидМПЗ;
				НоваяСтрока.МПЗ = ТЧ.МПЗ;
				НоваяСтрока.Количество = КолСпис;
				НоваяСтрока.ЕдиницаИзмерения = ТЧ.ЕдиницаИзмерения;		
				КонецЕсли; 
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ДвижениеМПЗ") Тогда
	ДокументОснование = ДанныеЗаполнения.Ссылка;
	МестоХранения = ДанныеЗаполнения.МестоХраненияВ;
	Подразделение = ДанныеЗаполнения.Подразделение;
	Комментарий = "Введен на основании перемещения № " + ДанныеЗаполнения.Номер;
		Для Каждого ТЧ Из ДанныеЗаполнения.ТабличнаяЧасть Цикл
		НоваяСтрока = ТабличнаяЧасть.Добавить();
		НоваяСтрока.ВидМПЗ = ТЧ.ВидМПЗ;
		НоваяСтрока.МПЗ = ТЧ.МПЗ;
		НоваяСтрока.ЕдиницаИзмерения = ТЧ.ЕдиницаИзмерения;
		НоваяСтрока.Количество = ТЧ.Количество;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеМПЗ") Тогда
	ДокументОснование = ДанныеЗаполнения.Ссылка;
	МестоХранения = ДанныеЗаполнения.МестоХранения;
	Подразделение = ДанныеЗаполнения.Подразделение;
	Комментарий = "Введен на основании поступление МПЗ № " + ДанныеЗаполнения.Номер;
		Для Каждого ТЧ Из ДанныеЗаполнения.ТабличнаяЧасть Цикл
		НоваяСтрока = ТабличнаяЧасть.Добавить();
		НоваяСтрока.ВидМПЗ = ТЧ.ВидМПЗ;
		НоваяСтрока.МПЗ = ТЧ.МПЗ;
		НоваяСтрока.ЕдиницаИзмерения = ТЧ.ЕдиницаИзмерения;
		НоваяСтрока.Количество = ТЧ.Количество;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Перепрогон") Тогда
	//ДокументОснование = ДанныеЗаполнения.Ссылка;
	//МестоХранения = ДанныеЗаполнения.ДокументОснование.МестоХраненияВ;
	//Подразделение = ДанныеЗаполнения.Подразделение;
	////Статья = Справочники.СтатьиПоступленийСписанийПрочих.НайтиПоНаименованию("Брак, полученный на разукомплектовке/разборке",Истина);
	//Утвердил = ДанныеЗаполнения.Подразделение.Руководитель;
	//Комментарий = "Введен на основании Перепрогона № " + ДанныеЗаполнения.Номер;
	//НоваяСтрока = ТабличнаяЧасть.Добавить();
	//НоваяСтрока.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
	//	НоваяСтрока.МПЗ = ТЧ.МПЗ;
	//	НоваяСтрока.ЕдиницаИзмерения = ТЧ.ЕдиницаИзмерения;
	//	НоваяСтрока.Количество = ТЧ.Количество;
	//	КонецЦикла;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаявкаОтПокупателя") Тогда
	ДокументОснование = ДанныеЗаполнения.Ссылка;
	Комментарий = "Введен на основании заявки от покупателя № " + ДанныеЗаполнения.Номер;
		Для Каждого ТЧ Из ДанныеЗаполнения.ТабличнаяЧасть Цикл
		НоваяСтрока = ТабличнаяЧасть.Добавить();
		НоваяСтрока.ВидМПЗ = ТЧ.ВидМПЗ;
		НоваяСтрока.МПЗ = ТЧ.МПЗ;
		НоваяСтрока.ЕдиницаИзмерения = ТЧ.ЕдиницаИзмерения;
		НоваяСтрока.Количество = ТЧ.Количество;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если Номер = "" Тогда
	УстановитьНовыйНомер(ПрисвоитьПрефикс(Подразделение,Дата));
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
МестаХранения = РегистрыНакопления.МестаХранения;
// регистр МестаХранения Расход
Движения.МестаХранения.Записывать = Истина;
ВиртуальнаяТабличнаяЧасть = ТабличнаяЧасть.Выгрузить();
ВиртуальнаяТабличнаяЧасть.Свернуть("ВидМПЗ,МПЗ,ЕдиницаИзмерения","Количество");
	Для Каждого ТЧ Из ВиртуальнаяТабличнаяЧасть Цикл
	БазовоеКоличество = ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения);
	КолОстаток = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокПоМестуХранения(МестоХранения,ТЧ.МПЗ,Дата);
		Если КолОстаток >= БазовоеКоличество Тогда
		Движение = Движения.МестаХранения.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.МестоХранения = МестоХранения;
		Движение.ВидМПЗ = ТЧ.ВидМПЗ;
		Движение.МПЗ = ТЧ.МПЗ;
		Движение.Количество = БазовоеКоличество;
		Иначе
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Текст = "МПЗ: "+СокрЛП(ТЧ.МПЗ.Наименование)+" требуется списать: "+БазовоеКоличество+" недостаёт на складе: "+Строка(БазовоеКоличество-КолОстаток);
		Сообщение.Сообщить();
		КонецЕсли;
	КонецЦикла;
		Если ЗначениеЗаполнено(ДокументОснование) Тогда
			Если (ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВыпускПродукцииКанбан"))или
				 (ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ДвижениеМПЗ")) Тогда
				Если ОбщийМодульВызовСервера.АнализироватьБракПоМестуХранения(МестоХранения) Тогда //списание брака
				// регистр БракПроизводства
				Движения.БракПроизводства.Записывать = Истина;
					Для Каждого ТЧ Из ВиртуальнаяТабличнаяЧасть Цикл
					КолОстаток = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокПоРегиструБрака(ДокументОснование,МестоХранения,ТЧ.МПЗ,Дата);
					БазовоеКоличество = ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения);
						Если КолОстаток < БазовоеКоличество Тогда
						Отказ = Истина;
						Сообщить("МПЗ "+ТЧ.МПЗ+" требуется списать: "+БазовоеКоличество+" наличествует в браке: "+КолОстаток);
						Продолжить;
						КонецЕсли; 		
					Движение = Движения.БракПроизводства.Добавить();
					Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
					Движение.Период = Дата;
					Движение.МестоХранения = МестоХранения;
						Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВыпускПродукцииКанбан") Тогда
						Движение.ПроизводственноеЗадание = ДокументОснование.ДокументОснование;
						КонецЕсли;
					Движение.Линейка = ДокументОснование.РабочееМесто.Линейка;
					Движение.РабочееМесто = ДокументОснование.РабочееМесто;
					Движение.Изделие = ТЧ.МПЗ;
					Движение.ВидБрака = ДокументОснование.ВидБрака;
					Движение.ЭтапЖизненногоЦикла = ДокументОснование.ЭтапЖизненногоЦикла;
					Движение.Документ = ДокументОснование;
					Движение.Количество = БазовоеКоличество;
					КонецЦикла;	
				КонецЕсли;
			ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаявкаОтПокупателя") Тогда
			// регистр ЗаявкиОтПокупателей
			Движения.ЗаявкиОтПокупателей.Записывать = Истина;
				Для Каждого ТЧ Из ВиртуальнаяТабличнаяЧасть Цикл
				Фильтр   = Новый Структура;
				Фильтр.Вставить("МПЗ", ТЧ.МПЗ);
				Фильтр.Вставить("Контрагент",ДокументОснование.Контрагент);
				Фильтр.Вставить("Договор", ДокументОснование.Договор);
				Фильтр.Вставить("ДатаИсполнения", ДокументОснование.ДатаИсполнения);
				Фильтр.Вставить("ЗаявкаОтПокупателя", ДокументОснование);
				Остаток = РегистрыНакопления.ЗаявкиОтПокупателей.Остатки(Дата,Фильтр,"МПЗ,Контрагент,Договор,ДатаИсполнения,ЗаявкаОтПокупателя", "Количество");
					Если Остаток.Количество() > 0 Тогда
					КолОстаток = Остаток[0].Количество;
					Иначе
					КолОстаток = 0;
					КонецЕсли;
				БазовоеКоличество = ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения);
					Если КолОстаток < БазовоеКоличество Тогда
					Отказ = Истина;
					Сообщить("МПЗ "+ТЧ.МПЗ+" списывается: "+БазовоеКоличество+" требуется по заявке: "+КолОстаток);
					Продолжить;
					КонецЕсли; 		
				Движение = Движения.ЗаявкиОтПокупателей.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = Дата;
				Движение.МПЗ = ТЧ.МПЗ;
				Движение.Контрагент = ДокументОснование.Контрагент;
				Движение.Договор = ДокументОснование.Договор;
				Движение.ДатаИсполнения = ДокументОснование.ДатаИсполнения;
				Движение.ЗаявкаОтПокупателя = ДокументОснование;
				Движение.Количество = БазовоеКоличество;
				КонецЦикла;
			ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
			//Корректировка потерь
			Движения.РезервированиеГП.Записывать = Истина;
			Движения.ЗаказыНаПроизводство.Записывать = Истина;
				Для Каждого ТЧ Из ВиртуальнаяТабличнаяЧасть Цикл                                 
				БазовоеКоличество = ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения);
				КоличествоОстаток = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокВРезерве(МестоХранения,ТЧ.МПЗ,ДокументОснование,Дата);
					Если КоличествоОстаток >= БазовоеКоличество Тогда
					Движение = Движения.РезервированиеГП.Добавить();
					Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
					Движение.Период = Дата;
					Движение.МестоХранения = МестоХранения;
					Движение.Продукция = ТЧ.МПЗ;
					Движение.Документ = ДокументОснование;
					Движение.Количество = БазовоеКоличество;
					Движение = Движения.ЗаказыНаПроизводство.Добавить();
					Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
					Движение.Период = Дата;
					Движение.Продукция = ТЧ.МПЗ;
					Движение.Количество = БазовоеКоличество;
					Движение.Документ = ДокументОснование;													
					Иначе	
					Отказ = Истина;
					Сообщить("Продукция: "+СокрЛП(ТЧ.МПЗ.Наименование)+" требуется: "+БазовоеКоличество+" недостаёт в резерве: "+Строка(БазовоеКоличество-КоличествоОстаток));		
					КонецЕсли;		
				КонецЦикла;	
			КонецЕсли;	
		КонецЕсли;
Запрос = Новый Запрос;
// регистр ГТД Расход
Движения.ГТД.Записывать = Истина;
	Для Каждого ТЧ Из ТабличнаяЧасть Цикл
	КоличествоОстаток = ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ГТДОстатки.НомерГТД КАК НомерГТД,
		|	ГТДОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ГТД.Остатки(&НаДату, Товар = &Товар) КАК ГТДОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ГТДОстатки.НомерГТД.ДатаВнесения";
	Запрос.УстановитьПараметр("НаДату", Дата);
	Запрос.УстановитьПараметр("Товар", ТЧ.МПЗ);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если КоличествоОстаток > 0 Тогда
			Движение = Движения.ГТД.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Товар = ТЧ.МПЗ;
			Движение.НомерГТД = ВыборкаДетальныеЗаписи.НомерГТД;
				Если ВыборкаДетальныеЗаписи.КоличествоОстаток <= КоличествоОстаток Тогда
				Движение.Количество = ВыборкаДетальныеЗаписи.КоличествоОстаток;
				КоличествоОстаток = КоличествоОстаток - ВыборкаДетальныеЗаписи.КоличествоОстаток;
				Иначе
				Движение.Количество = КоличествоОстаток;
				КоличествоОстаток = 0;
				КонецЕсли;
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла;  
КонецПроцедуры
