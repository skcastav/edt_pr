
Процедура СоздатьТаблицуМПЗ(ТаблицаМПЗ,Инвентаризация)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтруктураПодчиненности.Ссылка
	|ИЗ
	|	КритерийОтбора.ПодчиненныеДокументы(&ЗначениеКритерияОтбора) КАК СтруктураПодчиненности
	|ГДЕ
	|	СтруктураПодчиненности.Ссылка.ПометкаУдаления = ЛОЖЬ";
Запрос.УстановитьПараметр("ЗначениеКритерияОтбора", Инвентаризация);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Ссылка = Ссылка Тогда
		Продолжить;
		КонецЕсли; 
			Если ТипЗнч(ВыборкаДетальныеЗаписи.Ссылка) = Тип("ДокументСсылка.ПоступлениеМПЗПрочее") Тогда
				Для каждого ТЧ Из ВыборкаДетальныеЗаписи.Ссылка.ТабличнаяЧасть Цикл
				ТЧ_П = ТаблицаМПЗ.Добавить();
				ТЧ_П.МПЗ = ТЧ.МПЗ;
				ТЧ_П.Количество = ТЧ.Количество; 		
				КонецЦикла;	
			КонецЕсли; 
	КонецЦикла;
КонецПроцедуры 

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
Автор = ПараметрыСеанса.Пользователь;
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИнвентаризацияМПЗ") Тогда
	МестоХранения = ДанныеЗаполнения.МестоХранения;
	Подразделение = ДанныеЗаполнения.Подразделение;
	ДокументОснование = ДанныеЗаполнения.Ссылка;
	Комментарий = "Введен на основании инвентаризации № " + ДанныеЗаполнения.Номер;
	ТаблицаМПЗ = Новый ТаблицаЗначений;

	ТаблицаМПЗ.Колонки.Добавить("МПЗ");
	ТаблицаМПЗ.Колонки.Добавить("Количество");
	СоздатьТаблицуМПЗ(ТаблицаМПЗ,ДанныеЗаполнения.Ссылка);
	ТаблицаМПЗ.Свернуть("МПЗ","Количество");
		Для Каждого ТЧ Из ДанныеЗаполнения.ТабличнаяЧасть Цикл
		Выборка = ТаблицаМПЗ.Найти(ТЧ.МПЗ,"МПЗ");
			Если Выборка <> Неопределено Тогда
			КолПост = (ТЧ.Количество - ТЧ.КоличествоУчет) - Выборка.Количество;
			Иначе	
			КолПост = ТЧ.Количество - ТЧ.КоличествоУчет;
			КонецЕсли; 
				Если КолПост > 0 Тогда
				НоваяСтрока = ТабличнаяЧасть.Добавить();
				НоваяСтрока.ВидМПЗ = ТЧ.ВидМПЗ;
				НоваяСтрока.МПЗ = ТЧ.МПЗ;
				НоваяСтрока.Количество = КолПост;
				НоваяСтрока.ЕдиницаИзмерения = ТЧ.ЕдиницаИзмерения;
					Если ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы Тогда
					НоваяСтрока.Цена = ОбщийМодульВызовСервера.ПолучитьПоследнююЦену(ТЧ.МПЗ,ТекущаяДата())*ТЧ.ЕдиницаИзмерения.Коэффициент;					
					Иначе
					НоваяСтрока.Цена = ОбщийМодульВызовСервера.ПолучитьПолнуюСебестоимость(ТЧ.МПЗ)*ТЧ.ЕдиницаИзмерения.Коэффициент;
					КонецЕсли;
				КонецЕсли; 
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ДвижениеМПЗ") Тогда
	ДокументОснование = ДанныеЗаполнения.Ссылка;
	Подразделение = ДанныеЗаполнения.Подразделение;
	МестоХранения = ДанныеЗаполнения.МестоХранения;
		Для Каждого ТЧ Из ДанныеЗаполнения.ТабличнаяЧасть Цикл
		НоваяСтрока = ТабличнаяЧасть.Добавить();
		НоваяСтрока.ВидМПЗ = ТЧ.ВидМПЗ;
		НоваяСтрока.МПЗ = ТЧ.МПЗ;
		НоваяСтрока.Количество = ТЧ.Количество;			 
		НоваяСтрока.ЕдиницаИзмерения = ТЧ.ЕдиницаИзмерения;
			Если ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы Тогда
			НоваяСтрока.Цена = ОбщийМодульВызовСервера.ПолучитьПоследнююЦену(ТЧ.МПЗ,ТекущаяДата())*ТЧ.ЕдиницаИзмерения.Коэффициент;					
			Иначе
			НоваяСтрока.Цена = ОбщийМодульВызовСервера.ПолучитьПолнуюСебестоимость(ТЧ.МПЗ)*ТЧ.ЕдиницаИзмерения.Коэффициент;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
	ДокументОснование = ДанныеЗаполнения.Ссылка;
	Подразделение = ДанныеЗаполнения.Подразделение;
		Для Каждого ТЧ Из ДанныеЗаполнения.ТабличнаяЧасть Цикл
		НоваяСтрока = ТабличнаяЧасть.Добавить();
		НоваяСтрока.ВидМПЗ = ТЧ.ВидМПЗ;
		НоваяСтрока.МПЗ = ТЧ.МПЗ;
		НоваяСтрока.Количество = ТЧ.Количество;			 
		НоваяСтрока.ЕдиницаИзмерения = ТЧ.ЕдиницаИзмерения;
		НоваяСтрока.Цена = ТЧ.Цена;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если Номер = "" Тогда
	УстановитьНовыйНомер(ПрисвоитьПрефикс(Подразделение,Дата));
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьДатуПоставки(ЗаказПоставщику,МПЗ)
Возврат(ЗаказПоставщику.ТабличнаяЧасть.Найти(МПЗ,"МПЗ").ДатаПоставки);
КонецФункции

Процедура ОбработкаПроведения(Отказ, Режим)
	Если МестоХранения.Пустая() Тогда
	Сообщить("Не заполнено место хранения!");
	Отказ = Истина;
	Возврат;
	КонецЕсли; 
СписокМПЗ = Новый СписокЗначений;

// регистр МестаХранения Приход
Движения.МестаХранения.Записывать = Истина;
	Для Каждого ТЧ Из ТабличнаяЧасть Цикл
	СписокМПЗ.Добавить(ТЧ.МПЗ);
	Движение = Движения.МестаХранения.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.МестоХранения = МестоХранения;
	Движение.ВидМПЗ = ТЧ.ВидМПЗ;
	Движение.МПЗ = ТЧ.МПЗ;
	Движение.Количество = ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения);
	// регистр Цены Изменение
	ВыбЦена = РегистрыСведений.Цены.ПолучитьПоследнее(Дата,Новый Структура("МПЗ",ТЧ.МПЗ));
	БазоваяЦена = Окр(ТЧ.Цена/ТЧ.ЕдиницаИзмерения.Коэффициент,2,1);
		Если ВыбЦена.Цена <> БазоваяЦена Тогда
		Движения.Цены.Записывать = Истина;
		Движение = Движения.Цены.Добавить();
		Движение.Период = Дата;
		Движение.МПЗ = ТЧ.МПЗ;
		Движение.Цена = БазоваяЦена;		
		КонецЕсли;
	КонецЦикла;
		Если ЗначениеЗаполнено(ДокументОснование) Тогда
			Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			ЗаказыПоставщикам = РегистрыНакопления.ЗаказыПоставщикам;
			// регистр ЗаказыПоставщикам Расход
			Движения.ЗаказыПоставщикам.Записывать = Истина;
				Для Каждого ТЧ Из ТабличнаяЧасть Цикл
				ДатаПоставки = ПолучитьДатуПоставки(ДокументОснование,ТЧ.МПЗ);
				Фильтр   = Новый Структура;
				Фильтр.Вставить("МПЗ", ТЧ.МПЗ);
				Фильтр.Вставить("Контрагент",ДокументОснование.Контрагент);
				Фильтр.Вставить("Договор", ДокументОснование.Договор);
				Фильтр.Вставить("ДатаИсполнения", ДатаПоставки);
				Фильтр.Вставить("ЗаказПоставщику", ДокументОснование);
				Остаток = ЗаказыПоставщикам.Остатки(Дата,Фильтр,"МПЗ,Контрагент,Договор,ДатаИсполнения,ЗаказПоставщику", "Количество");
				БазовоеКоличество = ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения);
					Если Остаток.Количество() > 0 Тогда
						Если Остаток[0].Количество < БазовоеКоличество Тогда
						Отказ = Истина;
						Сообщить("МПЗ "+ТЧ.МПЗ+" поступило: "+БазовоеКоличество+" требуется по заказу: "+Остаток[0].Количество);
						Продолжить;
						КонецЕсли; 		
					Иначе	
					Отказ = Истина;
					Сообщить("МПЗ "+ТЧ.МПЗ+" поступило: "+БазовоеКоличество+" требуется по заказу: 0");		
					КонецЕсли;
				Движение = Движения.ЗаказыПоставщикам.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = Дата;
				Движение.ДатаИсполнения = ДатаПоставки;
				Движение.МПЗ = ТЧ.МПЗ;
				Движение.Контрагент = ДокументОснование.Контрагент;
				Движение.Договор = ДокументОснование.Договор;
				Движение.Количество = БазовоеКоличество;
				Движение.ЗаказПоставщику = ДокументОснование;
				КонецЦикла;
			КонецЕсли; 		
		КонецЕсли;
// регистр ГТД Приход
Движения.ГТД.Записывать = Истина;
	Для Каждого ТЧ Из ТабличнаяЧасть Цикл
		Если Не ТЧ.ГТД.Пустая() Тогда
		Движение = Движения.ГТД.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Товар = ТЧ.МПЗ;
		Движение.НомерГТД = ТЧ.ГТД;
		Движение.Количество = ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения);
		КонецЕсли; 
	КонецЦикла;
ОбщийМодульРаботаСРегистрами.СнятиеСЛьготнойОчереди(СписокМПЗ,МестоХранения,Дата);
КонецПроцедуры
