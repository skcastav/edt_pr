     
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Договор.Валюта <> Константы.ОсновнаяВалюта.Получить() Тогда
	Элементы.ТабличнаяЧастьЦенаВалюта.Видимость = Истина;
	КонецЕсли;
Элементы.ТабличнаяЧастьСтавкаНДС.Видимость = Не Объект.Договор.БезНДС;
Элементы.ТабличнаяЧастьНДС.Видимость = Не Объект.Договор.БезНДС;
Элементы.ТабличнаяЧастьНЦ.Видимость = Не Объект.Договор.ДоговорСНефиксированнымиЦенами;
//Элементы.ДобавитьВДоговорныеПозиции.Видимость = Не Объект.Договор.ДоговорСНефиксированнымиЦенами;
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	ТЧ.Статус = ПолучитьСтатус(ТЧ.МПЗ,Объект.Дата);
		Если ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы Тогда
		ТЧ.ГруппаПоЗакупкам = ТЧ.МПЗ.ГруппаПоЗакупкам;
		КонецЕсли;
	ТЧ.ЗапретРедактирования = НетОстаткаПоЗаказу(ТЧ.МПЗ); 	
	КонецЦикла;
		Если Не Объект.Договор.Пустая() Тогда
		Элементы.ТабличнаяЧастьЦенаВалюта.Формат = "ЧЦ=15; ЧДЦ="+Объект.Договор.ОкруглятьВалютныеЦены;
		Элементы.ТабличнаяЧастьЦенаВалюта.ФорматРедактирования = "ЧЦ=15; ЧДЦ="+Объект.Договор.ОкруглятьВалютныеЦены;
		КонецЕсли;
Элементы.ВыгрузитьВБазуСбыта.Доступность = Не Объект.Выгружено; 
Элементы.Группа5.Видимость = ?(Константы.КодБазы.Получить() = "БГР",Истина,Ложь); 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Если ОбщийМодульВызовСервера.ДоступностьРоли("Снабжение") Тогда
	//СписокРазрешенныхРолей = Новый СписокЗначений;

	//СписокРазрешенныхРолей.Добавить("Администратор");
	//СписокРазрешенныхРолей.Добавить("Мастер");
	//СписокРазрешенныхРолей.Добавить("ГлавныйДиспетчер");
	//ЭтотОбъект.ТолькоПросмотр = ОбщийМодульСозданиеДокументов.ЗапретРедактирования(Объект.Ссылка,Ложь,Истина,СписокРазрешенныхРолей);
	//Иначе
	ЭтотОбъект.ТолькоПросмотр = ОбщийМодульСозданиеДокументов.ЗапретРедактирования(Объект.Ссылка,Ложь,Истина);	
	//КонецЕсли;
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаСервере
Функция НетОстаткаПоЗаказу(МПЗ)
	Если Объект.Проведен Тогда
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказыПоставщикамОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщикам.Остатки КАК ЗаказыПоставщикамОстатки
		|ГДЕ
		|	ЗаказыПоставщикамОстатки.ЗаказПоставщику = &ЗаказПоставщику
		|	И ЗаказыПоставщикамОстатки.МПЗ = &МПЗ
		|	И ЗаказыПоставщикамОстатки.КоличествоОстаток > 0";
	Запрос.УстановитьПараметр("ЗаказПоставщику", Объект.Ссылка);
	Запрос.УстановитьПараметр("МПЗ", МПЗ);
	РезультатЗапроса = Запрос.Выполнить();
	Возврат(РезультатЗапроса.Пустой());
	Иначе
	Возврат(Ложь);
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьСпецификациюКДоговору(МПЗ)
	Если Объект.Ссылка.Пустая() Тогда
	НаДату = ТекущаяДата();
	Иначе
	НаДату = Объект.Дата;	
	КонецЕсли;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	СпецификацияКДоговоруСПоставщикомТабличнаяЧасть.Ссылка КАК Ссылка,
	|	СпецификацияКДоговоруСПоставщикомТабличнаяЧасть.Цена КАК Цена
	|ИЗ
	|	Документ.СпецификацияКДоговоруСПоставщиком.ТабличнаяЧасть КАК СпецификацияКДоговоруСПоставщикомТабличнаяЧасть
	|ГДЕ
	|	СпецификацияКДоговоруСПоставщикомТабличнаяЧасть.Ссылка.Договор = &Договор
	|	И СпецификацияКДоговоруСПоставщикомТабличнаяЧасть.Ссылка.Проведен = ИСТИНА
	|	И НАЧАЛОПЕРИОДА(СпецификацияКДоговоруСПоставщикомТабличнаяЧасть.Ссылка.Дата, ДЕНЬ) <= &ДатаЗаказа
	|	И СпецификацияКДоговоруСПоставщикомТабличнаяЧасть.Ссылка.ДействуетДо >= &ДатаЗаказа
	|	И СпецификацияКДоговоруСПоставщикомТабличнаяЧасть.МПЗ = &МПЗ
	|	И СпецификацияКДоговоруСПоставщикомТабличнаяЧасть.Количество > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	СпецификацияКДоговоруСПоставщикомТабличнаяЧасть.Ссылка.Дата";
Запрос.УстановитьПараметр("Договор", Объект.Договор);
Запрос.УстановитьПараметр("ДатаЗаказа", НачалоДня(НаДату));
Запрос.УстановитьПараметр("МПЗ", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	КоличествоОстаток = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокПоДоговоруСПоставщиком(Объект.Контрагент,Объект.Договор,ВыборкаДетальныеЗаписи.Ссылка,МПЗ,НаДату);
		Если КоличествоОстаток > 0 Тогда
		Возврат(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЕсли;
	КонецЦикла;
Возврат(Неопределено);
КонецФункции

&НаСервере
Процедура ПодборМПЗНаСервере(ТаблицаМПЗ)
	Для каждого ТЧ_МПЗ Из ТаблицаМПЗ Цикл
	ТЧ = Объект.ТабличнаяЧасть.Добавить();
		Если ТипЗнч(ТЧ_МПЗ.МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
		ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;		
		ТЧ.ГруппаПоЗакупкам = ТЧ_МПЗ.МПЗ.ГруппаПоЗакупкам;
		Иначе
		ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;	
		КонецЕсли;
	ТЧ.Статус = ПолучитьСтатус(ТЧ_МПЗ.МПЗ,Объект.Дата); 
	ТЧ.МПЗ = ТЧ_МПЗ.МПЗ;
	ТЧ.ЕдиницаИзмерения = ТЧ_МПЗ.ЕдиницаИзмерения;
	ТЧ.Количество = ТЧ_МПЗ.Количество;
	ПроверкаНаДоговорнуюПозицию(ТЧ);
		//Если Не ОбщийМодульРаботаСРегистрами.ВнесёнВДоговорныеПозиции(Объект.Договор,ТЧ_МПЗ.МПЗ,Объект.Дата) Тогда
		//ТЧ.НЦ = Истина;
		//Цены = РегистрыСведений.Цены.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("МПЗ",ТЧ_МПЗ.МПЗ));
		//ТЧ.Цена = Цены.Цена*ТЧ.ЕдиницаИзмерения.Коэффициент;
		//КонецЕсли;  
	ПересчётСтрокиТабличнойЧасти(ТЧ.ПолучитьИдентификатор());
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ПодборМПЗ(Команда)
ТаблицаМПЗ = ОткрытьФормуМодально("ОбщаяФорма.ПодборМПЗ", Новый Структура("МестоХранения,Договор",Неопределено,Объект.Договор));
	Если ТаблицаМПЗ <> Неопределено Тогда
		Если ТаблицаМПЗ.Количество() > 0 Тогда
			Если Объект.ТабличнаяЧасть.Количество() > 0 Тогда
				Если Вопрос("Очистить таблицу?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				Объект.ТабличнаяЧасть.Очистить();		
				КонецЕсли; 			
			КонецЕсли; 
		ПодборМПЗНаСервере(ТаблицаМПЗ);
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПечатьНаСервере(ТабДок)
Макет = Документы.ЗаказПоставщику.ПолучитьМакет("Макет");
ОблШапка1 = Макет.ПолучитьОбласть("Шапка1");
ОблДополнение = Макет.ПолучитьОбласть("Дополнение");	 
ОблШапка2 = Макет.ПолучитьОбласть("Шапка2");	
ОблСтрока = Макет.ПолучитьОбласть("Строка");
ОблИтогоСумма = Макет.ПолучитьОбласть("ИтогоСумма");
ОблИтогоНДС = Макет.ПолучитьОбласть("ИтогоНДС");
ОблИтогоНП = Макет.ПолучитьОбласть("ИтогоНП");
ОблИтогоВсего = Макет.ПолучитьОбласть("ИтогоВсего");
ОблПодвал = Макет.ПолучитьОбласть("Подвал");
ОблШапка1.Параметры.НазваниеОрганизации = Константы.НазваниеОрганизации.Получить();
АдресТелефон = СокрЛП(Константы.АдресОрганизации.Получить()) + ". " + СокрЛП(Константы.ТелефоныОрганизации.Получить());
ОблШапка1.Параметры.АдресТелефон = АдресТелефон;
ОблШапка1.Параметры.Поставщик = Объект.Контрагент;
ОблШапка1.Параметры.НомерДок = Объект.Номер;
ОблШапка1.Параметры.ДатаДок = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
ТабДок.Вывести(ОблШапка1);
	Если Объект.ДокументОснование <> Неопределено Тогда
	ОблДополнение.Параметры.ДокументОснование = Объект.ДокументОснование;
	ТабДок.Вывести(ОблДополнение);
	КонецЕсли;
ОблШапка2.Параметры.Валюта = Объект.Договор.Валюта;
ОблШапка2.Параметры.ДатаИсполнения = Формат(Объект.ДатаИсполнения,"ДФ=dd.MM.yyyy");
ОблШапка2.Параметры.Курс = Объект.Курс;
ТабДок.Вывести(ОблШапка2);
НомерСтроки = 1;
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	ОблСтрока.Параметры.НомерСтроки = НомерСтроки;	
	ОблСтрока.Параметры.НаименованиеТовара = СокрЛП(ТЧ.МПЗ.Наименование);
		Если ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы Тогда
		ОблСтрока.Параметры.Код = СтрЗаменить(ТЧ.МПЗ.ПолныйКод(),"/","-");
		Иначе	
		ОблСтрока.Параметры.Код = "";
		КонецЕсли;
	ОблСтрока.Параметры.КодТовара = ТЧ.МПЗ.Товар.Код;
	ОблСтрока.Параметры.ЕдиницаИзмерения = СокрЛП(ТЧ.ЕдиницаИзмерения.Наименование);
	ОблСтрока.Параметры.Количество = Формат(ТЧ.Количество,"ЧЦ=14; ЧДЦ=3; ЧРД=.");
	ОблСтрока.Параметры.Цена = Формат(ТЧ.Цена,"ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧРГ=,");	
	ОблСтрока.Параметры.Сумма = Формат(ТЧ.Сумма,"ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧРГ=,");	
	ТабДок.Вывести(ОблСтрока);
	НомерСтроки = НомерСтроки + 1;
	КонецЦикла; 
ОблИтогоСумма.Параметры.ИтогоСумма = Формат(Объект.ТабличнаяЧасть.Итог("Сумма"),"ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧРГ=,");
ТабДок.Вывести(ОблИтогоСумма);
	Если Не Объект.Договор.БезНДС Тогда
	ОблИтогоНДС.Параметры.ИтогоНДС = Формат(Объект.ТабличнаяЧасть.Итог("НДС"),"ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧРГ=,");
	ТабДок.Вывести(ОблИтогоНДС);
	КонецЕсли; 
ОблИтогоВсего.Параметры.ИтогоВсего = Формат(Объект.ТабличнаяЧасть.Итог("Всего"),"ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧРГ=,");
ТабДок.Вывести(ОблИтогоВсего);
ОблПодвал.Параметры.ИтогоВсегоПрописью = ЧислоПрописью(Объект.ТабличнаяЧасть.Итог("Всего"), "Л=ru_RU;ДП=Истина", "рубль,рубля,рублей,м,копейка,копейки,копеек,ж,2");
ОблПодвал.Параметры.Дополнение = Объект.Дополнение;
ТабДок.Вывести(ОблПодвал);
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	Если ЭтаФорма.Модифицированность Тогда	
	Сообщить("Для печати документ необходимо перепровести.");
	Возврат;		
	КонецЕсли;
ТабДок = Новый ТабличныйДокумент;

ПечатьНаСервере(ТабДок);
ТабДок.Показать("Печать заказа");
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьМПЗПриИзменении(Элемент)
	Если Не Элементы.ТабличнаяЧасть.ТекущиеДанные.МПЗ.Пустая() Тогда
	ТабличнаяЧастьМПЗПриИзмененииНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ТабличнаяЧастьМПЗПриИзмененииНаСервере(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
ТЧ.ЕдиницаИзмерения = ТЧ.МПЗ.ОсновнаяЕдиницаИзмерения;
ТЧ.Статус = ПолучитьСтатус(ТЧ.МПЗ,Объект.Дата);
	Если ТипЗнч(ТЧ.МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
	ТЧ.ГруппаПоЗакупкам = ТЧ.МПЗ.ГруппаПоЗакупкам;	
	Иначе
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;	
	КонецЕсли;
ПроверкаНаДоговорнуюПозицию(ТЧ);
		//Если Не ОбщийМодульРаботаСРегистрами.ВнесёнВДоговорныеПозиции(Объект.Договор,ТЧ.МПЗ,Объект.Дата) Тогда
		//ТЧ.НЦ = Истина;
		//Цены = РегистрыСведений.Цены.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("МПЗ",ТЧ.МПЗ));
		//ТЧ.Цена = Цены.Цена*ТЧ.ЕдиницаИзмерения.Коэффициент;
		//КонецЕсли; 
ПересчётСтрокиТабличнойЧасти(Стр);
КонецПроцедуры

&НаСервере
Процедура ТабличнаяЧастьКоличествоПриИзмененииНаСервере(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
ПроверкаНаДоговорнуюПозицию(ТЧ);
ТЧ.Сумма = ТЧ.Цена*ТЧ.Количество;
	Если Не Объект.Договор.БезНДС Тогда
	ТЧ.НДС = ТЧ.Сумма*ТЧ.СтавкаНДС.Ставка/100;
	КонецЕсли;
ТЧ.Всего = ТЧ.Сумма + ТЧ.НДС;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьКоличествоПриИзменении(Элемент)
ТабличнаяЧастьКоличествоПриИзмененииНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ТабличнаяЧастьЕдиницаИзмеренияПриИзмененииНаСервере(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
ПересчётСтрокиТабличнойЧасти(Стр);
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьЕдиницаИзмеренияПриИзменении(Элемент)
ТабличнаяЧастьЕдиницаИзмеренияПриИзмененииНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ТабличнаяЧастьЦенаПриИзмененииНаСервере(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
ТЧ.Сумма = ТЧ.Цена*ТЧ.Количество;
	Если Не Объект.Договор.БезНДС Тогда
	ТЧ.НДС = ТЧ.Сумма*ТЧ.СтавкаНДС.Ставка/100;
	КонецЕсли;
		Если Объект.Договор.Валюта <> Константы.ОсновнаяВалюта.Получить() Тогда
		ТЧ.ЦенаВалюта = ТЧ.Цена/Объект.Курс;
		КонецЕсли; 
ТЧ.Всего = ТЧ.Сумма + ТЧ.НДС;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьЦенаПриИзменении(Элемент)
ТабличнаяЧастьЦенаПриИзмененииНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ТабличнаяЧастьСуммаПриИзмененииНаСервере(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
ТЧ.Цена = ТЧ.Сумма/ТЧ.Количество;
	Если Не Объект.Договор.БезНДС Тогда
	ТЧ.НДС = ТЧ.Сумма*ТЧ.СтавкаНДС.Ставка/100;
	КонецЕсли;
		Если Объект.Договор.Валюта <> Константы.ОсновнаяВалюта.Получить() Тогда
		ТЧ.ЦенаВалюта = ТЧ.Цена/Объект.Курс;
		КонецЕсли;
ТЧ.Всего = ТЧ.Сумма + ТЧ.НДС;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСуммаПриИзменении(Элемент)
ТабличнаяЧастьСуммаПриИзмененииНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ПересчётСтрокиТабличнойЧасти(Стр)
	Если Объект.Ссылка.Пустая() Тогда
	НаДату = ТекущаяДата();
	Иначе
	НаДату = Объект.Дата;	
	КонецЕсли;
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
	Если ТЧ.НЦ Тогда
	Цены = РегистрыСведений.Цены.ПолучитьПоследнее(НаДату,Новый Структура("МПЗ",ТЧ.МПЗ));
	ТЧ.Цена = Цены.Цена*ТЧ.ЕдиницаИзмерения.Коэффициент;
		Если Объект.Договор.Валюта <> Константы.ОсновнаяВалюта.Получить() Тогда
		ТЧ.ЦенаВалюта = ТЧ.Цена/Объект.Курс;
		КонецЕсли;
	Иначе
		Если Объект.Договор.Валюта <> Константы.ОсновнаяВалюта.Получить() Тогда
			Если Не Объект.Договор.ДоговорСНефиксированнымиЦенами Тогда
			//ТЧ.ЦенаВалюта = ОбщийМодульРаботаСРегистрами.ПолучитьЦенуДП(Объект.Договор,Объект.Курс,ТЧ.МПЗ,НаДату);
			ТЧ.ЦенаВалюта = ОбщийМодульРаботаСРегистрами.ПолучитьЦенуПоСпецификацииКДоговору(Объект.Контрагент,Объект.Договор,ТЧ.МПЗ,НаДату);
			ТЧ.Цена = ТЧ.ЦенаВалюта*Объект.Курс;
			КонецЕсли;
		Иначе
			Если Объект.Договор.ДоговорСНефиксированнымиЦенами Тогда
			Цены = РегистрыСведений.Цены.ПолучитьПоследнее(НаДату,Новый Структура("МПЗ",ТЧ.МПЗ));
			ТЧ.Цена = Цены.Цена*ТЧ.ЕдиницаИзмерения.Коэффициент;			
			Иначе
			//ТЧ.Цена = ОбщийМодульРаботаСРегистрами.ПолучитьЦенуДП(Объект.Договор,Объект.Курс,ТЧ.МПЗ,НаДату);
		    ТЧ.Цена = ОбщийМодульРаботаСРегистрами.ПолучитьЦенуПоСпецификацииКДоговору(Объект.Контрагент,Объект.Договор,ТЧ.МПЗ,НаДату)*ТЧ.ЕдиницаИзмерения.Коэффициент;
			КонецЕсли;  
		КонецЕсли;		
	КонецЕсли; 
ТЧ.Сумма = ТЧ.Цена*ТЧ.Количество;	
	Если Объект.Договор.БезНДС Тогда
	ТЧ.СтавкаНДС = Справочники.СтавкиНДС.ПустаяСсылка();
	ТЧ.НДС = 0;
	ТЧ.Всего = ТЧ.Сумма;
	Иначе
	ТЧ.СтавкаНДС = Константы.ОсновнаяСтавкаНДС.Получить();
	ТЧ.НДС = ТЧ.Сумма*ТЧ.СтавкаНДС.Ставка/100;
	ТЧ.Всего = ТЧ.Сумма + ТЧ.НДС;		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПересчётТабличнойЧасти()
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	ПересчётСтрокиТабличнойЧасти(ТЧ.ПолучитьИдентификатор());
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ПроверкаДоговорныхПозиций()
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	СпецификацияКДоговору = ПолучитьСпецификациюКДоговору(ТЧ.МПЗ);
		Если СпецификацияКДоговору <> Неопределено Тогда
		КоличествоОстаток = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокПоДоговоруСПоставщиком(Объект.Контрагент,Объект.Договор,СпецификацияКДоговору,ТЧ.МПЗ,Объект.Дата);
			Если КоличествоОстаток > 0 Тогда
			ТЧ.НЦ = Ложь;
				Если ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения) > КоличествоОстаток Тогда
				Сообщить(""+ТЧ.МПЗ + " - количество: " + ТЧ.Количество + " уменьшено до: " + КоличествоОстаток + " по остатку из регистра договоры с поставщиками!");				
				ТЧ.Количество = КоличествоОстаток/ТЧ.ЕдиницаИзмерения.Коэффициент;
				КонецЕсли; 
			Иначе	
			ТЧ.НЦ = Истина;				
			КонецЕсли; 
		Иначе
		ТЧ.НЦ = Истина;			
		КонецЕсли;
	//	Если Не ОбщийМодульРаботаСРегистрами.ВнесёнВДоговорныеПозиции(Объект.Договор,ТЧ.МПЗ,Объект.Дата) Тогда
	//	ТЧ.НЦ = Истина;	
	//	Цены = РегистрыСведений.Цены.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("МПЗ",ТЧ.МПЗ));
	//	ТЧ.Цена = Цены.Цена*ТЧ.ЕдиницаИзмерения.Коэффициент;
	//	Иначе
	//	ТЧ.НЦ = Ложь;
	//	КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ПроверкаНаДоговорнуюПозицию(ТЧ)
СпецификацияКДоговору = ПолучитьСпецификациюКДоговору(ТЧ.МПЗ);
	Если СпецификацияКДоговору <> Неопределено Тогда
	КоличествоОстаток = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокПоДоговоруСПоставщиком(Объект.Контрагент,Объект.Договор,СпецификацияКДоговору,ТЧ.МПЗ,Объект.Дата);
		Если КоличествоОстаток > 0 Тогда
		ТЧ.НЦ = Ложь;
			Если ПолучитьБазовоеКоличество(ТЧ.Количество,ТЧ.ЕдиницаИзмерения) > КоличествоОстаток Тогда
			Сообщить(""+ТЧ.МПЗ + " - количество: " + ТЧ.Количество + " уменьшено до: " + КоличествоОстаток + " по остатку из регистра договоры с поставщиками!");				
			ТЧ.Количество = КоличествоОстаток/ТЧ.ЕдиницаИзмерения.Коэффициент;				
			КонецЕсли; 
		Иначе	
		ТЧ.НЦ = Истина;				
		КонецЕсли; 
	Иначе
	ТЧ.НЦ = Истина;				
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
ДоговорПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДоговорПриИзмененииНаСервере()
Элементы.ТабличнаяЧастьНЦ.Видимость = Не Объект.Договор.ДоговорСНефиксированнымиЦенами;
Элементы.ТабличнаяЧастьЦенаВалюта.Формат = "ЧЦ=15; ЧДЦ="+Объект.Договор.ОкруглятьВалютныеЦены;
Элементы.ТабличнаяЧастьЦенаВалюта.ФорматРедактирования = "ЧЦ=15; ЧДЦ="+Объект.Договор.ОкруглятьВалютныеЦены; 
Объект.Курс = ОбщийМодульВызовСервера.КурсДляВалюты(Объект.Договор.Валюта,Объект.Дата);
	Если Объект.Договор.Валюта <> Константы.ОсновнаяВалюта.Получить() Тогда
	Элементы.ТабличнаяЧастьЦенаВалюта.Видимость = Истина;
	Иначе
	Элементы.ТабличнаяЧастьЦенаВалюта.Видимость = Ложь;
	КонецЕсли;		
Элементы.ТабличнаяЧастьСтавкаНДС.Видимость = Не Объект.Договор.БезНДС;
Элементы.ТабличнаяЧастьНДС.Видимость = Не Объект.Договор.БезНДС;
ПроверкаДоговорныхПозиций();
ПересчётТабличнойЧасти();
КонецПроцедуры

&НаСервере
Функция ДобавитьМПЗ(ВидМПЗ,Наименование,Количество,ЦенаВалюта)
	Если ВидМПЗ = Перечисления.ВидыМПЗ.Материалы Тогда
	МПЗ = Справочники.Материалы.НайтиПоНаименованию(Наименование,Истина);	
	Иначе
	МПЗ = Справочники.Номенклатура.НайтиПоНаименованию(Наименование,Истина);	
	КонецЕсли;
		Если Не МПЗ.Пустая() Тогда
		ТЧ = Объект.ТабличнаяЧасть.Добавить();
		ТЧ.ВидМПЗ = ВидМПЗ;
		ТЧ.МПЗ = МПЗ;
		ТЧ.Количество = Количество;
		ТЧ.ЕдиницаИзмерения = ПолучитьОсновнуюЕдиницуИзмеренияПоБазовой(МПЗ);
			Если ЦенаВалюта > 0 Тогда
			ТЧ.НЦ = Истина;
			ТЧ.ЦенаВалюта = ЦенаВалюта*ТЧ.ЕдиницаИзмерения.Коэффициент;
			ТЧ.Цена = ТЧ.ЦенаВалюта*Объект.Курс;
			ТЧ.Сумма = ТЧ.Цена*ТЧ.Количество;	
				Если Объект.Договор.БезНДС Тогда
				ТЧ.СтавкаНДС = Справочники.СтавкиНДС.ПустаяСсылка();
				ТЧ.НДС = 0;
				ТЧ.Всего = ТЧ.Сумма;
				Иначе
				ТЧ.СтавкаНДС = Константы.ОсновнаяСтавкаНДС.Получить();
				ТЧ.НДС = ТЧ.Сумма*ТЧ.СтавкаНДС.Ставка/100;
				ТЧ.Всего = ТЧ.Сумма + ТЧ.НДС;		
				КонецЕсли;
			Иначе
			ПроверкаНаДоговорнуюПозицию(ТЧ);	
				//Если Не ОбщийМодульРаботаСРегистрами.ВнесёнВДоговорныеПозиции(Объект.Договор,МПЗ,Объект.Дата) Тогда
				//ТЧ.НЦ = Истина;
				//Цены = РегистрыСведений.Цены.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("МПЗ",МПЗ));
				//ТЧ.Цена = Цены.Цена*ТЧ.ЕдиницаИзмерения.Коэффициент;
				//КонецЕсли;			
			ПересчётСтрокиТабличнойЧасти(ТЧ.ПолучитьИдентификатор());
			КонецЕсли; 
		Возврат(Истина);
		Иначе
		Возврат(Ложь);
		КонецЕсли; 	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
ВидМПЗ = Неопределено;
	Если Не ВвестиЗначение(ВидМПЗ,"Выберите вид МПЗ",Новый ОписаниеТипов("ПеречислениеСсылка.ВидыМПЗ")) Тогда	
	Возврат;
	КонецЕсли; 
Результат = ОбщийМодульКлиент.ОткрытьФайлExcel("Выберите файл c заказом");
	Если Результат <> Неопределено Тогда
	ExcelЛист = Результат.ExcelЛист;
	КолСтрок = Результат.КоличествоСтрок; 
	    Для к = 2 по КолСтрок Цикл
		Состояние("Обработка...",к*100/КолСтрок,"Загрузка заказа..."); 
		Наименование = СокрЛП(ExcelЛист.Cells(к, 1).Value);
		Количество = Число(ExcelЛист.Cells(к, 2).Value);
		ЦенаВалюта = Число(ExcelЛист.Cells(к, 3).Value);
			Если Не ДобавитьМПЗ(ВидМПЗ,Наименование,Количество,ЦенаВалюта) Тогда
			Сообщить(Наименование+" не найден!");
			КонецЕсли; 
	    КонецЦикла;
	Результат.Excel.Quit();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСтавкаНДСПриИзменении(Элемент)
ТабличнаяЧастьСтавкаНДСПриИзмененииНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ТабличнаяЧастьСтавкаНДСПриИзмененииНаСервере(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
	Если Не Объект.Договор.БезНДС Тогда
	ТЧ.НДС = ТЧ.Сумма*ТЧ.СтавкаНДС.Ставка/100;
	КонецЕсли;
ТЧ.Всего = ТЧ.Сумма + ТЧ.НДС;
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
КонтрагентПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере()
Объект.Договор = Объект.Контрагент.ОсновнойДоговор;
	Если Не Объект.Договор.Пустая() Тогда
	ДоговорПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КурсПриИзменении(Элемент)
ПересчётТабличнойЧасти();
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьЦенаВалютаПриИзменении(Элемент)
ТабличнаяЧастьЦенаВалютаПриИзмененииНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ТабличнаяЧастьЦенаВалютаПриИзмененииНаСервере(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
ТЧ.Цена = ТЧ.ЦенаВалюта*Объект.Курс; 
ТЧ.Сумма = ТЧ.Цена*ТЧ.Количество;
	Если Не Объект.Договор.БезНДС Тогда
	ТЧ.СтавкаНДС = Константы.ОсновнаяСтавкаНДС.Получить();
	ТЧ.НДС = ТЧ.Сумма*ТЧ.СтавкаНДС.Ставка/100;
	КонецЕсли;
ТЧ.Всего = ТЧ.Сумма + ТЧ.НДС;
КонецПроцедуры

&НаКлиенте
Процедура ВнестиДоговорныеПозиции(Команда)
	Если Не ЭтаФорма.Модифицированность Тогда
	ОткрытьФорму("Обработка.ДобавлениеДоговорныхПозиций.Форма.Форма",Новый Структура("Документ",Объект.Ссылка));
	Иначе	
	Сообщить("Сначала сохраните документ!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДвижения(Команда)
ИмяОтчета = "ОтчётПоРегиструЗаказыПоставщикам";
ПараметрыФормы = Новый Структура;
ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьПользовательскиеНастройкиОтчетаСКД(ИмяОтчета,Объект.Дата,ТекущаяДата(),Новый Структура("ЗаказПоставщику",Объект.Ссылка),"ПоЗаказам"));
ПараметрыФормы.Вставить("КлючВарианта","ПоЗаказам"); 
ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы,,Истина);
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
ДатаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	Если Не Объект.Договор.Пустая() Тогда
	Объект.Курс = ОбщийМодульВызовСервера.КурсДляВалюты(Объект.Договор.Валюта,Объект.Дата);
	ПересчётТабличнойЧасти();	
	Сообщить("Курс изменён. Табличная часть пересчитана!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
Отказ = Не ЭтаФорма.ПроверитьЗаполнение();
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьВсегоПриИзменении(Элемент)
ТабличнаяЧастьВсегоПриИзмененииНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ТабличнаяЧастьВсегоПриИзмененииНаСервере(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
	Если Не Объект.Договор.БезНДС Тогда
	ТЧ.НДС = ТЧ.Всего/118*18;
	КонецЕсли;
ТЧ.Сумма = ТЧ.Всего - ТЧ.НДС;
ТЧ.Цена = ТЧ.Сумма/ТЧ.Количество;
	Если Объект.Договор.Валюта <> Константы.ОсновнаяВалюта.Получить() Тогда
	ТЧ.ЦенаВалюта = ТЧ.Цена/Объект.Курс;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьПоQRКодуНаСервере(Данные)
Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,";");
МПЗ = ЗначениеИзСтрокиВнутр(Массив[0]);
	Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Материалы") Тогда	
	ТЧ = Объект.ТабличнаяЧасть.Добавить();
	ТЧ.МПЗ = МПЗ;
	ТЧ.Количество = Число(Массив[1]);
	ТЧ.ЕдиницаИзмерения = МПЗ.ОсновнаяЕдиницаИзмерения;
	ТабличнаяЧастьМПЗПриИзмененииНаСервере(ТЧ.ПолучитьИдентификатор());
	Иначе
	Сообщить("Неверный QR-код!");		
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
	ДобавитьПоQRКодуНаСервере(Данные);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьВБазуСбытаНаСервере()
	Если Константы.КодБазы.Получить() = "ХРК" Тогда
	БазаСбыта = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Справочники.ОбменДанными.НайтиПоНаименованию("База сбыта", Истина));
	Иначе	
	Сообщить("Обработка отсутствует!");
	Возврат;
	КонецЕсли;
		Если БазаСбыта = Неопределено Тогда
		Сообщить("Не открыто соединение с базой сбыта!");
		Возврат;
		КонецЕсли;
флОшибки = Ложь;
	Для каждого ТЧ_МПЗ Из Объект.ТабличнаяЧасть Цикл
		Если ТЧ_МПЗ.МПЗ.Товар.Пустая() Тогда
		флОшибки = Истина;
		Сообщить(СокрЛП(ТЧ_МПЗ.МПЗ.Наименование)+" - не заполнен реквизит соответствия с товаром!");
		Продолжить;				
		КонецЕсли; 
	Артикул = ОбщийМодульВызовСервера.ПолучитьАртикулПоКодуТовара(ТЧ_МПЗ.МПЗ.Товар.Код);
	бсНомен = БазаСбыта.Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",Артикул);
		Если бсНомен.Пустая() Тогда
		флОшибки = Истина;
		Сообщить(СокрЛП(ТЧ_МПЗ.МПЗ.Наименование)+" - товар с артикулом "+Артикул+" не найден в торговой базе!");
		Продолжить;
		Иначе
			Если БазаСбыта.XMLString(бсНомен.имСтатусТовара) = "НеПроизводимый" Тогда
			флОшибки = Истина;
			Сообщить(СокрЛП(ТЧ_МПЗ.МПЗ.Наименование)+" - товар с артикулом "+Артикул+" не производимый в торговой базе!");
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;
		Если флОшибки Тогда
		Сообщить("Выгрузка не выполнена!");
		Возврат;			
		КонецЕсли; 
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	бсНовДок = БазаСбыта.Документы.ЗаказКлиента.СоздатьДокумент();
	бсНовДок.Дата = ТекущаяДата();
	бсНовДок.ХозяйственнаяОперация = БазаСбыта.Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
	бсНовДок.Организация = БазаСбыта.Справочники.Организации.НайтиПоКоду("13");
	бсНовДок.Валюта = БазаСбыта.Справочники.Валюты.НайтиПоКоду("643");
	бсНовДок.Партнер = БазаСбыта.Справочники.Партнеры.НайтиПоКоду("3588995");
	бсНовДок.Контрагент = БазаСбыта.Справочники.Контрагенты.НайтиПоНаименованию("ООО "+""""+"ВО Овен"+"""",Истина);
	бсНовДок.Менеджер = БазаСбыта.Справочники.Пользователи.НайтиПоНаименованию("ОбменПроизводство1С",Истина);
	бсНовДок.Автор = БазаСбыта.Справочники.Пользователи.НайтиПоНаименованию("ОбменПроизводство1С",Истина);
	бсНовДок.Склад = БазаСбыта.Справочники.Склады.НайтиПоНаименованию("СД 423",Истина);
	бсНовДок.ИмСрокРезерва = ДобавитьМесяц(НачалоДня(ТекущаяДата()),6);
	бсНовДок.ИмБуква = БазаСбыта.Справочники.ИмПрефиксыДокументов.НайтиПоКоду("СХ");
	бсНовДок.НалогообложениеНДС = БазаСбыта.Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;
	бсНовДок.Приоритет = БазаСбыта.Справочники.Приоритеты.НайтиПоНаименованию("Низкий",Истина);
	бсНовДок.НомерПоДаннымКлиента = Объект.Номер;
	бсНовДок.ДатаПоДаннымКлиента = Объект.Дата;
	бсНовДок.ИмТипДоставки = БазаСбыта.Перечисления.ИмТипДоставки.Самовывоз;
	бсНовДок.Статус = БазаСбыта.Перечисления.СтатусыЗаказовКлиентов.НеСогласован;
	бсНовДок.ВЭД = Истина;
	бсНовДок.Понедельник = Истина;
	бсНовДок.Вторник = Истина;
	бсНовДок.Среда = Истина;
	бсНовДок.Четверг = Истина;
	бсНовДок.Пятница = Истина;
	бсНовДок.Суббота = Истина;
	бсНовДок.Воскресенье = Истина;
	бсНовДок.ВидОтгрузки = БазаСбыта.Перечисления.ВидыОтгрузки.Частичная;
	бсНовДок.ИМКартаДоставки = БазаСбыта.Справочники.ИмКартыДоставки.НайтиПоКоду("000029226");
	ЭГО = бсНовДок.ЭтапыГрафикаОплаты.Добавить();
	ЭГО.ВариантОплаты = БазаСбыта.Перечисления.ВариантыОплатыКлиентом.КредитПослеОтгрузки;
	ЭГО.ПроцентПлатежа = 100; 
	СуммаСНДСИтого = 0;
		Для каждого ТЧ_МПЗ Из Объект.ТабличнаяЧасть Цикл 
		Артикул = ОбщийМодульВызовСервера.ПолучитьАртикулПоКодуТовара(ТЧ_МПЗ.МПЗ.Товар.Код);
		бсНомен = БазаСбыта.Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",Артикул);
		ТЧ = бсНовДок.Товары.Добавить(); 
		ТЧ.Номенклатура = бсНомен;
		ТЧ.Крупность = бсНомен.Крупность;
		ТЧ.Количество = ПолучитьБазовоеКоличество(ТЧ_МПЗ.Количество,ТЧ_МПЗ.ЕдиницаИзмерения);
		ТЧ.КоличествоУпаковок = ПолучитьБазовоеКоличество(ТЧ_МПЗ.Количество,ТЧ_МПЗ.ЕдиницаИзмерения);
		ТЧ.СтавкаНДС = БазаСбыта.Перечисления.СтавкиНДС.БезНДС;
		ТЧ.Цена = бсНомен.ИмЦена;
		ТЧ.Сумма = ТЧ.КоличествоУпаковок*ТЧ.Цена;
			Если БазаСбыта.Перечисления.СтавкиНДС.Индекс(ТЧ.СтавкаНДС) = БазаСбыта.Перечисления.СтавкиНДС.Индекс(БазаСбыта.Перечисления.СтавкиНДС.НДС18) Тогда
			ТЧ.СуммаНДС = ТЧ.Сумма*0.18;
			ТЧ.СуммаСНДС = ТЧ.Сумма + ТЧ.СуммаНДС;
			ИначеЕсли БазаСбыта.Перечисления.СтавкиНДС.Индекс(ТЧ.СтавкаНДС) = БазаСбыта.Перечисления.СтавкиНДС.Индекс(БазаСбыта.Перечисления.СтавкиНДС.НДС20) Тогда
			ТЧ.СуммаНДС = ТЧ.Сумма*0.2;
			ТЧ.СуммаСНДС = ТЧ.Сумма + ТЧ.СуммаНДС;
			Иначе	
			ТЧ.СуммаСНДС = ТЧ.Сумма;
			КонецЕсли;
		СуммаСНДСИтого = СуммаСНДСИтого + ТЧ.СуммаСНДС;
		КонецЦикла;
	ЭГО.СуммаПлатежа = СуммаСНДСИтого;
			Если (бсНовДок.Товары.Количество() > 0)и(Не флОшибки) Тогда
			бсНовДок.Комментарий = "Передано из Производства.";
			бсНовДок.Записать(БазаСбыта.РежимЗаписиДокумента.Проведение);
			Объект.Выгружено = Истина;
			Элементы.ВыгрузитьВБазуСбыта.Доступность = Ложь;
			Объект.НомерЗНП = СокрЛП(бсНовДок.Номер);
			ЭтаФорма.Записать();
			Сообщить("Создан документ "+бсНовДок.Номер);
			КонецЕсли;   
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВБазуСбыта(Команда)
	Если Не ЭтаФорма.Модифицированность Тогда
	ВыгрузитьВБазуСбытаНаСервере();
	Иначе
	Сообщить("Сначала запишите изменения!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыгруженоПриИзменении(Элемент)
Элементы.ВыгрузитьВБазуСбыта.Доступность = Не Объект.Выгружено; 
КонецПроцедуры

&НаСервере
Функция ПолучитьСпецификации(Товар)
СписокСпецификаций = Новый СписокЗначений;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка,
	|	СтатусыМПЗСрезПоследних.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.СтатусыМПЗ.СрезПоследних(&НаДату, ) КАК СтатусыМПЗСрезПоследних
	|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО СтатусыМПЗСрезПоследних.МПЗ = Номенклатура.Ссылка
	|ГДЕ
	|	Номенклатура.Товар = &Товар
	|	И СтатусыМПЗСрезПоследних.Статус <> &Статус";
Запрос.УстановитьПараметр("Товар",Товар);
Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыСпецификаций.Запрещённая);
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
РезультатЗапроса = Запрос.Выполнить();
Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Найти(Выборка.Ссылка.Наименование,"_КТ") > 0 Тогда
			Если Выборка.Статус = Перечисления.СтатусыСпецификаций.ДоИсчерпанияЗапасов Тогда
			СписокСпецификаций.Вставить(0,Выборка.Ссылка);
			Иначе
			СписокСпецификаций.Добавить(Выборка.Ссылка);
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
Возврат(СписокСпецификаций);
КонецФункции

&НаСервере
Процедура ВыгрузитьВБазуПроизводстваНаСервере()
	Если Константы.КодБазы.Получить() = "БГР" Тогда
	БазаПроизводства = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Справочники.ОбменДанными.НайтиПоНаименованию("Производство Харьков 1С 8", Истина));
	Иначе	
	Сообщить("Обработка отсутствует!");
	Возврат;
	КонецЕсли;
		Если БазаПроизводства = Неопределено Тогда
		Сообщить("Не открыто соединение с базой сбыта!");
		Возврат;
		КонецЕсли;
флОшибки = Ложь;
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	бпНовДок = БазаПроизводства.Документы.ЗаказНаПроизводство.СоздатьДокумент();
	бпНовДок.Номер = Объект.Номер;
	бпНовДок.Дата = Объект.Дата;
	бпНовДок.Контрагент = БазаПроизводства.Справочники.Контрагенты.НайтиПоКоду("000034316");
	бпНовДок.Автор = БазаПроизводства.Справочники.Сотрудники.НайтиПоНаименованию(СокрЛП(Объект.Автор.Наименование),Истина);
	бпНовДок.ДатаОтгрузкиОбещанная = ТекущаяДата()+86400*5;
		Для каждого ТЧ_МПЗ Из Объект.ТабличнаяЧасть Цикл
		бпТовар = БазаПроизводства.Справочники.Товары.НайтиПоНаименованию(СокрЛП(ТЧ_МПЗ.МПЗ.Наименование),Истина);
			Если Не БазаПроизводства.ЗначениеЗаполнено(бпТовар) Тогда
			флОшибки = Истина;
			Сообщить(СокрЛП(ТЧ_МПЗ.МПЗ.Наименование)+" - товар не найден!");
			Продолжить;				
			КонецЕсли;
		ТЧ = бпНовДок.Заказ.Добавить(); 
		ТЧ.Товар = бпТовар;
		//СписокСпецификаций = ПолучитьСпецификации(бпТовар); 
		//	Если СписокСпецификаций.Количество() > 0 Тогда
		//	ТЧ.Продукция = СписокСпецификаций[0].Значение;
		//	КонецЕсли;
		Кол = ПолучитьБазовоеКоличество(ТЧ_МПЗ.Количество,ТЧ_МПЗ.ЕдиницаИзмерения);
		ТЧ.Количество = Кол;
		ТЧ.КоличествоВЗаказе = Кол;
		ТЧ.КрупныйЗаказ = ?(бпТовар.КрупностьЗаказа <= Кол,Истина,Ложь);
		КонецЦикла;
			Если (бпНовДок.Заказ.Количество() > 0)и(Не флОшибки) Тогда
			бпНовДок.Записать(БазаПроизводства.РежимЗаписиДокумента.Проведение);
			Объект.Выгружено = Истина;
			Элементы.ВыгрузитьВБазуСбыта.Доступность = Ложь;
			ЭтаФорма.Записать();
			Сообщить("Создан документ "+бпНовДок.Номер);
			КонецЕсли;   
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВБазуПроизводства(Команда)
	Если Не ЭтаФорма.Модифицированность Тогда
	ВыгрузитьВБазуПроизводстваНаСервере();
	Иначе
	Сообщить("Сначала запишите изменения!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОчиститьДатыПоставкиНаСервере()
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		Если Не ТЧ.ЗапретРедактирования Тогда
		ТЧ.ДатаПоставки = Дата(1,1,1);
		КонецЕсли;
	КонецЦикла; 	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьДатыПоставки(Команда)
ОчиститьДатыПоставкиНаСервере();
КонецПроцедуры

&НаСервере
Функция ЭтоПокупатель(ВыбранныйКонтрагент)
Возврат(?(Найти(ВыбранныйКонтрагент.Родитель.Наименование,"Покупатели") > 0,Истина,Ложь));
КонецФункции

&НаКлиенте
Процедура КонтрагентОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ЭтоПокупатель(ВыбранноеЗначение) Тогда
	СтандартнаяОбработка = Ложь;
	Предупреждение("Выбранный контрагент является покупателем!",0,"ВНИМАНИЕ!");	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ЗапрещеноРедактирование(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
Возврат(ТЧ.ЗапретРедактирования);
КонецФункции

&НаКлиенте
Процедура ТабличнаяЧастьПередНачаломИзменения(Элемент, Отказ)
	Если ЗапрещеноРедактирование(Элементы.ТабличнаяЧасть.ТекущаяСтрока) Тогда
	Элементы.ТабличнаяЧастьМПЗ.Доступность = Ложь;
	Элементы.ТабличнаяЧастьДатаПоставки.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
Элементы.ТабличнаяЧастьМПЗ.Доступность = Истина;
Элементы.ТабличнаяЧастьДатаПоставки.Доступность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПередУдалением(Элемент, Отказ)
	Если ЗапрещеноРедактирование(Элементы.ТабличнаяЧасть.ТекущаяСтрока) Тогда
	Отказ = Истина;
	Предупреждение("Нельзя удалить поставленный по заказу МПЗ!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСтатусДокументаБФ(БазаБФ,Док)
Запрос = БазаБФ.NewObject("Запрос");

Запрос.Текст = 
	"ВЫБРАТЬ
	|	бит_ИсторияИзмененияСтатусовОбъектовСрезПоследних.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.бит_ИсторияИзмененияСтатусовОбъектов.СрезПоследних КАК бит_ИсторияИзмененияСтатусовОбъектовСрезПоследних
	|ГДЕ
	|	бит_ИсторияИзмененияСтатусовОбъектовСрезПоследних.Объект = &Объект";
Запрос.УстановитьПараметр("Объект", Док);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если Найти(ВыборкаДетальныеЗаписи.Статус.Наименование,"Оплачена") > 0 Тогда
		Возврат(Истина);
		КонецЕсли;
	КонецЦикла;
Возврат(Ложь);
КонецФункции 

&НаСервере
Функция ПолучитьСписокДокументовИзБФ()
БазаБФ = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Справочники.ОбменДанными.НайтиПоНаименованию("База Бит-Финанс",Истина));
	Если БазаБФ = Неопределено Тогда
	Возврат(Неопределено);
	КонецЕсли;
СписокДок = Новый СписокЗначений;
Запрос = БазаБФ.NewObject("Запрос");

Запрос.Текст = 
	"ВЫБРАТЬ
	|	бит_ЗаявкаНаРасходованиеСредств.Ссылка КАК Ссылка,
	|	бит_ЗаявкаНаРасходованиеСредств.Номер КАК Номер,
	|	бит_ЗаявкаНаРасходованиеСредств.Дата КАК Дата
	|ИЗ
	|	Документ.бит_ЗаявкаНаРасходованиеСредств КАК бит_ЗаявкаНаРасходованиеСредств
	|ГДЕ
	|	бит_ЗаявкаНаРасходованиеСредств.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И бит_ЗаявкаНаРасходованиеСредств.Контрагент.ИНН = &ИНН
	|	И бит_ЗаявкаНаРасходованиеСредств.Проведен = ИСТИНА";
Запрос.УстановитьПараметр("ДатаНач", ДобавитьМесяц(НачалоДня(ТекущаяДата()),-1));
Запрос.УстановитьПараметр("ДатаКон", ТекущаяДата());
Запрос.УстановитьПараметр("ИНН", СокрЛП(Объект.Контрагент.ИНН));
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокДок.Добавить(ВыборкаДетальныеЗаписи.Дата,СокрЛП(ВыборкаДетальныеЗаписи.Номер),ПолучитьСтатусДокументаБФ(БазаБФ,ВыборкаДетальныеЗаписи.Ссылка));
	КонецЦикла;
СписокДок.СортироватьПоЗначению();
Возврат(СписокДок);
КонецФункции
 
&НаСервере               
Процедура ДобавитьНомерБФ(НомерДок,ДатаДок,Пометка)
Выборка = Объект.НомераБФ.НайтиСтроки(Новый Структура("НомерДок,ДатаДок",НомерДок,ДатаДок));
	Если Выборка.Количество() = 0 Тогда
	ТЧ = Объект.НомераБФ.Добавить();
	ТЧ.НомерДок = НомерДок;
	ТЧ.ДатаДок = ДатаДок;	
	ТЧ.Оплачен = Пометка;
	Иначе
	Сообщить(НомерДок + " - существует!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьИзБФ(Команда)
СписокДок = ПолучитьСписокДокументовИзБФ();
	Если СписокДок <> Неопределено Тогда
	Выборка = СписокДок.ВыбратьЭлемент("Выберите номер документа");
		Если Выборка <> Неопределено Тогда
		ДобавитьНомерБФ(СокрЛП(Выборка.Представление),Выборка.Значение,Выборка.Пометка);
		КонецЕсли;
	КонецЕсли; 	
КонецПроцедуры
