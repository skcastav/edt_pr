
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не Объект.Ссылка.Пустая() Тогда
		Если ПараметрыСеанса.Пользователь.Подразделения.Найти(Объект.Подразделение,"Подразделение") = Неопределено Тогда
		Сообщить("У Вас нет прав для просмотра этого документа!");
		Отказ = Истина;
		Возврат;
		КонецЕсли;
			Если Не ПараметрыСеанса.Пользователь.Должность.ПросмотрВсехДокументовРазрешенныхПодразделений Тогда	
				Если ПараметрыСеанса.Пользователь <> Объект.Автор Тогда
				Сообщить("У Вас нет прав для просмотра этого документа!");
				Отказ = Истина;
				КонецЕсли; 
			КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
ЭтотОбъект.ТолькоПросмотр = ОбщийМодульСозданиеДокументов.ЗапретРедактирования(Объект.Ссылка,Истина,Истина);
Элементы.БезУчётаВыходныхДней.Доступность = Не Объект.ВедомостьВыходногоДня;
Элементы.ТабличнаяЧастьОплатаВВыходной.Видимость = Объект.ВедомостьВыходногоДня;
Элементы.БезУчётаВыходныхДней.Доступность = ИспользоватьОклад();
Элементы.ВедомостьВыходногоДня.Доступность = ИспользоватьОклад();
Элементы.РабочихЧасовВМесяце.Видимость = ИспользоватьОклад();
Элементы.ТабличнаяЧастьОклад.Видимость = ИспользоватьОклад();
Элементы.ТабличнаяЧастьДС.Видимость = ИспользоватьДС();
Элементы.ТабличнаяЧастьДП.Видимость = ИспользоватьДС(); 
Элементы.ТабличнаяЧастьДВТФ.Видимость = ИспользоватьОклад();
Элементы.ТабличнаяЧастьПВТФ.Видимость = ИспользоватьОклад();
КонецПроцедуры 

&НаКлиенте
Процедура БезУчётаВыходныхДнейПриИзменении(Элемент)
Объект.СуммаПоНаряду = 0;
КонецПроцедуры
           
&НаКлиенте
Процедура ЛинейкаПриИзменении(Элемент)
Объект.ТабличнаяЧасть.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ЛинейкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
	Ф = ПолучитьФорму("Справочник.Линейки.Форма.ФормаВыбора");
	Ф.Элементы.Список.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы;
	ЭлементОтбора = Ф.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбора.ПравоеЗначение = Объект.Подразделение;

	ЭлементОформления = Ф.Список.УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	УслОформ = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	УслОформ.Использование = Истина;
	УслОформ.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение");
	УслОформ.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	УслОформ.ПравоеЗначение = Объект.Подразделение;
	Результат = Ф.ОткрытьМодально();
		Если Результат <> Неопределено Тогда
		ЭтаФорма.Модифицированность = Истина;
		Объект.Линейка = Результат;
		КонецЕсли; 
	Иначе
	Сообщить("Выберите подразделение!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
Объект.БезУчётаВыходныхДней = Ложь;
Объект.ВедомостьВыходногоДня = Ложь;
Элементы.БезУчётаВыходныхДней.Доступность = Не Объект.ВедомостьВыходногоДня;
Элементы.ТабличнаяЧастьОплатаВВыходной.Видимость = Объект.ВедомостьВыходногоДня;
Элементы.БезУчётаВыходныхДней.Доступность = ИспользоватьОклад();
Элементы.ВедомостьВыходногоДня.Доступность = ИспользоватьОклад();
Элементы.РабочихЧасовВМесяце.Видимость = ИспользоватьОклад();
Элементы.ТабличнаяЧастьОклад.Видимость = ИспользоватьОклад();
Элементы.ТабличнаяЧастьДС.Видимость = ИспользоватьДС();
Элементы.ТабличнаяЧастьДП.Видимость = ИспользоватьДС(); 
Элементы.ТабличнаяЧастьДВТФ.Видимость = ИспользоватьОклад();
Элементы.ТабличнаяЧастьПВТФ.Видимость = ИспользоватьОклад();
Объект.ТабличнаяЧасть.Очистить(); 
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не ОбщийМодульВызовСервера.РазрешенноеПодразделение(ВыбранноеЗначение) Тогда
	Сообщить("У Вас нет прав для создания документа по выбранному подразделению!");
	СтандартнаяОбработка = Ложь;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ИспользоватьДС()
Возврат(Объект.Подразделение.ДополнительнаяСделка);
КонецФункции

&НаСервере
Функция ИспользоватьОклад()
Возврат(Объект.Подразделение.Оклад);
КонецФункции
 
&НаСервере
Процедура ПересчитатьСтрокуТабличнойЧасти(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
ТЧ.ОплатаВВыходной = ?(Объект.ВедомостьВыходногоДня,ТЧ.СуммаПоНаряду,0);
ТЧ.Премия = (ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной)/100*ТЧ.ПроцентПремии;
	Если ИспользоватьОклад() Тогда
	ТЧ.ДВТФ = ТЧ.Исполнитель.Должность.Оклад/Объект.РабочихЧасовВМесяце*ТЧ.РабочихЧасов*?(Объект.ВедомостьВыходногоДня,2,1);
	ТЧ.ПВТФ = ТЧ.ДВТФ*ТЧ.ПроцентПремии/100;		
	КонецЕсли;
ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП+ТЧ.ДВТФ+ТЧ.ПВТФ;
КонецПроцедуры

&НаКлиенте
Процедура ВедомостьВыходногоДняПриИзменении(Элемент)
	Если Вопрос("Табличная часть будет пересчитана! Вы действительно хотите изменить условия документа?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
	Элементы.БезУчётаВыходныхДней.Доступность = Не Объект.ВедомостьВыходногоДня;
	Элементы.ТабличнаяЧастьОплатаВВыходной.Видимость = Объект.ВедомостьВыходногоДня;
	Объект.БезУчётаВыходныхДней = Не Объект.ВедомостьВыходногоДня;
		Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		ПересчитатьСтрокуТабличнойЧасти(ТЧ.ПолучитьИдентификатор());
		КонецЦикла;
	Иначе
	Объект.ВедомостьВыходногоДня = Не Объект.ВедомостьВыходногоДня;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьЛиниюSMD(МТК)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроизводственноеЗадание.ЛинияSMD
	|ИЗ
	|	Документ.ПроизводственноеЗадание КАК ПроизводственноеЗадание
	|ГДЕ
	|	ПроизводственноеЗадание.ДокументОснование = &МТК";
Запрос.УстановитьПараметр("МТК", МТК);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Возврат(ВыборкаДетальныеЗаписи.ЛинияSMD);
	КонецЦикла;
Возврат(Справочники.ЛинииSMD.ПустаяСсылка());
КонецФункции

&НаСервере
Процедура ЗаполнитьНаСервере()
СуммаПодработки = 0;
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		Если ТЧ.Подработка Тогда
		СуммаПодработки = СуммаПодработки + ТЧ.Итого;	
		КонецЕсли; 
	КонецЦикла; 
СуммаПоНарядуБезПодработки = Объект.СуммаПоНаряду - СуммаПодработки;
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		Если ТЧ.Подработка Тогда
		Продолжить;	
		КонецЕсли;
	ТЧ.П1 = 0;
	ТЧ.П2 = 0;
	ТЧ.П3 = 0;
	ТЧ.ПроцентПремии = 0;
	ТЧ.Премия = 0; 
	ТЧ.ДП = 0;
	ТЧ.СуммаПоНаряду = СуммаПоНарядуБезПодработки/Объект.ТабличнаяЧасть.Итог("РазрядоЧасов")*ТЧ.РазрядоЧасов;
	ТЧ.ОплатаВВыходной = ?(Объект.ВедомостьВыходногоДня,ТЧ.СуммаПоНаряду,0);
   	ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной;
	КонецЦикла;  
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДСНаСервере()
Запрос = Новый Запрос;

	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		Если ТЧ.Подработка Тогда
		Продолжить;
		КонецЕсли;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеРаботы.ТехОперация,
		|	ДополнительныеРаботы.Количество
		|ИЗ
		|	РегистрСведений.ДополнительныеРаботы КАК ДополнительныеРаботы
		|ГДЕ
		|	ДополнительныеРаботы.Период МЕЖДУ &ДатаНач И &ДатаКон
		|	И ДополнительныеРаботы.Подразделение = &Подразделение
		|	И ДополнительныеРаботы.Сотрудник = &Сотрудник";
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("Сотрудник", ТЧ.Исполнитель);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	СуммаДР = 0;
	СуммаОД = 0;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НормыТО = РегистрыСведений.НормыТО.ПолучитьПоследнее(КонецМесяца(Объект.Дата),Новый Структура("ТехОперация",ВыборкаДетальныеЗаписи.ТехОперация));
		Стоимость = ВыборкаДетальныеЗаписи.Количество/НормыТО.Норма*НормыТО.Стоимость*ТЧ.Исполнитель.Должность.КоэффициентРазряда;
			Если ВыборкаДетальныеЗаписи.ТехОперация.ДополнительныеРаботы Тогда
			СуммаДР = СуммаДР + Стоимость;
			Иначе	
			СуммаОД = СуммаОД + Стоимость;
			КонецЕсли;		
		КонецЦикла;
	ТЧ.СуммаПоНаряду = ТЧ.СуммаПоНаряду + СуммаОД;
	ТЧ.ДС = СуммаДР;
	ТЧ.ДП = ТЧ.ДС*ТЧ.ПроцентПремии/100;
	ТЧ.Итого = ТЧ.СуммаПоНаряду+?(Объект.ВедомостьВыходногоДня,ТЧ.ОплатаВВыходной,0)+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП+ТЧ.ДВТФ+ТЧ.ПВТФ;
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДВТФНаСервере()
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		Если ТЧ.Подработка Тогда
		Продолжить;	
		КонецЕсли;
	ТЧ.ДВТФ = ТЧ.Исполнитель.Должность.Оклад/Объект.РабочихЧасовВМесяце*ТЧ.РабочихЧасов*?(Объект.ВедомостьВыходногоДня,2,1);
	ТЧ.ПВТФ = ТЧ.ДВТФ*ТЧ.ПроцентПремии/100;
	ТЧ.Итого = ТЧ.СуммаПоНаряду+?(Объект.ВедомостьВыходногоДня,ТЧ.ОплатаВВыходной,0)+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП+ТЧ.ДВТФ+ТЧ.ПВТФ;
	КонецЦикла;
КонецПроцедуры  

&НаКлиенте
Процедура Заполнить(Команда)
ЗаполнитьНаСервере();
	Если ИспользоватьДС() Тогда
	ЗаполнитьДСНаСервере();
	КонецЕсли;
		Если ИспользоватьОклад() Тогда
		ЗаполнитьДВТФНаСервере();
		КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСотрудника(Сотрудник)
Возврат(Новый Структура("Наименование,Код",СокрЛП(Сотрудник.Наименование),СокрЛП(Сотрудник.ТабельныйНомер)));
КонецФункции

&НаСервере
Функция ПечатьБригадныйНарядНаСервере()
ТабДок = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("БригадныйНаряд");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблСтрока = Макет.ПолучитьОбласть("Строка");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.Директор = ОбщийМодульВызовСервера.ПолучитьСотрудникаПоДолжности("Директор завода");
ОблШапка.Параметры.ГодДаты = Формат(КонецМесяца(Объект.Дата),"ДФ=yyyy");
	Если Объект.ВедомостьВыходногоДня Тогда
	ОблШапка.Параметры.ДатаНач = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
	ОблШапка.Параметры.ДатаКон = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");	
	Иначе	
	ОблШапка.Параметры.ДатаНач = Формат(НачалоМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");
	ОблШапка.Параметры.ДатаКон = Формат(КонецМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");	
	КонецЕсли;
ОблШапка.Параметры.Подразделение = Объект.Подразделение;
ОблШапка.Параметры.Комментарий = Объект.Комментарий;
ТабДок.Вывести(ОблШапка);
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	ОблСтрока.Параметры.Заполнить(ТЧ);		
	ОблСтрока.Параметры.Сотрудник = СокрЛП(ТЧ.Исполнитель.Наименование);
	ОблСтрока.Параметры.Должность = СокрЛП(ТЧ.Исполнитель.Должность.Наименование);
	ОблСтрока.Параметры.ТабНомер = ТЧ.Исполнитель.ТабельныйНомер;
		Если Объект.ВедомостьВыходногоДня Тогда
		ОблСтрока.Параметры.СуммаПоНаряду = ОблСтрока.Параметры.СуммаПоНаряду + ТЧ.ОплатаВВыходной; 
		КонецЕсли; 
	ТабДок.Вывести(ОблСтрока);
	КонецЦикла;
ОблКонец.Параметры.Мастер = Объект.Автор;
ОблКонец.Параметры.РабочихЧасовВсего = Объект.ТабличнаяЧасть.Итог("РабочихЧасов");
ОблКонец.Параметры.СуммаПоНарядуВсего = Объект.ТабличнаяЧасть.Итог("СуммаПоНаряду");
ОблКонец.Параметры.ДСВсего = Объект.ТабличнаяЧасть.Итог("ДС");
ОблКонец.Параметры.ДВТФВсего = Объект.ТабличнаяЧасть.Итог("ДВТФ");
	Если Объект.ВедомостьВыходногоДня Тогда
	ОблКонец.Параметры.СуммаПоНарядуВсего = ОблКонец.Параметры.СуммаПоНарядуВсего + Объект.ТабличнаяЧасть.Итог("ОплатаВВыходной"); 
	КонецЕсли;
ОблКонец.Параметры.Документ = Объект.Ссылка; 
ТабДок.Вывести(ОблКонец);
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьБригадныйНаряд(Команда)
ТД = ПечатьБригадныйНарядНаСервере();
ТД.Показать("Бригадный наряд");
КонецПроцедуры

&НаСервере
Функция ПечатьПредставлениеНаПремированиеНаСервере()
ТабДок = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("ПредставлениеНаПремирование");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблСтрока = Макет.ПолучитьОбласть("Строка");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.Директор = ОбщийМодульВызовСервера.ПолучитьСотрудникаПоДолжности("Директор завода");
ОблШапка.Параметры.ГодДаты = Формат(КонецМесяца(Объект.Дата),"ДФ=yyyy");
	Если Объект.ВедомостьВыходногоДня Тогда
	ОблШапка.Параметры.ДатаНач = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
	ОблШапка.Параметры.ДатаКон = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");	
	Иначе	
	ОблШапка.Параметры.ДатаНач = Формат(НачалоМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");
	ОблШапка.Параметры.ДатаКон = Формат(КонецМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");	
	КонецЕсли;
ОблШапка.Параметры.Подразделение = Объект.Подразделение;
ОблШапка.Параметры.Линейка = Объект.Линейка;
ОблШапка.Параметры.ВыходнойДень = ?(Объект.ВедомостьВыходногоДня,"Ведомость выходного дня","");
ТабДок.Вывести(ОблШапка);
СделкаИтого = 0;
ПремияИтого = 0;
ОплатаВВыходнойИтого = 0;
КНачислениюИтого = 0;
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	ОблСтрока.Параметры.Заполнить(ТЧ);
	ОблСтрока.Параметры.ДС = ТЧ.ДС;	
	ОблСтрока.Параметры.ДП = ТЧ.ДП;
	ОблСтрока.Параметры.ДВТФ = ТЧ.ДВТФ;	
	ОблСтрока.Параметры.ПВТФ = ТЧ.ПВТФ;		
	ОблСтрока.Параметры.Сотрудник = СокрЛП(ТЧ.Исполнитель.Наименование);
	ОблСтрока.Параметры.Должность = СокрЛП(ТЧ.Исполнитель.Должность.Наименование);
	ОблСтрока.Параметры.СуммаСделки = ТЧ.СуммаПоНаряду+ТЧ.ДС+ТЧ.ДВТФ;
	ОблСтрока.Параметры.СуммаПремии = ТЧ.Премия+ТЧ.ДП+ТЧ.ПВТФ;
	ОблСтрока.Параметры.Дополнительная = ТЧ.ДС+ТЧ.ДП;
	ОблСтрока.Параметры.ДВТФ_ПВТФ = ТЧ.ДВТФ+ТЧ.ПВТФ;
	ОблСтрока.Параметры.Основная = ТЧ.СуммаПоНаряду+ТЧ.Премия+ТЧ.ОплатаВВыходной;
	ОблСтрока.Параметры.КНачислению = ОблСтрока.Параметры.Дополнительная+ОблСтрока.Параметры.Основная+ОблСтрока.Параметры.ДВТФ_ПВТФ;
	ТабДок.Вывести(ОблСтрока);
	СделкаИтого = СделкаИтого + ОблСтрока.Параметры.СуммаСделки;
	ПремияИтого = ПремияИтого + ОблСтрока.Параметры.СуммаПремии;
	ОплатаВВыходнойИтого = ОплатаВВыходнойИтого + ТЧ.ОплатаВВыходной;
	КНачислениюИтого = КНачислениюИтого + ОблСтрока.Параметры.КНачислению;
	КонецЦикла;
ОблКонец.Параметры.Мастер = Объект.Автор;
ОблКонец.Параметры.СделкаИтого = СделкаИтого;
ОблКонец.Параметры.ПремияИтого = ПремияИтого;
ОблКонец.Параметры.КНачислениюИтого = КНачислениюИтого;
ОблКонец.Параметры.ОплатаВВыходнойИтого = ОплатаВВыходнойИтого; 
ТабДок.Вывести(ОблКонец);
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьПредставлениеНаПремирование(Команда)
ТД = ПечатьПредставлениеНаПремированиеНаСервере();
ТД.Показать("Представление на премирование");
КонецПроцедуры

&НаСервере
Функция ПечатьПоказателиПремированияНаСервере()
ТабДок = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("ПоказателиПремирования");

ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблСтрока = Макет.ПолучитьОбласть("Строка");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.Директор = ОбщийМодульВызовСервера.ПолучитьСотрудникаПоДолжности("Директор завода");
ОблШапка.Параметры.ГодДаты = Формат(КонецМесяца(Объект.Дата),"ДФ=yyyy");
	Если Объект.ВедомостьВыходногоДня Тогда
	ОблШапка.Параметры.ДатаНач = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
	ОблШапка.Параметры.ДатаКон = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");	
	Иначе	
	ОблШапка.Параметры.ДатаНач = Формат(НачалоМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");
	ОблШапка.Параметры.ДатаКон = Формат(КонецМесяца(Объект.Дата),"ДФ=dd.MM.yyyy");	
	КонецЕсли;
ТабДок.Вывести(ОблШапка);
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	ОблСтрока.Параметры.Заполнить(ТЧ);		
	ОблСтрока.Параметры.Сотрудник = СокрЛП(ТЧ.Исполнитель.Наименование);
	ОблСтрока.Параметры.Должность = СокрЛП(ТЧ.Исполнитель.Должность.Наименование);
	ОблСтрока.Параметры.ТабНомер = ТЧ.Исполнитель.ТабельныйНомер;
	ТабДок.Вывести(ОблСтрока);
	КонецЦикла;
ОблКонец.Параметры.Мастер = Объект.Автор;
ОблКонец.Параметры.НачальникПЭО = ОбщийМодульВызовСервера.ПолучитьСотрудникаПоДолжности("Начальник ПЭО"); 
ОблКонец.Параметры.ИтогоВсего = Объект.ТабличнаяЧасть.Итог("Итого"); 
ТабДок.Вывести(ОблКонец);
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьПоказателиПремирования(Команда)
ТД = ПечатьПоказателиПремированияНаСервере();
ТД.Показать("Показатели премирования");
КонецПроцедуры

&НаКлиенте
Процедура ПечатьОтчётПоНормированию(Команда)
	Если ЭтаФорма.Модифицированность Тогда
	Сообщить("Запишите документ!");
	Возврат;
	КонецЕсли;
		Если ПолучитьНаименованиеПодразделения() = "Богородицк линия SMD" Тогда
		РабочееМесто = Неопределено;
		СписокРМ = ПолучитьСписокРабочихМест();
		РабочееМесто = СписокРМ.ВыбратьЭлемент("Выберите рабочее место",РабочееМесто);
			Если РабочееМесто <> Неопределено Тогда
			ОткрытьФорму("Отчет.ОтчетПоНормированиюSMD_ОТ_ЭК.Форма.ФормаОтчета",Новый Структура("Документ,РабочееМесто",Объект.Ссылка,РабочееМесто.Значение));
			КонецЕсли;
		ИначеЕсли ПолучитьНаименованиеПодразделения() = "Богородицк УД (канбан)" Тогда
		ОткрытьФорму("Отчет.ОтчетПоНормированиюКанбановДатчиков.Форма.ФормаОтчета",Новый Структура("Документ",Объект.Ссылка));
		ИначеЕсли ПолучитьНаименованиеПодразделения() = "Богородицк УЛиШИ" Тогда
		ОткрытьФорму("Отчет.ОтчетПоНормированиюКанбановУТП.Форма.ФормаОтчета",Новый Структура("Документ",Объект.Ссылка));
		ИначеЕсли ПолучитьНаименованиеПодразделения() = "Богородицк УТП" Тогда
		ОткрытьФорму("Отчет.ОтчетПоНормированиюКанбановУТП.Форма.ФормаОтчета",Новый Структура("Документ",Объект.Ссылка));
		Иначе
		ОткрытьФорму("Отчет.ОтчетПоНормированиюКанбанов.Форма.ФормаОтчета",Новый Структура("Документ",Объект.Ссылка));
		КонецЕсли;
 КонецПроцедуры

&НаКлиенте
Процедура ПечатьДополнительныеРаботы(Команда)
ОткрытьФорму("Отчет.ОтчетПоДополнительнымРаботам.Форма.ФормаОтчета",Новый Структура("Документ",Объект.Ссылка));
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
Отказ = Не ЭтаФорма.ПроверитьЗаполнение();
КонецПроцедуры

&НаСервере
Функция ПолучитьКоэффициентРазряда(Исполнитель)
Возврат(Исполнитель.Должность.КоэффициентРазряда);
КонецФункции

&НаСервере
Функция ПолучитьОклад(Исполнитель)
Возврат(Исполнитель.Должность.Оклад);
КонецФункции

&НаКлиенте
Процедура ТабличнаяЧастьРабочихЧасовПриИзменении(Элемент)
ТЧ = Элементы.ТабличнаяЧасть.ТекущиеДанные;
ТЧ.РазрядоЧасов = ТЧ.РабочихЧасов*ПолучитьКоэффициентРазряда(ТЧ.Исполнитель);
ТЧ.СуммаПоНаряду = ?(Объект.ТабличнаяЧасть.Итог("РазрядоЧасов") > 0,Объект.СуммаПоНаряду/Объект.ТабличнаяЧасть.Итог("РазрядоЧасов")*ТЧ.РазрядоЧасов,0);
ТЧ.ОплатаВВыходной = ?(Объект.ВедомостьВыходногоДня,ТЧ.СуммаПоНаряду,0);
ТЧ.Премия = (ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной)/100*ТЧ.ПроцентПремии;
	Если ИспользоватьОклад() Тогда
	ТЧ.ДВТФ = ПолучитьОклад(ТЧ.Исполнитель)/Объект.РабочихЧасовВМесяце*ТЧ.РабочихЧасов*?(Объект.ВедомостьВыходногоДня,2,1);
	ТЧ.ПВТФ = ТЧ.ДВТФ/100*ТЧ.ПроцентПремии;	
	КонецЕсли;
ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП+ТЧ.ДВТФ+ТЧ.ПВТФ;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСуммаПоНарядуПриИзменении(Элемент)
ТЧ = Элементы.ТабличнаяЧасть.ТекущиеДанные;
ТЧ.ОплатаВВыходной = ?(Объект.ВедомостьВыходногоДня,ТЧ.СуммаПоНаряду,0);
ТЧ.Премия = (ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной)/100*ТЧ.ПроцентПремии;
ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП+ТЧ.ДВТФ+ТЧ.ПВТФ;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьДСПриИзменении(Элемент)
ТЧ = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	Если ТЧ.Подработка Тогда
	ТЧ.ДС = 0;	
	КонецЕсли; 
ТЧ.ДП = ТЧ.ДС/100*ТЧ.ПроцентПремии;
ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП+ТЧ.ДВТФ+ТЧ.ПВТФ;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьДВТФПриИзменении(Элемент)
ТЧ = Элементы.ТабличнаяЧасть.ТекущиеДанные;
	Если ТЧ.Подработка Тогда
	ТЧ.ДВТФ = 0;	
	КонецЕсли; 
ТЧ.ПВТФ = ТЧ.ДВТФ/100*ТЧ.ПроцентПремии;
ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП+ТЧ.ДВТФ+ТЧ.ПВТФ;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьДППриИзменении(Элемент)
ТЧ = Элементы.ТабличнаяЧасть.ТекущиеДанные;
ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП+ТЧ.ДВТФ+ТЧ.ПВТФ;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПВТФПриИзменении(Элемент)
ТЧ = Элементы.ТабличнаяЧасть.ТекущиеДанные;
ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП+ТЧ.ДВТФ+ТЧ.ПВТФ;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьП1ПриИзменении(Элемент)
ТЧ = Элементы.ТабличнаяЧасть.ТекущиеДанные;
ТЧ.ПроцентПремии = ТЧ.П1+ТЧ.П2+ТЧ.П3;
ТЧ.ДП = ТЧ.ДС/100*ТЧ.ПроцентПремии;
ТЧ.Премия = (ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной)/100*ТЧ.ПроцентПремии;
ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП+ТЧ.ДВТФ+ТЧ.ПВТФ;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьП2ПриИзменении(Элемент)
ТЧ = Элементы.ТабличнаяЧасть.ТекущиеДанные;
ТЧ.ПроцентПремии = ТЧ.П1+ТЧ.П2+ТЧ.П3;
ТЧ.ДП = ТЧ.ДС/100*ТЧ.ПроцентПремии;
ТЧ.Премия = (ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной)/100*ТЧ.ПроцентПремии;
ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП+ТЧ.ДВТФ+ТЧ.ПВТФ;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьП3ПриИзменении(Элемент)
ТЧ = Элементы.ТабличнаяЧасть.ТекущиеДанные;
ТЧ.ПроцентПремии = ТЧ.П1+ТЧ.П2+ТЧ.П3;
ТЧ.ДП = ТЧ.ДС/100*ТЧ.ПроцентПремии;
ТЧ.Премия = (ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной)/100*ТЧ.ПроцентПремии;
ТЧ.Итого = ТЧ.СуммаПоНаряду+ТЧ.ОплатаВВыходной+ТЧ.Премия+ТЧ.ДС+ТЧ.ДП+ТЧ.ДВТФ+ТЧ.ПВТФ;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПодработкаПриИзменении(Элемент)
	Если Элементы.ТабличнаяЧасть.ТекущиеДанные.Подработка Тогда
	Элементы.ТабличнаяЧасть.ТекущиеДанные.РабочихЧасов = 0;
	Элементы.ТабличнаяЧасть.ТекущиеДанные.РазрядоЧасов = 0;
	Элементы.ТабличнаяЧасть.ТекущиеДанные.ДС = 0;
	Элементы.ТабличнаяЧасть.ТекущиеДанные.ДП = 0;
	Элементы.ТабличнаяЧасть.ТекущиеДанные.СуммаПоНаряду = 0;
	Элементы.ТабличнаяЧасть.ТекущиеДанные.ОплатаВВыходной = 0;
	Элементы.ТабличнаяЧасть.ТекущиеДанные.Итого = 0;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция РаскрытьНаМПЗ(ПЗ)
НормРасх = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н(ПЗ.Изделие,ПЗ.ДатаЗапуска);
	Пока НормРасх.Следующий() Цикл				
		Если НормРасх.ВидЭлемента = Перечисления.ВидыЭлементовНормРасходов.Основа Тогда
		Возврат(НормРасх.Элемент);		
		КонецЕсли;	
	КонецЦикла;
Возврат(Неопределено);	
КонецФункции

&НаСервере
Процедура РассчитатьДляSMDНаСервере(РабочееМесто)
Объект.СуммаПоНаряду = 0;
	Если Найти(РабочееМесто.Наименование, "Оптический тест") > 0 Тогда
	ВидРасчёта = 1;
	Иначе
	ВидРасчёта = 2;
	КонецЕсли;  
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭтапыПроизводственныхЗаданий.ПЗ,
	|	ЭтапыПроизводственныхЗаданий.ДатаОкончания,
	|	ЭтапыПроизводственныхЗаданий.ПЗ.ЛинияSMD КАК ЛинияSMD
	|ИЗ
	|	РегистрСведений.ЭтапыПроизводственныхЗаданий КАК ЭтапыПроизводственныхЗаданий
	|ГДЕ
	|	ЭтапыПроизводственныхЗаданий.РабочееМесто = &РабочееМесто
	|	И ЭтапыПроизводственныхЗаданий.ДатаОкончания МЕЖДУ &ДатаНач И &ДатаКон";
Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Объект.Дата)+25200);
Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Объект.Дата)+25200); 
Запрос.УстановитьПараметр("РабочееМесто", РабочееМесто);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВидРасчёта = 1 Тогда
		НормыSMD = РегистрыСведений.НормыОптическогоТеста.ПолучитьПоследнее(Объект.Дата,Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.ПЗ.Изделие));
		Объект.СуммаПоНаряду = Объект.СуммаПоНаряду + ВыборкаДетальныеЗаписи.ПЗ.Количество*НормыSMD.Расценка;
		ЭтапСпецификации = РаскрытьНаМПЗ(ВыборкаДетальныеЗаписи.ПЗ);
			Если ЭтапСпецификации <> Неопределено Тогда
			НормыSMD = РегистрыСведений.НормыОптическогоТеста.ПолучитьПоследнее(Объект.Дата,Новый Структура("МПЗ",ЭтапСпецификации));
			Объект.СуммаПоНаряду = Объект.СуммаПоНаряду + ВыборкаДетальныеЗаписи.ПЗ.Количество*НормыSMD.Расценка;
			КонецЕсли;
		Иначе	
		НормыSMD = РегистрыСведений.НормыЭлектроконтроля.ПолучитьПоследнее(Объект.Дата,Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.ПЗ.Изделие));	
		Объект.СуммаПоНаряду = Объект.СуммаПоНаряду + ВыборкаДетальныеЗаписи.ПЗ.Количество*НормыSMD.Расценка;
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура РассчитатьДляКанбанаНаСервере()
Запрос = Новый Запрос;
СписокТО = Новый СписокЗначений;

ГруппаТехОпераций = Справочники.ТехОперации.НайтиПоРеквизиту("Подразделение",Объект.Подразделение);
ВыборкаТО = Справочники.ТехОперации.ВыбратьИерархически(ГруппаТехОпераций);
	Пока ВыборкаТО.Следующий() Цикл
		Если ВыборкаТО.ЭтоГруппа Тогда
		Продолжить;	
		КонецЕсли; 
	СписокТО.Добавить(ВыборкаТО.Ссылка,ВыборкаТО.Код);
	КонецЦикла;
СписокТО.СортироватьПоПредставлению();

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииКанбан.ДокументОснование.Линейка КАК Линейка,
	|	ВыпускПродукцииКанбан.Изделие КАК Изделие,
	|	ВыпускПродукцииКанбан.Количество КАК Количество
	|ИЗ
	|	Документ.ВыпускПродукцииКанбан КАК ВыпускПродукцииКанбан
	|ГДЕ
	|	ВыпускПродукцииКанбан.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииКанбан.ДокументОснование.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Изделие"; 
	Если Объект.ВедомостьВыходногоДня Тогда
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.Дата));	
	Иначе	
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Объект.Дата));	
	КонецЕсли;
Запрос.УстановитьПараметр("СписокЛинеек", Объект.Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаИзделия = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
Объект.СуммаПоНаряду = 0;
	Пока ВыборкаИзделия.Следующий() Цикл
		Для каждого ТО Из СписокТО Цикл
		НормыВремени = РегистрыСведений.НормыВремени.ПолучитьПоследнее(НачалоМесяца(Объект.Дата),Новый Структура("МПЗ,ТехОперация",ВыборкаИзделия.Изделие,ТО.Значение));
		НормыТО = РегистрыСведений.НормыТО.ПолучитьПоследнее(НачалоМесяца(Объект.Дата),Новый Структура("ТехОперация",ТО.Значение));
		Объект.СуммаПоНаряду = Объект.СуммаПоНаряду + Окр(НормыВремени.НормаВремени/60*НормыТО.Стоимость,2,РежимОкругления.Окр15как20)*ВыборкаИзделия.Количество;				
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура РассчитатьДляКанбанаУТПНаСервере()
Запрос = Новый Запрос;
СписокТО = Новый СписокЗначений;

ГруппаТехОпераций = Справочники.ТехОперации.НайтиПоРеквизиту("Подразделение",Объект.Подразделение);
ВыборкаТО = Справочники.ТехОперации.ВыбратьИерархически(ГруппаТехОпераций);
	Пока ВыборкаТО.Следующий() Цикл
		Если ВыборкаТО.ЭтоГруппа Тогда
		Продолжить;	
		КонецЕсли; 
	СписокТО.Добавить(ВыборкаТО.Ссылка,ВыборкаТО.Код);
	КонецЦикла;
СписокТО.СортироватьПоПредставлению();

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукцииКанбан.ДокументОснование.Линейка КАК Линейка,
	|	ВыпускПродукцииКанбан.Изделие КАК Изделие,
	|	ВыпускПродукцииКанбан.Количество КАК Количество,
	|	ВыпускПродукцииКанбан.ДокументОснование.ДокументОснование КАК ДокументОснованиеДокументОснование
	|ИЗ
	|	Документ.ВыпускПродукцииКанбан КАК ВыпускПродукцииКанбан
	|ГДЕ
	|	ВыпускПродукцииКанбан.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВыпускПродукцииКанбан.ДокументОснование.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Изделие"; 
	Если Объект.ВедомостьВыходногоДня Тогда
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.Дата));	
	Иначе	
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Объект.Дата));	
	КонецЕсли;
Запрос.УстановитьПараметр("СписокЛинеек", Объект.Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаИзделия = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
Объект.СуммаПоНаряду = 0;
	Пока ВыборкаИзделия.Следующий() Цикл
	Выборка = ВыборкаИзделия.Выбрать();
	    Пока Выборка.Следующий() Цикл
			Для каждого ТО Из СписокТО Цикл
			НормыВремени = РегистрыСведений.НормыВремени.ПолучитьПоследнее(НачалоМесяца(Объект.Дата),Новый Структура("МПЗ,ТехОперация",ВыборкаИзделия.Изделие,ТО.Значение));
			НормыТО = РегистрыСведений.НормыТО.ПолучитьПоследнее(НачалоМесяца(Объект.Дата),Новый Структура("ТехОперация",ТО.Значение));
			Объект.СуммаПоНаряду = Объект.СуммаПоНаряду + Окр(НормыВремени.НормаВремени/60*НормыТО.Стоимость,2,РежимОкругления.Окр15как20)*Выборка.Количество + Окр(НормыВремени.НормаВремениНаПартию/60*НормыТО.Стоимость,2,РежимОкругления.Окр15как20);				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокРабочихМест()
Запрос = Новый Запрос;
СписокРМ = Новый СписокЗначений;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	РабочиеМестаЛинеек.Ссылка
	|ИЗ
	|	Справочник.РабочиеМестаЛинеек КАК РабочиеМестаЛинеек
	|ГДЕ
	|	РабочиеМестаЛинеек.Линейка В ИЕРАРХИИ(&СписокЛинеек)
	|	И РабочиеМестаЛинеек.ПометкаУдаления = ЛОЖЬ
	|	И РабочиеМестаЛинеек.ЭтоГруппа = ЛОЖЬ";
Запрос.УстановитьПараметр("СписокЛинеек", Объект.Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокРМ.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
Возврат(СписокРМ);
КонецФункции

&НаСервере
Функция ПолучитьНаименованиеПодразделения()
Возврат(СокрЛП(Объект.Подразделение.Наименование));
КонецФункции

&НаСервере
Функция ПолучитьНаименованиеЛинейки(Линейка)
Возврат(СокрЛП(Линейка.Наименование));
КонецФункции

&НаСервере
Функция ПолучитьСуммуВВыходные()
СуммаВВыходные = 0;
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	БригаднаяСделка.Ссылка,
	|	БригаднаяСделка.СуммаПоНаряду
	|ИЗ
	|	Документ.БригаднаяСделка КАК БригаднаяСделка
	|ГДЕ
	|	БригаднаяСделка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И БригаднаяСделка.Подразделение = &Подразделение
	|	И БригаднаяСделка.ВедомостьВыходногоДня = ИСТИНА
	|	И БригаднаяСделка.Линейка = &Линейка";
Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Объект.Дата));
Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Объект.Дата));
Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
Запрос.УстановитьПараметр("Линейка", Объект.Линейка);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СуммаВВыходные = СуммаВВыходные + ВыборкаДетальныеЗаписи.СуммаПоНаряду;
	КонецЦикла;
Возврат(СуммаВВыходные);
КонецФункции

&НаКлиенте
Процедура Рассчитать(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		Если ПолучитьНаименованиеПодразделения() = "Богородицк линия SMD" Тогда
		РабочееМесто = Неопределено;
		СписокРМ = ПолучитьСписокРабочихМест();
		РабочееМесто = СписокРМ.ВыбратьЭлемент("Выберите рабочее место",РабочееМесто);
			Если РабочееМесто <> Неопределено Тогда
			РассчитатьДляSMDНаСервере(РабочееМесто.Значение);
			КонецЕсли;
		Объект.Комментарий = "Рабочее место: "+РабочееМесто.Значение;
		ИначеЕсли ПолучитьНаименованиеПодразделения() = "Богородицк УЛиШИ" Тогда
		РассчитатьДляКанбанаУТПНаСервере();
		Объект.Комментарий = "Бригада: "+ПолучитьНаименованиеЛинейки(Объект.Линейка);
		ИначеЕсли ПолучитьНаименованиеПодразделения() = "Богородицк УТП" Тогда
		РассчитатьДляКанбанаУТПНаСервере();
		Объект.Комментарий = "Бригада: "+ПолучитьНаименованиеЛинейки(Объект.Линейка);
		Иначе
		РассчитатьДляКанбанаНаСервере();
		Объект.Комментарий = "Бригада: "+ПолучитьНаименованиеЛинейки(Объект.Линейка);
		КонецЕсли;
	КонецЕсли; 
		Если Объект.БезУчётаВыходныхДней Тогда	
		Объект.СуммаПоНаряду = Объект.СуммаПоНаряду - ПолучитьСуммуВВыходные();
		КонецЕсли;  
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
НастройкиОбменаДанными = ОбщийМодульСинхронизации.ПолучитьНастройкиОбменаДанными("Зарплата");
V7 = ОбщийМодульКлиент.ПодключитьсяК1С77(НастройкиОбменаДанными.ПутьКБазеДанных,НастройкиОбменаДанными.Пользователь,НастройкиОбменаДанными.Пароль);
	Если V7 = Неопределено Тогда
	Возврат;	
	КонецЕсли;
Состояние("Обработка...",,"Выгрузка данных...");
Сотрудники = V7.CreateObject("Справочник.Сотрудники");
ВидыРасчетов = V7.CreateObject("Справочник.ВидыРасчетов");
ЗарплатаПремия = V7.CreateObject("Документ.НачисленияУдержанияСписком");

	Если Объект.ВедомостьВыходногоДня Тогда
	ЗарплатаПриказ = V7.CreateObject("Документ.ПриказОРаботеВПраздники");

	ЗарплатаПремия.Новый();	
	ЗарплатаПремия.ДатаДок = Объект.Дата;
	ЗарплатаПремия.УстановитьНовыйНомер("П"+Прав(Год(Объект.Дата),2)+"-");
	ВидыРасчетов.НайтиПоНаименованию("Доплата  (фикс.суммой)",0,1);
	ЗарплатаПремия.Расчет = ВидыРасчетов.Расчет;
	ЗарплатаПремия.Комментарий = "Доплата за период с "+Формат(Объект.Дата,"ДФ=dd.MM.yyyy")+" по "+Формат(Объект.Дата,"ДФ=dd.MM.yyyy") + "; мастер: "+Объект.Автор+"; бригада: "+Объект.Линейка;
	ЗарплатаПриказ.Новый();
	ЗарплатаПриказ.ДатаДок = Объект.Дата;
	ЗарплатаПриказ.УстановитьНовыйНомер("П"+Прав(Год(Объект.Дата),2)+"-");
	ЗарплатаПриказ.ДатаРаботы = Объект.Дата;
	ЗарплатаПриказ.ВДняхЧасах = 2;
	ЗарплатаПриказ.Комментарий = "Приказ за период с "+Формат(Объект.Дата,"ДФ=dd.MM.yyyy")+" по "+Формат(Объект.Дата,"ДФ=dd.MM.yyyy") + "; мастер: "+Объект.Автор+"; бригада: "+Объект.Линейка;
		Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл 
		Исполнитель = ПолучитьСотрудника(ТЧ.Исполнитель);
			Если Сотрудники.НайтиПоКоду(Исполнитель.Код,0) = 1 Тогда
				Если СокрЛП(Сотрудники.Наименование) = Исполнитель.Наименование Тогда	
				ЗарплатаПремия.НоваяСтрока();                          		
				ЗарплатаПремия.Сотрудник = Сотрудники.ТекущийЭлемент();
				ЗарплатаПремия.Начало = Объект.Дата;
				ЗарплатаПремия.Окончание = Объект.Дата; 
				ЗарплатаПремия.НазначитьТип("Величина","Число", 10, 2);
				ЗарплатаПремия.Величина = ТЧ.ДС;
			    ЗарплатаПриказ.НоваяСтрока();
				ЗарплатаПриказ.Сотрудник = Сотрудники.ТекущийЭлемент();
				ЗарплатаПриказ.КолвоРабочихЧасов = ТЧ.РабочихЧасов;
				Иначе
				Сообщить("Сотрудник "+ТЧ.Исполнитель+" не найден!");
				КонецЕсли; 
			Иначе
			Сообщить("Сотрудник "+ТЧ.Исполнитель+" не найден!");
			КонецЕсли;
		КонецЦикла;                                             
	ЗарплатаПремия.Записать();
	ЗарплатаПриказ.Записать(); 
	Сообщить("Создан документ Ввод расчёта списку сотрудников №"+ЗарплатаПремия.НомерДок);
	Сообщить("Приказ о работе в праздничные и выходные дни №"+ЗарплатаПриказ.НомерДок);	
	Иначе
	ЗарплатаБН = V7.CreateObject("Документ.НарядБригадный"); 
	
	ЗарплатаБН.Новый();	
	ЗарплатаБН.ДатаДок = Объект.Дата;
	ЗарплатаБН.УстановитьНовыйНомер("П"+Прав(Год(Объект.Дата),2)+"-");
	ЗарплатаБН.СуммаПоНаряду = Объект.ТабличнаяЧасть.Итог("СуммаПоНаряду")+?(ИспользоватьДС(),Объект.ТабличнаяЧасть.Итог("ДС"),0);
	ЗарплатаБН.Комментарий = "ЗП за период с "+Формат(НачалоМесяца(Объект.Дата),"ДФ=dd.MM.yyyy")+" по "+Формат(КонецМесяца(Объект.Дата),"ДФ=dd.MM.yyyy") + "; мастер: "+Объект.Автор+"; бригада: "+Объект.Линейка;
	ЗарплатаПремия.Новый();	
	ЗарплатаПремия.ДатаДок = Объект.Дата;
	ЗарплатаПремия.УстановитьНовыйНомер("П"+Прав(Год(Объект.Дата),2)+"-");
	ВидыРасчетов.НайтиПоНаименованию("Премия месячная(сумм)",0,1);
	ЗарплатаПремия.Расчет = ВидыРасчетов.Расчет;
	ЗарплатаПремия.Комментарий = "Премия за период с "+Формат(НачалоМесяца(Объект.Дата),"ДФ=dd.MM.yyyy")+" по "+Формат(КонецМесяца(Объект.Дата),"ДФ=dd.MM.yyyy") + "; мастер: "+Объект.Автор+"; бригада: "+Объект.Линейка;
		Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		Исполнитель = ПолучитьСотрудника(ТЧ.Исполнитель);
			Если Сотрудники.НайтиПоКоду(Исполнитель.Код,0) = 1 Тогда
				Если СокрЛП(Сотрудники.Наименование) = Исполнитель.Наименование Тогда				 
				ЗарплатаБН.НоваяСтрока(); 
				ЗарплатаБН.Сотрудник = Сотрудники.ТекущийЭлемент();
				ЗарплатаБН.Результат = ТЧ.СуммаПоНаряду+?(ИспользоватьДС(),ТЧ.ДС,0);
				ЗарплатаПремия.НоваяСтрока();                          		
				ЗарплатаПремия.Сотрудник = Сотрудники.ТекущийЭлемент();
				ЗарплатаПремия.Начало = НачалоМесяца(Объект.Дата);
				ЗарплатаПремия.Окончание = КонецМесяца(Объект.Дата);
				ЗарплатаПремия.НазначитьТип("Величина","Число", 10, 2);
				ЗарплатаПремия.Величина = ТЧ.Премия+ТЧ.ДП;			
				Иначе
				Сообщить("Сотрудник "+ТЧ.Исполнитель+" не найден!");
				КонецЕсли; 
			Иначе
			Сообщить("Сотрудник "+ТЧ.Исполнитель+" не найден!");
			КонецЕсли;
		КонецЦикла; 
	ЗарплатаБН.Записать();                                             
	ЗарплатаПремия.Записать();
	Сообщить("Создан документ Бригадный наряд №"+ЗарплатаБН.НомерДок); 
	Сообщить("Создан документ Ввод расчёта списку сотрудников №"+ЗарплатаПремия.НомерДок);	
	КонецЕсли;
КонецПроцедуры

