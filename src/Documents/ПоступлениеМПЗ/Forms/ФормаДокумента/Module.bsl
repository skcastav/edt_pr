
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не Объект.Договор.Пустая() Тогда
	Элементы.ТабличнаяЧастьЦенаВалюта.Формат = "ЧЦ=15; ЧДЦ="+Объект.Договор.ОкруглятьВалютныеЦены;
	Элементы.ТабличнаяЧастьЦенаВалюта.ФорматРедактирования = "ЧЦ=15; ЧДЦ="+Объект.Договор.ОкруглятьВалютныеЦены; 
	Элементы.ТабличнаяЧастьСуммаВалюта.Формат = "ЧЦ=15; ЧДЦ="+Объект.Договор.ОкруглятьВалютныеЦены;
	Элементы.ТабличнаяЧастьСуммаВалюта.ФорматРедактирования = "ЧЦ=15; ЧДЦ="+Объект.Договор.ОкруглятьВалютныеЦены;
	Элементы.ТабличнаяЧастьВсегоВалюта.Формат = "ЧЦ=15; ЧДЦ="+Объект.Договор.ОкруглятьВалютныеЦены;
	Элементы.ТабличнаяЧастьВсегоВалюта.ФорматРедактирования = "ЧЦ=15; ЧДЦ="+Объект.Договор.ОкруглятьВалютныеЦены;
	КонецЕсли; 
		Если Объект.Договор.Валюта <> Константы.ОсновнаяВалюта.Получить() Тогда
		Элементы.ТабличнаяЧастьЦенаВалюта.Видимость = Истина;
		Элементы.ТабличнаяЧастьСуммаВалюта.Видимость = Истина;
		Элементы.ТабличнаяЧастьВсегоВалюта.Видимость = Истина; 
		КонецЕсли;
Элементы.ТабличнаяЧастьСтавкаНДС.Видимость = Не Объект.Договор.БезНДС;
Элементы.ТабличнаяЧастьНДС.Видимость = Не Объект.Договор.БезНДС;
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		Если ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы Тогда
		ТЧ.ГруппаПоЗакупкам = ТЧ.МПЗ.ГруппаПоЗакупкам;
		ТЧ.ТребуетсяВходнойКонтроль = ТЧ.МПЗ.ТребуетсяВходнойКонтроль;
		КонецЕсли;
	НаборЗаписей = РегистрыСведений.ФотографииПартийМПЗ.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.МПЗ.Установить(ТЧ.МПЗ);
	НаборЗаписей.Отбор.Документ.Установить(Объект.Номер);	
	НаборЗаписей.Прочитать();
	    Для Каждого Запись Из НаборЗаписей Цикл	 
		ТЧ.Файл = Истина;
		Прервать;
		КонецЦикла;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
СписокРазрешенныхРолей = Новый СписокЗначений;

СписокРазрешенныхРолей.Добавить("Администратор");
СписокРазрешенныхРолей.Добавить("Мастер");
СписокРазрешенныхРолей.Добавить("ГлавныйДиспетчер");
ЭтотОбъект.ТолькоПросмотр = ОбщийМодульСозданиеДокументов.ЗапретРедактирования(Объект.Ссылка,Истина,Истина,СписокРазрешенныхРолей);
Элементы.ВыгрузитьВБазуСбыта.Доступность = Не Объект.Выгружено;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьМПЗПриИзменении(Элемент)
	Если Не Элементы.ТабличнаяЧасть.ТекущиеДанные.МПЗ.Пустая() Тогда
	ТабличнаяЧастьМПЗПриИзмененииНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ТабличнаяЧастьМПЗПриИзмененииНаСервере(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
ТЧ.ЕдиницаИзмерения = ТЧ.МПЗ.ОсновнаяЕдиницаИзмерения;
	Если ТипЗнч(ТЧ.МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;	
	ТЧ.ГруппаПоЗакупкам = ТЧ.МПЗ.ГруппаПоЗакупкам;
	ТЧ.ТребуетсяВходнойКонтроль = ТЧ.МПЗ.ТребуетсяВходнойКонтроль;
	Иначе
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;	
	КонецЕсли;
		Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			Если Не ОбщийМодульРаботаСРегистрами.ВнесёнВДоговорныеПозиции(Объект.Договор,ТЧ.МПЗ,Объект.ДокументОснование.Дата) Тогда
			ТЧ.НЦ = Истина;
			Цены = РегистрыСведений.Цены.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("МПЗ",ТЧ.МПЗ));
			ТЧ.Цена = Цены.Цена*ТЧ.ЕдиницаИзмерения.Коэффициент;
			КонецЕсли;
		КонецЕсли; 
ПересчётСтрокиТабличнойЧасти(Стр);
КонецПроцедуры

&НаСервере
Функция ВнесёнВДоговорныеПозиции(МПЗ)
//Запрос = Новый Запрос;

//Запрос.Текст = 
//	"ВЫБРАТЬ ПЕРВЫЕ 1
//	|	ДоговорныеПозиции.Ссылка
//	|ИЗ
//	|	Справочник.ДоговорныеПозиции КАК ДоговорныеПозиции
//	|ГДЕ
//	|	ДоговорныеПозиции.Владелец = &Владелец
//	|	И ДоговорныеПозиции.МПЗ = &МПЗ";
//Запрос.УстановитьПараметр("Владелец", Объект.Договор);
//Запрос.УстановитьПараметр("МПЗ", МПЗ);
//РезультатЗапроса = Запрос.Выполнить();
//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
//	Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
//	Возврат(Истина);
//	Иначе
//	Возврат(Ложь);
//	КонецЕсли; 			
КонецФункции

&НаСервере
Процедура ПодборМПЗНаСервере(ТаблицаМПЗ)
	Для каждого ТЧ_МПЗ Из ТаблицаМПЗ Цикл
	ТЧ = Объект.ТабличнаяЧасть.Добавить();
		Если ТипЗнч(ТЧ_МПЗ.МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
		ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
		ТЧ.ГруппаПоЗакупкам = ТЧ_МПЗ.МПЗ.ГруппаПоЗакупкам;		
		Иначе
		ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;	
		КонецЕсли; 
	ТЧ.МПЗ = ТЧ_МПЗ.МПЗ;
	ТЧ.Количество = ТЧ_МПЗ.Количество;
	ТЧ.ЕдиницаИзмерения = ТЧ_МПЗ.ЕдиницаИзмерения;
		Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			Если Не ОбщийМодульРаботаСРегистрами.ВнесёнВДоговорныеПозиции(Объект.Договор,ТЧ_МПЗ.МПЗ,Объект.ДокументОснование.Дата) Тогда
			ТЧ.НЦ = Истина;
			Цены = РегистрыСведений.Цены.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("МПЗ",ТЧ_МПЗ.МПЗ));
			ТЧ.Цена = Цены.Цена*ТЧ.ЕдиницаИзмерения.Коэффициент;
			КонецЕсли;
		Иначе
		ТЧ.НЦ = Истина;
		Цены = РегистрыСведений.Цены.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("МПЗ",ТЧ_МПЗ.МПЗ));
		ТЧ.Цена = Цены.Цена*ТЧ.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли; 
	ПересчётСтрокиТабличнойЧасти(ТЧ.ПолучитьИдентификатор());
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ПодборМПЗ(Команда)
ТаблицаМПЗ = ОткрытьФормуМодально("ОбщаяФорма.ПодборМПЗ", Новый Структура("МестоХранения",Объект.МестоХранения));
	Если ТаблицаМПЗ <> Неопределено Тогда
		Если ТаблицаМПЗ.Количество() > 0 Тогда
			Если Объект.ТабличнаяЧасть.Количество() > 0 Тогда
				Если Вопрос("Очистить таблицу?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				Объект.ТабличнаяЧасть.Очистить();		
				КонецЕсли; 			
			КонецЕсли; 
		ПодборМПЗНаСервере(ТаблицаМПЗ);
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура КурсПриИзменении(Элемент)
ПересчётТабличнойЧасти();
КонецПроцедуры

&НаКлиенте
Процедура БезНДСПриИзменении(Элемент)
Элементы.ТабличнаяЧастьСтавкаНДС.Видимость = Не Объект.Договор.БезНДС;
Элементы.ТабличнаяЧастьНДС.Видимость = Не Объект.Договор.БезНДС;
ПересчётТабличнойЧасти();
КонецПроцедуры

&НаСервере
Функция ПолучитьЦену(МПЗ)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоговорныеПозицииСрезПоследних.Цена,
	|	ДоговорныеПозицииСрезПоследних.Валюта
	|ИЗ
	|	РегистрСведений.ДоговорныеПозиции.СрезПоследних(&НаДату, ) КАК ДоговорныеПозицииСрезПоследних
	|ГДЕ
	|	ДоговорныеПозицииСрезПоследних.ДоговорнаяПозиция.Владелец = &Владелец
	|	И ДоговорныеПозицииСрезПоследних.ДоговорнаяПозиция.МПЗ = &МПЗ";
Запрос.УстановитьПараметр("Владелец", Объект.Договор);
Запрос.УстановитьПараметр("МПЗ", МПЗ);
Запрос.УстановитьПараметр("НаДату", Объект.Дата);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Цена = ВыборкаДетальныеЗаписи.Цена;
		Если Объект.Договор.Валюта <> ВыборкаДетальныеЗаписи.Валюта Тогда
		КурсВалютыМПЗ = ОбщийМодульВызовСервера.КурсДляВалюты(ВыборкаДетальныеЗаписи.Валюта,Объект.Дата);		
		ЦенаВРублях = Цена*КурсВалютыМПЗ;
		Цена = ЦенаВРублях/Объект.Курс;
		КонецЕсли; 
			Если Не Объект.Договор.БезНДС Тогда	
			СтавкаНДС = Константы.ОсновнаяСтавкаНДС.Получить();	
			Цена = Цена/(100+СтавкаНДС.Ставка)*100;
			КонецЕсли; 
	Возврат(Цена);
	КонецЦикла;
Возврат(0);
КонецФункции

&НаСервере
Процедура ПересчётСтрокиТабличнойЧасти(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
	Если ТЧ.НЦ Тогда
		Если Объект.Договор.Валюта <> Константы.ОсновнаяВалюта.Получить() Тогда
		ТЧ.Цена = ТЧ.ЦенаВалюта*Объект.Курс;
		КонецЕсли;
	Иначе
		Если Объект.Договор.Валюта <> Константы.ОсновнаяВалюта.Получить() Тогда
			Если  Не Объект.Договор.ДоговорСНефиксированнымиЦенами Тогда
			ТЧ.ЦенаВалюта = ПолучитьЦену(ТЧ.МПЗ);
				Если ТЧ.ЦенаВалюта > 0 Тогда
				ТЧ.НЦ = Ложь;			
				КонецЕсли; 
			ТЧ.Цена = ТЧ.ЦенаВалюта*Объект.Курс;
			КонецЕсли;
		Иначе
			Если Объект.Договор.ДоговорСНефиксированнымиЦенами Тогда
			Цены = РегистрыСведений.Цены.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("МПЗ",ТЧ.МПЗ));
			ТЧ.Цена = Цены.Цена*ТЧ.ЕдиницаИзмерения.Коэффициент;			
			Иначе
			ТЧ.Цена = ПолучитьЦену(ТЧ.МПЗ);
				Если ТЧ.Цена > 0 Тогда
				ТЧ.НЦ = Ложь;			
				КонецЕсли; 
			КонецЕсли;  
		КонецЕсли;		
	КонецЕсли; 
ТЧ.Сумма = ТЧ.Цена*ТЧ.Количество;	
	Если Объект.Договор.БезНДС Тогда
	ТЧ.СтавкаНДС = Справочники.СтавкиНДС.ПустаяСсылка();
	ТЧ.НДС = 0;
	ТЧ.Всего = ТЧ.Сумма;
	Иначе
	ТЧ.СтавкаНДС = Константы.ОсновнаяСтавкаНДС.Получить();
	ТЧ.НДС = ТЧ.Сумма*ТЧ.СтавкаНДС.Ставка/100;
	ТЧ.Всего = ТЧ.Сумма + ТЧ.НДС;		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПересчётТабличнойЧасти()
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	ПересчётСтрокиТабличнойЧасти(ТЧ.ПолучитьИдентификатор());
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьВидМПЗПриИзменении(Элемент)
Элементы.ТабличнаяЧасть.ТекущиеДанные.МПЗ = Неопределено;
Элементы.ТабличнаяЧасть.ТекущиеДанные.Количество = 0;
Элементы.ТабличнаяЧасть.ТекущиеДанные.ЕдиницаИзмерения = Неопределено;
Элементы.ТабличнаяЧасть.ТекущиеДанные.Цена = 0;
Элементы.ТабличнаяЧасть.ТекущиеДанные.Сумма = 0;
Элементы.ТабличнаяЧасть.ТекущиеДанные.НДС = 0;
Элементы.ТабличнаяЧасть.ТекущиеДанные.Всего = 0;
КонецПроцедуры

&НаСервере
Процедура ТабличнаяЧастьКоличествоПриИзмененииНаСервере(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
ТЧ.Сумма = ТЧ.Цена*ТЧ.Количество;
ТЧ.СуммаВалюта = ТЧ.ЦенаВалюта*ТЧ.Количество;
	Если Не Объект.Договор.БезНДС Тогда
	ТЧ.НДС = ТЧ.Сумма*ТЧ.СтавкаНДС.Ставка/100;
	КонецЕсли;
ТЧ.Всего = ТЧ.Сумма + ТЧ.НДС;
ТЧ.ВсегоВалюта = ТЧ.СуммаВалюта;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьКоличествоПриИзменении(Элемент)
ТабличнаяЧастьКоличествоПриИзмененииНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ТабличнаяЧастьЕдиницаИзмеренияПриИзмененииНаСервере(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
ПересчётСтрокиТабличнойЧасти(Стр);
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьЕдиницаИзмеренияПриИзменении(Элемент)
ТабличнаяЧастьЕдиницаИзмеренияПриИзмененииНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ТабличнаяЧастьЦенаПриИзмененииНаСервере(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
ТЧ.Сумма = ТЧ.Цена*ТЧ.Количество;
	Если Не Объект.Договор.БезНДС Тогда
	ТЧ.НДС = ТЧ.Сумма*ТЧ.СтавкаНДС.Ставка/100;
	КонецЕсли;
		Если Объект.Договор.Валюта <> Константы.ОсновнаяВалюта.Получить() Тогда
		ТЧ.ЦенаВалюта = ТЧ.Цена/Объект.Курс;
		КонецЕсли; 
ТЧ.Всего = ТЧ.Сумма + ТЧ.НДС;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьЦенаПриИзменении(Элемент)
ТабличнаяЧастьЦенаПриИзмененииНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ТабличнаяЧастьСуммаПриИзмененииНаСервере(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
ТЧ.Цена = ТЧ.Сумма/ТЧ.Количество;
	Если Не Объект.Договор.БезНДС Тогда
	ТЧ.НДС = ТЧ.Сумма*ТЧ.СтавкаНДС.Ставка/100;
	КонецЕсли;
ТЧ.Всего = ТЧ.Сумма + ТЧ.НДС;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСуммаПриИзменении(Элемент)
ТабличнаяЧастьСуммаПриИзмененииНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ПроверкаДоговорныхПозиций()
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			Если Не ОбщийМодульРаботаСРегистрами.ВнесёнВДоговорныеПозиции(Объект.Договор,ТЧ.МПЗ,Объект.ДокументОснование.Дата) Тогда
			ТЧ.НЦ = Истина;
			Цены = РегистрыСведений.Цены.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("МПЗ",ТЧ.МПЗ));
			ТЧ.Цена = Цены.Цена*ТЧ.ЕдиницаИзмерения.Коэффициент;
			Иначе
			ТЧ.НЦ = Ложь;
			КонецЕсли; 
		Иначе
		ТЧ.НЦ = Истина;
		Цены = РегистрыСведений.Цены.ПолучитьПоследнее(ТекущаяДата(),Новый Структура("МПЗ",ТЧ.МПЗ));
		ТЧ.Цена = Цены.Цена*ТЧ.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
ДоговорПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДоговорПриИзмененииНаСервере()
Элементы.ТабличнаяЧастьЦенаВалюта.Формат = "ЧЦ=15; ЧДЦ="+Объект.Договор.ОкруглятьВалютныеЦены;
Элементы.ТабличнаяЧастьЦенаВалюта.ФорматРедактирования = "ЧЦ=15; ЧДЦ="+Объект.Договор.ОкруглятьВалютныеЦены; 
Элементы.ТабличнаяЧастьСуммаВалюта.Формат = "ЧЦ=15; ЧДЦ="+Объект.Договор.ОкруглятьВалютныеЦены;
Элементы.ТабличнаяЧастьСуммаВалюта.ФорматРедактирования = "ЧЦ=15; ЧДЦ="+Объект.Договор.ОкруглятьВалютныеЦены;
Элементы.ТабличнаяЧастьВсегоВалюта.Формат = "ЧЦ=15; ЧДЦ="+Объект.Договор.ОкруглятьВалютныеЦены;
Элементы.ТабличнаяЧастьВсегоВалюта.ФорматРедактирования = "ЧЦ=15; ЧДЦ="+Объект.Договор.ОкруглятьВалютныеЦены;
Объект.Курс = ОбщийМодульВызовСервера.КурсДляВалюты(Объект.Договор.Валюта,Объект.Дата);
	Если Объект.Договор.Валюта <> Константы.ОсновнаяВалюта.Получить() Тогда
	Элементы.ТабличнаяЧастьЦенаВалюта.Видимость = Истина;
	Элементы.ТабличнаяЧастьСуммаВалюта.Видимость = Истина;
	Элементы.ТабличнаяЧастьВсегоВалюта.Видимость = Истина;
	Иначе
	Элементы.ТабличнаяЧастьЦенаВалюта.Видимость = Ложь;
	Элементы.ТабличнаяЧастьСуммаВалюта.Видимость = Ложь;
	Элементы.ТабличнаяЧастьВсегоВалюта.Видимость = Ложь;
	КонецЕсли;		
Элементы.ТабличнаяЧастьСтавкаНДС.Видимость = Не Объект.Договор.БезНДС;
Элементы.ТабличнаяЧастьНДС.Видимость = Не Объект.Договор.БезНДС;  
ПроверкаДоговорныхПозиций();
ПересчётТабличнойЧасти();
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСтавкаНДСПриИзменении(Элемент)
ТабличнаяЧастьСтавкаНДСПриИзмененииНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ТабличнаяЧастьСтавкаНДСПриИзмененииНаСервере(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
	Если Не Объект.Договор.БезНДС Тогда
	ТЧ.НДС = ТЧ.Сумма*ТЧ.СтавкаНДС.Ставка/100;
	КонецЕсли;
ТЧ.Всего = ТЧ.Сумма + ТЧ.НДС;
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
КонтрагентПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере()
Объект.Договор = Объект.Контрагент.ОсновнойДоговор;
ДоговорПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДокументОснованиеПриИзменении(Элемент)
ДокументОснованиеПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДокументОснованиеПриИзмененииНаСервере()
	Если Не ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
	Возврат;
	КонецЕсли; 
Объект.ТабличнаяЧасть.Очистить();
Об = РеквизитФормыВЗначение("Объект");
Об.ОбработкаЗаполнения(Объект.ДокументОснование,Истина);
ВыгрузкаТЧ = Об.ТабличнаяЧасть.Выгрузить();
Объект.ТабличнаяЧасть.Загрузить(ВыгрузкаТЧ);
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьЦенаВалютаПриИзменении(Элемент)
ТабличнаяЧастьЦенаВалютаПриИзмененииНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ТабличнаяЧастьЦенаВалютаПриИзмененииНаСервере(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
ТЧ.СуммаВалюта = ТЧ.ЦенаВалюта*ТЧ.Количество;
ТЧ.ВсегоВалюта = ТЧ.СуммаВалюта;
	Если Объект.Договор.БезНДС Тогда
	ТЧ.Цена = ТЧ.ЦенаВалюта*Объект.Курс;
	Иначе
	СтавкаНДС = Константы.ОсновнаяСтавкаНДС.Получить();	
	ТЧ.Цена = (ТЧ.ЦенаВалюта/(100+СтавкаНДС.Ставка)*100)*Объект.Курс;
	КонецЕсли;
ТЧ.Сумма = ТЧ.Цена*ТЧ.Количество;
	Если Не Объект.Договор.БезНДС Тогда
	ТЧ.НДС = ТЧ.Сумма*ТЧ.СтавкаНДС.Ставка/100;
	КонецЕсли;
ТЧ.Всего = ТЧ.Сумма + ТЧ.НДС;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСуммаВалютаПриИзменении(Элемент)
ТабличнаяЧастьСуммаВалютаПриИзмененииНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ТабличнаяЧастьСуммаВалютаПриИзмененииНаСервере(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
ТЧ.ЦенаВалюта = ТЧ.СуммаВалюта/ТЧ.Количество;
ТЧ.ВсегоВалюта = ТЧ.СуммаВалюта;
	Если Объект.Договор.БезНДС Тогда
	ТЧ.Цена = ТЧ.ЦенаВалюта*Объект.Курс;
	Иначе
	СтавкаНДС = Константы.ОсновнаяСтавкаНДС.Получить();	
	ТЧ.Цена = (ТЧ.ЦенаВалюта/(100+СтавкаНДС.Ставка)*100)*Объект.Курс;
	КонецЕсли;
ТЧ.Сумма = ТЧ.Цена*ТЧ.Количество;
	Если Не Объект.Договор.БезНДС Тогда
	ТЧ.НДС = ТЧ.Сумма*ТЧ.СтавкаНДС.Ставка/100;
	КонецЕсли;
ТЧ.Всего = ТЧ.Сумма + ТЧ.НДС;
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
ДатаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	Если Не Объект.Договор.Пустая() Тогда
	Объект.Курс = ОбщийМодульВызовСервера.КурсДляВалюты(Объект.Договор.Валюта,Объект.Дата);
	ПересчётТабличнойЧасти();	
	Сообщить("Курс изменён. Табличная часть пересчитана!");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПолучитьДатуДок(Док)
Возврат(Док.Дата);
КонецФункции

&НаКлиенте
Процедура ПоказатьДвижения(Команда)
ИмяОтчета = "ОтчётПоРегиструЗаказыПоставщикам";
ПараметрыФормы = Новый Структура;
ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьПользовательскиеНастройкиОтчетаСКД(ИмяОтчета,ПолучитьДатуДок(Объект.ДокументОснование),ТекущаяДата(),Новый Структура("ЗаказПоставщику",Объект.ДокументОснование),"ПоЗаказам"));
ПараметрыФормы.Вставить("КлючВарианта","ПоЗаказам"); 
ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);
КонецПроцедуры

&НаСервере
Процедура ПечатьПриходныйОрдерНаСервере(ТабДок)
Макет = Документы.ПоступлениеМПЗ.ПолучитьМакет("М4");
ОблШапка = Макет.ПолучитьОбласть("Шапка");
ОблПредупреждение = Макет.ПолучитьОбласть("Предупреждение");	 	
ОблСтрока = Макет.ПолучитьОбласть("Строка");
ОблПодвал = Макет.ПолучитьОбласть("Подвал");
ОблШапка.Параметры.Организация = Константы.НазваниеОрганизации.Получить();
ОблШапка.Параметры.КодОКПО = СокрЛП(Константы.КодОКПО.Получить());
ОблШапка.Параметры.Номер = Объект.Номер;
ОблШапка.Параметры.НомерСопроводительногоДокумента = Объект.НомерДокВходящий;
ОблШапка.Параметры.Поставщик = Объект.Контрагент;
ОблШапка.Параметры.КодПоставщика = Объект.Контрагент.Код;
ОблШапка.Параметры.СтруктурноеПодразделение = Объект.МестоХранения;
ОблШапка.Параметры.МестоХранения = Объект.МестоХранения;
ОблШапка.Параметры.КоррСчет = "60.1";
ОблШапка.Параметры.ДатаСоставления = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
ТабДок.Вывести(ОблШапка);
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл	
	ОблСтрока.Параметры.Материал = СокрЛП(ТЧ.МПЗ.ПолнНаименование);
		Если ТЧ.МПЗ.Товар.Пустая() Тогда
		ОблСтрока.Параметры.НоменклатурныйНомер = СтрЗаменить(ТЧ.МПЗ.ПолныйКод(),"/","-");
		Иначе	
		ОблСтрока.Параметры.НоменклатурныйНомер = ТЧ.МПЗ.Товар.Код;
		КонецЕсли;
	ОблСтрока.Параметры.ЕдиницаИзмерения = СокрЛП(ТЧ.ЕдиницаИзмерения.ЕдиницаИзмерения.Наименование);
	ОблСтрока.Параметры.КодЕдиницыИзмерения = СокрЛП(ТЧ.ЕдиницаИзмерения.ЕдиницаИзмерения.Код);
	ОблСтрока.Параметры.Количество = Формат(ТЧ.Количество,"ЧЦ=14; ЧДЦ=3; ЧРД=.");
	ОблСтрока.Параметры.Цена = Формат(ТЧ.Цена,"ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧРГ=,");	
	ОблСтрока.Параметры.Сумма = Формат(ТЧ.Сумма,"ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧРГ=,");
		Если Не Объект.Договор.БезНДС Тогда
		ОблСтрока.Параметры.НДС = Формат(ТЧ.НДС,"ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧРГ=,");
		КонецЕсли;
	ОблСтрока.Параметры.Всего = Формат(ТЧ.Всего,"ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧРГ=,");	
	ТабДок.Вывести(ОблСтрока);
	КонецЦикла; 
ОблПодвал.Параметры.ИтогоСумма = Формат(Объект.ТабличнаяЧасть.Итог("Сумма"),"ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧРГ=,");
	Если Не Объект.Договор.БезНДС Тогда
	ОблПодвал.Параметры.ИтогоНДС = Формат(Объект.ТабличнаяЧасть.Итог("НДС"),"ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧРГ=,");
	КонецЕсли; 
ОблПодвал.Параметры.ИтогоВсего = Формат(Объект.ТабличнаяЧасть.Итог("Всего"),"ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧРГ=,");
ТабДок.Вывести(ОблПодвал);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьПриходныйОрдер(Команда)
	Если ЭтаФорма.Модифицированность Тогда	
	Сообщить("Для печати документ необходимо перепровести.");
	Возврат;		
	КонецЕсли;
ТабДок = Новый ТабличныйДокумент;

ПечатьПриходныйОрдерНаСервере(ТабДок);
ТабДок.Показать("Приходный ордер (форма №М-4)");
ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЯчейкиХранения(Команда)
СписокМПЗ = Новый СписокЗначений;

	Для каждого ТЧ из Объект.ТабличнаяЧасть Цикл
	СписокМПЗ.Добавить(ТЧ.МПЗ);	
	КонецЦикла; 
ИмяОтчета = "ОтчетПоРегиструЯчейкиХранения";
ПараметрыФормы = Новый Структура;
ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьПользовательскиеНастройкиОтчетаСКД(ИмяОтчета,Неопределено,Неопределено,Новый Структура("МестоХранения,МПЗ",Объект.МестоХранения,СписокМПЗ),"ПоМПЗ"));
ПараметрыФормы.Вставить("КлючВарианта","ПоМПЗ"); 
ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);
КонецПроцедуры

&НаСервере
Функция ПечатьQRКодыНаСервере()
ТабДок = Новый ТабличныйДокумент;

barcode = ПолучитьCOMОбъект("","STROKESCRIBE.StrokeScribeClass.1");
barcode.Alphabet=25; //QRCODE
Макет = ПолучитьОбщийМакет("QRКодКанбан3");
ОблQRКод = Макет.ПолучитьОбласть("QRКод|Секция");
Четный = Ложь;
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	QRCode = ЗначениеВСтрокуВнутр(ТЧ.МПЗ);
	ИмяФайла=ПолучитьИмяВременногоФайла("wmf");
	barcode.Text=QRCode;
	barcode.UTF8=1;
	barcode.QrECL=2;
	код=barcode.SavePicture(ИмяФайла,7,100,100);          
		Если код <> 0 Тогда //Проверка результата генерации штрихкода
		Сообщить(строка(код) + " - " + barcode.ErrorDescription);
		Возврат Неопределено;
		КонецЕсли;
	рис=ОблQRКод.Рисунки.QRCode;
	рис.РазмерКартинки=РазмерКартинки.Пропорционально;
	рис.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
	рис.Картинка = Новый Картинка(ИмяФайла);
	ОблQRКод.Параметры.Наименование = СокрЛП(ТЧ.МПЗ.Наименование); 
		Если Не Четный Тогда
		ТабДок.Вывести(ОблQRКод);
		Четный = Истина;
		Иначе	
		ТабДок.Присоединить(ОблQRКод);
		Четный = Ложь;
		КонецЕсли;  
	УдалитьФайлы(ИмяФайла);
	КонецЦикла; 
ТабДок.РазмерСтраницы = "A4";
ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьQRКоды(Команда)
ТД = ПечатьQRКодыНаСервере();
	Если ТД <> Неопределено Тогда
	ТД.Показать("QR-коды");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьВБазуСбытаНаСервере()
БазаСбыта = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Константы.БазаДанных1ССбыт.Получить());
	Если БазаСбыта = Неопределено Тогда
	Сообщить("Не открыто соединение с базой сбыта!");
	Возврат;
	КонецЕсли;
флОшибки = Ложь;
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	бсСклад = БазаСбыта.Справочники.Склады.НайтиПоНаименованию("СД 423",Истина);
		Если Найти(Объект.Контрагент.ИНН,"\") > 0 Тогда
		ИНН = Лев(Объект.Контрагент.ИНН,Найти(Объект.Контрагент.ИНН,"\")-1);
		ИначеЕсли Найти(Объект.Контрагент.ИНН,"/") > 0 Тогда
		ИНН = Лев(Объект.Контрагент.ИНН,Найти(Объект.Контрагент.ИНН,"/")-1);			
		Иначе
		ИНН = СокрЛП(Объект.Контрагент.ИНН);
		КонецЕсли; 
	бсКонтрагент = БазаСбыта.Справочники.Контрагенты.НайтиПоРеквизиту("ИНН",ИНН);
		Если бсКонтрагент.Пустая() Тогда
		Сообщить(СокрЛП(Объект.Контрагент.Наименование) + " (ИНН: " + ИНН + ") - контрагент не найден в базе сбыта!");
		ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
		Возврат;
		КонецЕсли;
			Если бсКонтрагент.Партнер.Пустая() Тогда
			Сообщить(СокрЛП(Объект.Контрагент.Наименование) + " (ИНН: " + ИНН + ") - контрагент не привязан к справочнику Партнеры в базе сбыта!");
			ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
			Возврат;
			КонецЕсли;  

	бсНовДок = БазаСбыта.Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
	бсНовДок.Дата = Объект.Дата;
	//бсНовДок.УстановитьНовыйНомер("ПБ-");
	бсНовДок.Организация = БазаСбыта.Справочники.Организации.НайтиПоКоду("02");
	бсНовДок.Партнер = бсКонтрагент.Партнер;
	бсНовДок.Склад = бсСклад;
	бсНовДок.ХозяйственнаяОперация = БазаСбыта.Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
	бсНовДок.НалогообложениеНДС = БазаСбыта.Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	бсНовДок.БанковскийСчетОрганизации = БазаСбыта.ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(бсНовДок.Организация);
	бсНовДок.Валюта = БазаСбыта.Справочники.Валюты.НайтиПоКоду("643");
	бсНовДок.ВалютаВзаиморасчетов = БазаСбыта.Справочники.Валюты.НайтиПоКоду("643");
		Для каждого ТЧ_МПЗ Из Объект.ТабличнаяЧасть Цикл
			Если ТЧ_МПЗ.МПЗ.Товар.Пустая() Тогда
			флОшибки = Истина;
			Сообщить(СокрЛП(ТЧ_МПЗ.МПЗ.Наименование)+" - не заполнен реквизит соответствия с товаром!");
			Продолжить;				
			КонецЕсли; 
		Артикул = ОбщийМодульВызовСервера.ПолучитьАртикулПоКодуТовара(ТЧ_МПЗ.МПЗ.Товар.Код);
		бсНомен = БазаСбыта.Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",Артикул);
			Если бсНомен.Пустая() Тогда
			флОшибки = Истина;
			Сообщить(СокрЛП(ТЧ_МПЗ.МПЗ.Наименование)+" - товар с артикулом "+Артикул+" не найден в торговой базе!");
			Продолжить;
			КонецЕсли;
		ТЧ = бсНовДок.Товары.Добавить();
			Если Не ТЧ_МПЗ.ГТД.Пустая() Тогда
			бсНомерГТД = БазаСбыта.Справочники.НомераГТД.НайтиПоКоду(ТЧ_МПЗ.ГТД.Наименование);
				Если бсНомерГТД.Пустая() Тогда	
				бсНомерГТД = БазаСбыта.Справочники.НомераГТД.СоздатьЭлемент();
				бсНомерГТД.Код = ТЧ_МПЗ.ГТД.Наименование;
				//Страна = БазаСбыта.Справочники.СтраныМира.ПустаяСсылка();
				//ВыборкаСтрана = БазаСбыта.Справочники.СтраныМира.Выбрать(,,Новый Структура("Код",ТЧ_МПЗ.ГТД.Страна.Код));
				//	Пока ВыборкаСтрана.Следующий() Цикл
				//		Если ВыборкаСтрана.ПометкаУдаления = Ложь Тогда
				//		Страна = ВыборкаСтрана.Ссылка;
				//		Прервать;
				//		КонецЕсли; 
				//	КонецЦикла; 
				бсНомерГТД.СтранаПроисхождения = БазаСбыта.Справочники.СтраныМира.НайтиПоКоду(ТЧ_МПЗ.ГТД.Страна.Код);
				бсНомерГТД.Записать();
				КонецЕсли;
			ТЧ.НомерГТД = бсНомерГТД.Ссылка;
			КонецЕсли; 
		БазовоеКоличество = ПолучитьБазовоеКоличество(ТЧ_МПЗ.Количество,ТЧ_МПЗ.ЕдиницаИзмерения); 
		Выборка =  бсНовДок.Товары.Найти(бсНомен,"Номенклатура");
		ТЧ.Склад = бсСклад;	
		ТЧ.Номенклатура = бсНомен;
		ТЧ.КоличествоУпаковок = БазовоеКоличество;
		//ТЧ.ИмКоличествоЗарегистрировано = БазовоеКоличество;
		ТЧ.Количество = БазовоеКоличество;
		ТЧ.СтавкаНДС = бсНомен.СтавкаНДС;
		ТЧ.Цена = ТЧ_МПЗ.Цена;
		ТЧ.Сумма = ТЧ.КоличествоУпаковок*ТЧ.Цена;
			Если БазаСбыта.Перечисления.СтавкиНДС.Индекс(ТЧ.СтавкаНДС) = БазаСбыта.Перечисления.СтавкиНДС.Индекс(БазаСбыта.Перечисления.СтавкиНДС.НДС18) Тогда
			ТЧ.СуммаНДС = ТЧ.Сумма*0.18;
			ТЧ.СуммаСНДС = ТЧ.Сумма + ТЧ.СуммаНДС;
			ИначеЕсли БазаСбыта.Перечисления.СтавкиНДС.Индекс(ТЧ.СтавкаНДС) = БазаСбыта.Перечисления.СтавкиНДС.Индекс(БазаСбыта.Перечисления.СтавкиНДС.НДС20) Тогда
			ТЧ.СуммаНДС = ТЧ.Сумма*0.2;
			ТЧ.СуммаСНДС = ТЧ.Сумма + ТЧ.СуммаНДС;
			Иначе	
			ТЧ.СуммаСНДС = ТЧ.Сумма;
			КонецЕсли;
		//ТЧ = бсНовДок.Штрихкоды.Добавить();	
		//ТЧ.Номенклатура = бсНомен;
		//ТЧ.ШК = ВыборкаДетальныеЗаписи.БарКод;
		КонецЦикла;
			Если (бсНовДок.Товары.Количество() > 0)и(Не флОшибки) Тогда
			бсНовДок.Комментарий = "&ТОВ Выгрузка ТНП из производственной базы от "+ТекущаяДата();
			бсНовДок.Записать();
			Объект.Выгружено = Истина;
			Элементы.ВыгрузитьВБазуСбыта.Доступность = Ложь;
			ЭтаФорма.Записать();
			Сообщить("Создан документ "+бсНовДок.Номер);
			КонецЕсли;   
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВБазуСбыта(Команда)
	Если Не ЭтаФорма.Модифицированность Тогда
		Если Найти(Объект.МестоХраненияВ.Наименование,"Склад ТНП") > 0 Тогда
		Состояние("Обработка...",,"Выгрузка в базу сбыта...");
		ВыгрузитьВБазуСбытаНаСервере();
		Иначе
		Сообщить("Место хранения не является складом ТНП!");	
		КонецЕсли;
	Иначе
	Сообщить("Сначала запишите изменения!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ВыгруженоПриИзменении(Элемент)
Элементы.ВыгрузитьВБазуСбыта.Доступность = Не Объект.Выгружено; 
КонецПроцедуры

&НаСервере
Функция СовпадаетСПодразделенимДокумента(МестоХранения)
Возврат(?(МестоХранения.Подразделение = Объект.Подразделение,Истина,Ложь));
КонецФункции 

&НаКлиенте
Процедура МестоХраненияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не СовпадаетСПодразделенимДокумента(ВыбранноеЗначение) Тогда	
	СтандартнаяОбработка = Ложь;
	Сообщить("Выбранное место хранения принадлежит другому подразделению!");	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПолучитьКурсНаСервере(ДатаКурса)
Объект.Курс = ОбщийМодульВызовСервера.КурсДляВалюты(Объект.Договор.Валюта,ДатаКурса);
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьКурс(Команда)
ДатаКурса = Объект.ДатаДокВходящий;
	Если ВвестиДату(ДатаКурса,"Выберите дату",ЧастиДаты.Дата) Тогда
	ПолучитьКурсНаСервере(ДатаКурса);
	ПересчётТабличнойЧасти();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьКаталогФотографий()
Возврат(СокрЛП(Константы.КаталогФотографий.Получить())+"Поступление партий МПЗ\");
КонецФункции

&НаСервере
Функция ПолучитьЛокальныйКаталогФотографий()
Возврат(СокрЛП(Константы.КаталогФотографийЛокальный.Получить()));
КонецФункции

&НаСервере
Процедура ПрикрепитьФайлНаСервере(Стр,Путь,ИмяФайла)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
ФПМПЗ = РегистрыСведений.ФотографииПартийМПЗ.СоздатьМенеджерЗаписи();
ФПМПЗ.МПЗ = ТЧ.МПЗ;
ФПМПЗ.Документ = Объект.Номер;
ФПМПЗ.Файл = СтрЗаменить(Путь,ПолучитьКаталогФотографий(),"")+ИмяФайла;
ФПМПЗ.Записать(Истина);
ТЧ.Файл = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепитьФайлы(Команда)
	Если ЭтаФорма.Модифицированность Тогда
	Сообщить("Сначала сохраните документ!");
	Возврат;	
	КонецЕсли; 
		Если Элементы.ТабличнаяЧасть.ТекущаяСтрока = Неопределено Тогда
		Сообщить("Выберите строку табличной части с нужным МПЗ!");
		Возврат;
		КонецЕсли;
Подкаталог = ПолучитьКаталогФотографий()+Объект.Номер+"\";
СоздатьКаталог(Подкаталог);
Состояние("Обработка локального каталога...",,"Поиск файлов");
МассивНайденных = НайтиФайлы(ПолучитьЛокальныйКаталогФотографий(), "*.*",Истина);
	Если МассивНайденных.Количество() > 0 Тогда
	к = 0;
		Для Каждого Файл из МассивНайденных Цикл	
		к = к + 1;
		Состояние("Обработка каталога...",к*100/МассивНайденных.Количество(),"Прикрепление списка файлов"); 
			Если Не Файл.ЭтоФайл() Тогда
			Продолжить;		
			КонецЕсли;
		НаименованиеМПЗ = СтрЗаменить(Элементы.ТабличнаяЧасть.ТекущиеДанные.МПЗ,"/","&");
		НаименованиеМПЗ = СтрЗаменить(НаименованиеМПЗ,"\","&");
		ИмяФайла = СокрЛП(НаименованиеМПЗ)+"_"+Строка(к)+Файл.Расширение;
		ПереместитьФайл(Файл.ПолноеИмя,Подкаталог+ИмяФайла);
		ПрикрепитьФайлНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока,Подкаталог,ИмяФайла);		
		КонецЦикла;	
	Иначе	
	Предупреждение("Фотографии не найдены!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокФайлов(МПЗ)
СписокФайлов = Новый СписокЗначений;

НаборЗаписей = РегистрыСведений.ФотографииПартийМПЗ.СоздатьНаборЗаписей();
НаборЗаписей.Отбор.МПЗ.Установить(МПЗ);
НаборЗаписей.Отбор.Документ.Установить(Объект.Номер);	
НаборЗаписей.Прочитать();
    Для Каждого Запись Из НаборЗаписей Цикл	 
	СписокФайлов.Добавить(Запись.Файл);
	КонецЦикла;	
Возврат(СписокФайлов);
КонецФункции
 
&НаКлиенте
Процедура ОткрытьФайл(Команда)
СписокФайлов = ПолучитьСписокФайлов(Элементы.ТабличнаяЧасть.ТекущиеДанные.МПЗ);
	Если СписокФайлов.Количество() = 1 Тогда
	ЗапуститьПриложение(ПолучитьКаталогФотографий()+"\"+СписокФайлов[0].Значение);
	ИначеЕсли СписокФайлов.Количество() > 0 Тогда	
	Файл = СписокФайлов.ВыбратьЭлемент("Выберите файл");
		Если Файл <> Неопределено Тогда
		ЗапуститьПриложение(ПолучитьКаталогФотографий()+"\"+Файл.Значение);
		КонецЕсли; 	
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура УдалитьФайлНаСервере(МПЗ,Файл)
НаборЗаписей = РегистрыСведений.ФотографииПартийМПЗ.СоздатьНаборЗаписей();
НаборЗаписей.Отбор.МПЗ.Установить(МПЗ);
НаборЗаписей.Отбор.Документ.Установить(Объект.Номер);
НаборЗаписей.Отбор.Файл.Установить(Файл);
НаборЗаписей.Записать();
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	ТЧ.Файл = Ложь;
	НаборЗаписей = РегистрыСведений.ФотографииПартийМПЗ.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.МПЗ.Установить(ТЧ.МПЗ);
	НаборЗаписей.Отбор.Документ.Установить(Объект.Номер);	
	НаборЗаписей.Прочитать();
	    Для Каждого Запись Из НаборЗаписей Цикл	 
		ТЧ.Файл = Истина;
		Прервать;
		КонецЦикла;	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайл(Команда)
СписокФайлов = ПолучитьСписокФайлов(Элементы.ТабличнаяЧасть.ТекущиеДанные.МПЗ);
	Если СписокФайлов.Количество() > 0 Тогда	
	Файл = СписокФайлов.ВыбратьЭлемент("Выберите файл");
		Если Файл <> Неопределено Тогда
		УдалитьФайлНаСервере(Элементы.ТабличнаяЧасть.ТекущиеДанные.МПЗ,Файл.Значение);
		КонецЕсли; 	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПечатьЭтикетокНаСервере()
ТабДок = Новый ТабличныйДокумент;

barcode = ПолучитьCOMОбъект("","STROKESCRIBE.StrokeScribeClass.1");
barcode.Alphabet=25; //QRCODE
Макет = ПолучитьОбщийМакет("QRКодПартии2");
ОблЭтикетка = Макет.ПолучитьОбласть("Этикетка");
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	QRCode = ЗначениеВСтрокуВнутр(Объект.Ссылка)+";"+ЗначениеВСтрокуВнутр(ТЧ.МПЗ);
	ИмяФайла=ПолучитьИмяВременногоФайла("wmf");
	barcode.Text=QRCode;
	barcode.UTF8=1;
	barcode.QrECL=2;
	код=barcode.SavePicture(ИмяФайла,7,100,100);          
		Если код <> 0 Тогда //Проверка результата генерации штрихкода
		Сообщить(строка(код) + " - " + barcode.ErrorDescription);
		Возврат Неопределено;
		КонецЕсли;
	рис=ОблЭтикетка.Рисунки.QRCode;
	рис.РазмерКартинки=РазмерКартинки.Пропорционально;
	рис.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
	рис.Картинка = Новый Картинка(ИмяФайла);
	ОблЭтикетка.Параметры.Наименование = СокрЛП(ТЧ.МПЗ.Наименование);
	ОблЭтикетка.Параметры.НомерДок = Объект.Номер; 
	ОблЭтикетка.Параметры.ДатаДок = Объект.Дата;
	ОблЭтикетка.Параметры.Стеллаж = "";
	ОблЭтикетка.Параметры.Стойка = "";
	ОблЭтикетка.Параметры.Полка = "";
	ОблЭтикетка.Параметры.Ячейка = "";
	ЯчейкиХранения = РегистрыСведений.ЯчейкиХранения.Выбрать(Новый Структура("МПЗ",ТЧ.МПЗ));
		Пока ЯчейкиХранения.Следующий() Цикл
		ОблЭтикетка.Параметры.Стеллаж = ЯчейкиХранения.Стеллаж;
		ОблЭтикетка.Параметры.Стойка = ЯчейкиХранения.Стойка;
		ОблЭтикетка.Параметры.Полка = ЯчейкиХранения.Полка;
		ОблЭтикетка.Параметры.Ячейка = ЯчейкиХранения.Ячейка;
		Прервать;		
		КонецЦикла;
	ТабДок.Вывести(ОблЭтикетка);
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();  
	УдалитьФайлы(ИмяФайла);
	КонецЦикла; 
ТабДок.РазмерСтраницы = "Custom";
ТабДок.ВысотаСтраницы = 70;
ТабДок.ШиринаСтраницы = 30;
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьЭтикеток(Команда)
ТД = ПечатьЭтикетокНаСервере();
ТД.Показать("Этикетки партий");
КонецПроцедуры

&НаСервере
Функция ПечатьЭтикеткиНаСервере(МПЗ)
ТабДок = Новый ТабличныйДокумент;

barcode = ПолучитьCOMОбъект("","STROKESCRIBE.StrokeScribeClass.1");
barcode.Alphabet=25; //QRCODE
Макет = ПолучитьОбщийМакет("QRКодПартии2");
ОблЭтикетка = Макет.ПолучитьОбласть("Этикетка");
QRCode = ЗначениеВСтрокуВнутр(Объект.Ссылка)+";"+ЗначениеВСтрокуВнутр(МПЗ);
ИмяФайла=ПолучитьИмяВременногоФайла("wmf");
barcode.Text=QRCode;
barcode.UTF8=1;
barcode.QrECL=2;
код=barcode.SavePicture(ИмяФайла,7,100,100);          
	Если код <> 0 Тогда //Проверка результата генерации штрихкода
	Сообщить(строка(код) + " - " + barcode.ErrorDescription);
	Возврат Неопределено;
	КонецЕсли;
рис=ОблЭтикетка.Рисунки.QRCode;
рис.РазмерКартинки=РазмерКартинки.Пропорционально;
рис.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
рис.Картинка = Новый Картинка(ИмяФайла);
ОблЭтикетка.Параметры.Наименование = СокрЛП(МПЗ.Наименование);
ОблЭтикетка.Параметры.НомерДок = Объект.Номер; 
ОблЭтикетка.Параметры.ДатаДок = Объект.Дата;
ОблЭтикетка.Параметры.Стеллаж = "";
ОблЭтикетка.Параметры.Стойка = "";
ОблЭтикетка.Параметры.Полка = "";
ОблЭтикетка.Параметры.Ячейка = "";
ЯчейкиХранения = РегистрыСведений.ЯчейкиХранения.Выбрать(Новый Структура("МПЗ",МПЗ));
	Пока ЯчейкиХранения.Следующий() Цикл
	ОблЭтикетка.Параметры.Стеллаж = ЯчейкиХранения.Стеллаж;
	ОблЭтикетка.Параметры.Стойка = ЯчейкиХранения.Стойка;
	ОблЭтикетка.Параметры.Полка = ЯчейкиХранения.Полка;
	ОблЭтикетка.Параметры.Ячейка = ЯчейкиХранения.Ячейка;
	Прервать;		
	КонецЦикла; 
ТабДок.Вывести(ОблЭтикетка);  
УдалитьФайлы(ИмяФайла); 
ТабДок.РазмерСтраницы = "Custom";
ТабДок.ВысотаСтраницы = 70;
ТабДок.ШиринаСтраницы = 30;
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьЭтикетки(Команда)
	Если Элементы.ТабличнаяЧасть.ТекущаяСтрока <> Неопределено Тогда
	ТД = ПечатьЭтикеткиНаСервере(Элементы.ТабличнаяЧасть.ТекущиеДанные.МПЗ);
	ТД.Показать("Этикетка выбранной партии");
	Иначе
	Сообщить("Выберите строку документа!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура СоздатьБарКодыНаБухты(Команда)
ОткрытьФорму("Обработка.СозданиеБарКодовНаБухты.Форма.Форма",Новый Структура("ПоступлениеМПЗ",Объект.Ссылка),,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьМаркировкаSMD(Команда)
ОткрытьФорму("Обработка.МаркировкаМатериалов.Форма.Форма",Новый Структура("Документ",Объект.Ссылка),,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);	
КонецПроцедуры
