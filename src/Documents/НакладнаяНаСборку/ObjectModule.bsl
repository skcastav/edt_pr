
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
Автор = ПараметрыСеанса.Пользователь;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если Номер = "" Тогда
	УстановитьНовыйНомер(Формат(Дата,"ДФ=гг")+"-");
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
//Расход Резервирование ГП
Движения.РезервированиеГП.Записывать = Истина;
	Для Каждого ТЧ Из ТабличнаяЧасть Цикл
		Если ТипЗнч(ТЧ.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
		МестоХранения = ТЧ.Продукция.Линейка.МестоХраненияГП;
		Иначе	
		МестоХранения = Константы.МестоХраненияТНП.Получить();
		КонецЕсли;
	КоличествоОстаток = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокВРезерве(МестоХранения,ТЧ.Продукция,ТЧ.ЗаказНаПроизводство,Дата);
		Если КоличествоОстаток >= ТЧ.Количество Тогда
		Движение = Движения.РезервированиеГП.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.МестоХранения = МестоХранения;
		Движение.Продукция = ТЧ.Продукция;
		Движение.Документ = ТЧ.ЗаказНаПроизводство;
		Движение.Количество = ТЧ.Количество;		
		Иначе	
		Отказ = Истина;
		Сообщить("Продукция: "+СокрЛП(ТЧ.Продукция.Наименование)+" требуется: "+ТЧ.Количество+" недостаёт в резерве: "+Строка(ТЧ.Количество-КоличествоОстаток));		
		КонецЕсли;		
	КонецЦикла;
МестоХраненияВ = Константы.МестоХраненияТранзит.Получить();	
ВиртуальнаяТабличнаяЧасть = ТабличнаяЧасть.Выгрузить();
ВиртуальнаяТабличнаяЧасть.Свернуть("Продукция","Количество");
Движения.МестаХранения.Записывать = Истина;
	Для Каждого ТЧ Из ВиртуальнаяТабличнаяЧасть Цикл
		Если ТипЗнч(ТЧ.Продукция) = Тип("СправочникСсылка.Номенклатура") Тогда
		ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
		МестоХранения = ТЧ.Продукция.Линейка.МестоХраненияГП;
		Иначе	
		ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
		МестоХранения = Константы.МестоХраненияТНП.Получить();
		КонецЕсли;
	КолОстаток = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокПоМестуХранения(МестоХранения,ТЧ.Продукция,Дата);
		Если КолОстаток >= ТЧ.Количество Тогда
		Движение = Движения.МестаХранения.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.МестоХранения = МестоХранения;
		Движение.ВидМПЗ = ВидМПЗ;
		Движение.МПЗ = ТЧ.Продукция;
		Движение.Количество = ТЧ.Количество;

		Движение = Движения.МестаХранения.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.МестоХранения = МестоХраненияВ;
		Движение.ВидМПЗ = ВидМПЗ;
		Движение.МПЗ = ТЧ.Продукция;
		Движение.Количество = ТЧ.Количество;
		Иначе
		Отказ = Истина;
		Сообщить("Продукция: "+СокрЛП(ТЧ.Продукция.Наименование)+" требуется: "+ТЧ.Количество+" недостаёт на складе: "+Строка(ТЧ.Количество-КолОстаток));
		КонецЕсли;		 
	КонецЦикла;
Запрос = Новый Запрос;
// регистр ГТД Расход
Движения.ГТД.Записывать = Истина;
	Для Каждого ТЧ Из ТабличнаяЧасть Цикл
	КоличествоОстаток = ТЧ.Количество;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ГТДОстатки.НомерГТД КАК НомерГТД,
		|	ГТДОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ГТД.Остатки(&НаДату, Товар = &Товар) КАК ГТДОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ГТДОстатки.НомерГТД.ДатаВнесения";
	Запрос.УстановитьПараметр("НаДату", Дата);
	Запрос.УстановитьПараметр("Товар", ТЧ.Продукция);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если КоличествоОстаток > 0 Тогда
			Движение = Движения.ГТД.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Товар = ТЧ.Продукция;
			Движение.НомерГТД = ВыборкаДетальныеЗаписи.НомерГТД;
				Если ВыборкаДетальныеЗаписи.КоличествоОстаток <= КоличествоОстаток Тогда
				Движение.Количество = ВыборкаДетальныеЗаписи.КоличествоОстаток;
				КоличествоОстаток = КоличествоОстаток - ВыборкаДетальныеЗаписи.КоличествоОстаток;
				Иначе
				Движение.Количество = КоличествоОстаток;
				КоличествоОстаток = 0;
				КонецЕсли; 
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

