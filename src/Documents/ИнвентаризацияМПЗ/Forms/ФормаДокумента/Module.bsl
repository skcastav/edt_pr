
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	ТЧ.Отклонение = ТЧ.Количество - ТЧ.КоличествоУчет;
	ТЧ.Статус = ПолучитьСтатус(ТЧ.МПЗ,Объект.Дата);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
СписокРазрешенныхРолей = Новый СписокЗначений;

СписокРазрешенныхРолей.Добавить("Администратор");
СписокРазрешенныхРолей.Добавить("ГлавныйДиспетчер");
ЭтотОбъект.ТолькоПросмотр = ОбщийМодульСозданиеДокументов.ЗапретРедактирования(Объект.Ссылка,Истина,Истина,СписокРазрешенныхРолей);
Элементы.ТабличнаяЧастьОтчётПоРегиструПередачВПроизводство.Видимость = Не Объект.ВидДокумента;
Элементы.ПоОстаткамНаСкладеМатериалов.Видимость = Не Объект.ВидДокумента;
Элементы.ПоОстаткамНаСкладеНоменклатуры.Видимость = Не Объект.ВидДокумента;
Элементы.ПоОстаткамНаСкладеПоГруппеМатериалов.Видимость = Не Объект.ВидДокумента;
Элементы.ПоОстаткамНаСкладеПоГруппеНоменклатуры.Видимость = Не Объект.ВидДокумента;
Элементы.ТабличнаяЧастьКоличествоВПроизводстве.Видимость = Не Объект.ВидДокумента;
Элементы.ТабличнаяЧастьКоличествоВПроизводствеНеВРаботе.Видимость = Не Объект.ВидДокумента;
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
Элементы.ТабличнаяЧастьОтчётПоРегиструПередачВПроизводство.Видимость = Не Объект.ВидДокумента;
Элементы.ПоОстаткамНаСкладеМатериалов.Видимость = Не Объект.ВидДокумента;
Элементы.ПоОстаткамНаСкладеНоменклатуры.Видимость = Не Объект.ВидДокумента;
Элементы.ПоОстаткамНаСкладеПоГруппеМатериалов.Видимость = Не Объект.ВидДокумента;
Элементы.ПоОстаткамНаСкладеПоГруппеНоменклатуры.Видимость = Не Объект.ВидДокумента;
Элементы.ТабличнаяЧастьКоличествоВПроизводстве.Видимость = Не Объект.ВидДокумента;
Элементы.ТабличнаяЧастьКоличествоВПроизводствеНеВРаботе.Видимость = Не Объект.ВидДокумента;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере(ВыбВидМПЗ,ВыбГруппа)
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОстатки.МестоХранения,
	|	МестаХраненияОстатки.ВидМПЗ,
	|	МестаХраненияОстатки.МПЗ,
	|	МестаХраненияОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.МестаХранения.Остатки КАК МестаХраненияОстатки
	|ГДЕ
	|	МестаХраненияОстатки.МестоХранения = &МестоХранения";
	Если Не ВыбГруппа.Пустая() Тогда
	Запрос.Текст = Запрос.Текст + " И МестаХраненияОстатки.МПЗ В ИЕРАРХИИ(&ВыбГруппа)";	
	Запрос.УстановитьПараметр("ВыбГруппа", ВыбГруппа);
	КонецЕсли;
		Если Не ВыбВидМПЗ.Пустая() Тогда
		Запрос.Текст = Запрос.Текст + " И МестаХраненияОстатки.ВидМПЗ = &ВыбВидМПЗ";	
		Запрос.УстановитьПараметр("ВыбВидМПЗ", ВыбВидМПЗ);
		КонецЕсли; 
Запрос.УстановитьПараметр("МестоХранения", Объект.МестоХранения);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = Объект.ТабличнаяЧасть.Добавить();
	ТЧ.ВидМПЗ = ВыборкаДетальныеЗаписи.ВидМПЗ;
	ТЧ.МПЗ = ВыборкаДетальныеЗаписи.МПЗ;
	ТЧ.ЕдиницаИзмерения = ВыборкаДетальныеЗаписи.МПЗ.ОсновнаяЕдиницаИзмерения;
	ТЧ.КоличествоУчет = ВыборкаДетальныеЗаписи.КоличествоОстаток/ВыборкаДетальныеЗаписи.МПЗ.ОсновнаяЕдиницаИзмерения.Коэффициент;
	ТЧ.Статус = ПолучитьСтатус(ВыборкаДетальныеЗаписи.МПЗ,Объект.Дата);
	КонецЦикла;
Объект.ТабличнаяЧасть.Сортировать("ВидМПЗ,МПЗ");
ЗаполнитьКоличествоВПроизводствеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКоличествоПоННС(Продукция = Неопределено)
Запрос = Новый Запрос;
СписокСтатусов = Новый СписокЗначений;

СписокСтатусов.Добавить(Перечисления.СтатусыНакладнойНаСборку.Создан);
СписокСтатусов.Добавить(Перечисления.СтатусыНакладнойНаСборку.НаСборке);

Запрос.Текст = 
	"ВЫБРАТЬ
	|	НакладнаяНаСборкуТабличнаяЧасть.Продукция КАК Продукция,
	|	НакладнаяНаСборкуТабличнаяЧасть.Количество КАК Количество
	|ИЗ
	|	Документ.НакладнаяНаСборку.ТабличнаяЧасть КАК НакладнаяНаСборкуТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыНакладныхНаСборку.СрезПоследних(&НаДату, ) КАК СтатусыНакладныхНаСборкуСрезПоследних
	|		ПО НакладнаяНаСборкуТабличнаяЧасть.Ссылка = СтатусыНакладныхНаСборкуСрезПоследних.НакладнаяНаСборку
	|ГДЕ
	|	НакладнаяНаСборкуТабличнаяЧасть.Продукция.Линейка.МестоХраненияГП = &МестоХраненияГП
	|	И СтатусыНакладныхНаСборкуСрезПоследних.Статус В(&СписокСтатусов)"; 
	Если Продукция <> Неопределено Тогда
	Запрос.Текст = Запрос.Текст + " И НакладнаяНаСборкуТабличнаяЧасть.Продукция = &Продукция";
	Запрос.УстановитьПараметр("Продукция", Продукция);
	КонецЕсли; 
Запрос.Текст = Запрос.Текст + " ИТОГИ СУММА(Количество) ПО Продукция";
Запрос.УстановитьПараметр("МестоХраненияГП", Объект.МестоХранения);
Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
Запрос.УстановитьПараметр("СписокСтатусов", СписокСтатусов);

Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Выборка = Объект.ТабличнаяЧасть.НайтиСтроки(Новый Структура("МПЗ",ВыборкаДетальныеЗаписи.Продукция));
		Если Выборка.Количество() = 0 Тогда
		ТЧ = Объект.ТабличнаяЧасть.Добавить();
		ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
		ТЧ.МПЗ = ВыборкаДетальныеЗаписи.Продукция;
		ТЧ.ЕдиницаИзмерения = ВыборкаДетальныеЗаписи.Продукция.ОсновнаяЕдиницаИзмерения;
		ТЧ.КоличествоУчет = ВыборкаДетальныеЗаписи.Количество/ВыборкаДетальныеЗаписи.Продукция.ОсновнаяЕдиницаИзмерения.Коэффициент;
		ТЧ.Статус = ПолучитьСтатус(ВыборкаДетальныеЗаписи.Продукция,Объект.Дата);
		ТЧ.Количество = ТЧ.КоличествоУчет;
		Иначе	
		Выборка[0].КоличествоУчет = Выборка[0].КоличествоУчет + ВыборкаДетальныеЗаписи.Количество/ВыборкаДетальныеЗаписи.Продукция.ОсновнаяЕдиницаИзмерения.Коэффициент;
		Выборка[0].Количество = Выборка[0].КоличествоУчет;
		КонецЕсли;
	КонецЦикла;
Объект.ТабличнаяЧасть.Сортировать("ВидМПЗ,МПЗ");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГПНаСервере()
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияОстатки.МестоХранения КАК МестоХранения,
	|	МестаХраненияОстатки.ВидМПЗ КАК ВидМПЗ,
	|	МестаХраненияОстатки.МПЗ КАК МПЗ,
	|	МестаХраненияОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.МестаХранения.Остатки КАК МестаХраненияОстатки
	|ГДЕ
	|	МестаХраненияОстатки.МестоХранения = &МестоХранения
	|ИТОГИ
	|	СУММА(КоличествоОстаток)
	|ПО
	|	МПЗ"; 
Запрос.УстановитьПараметр("МестоХранения", Объект.МестоХранения);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	ТЧ = Объект.ТабличнаяЧасть.Добавить();
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;
	ТЧ.МПЗ = ВыборкаДетальныеЗаписи.МПЗ;
	ТЧ.ЕдиницаИзмерения = ВыборкаДетальныеЗаписи.МПЗ.ОсновнаяЕдиницаИзмерения;
	ТЧ.КоличествоУчет = ВыборкаДетальныеЗаписи.КоличествоОстаток/ВыборкаДетальныеЗаписи.МПЗ.ОсновнаяЕдиницаИзмерения.Коэффициент;
	ТЧ.Количество = ТЧ.КоличествоУчет;
	ТЧ.Статус = ПолучитьСтатус(ВыборкаДетальныеЗаписи.МПЗ,Объект.Дата);
	КонецЦикла;
Объект.ТабличнаяЧасть.Сортировать("ВидМПЗ,МПЗ");
ЗаполнитьКоличествоПоННС();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКоличествоВПроизводствеНаСервере()
СписокЛинеек.Очистить();
Запрос = Новый Запрос;
ЗапросПроизв = Новый Запрос;
СписокДок = Новый СписокЗначений;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Линейки.Ссылка
	|ИЗ
	|	Справочник.Линейки КАК Линейки
	|ГДЕ
	|	Линейки.МестоХраненияКанбанов = &МестоХраненияКанбанов";
Запрос.УстановитьПараметр("МестоХраненияКанбанов", Объект.МестоХранения);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокЛинеек.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
		Для каждого Линейка Из СписокЛинеек Цикл
			Если Линейка.Значение.ВидЛинейки = Перечисления.ВидыЛинеек.Канбан Тогда
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.ДокументОснование КАК МТК
				|ИЗ
				|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПервых КАК ЭтапыПроизводственныхЗаданийСрезПервых
				|ГДЕ
				|	ЭтапыПроизводственныхЗаданийСрезПервых.Линейка = &Линейка
				|	И ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.ДокументОснование.Статус <> 3
				|	И ЭтапыПроизводственныхЗаданийСрезПервых.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
			Запрос.УстановитьПараметр("Линейка", Линейка.Значение);
			РезультатЗапроса = Запрос.Выполнить();
			Выборка = РезультатЗапроса.Выбрать();
				Пока Выборка.Следующий() Цикл
				СписокДок.Добавить(Выборка.МТК);
				КонецЦикла;		
			Иначе	
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ
				|ИЗ
				|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПервых КАК ЭтапыПроизводственныхЗаданийСрезПервых
				|ГДЕ
				|	ЭтапыПроизводственныхЗаданийСрезПервых.Линейка = &Линейка
				|	И ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.ДокументОснование.Статус <> 3
				|	И ЭтапыПроизводственныхЗаданийСрезПервых.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
			Запрос.УстановитьПараметр("Линейка", Линейка.Значение);
			РезультатЗапроса = Запрос.Выполнить();
			Выборка = РезультатЗапроса.Выбрать();
				Пока Выборка.Следующий() Цикл
				СписокДок.Добавить(Выборка.ПЗ);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла; 
ЗапросПроизв.Текст = 
	"ВЫБРАТЬ
	|	ПередачиВПроизводствоОстатки.МПЗ КАК МПЗ,
	|	ПередачиВПроизводствоОстатки.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.ПередачиВПроизводство.Остатки(&НаДату, ) КАК ПередачиВПроизводствоОстатки
	|ГДЕ
	|	ПередачиВПроизводствоОстатки.Документ В(&СписокДок)
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	МПЗ";
	Если Объект.Ссылка.Пустая() Тогда		
	ЗапросПроизв.УстановитьПараметр("НаДату", ТекущаяДата());
	Иначе
	ЗапросПроизв.УстановитьПараметр("НаДату", Объект.Дата);
	КонецЕсли;
ЗапросПроизв.УстановитьПараметр("СписокДок", СписокДок);
РезультатЗапроса = ЗапросПроизв.Выполнить();
ВыборкаПроизв1 = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

СписокДок.Очистить();

	Для каждого Линейка Из СписокЛинеек Цикл
		Если Линейка.Значение.ВидЛинейки = Перечисления.ВидыЛинеек.Канбан Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.ДокументОснование КАК МТК
			|ИЗ
			|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПервых КАК ЭтапыПроизводственныхЗаданийСрезПервых
			|ГДЕ
			|	ЭтапыПроизводственныхЗаданийСрезПервых.Линейка = &Линейка
			|	И ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.ДокументОснование.Статус <> 3
			|	И ЭтапыПроизводственныхЗаданийСрезПервых.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
		Запрос.УстановитьПараметр("Линейка", Линейка.Значение);
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
			СписокДок.Добавить(Выборка.МТК);
			КонецЦикла;		
		Иначе	
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ
			|ИЗ
			|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПервых КАК ЭтапыПроизводственныхЗаданийСрезПервых
			|ГДЕ
			|	ЭтапыПроизводственныхЗаданийСрезПервых.Линейка = &Линейка
			|	И ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.ДокументОснование.Статус <> 3
			|	И ЭтапыПроизводственныхЗаданийСрезПервых.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
		Запрос.УстановитьПараметр("Линейка", Линейка.Значение);
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
			СписокДок.Добавить(Выборка.ПЗ);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

РезультатЗапроса = ЗапросПроизв.Выполнить();
ВыборкаПроизв2 = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	ТЧ.КоличествоУчет = ТЧ.КоличествоУчет - ТЧ.КоличествоВПроизводствеНеВРаботе;	
	ВыборкаПроизв1.Сбросить();
	ТЧ.КоличествоВПроизводствеНеВРаботе = 0;
		Пока ВыборкаПроизв1.НайтиСледующий(Новый Структура("МПЗ",ТЧ.МПЗ)) Цикл
		ТЧ.КоличествоВПроизводствеНеВРаботе = ТЧ.КоличествоВПроизводствеНеВРаботе + ВыборкаПроизв1.Количество;
		КонецЦикла;	
	ВыборкаПроизв2.Сбросить();
	ТЧ.КоличествоВПроизводстве = 0;
		Пока ВыборкаПроизв2.НайтиСледующий(Новый Структура("МПЗ",ТЧ.МПЗ)) Цикл
		ТЧ.КоличествоВПроизводстве = ТЧ.КоличествоВПроизводстве + ВыборкаПроизв2.Количество;
		КонецЦикла;
	ТЧ.КоличествоУчет = ТЧ.КоличествоУчет + ТЧ.КоличествоВПроизводствеНеВРаботе;
	ТЧ.Количество = ТЧ.КоличествоУчет;
	ТЧ.Отклонение = ТЧ.Количество - ТЧ.КоличествоУчет;
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Функция ПолучитьПустуюСсылку()
Возврат(Справочники.Материалы.ПустаяСсылка());	
КонецФункции 

&НаСервере
Функция ПолучитьПустуюСсылкуВидМПЗ()
Возврат(Перечисления.ВидыМПЗ.ПустаяСсылка());	
КонецФункции 

&НаКлиенте
Процедура ПоОстаткамНаСкладе(Команда)
	Если Объект.ТабличнаяЧасть.Количество() > 0 Тогда
		Если Вопрос("Очистить таблицу?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		Объект.ТабличнаяЧасть.Очистить();	
		КонецЕсли;
	КонецЕсли;
		Если Объект.ВидДокумента = 0 Тогда
		ЗаполнитьНаСервере(ПолучитьВидМПЗ(""),ПолучитьПустуюСсылку());
		Иначе	
		ЗаполнитьГПНаСервере();
		КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоОстаткамНаСкладеПоГруппеМатериалов(Команда)
	Если Объект.ТабличнаяЧасть.Количество() > 0 Тогда
		Если Вопрос("Очистить таблицу?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		Объект.ТабличнаяЧасть.Очистить();	
		КонецЕсли;
	КонецЕсли; 
Форма = ПолучитьФорму("Справочник.Материалы.ФормаВыбора");
Форма.Элементы.Список.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Группы;
Результат = Форма.ОткрытьМодально();
	Если Результат <> Неопределено Тогда
	ЗаполнитьНаСервере(ПолучитьВидМПЗ(""),Результат);	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПоОстаткамНаСкладеПоГруппеНоменклатуры(Команда)
	Если Объект.ТабличнаяЧасть.Количество() > 0 Тогда
		Если Вопрос("Очистить таблицу?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		Объект.ТабличнаяЧасть.Очистить();	
		КонецЕсли;
	КонецЕсли; 
Форма = ПолучитьФорму("Справочник.Номенклатура.ФормаВыбора");
Форма.Элементы.Список.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Группы;
Результат = Форма.ОткрытьМодально();
	Если Результат <> Неопределено Тогда
	ЗаполнитьНаСервере(ПолучитьВидМПЗ(""),Результат);	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьКоличествоУчетПриИзменении(Элемент)
Элементы.ТабличнаяЧасть.ТекущиеДанные.Отклонение = Элементы.ТабличнаяЧасть.ТекущиеДанные.Количество - Элементы.ТабличнаяЧасть.ТекущиеДанные.КоличествоУчет;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьКоличествоПриИзменении(Элемент)
Элементы.ТабличнаяЧасть.ТекущиеДанные.Отклонение = Элементы.ТабличнаяЧасть.ТекущиеДанные.Количество - Элементы.ТабличнаяЧасть.ТекущиеДанные.КоличествоУчет;
КонецПроцедуры

&НаСервере
Функция ПолучитьВидМПЗ(ВидМПЗ)
	Если ВидМПЗ = "" Тогда
	Возврат(Перечисления.ВидыМПЗ.ПустаяСсылка());
	ИначеЕсли ВидМПЗ = "Материалы" Тогда
	Возврат(Перечисления.ВидыМПЗ.Материалы);
	Иначе
	Возврат(Перечисления.ВидыМПЗ.Полуфабрикаты);
	КонецЕсли; 	
КонецФункции 

&НаКлиенте
Процедура ПоОстаткамНаСкладеМатериалов(Команда)
	Если Объект.ТабличнаяЧасть.Количество() > 0 Тогда
		Если Вопрос("Очистить таблицу?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		Объект.ТабличнаяЧасть.Очистить();	
		КонецЕсли;
	КонецЕсли;  
ЗаполнитьНаСервере(ПолучитьВидМПЗ("Материалы"),ПолучитьПустуюСсылку());
КонецПроцедуры

&НаКлиенте
Процедура ПоОстаткамНаСкладеНоменклатуры(Команда)
	Если Объект.ТабличнаяЧасть.Количество() > 0 Тогда
		Если Вопрос("Очистить таблицу?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		Объект.ТабличнаяЧасть.Очистить();	
		КонецЕсли;
	КонецЕсли; 
ЗаполнитьНаСервере(ПолучитьВидМПЗ("Полуфабрикаты"),ПолучитьПустуюСсылку());
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	ТЧ.Отклонение = ТЧ.Количество - ТЧ.КоличествоУчет;
	ТЧ.Статус = ПолучитьСтатус(ТЧ.МПЗ,Объект.Дата);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьЦенуПФ(ПФ,КолУзла,СтоимостьУзла) 
НормРасх = ОбщийМодульВызовСервера.ПолучитьНормыРасходовПоВладельцу_Н_М(ПФ,ТекущаяДата());
	Пока НормРасх.Следующий() Цикл			
			Если ТипЗнч(НормРасх.Элемент) = Тип("СправочникСсылка.Материалы") Тогда
			Цены = РегистрыСведений.Цены.ПолучитьПоследнее(Объект.Дата,Новый Структура("МПЗ",НормРасх.Элемент));
			СтоимостьУзла = СтоимостьУзла + ПолучитьБазовоеКоличество(НормРасх.Норма*КолУзла,НормРасх.Элемент.ОсновнаяЕдиницаИзмерения)*Цены.Цена;
			Иначе
			ПолучитьЦенуПФ(НормРасх.Элемент,ПолучитьБазовоеКоличество(НормРасх.Норма*КолУзла,НормРасх.Элемент.ОсновнаяЕдиницаИзмерения),СтоимостьУзла);
			КонецЕсли;
	КонецЦикла;
Возврат(СтоимостьУзла);
КонецФункции

&НаСервере
Функция ПечатьИнвентаризационнойОписиНаСервере()
ТабДок = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("Макет");

ОблШапка = Макет.ПолучитьОбласть("Шапка");	
ОблСтрока = Макет.ПолучитьОбласть("Строка");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.Заполнить(Объект);
ТабДок.Вывести(ОблШапка);
НомСтр = 0;
ИзлишекИтого = 0;
СуммаИзлишекИтого = 0;
НедостачаИтого = 0;
СуммаНедостачаИтого = 0;
Излишек = 0;
СуммаИзлишек = 0;
Недостача = 0;
СуммаНедостача = 0;
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл	
	НомСтр = НомСтр + 1;
	ОблСтрока.Параметры.Заполнить(ТЧ);
	ОблСтрока.Параметры.НомСтр = НомСтр;
	ОблСтрока.Параметры.КоличествоУчет = ТЧ.КоличествоУчет;
	ОблСтрока.Параметры.Количество = ТЧ.Количество;
		Если ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты Тогда
		Цена = ПолучитьЦенуПФ(ТЧ.МПЗ,1,0)*ТЧ.ЕдиницаИзмерения.Коэффициент;
		Иначе	
		Цены = РегистрыСведений.Цены.ПолучитьПоследнее(Объект.Дата,Новый Структура("МПЗ",ТЧ.МПЗ));
		Цена = Цены.Цена*ТЧ.ЕдиницаИзмерения.Коэффициент;
		КонецЕсли; 
	ОблСтрока.Параметры.Цена = Формат(Цена,"ЧЦ=15; ЧДЦ=2");
		Если (ТЧ.Количество - ТЧ.КоличествоУчет) > 0 Тогда
		Излишек = ТЧ.Количество - ТЧ.КоличествоУчет;
		СуммаИзлишек = Излишек*Цена;
		Недостача = 0;
		СуммаНедостача = 0;
		Иначе	
		Излишек = 0;
		СуммаИзлишек = 0;
		Недостача = ТЧ.КоличествоУчет - ТЧ.Количество;
		СуммаНедостача = Недостача*Цена;		
		КонецЕсли; 
	ОблСтрока.Параметры.Излишек = Излишек;
	ОблСтрока.Параметры.СуммаИзлишек = Формат(СуммаИзлишек,"ЧЦ=15; ЧДЦ=2");
	ОблСтрока.Параметры.Недостача = Недостача;
	ОблСтрока.Параметры.СуммаНедостача = Формат(СуммаНедостача,"ЧЦ=15; ЧДЦ=2");
	ТабДок.Вывести(ОблСтрока);
	ИзлишекИтого = ИзлишекИтого + Излишек;
	СуммаИзлишекИтого = СуммаИзлишекИтого + СуммаИзлишек;
	НедостачаИтого = НедостачаИтого + Недостача;
	СуммаНедостачаИтого = СуммаНедостачаИтого + СуммаНедостача;	
	КонецЦикла;
ОблКонец.Параметры.КоличествоУчетИтого = Объект.ТабличнаяЧасть.Итог("КоличествоУчет");
ОблКонец.Параметры.КоличествоИтого = Объект.ТабличнаяЧасть.Итог("Количество");
ОблКонец.Параметры.ИзлишекИтого = ИзлишекИтого;
ОблКонец.Параметры.СуммаИзлишекИтого = Формат(СуммаИзлишекИтого,"ЧЦ=15; ЧДЦ=2");
ОблКонец.Параметры.НедостачаИтого = НедостачаИтого;
ОблКонец.Параметры.СуммаНедостачаИтого = Формат(СуммаНедостачаИтого,"ЧЦ=15; ЧДЦ=2");
ТабДок.Вывести(ОблКонец); 
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьИнвентаризационнойОписи(Команда)
ТД = ПечатьИнвентаризационнойОписиНаСервере();
ТД.Показать("Инвентаризационная опись "+Объект.Номер+" от "+Объект.Дата);
ТД.ФиксацияСверху = 5;
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьМПЗПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элементы.ТабличнаяЧасть.ТекущиеДанные.МПЗ) Тогда
	ТабличнаяЧастьМПЗПриИзмененииНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоВПроизводстве(МПЗ,ВРаботе)
Запрос = Новый Запрос;
СписокДок = Новый СписокЗначений;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Линейки.Ссылка
	|ИЗ
	|	Справочник.Линейки КАК Линейки
	|ГДЕ
	|	Линейки.МестоХраненияКанбанов = &МестоХраненияКанбанов";
Запрос.УстановитьПараметр("МестоХраненияКанбанов", Объект.МестоХранения);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Ссылка.ВидЛинейки = Перечисления.ВидыЛинеек.Канбан Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.ДокументОснование КАК МТК
			|ИЗ
			|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПервых КАК ЭтапыПроизводственныхЗаданийСрезПервых
			|ГДЕ
			|	ЭтапыПроизводственныхЗаданийСрезПервых.Линейка = &Линейка
			|	И ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.ДокументОснование.Статус <> 3";
		Запрос.УстановитьПараметр("Линейка", ВыборкаДетальныеЗаписи.Ссылка);
			Если ВРаботе Тогда
			Запрос.Текст = Запрос.Текст + " И ЭтапыПроизводственныхЗаданийСрезПервых.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
			Иначе	
			Запрос.Текст = Запрос.Текст + " И ЭтапыПроизводственныхЗаданийСрезПервых.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
			КонецЕсли;
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
			СписокДок.Добавить(Выборка.МТК);
			КонецЦикла;		
		Иначе	
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ
			|ИЗ
			|	РегистрСведений.ЭтапыПроизводственныхЗаданий.СрезПервых КАК ЭтапыПроизводственныхЗаданийСрезПервых
			|ГДЕ
			|	ЭтапыПроизводственныхЗаданийСрезПервых.Линейка = &Линейка
			|	И ЭтапыПроизводственныхЗаданийСрезПервых.ПЗ.ДокументОснование.Статус <> 3";
		Запрос.УстановитьПараметр("Линейка", ВыборкаДетальныеЗаписи.Ссылка);
			Если ВРаботе Тогда
			Запрос.Текст = Запрос.Текст + " И ЭтапыПроизводственныхЗаданийСрезПервых.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
			Иначе	
			Запрос.Текст = Запрос.Текст + " И ЭтапыПроизводственныхЗаданийСрезПервых.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
			КонецЕсли;
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
			СписокДок.Добавить(Выборка.ПЗ);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачиВПроизводствоОстатки.МПЗ КАК МПЗ,
	|	ПередачиВПроизводствоОстатки.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.ПередачиВПроизводство.Остатки(&НаДату, ) КАК ПередачиВПроизводствоОстатки
	|ГДЕ
	|	ПередачиВПроизводствоОстатки.Документ В(&СписокДок)
	|	И ПередачиВПроизводствоОстатки.МПЗ = &МПЗ
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	МПЗ";
	Если Объект.Ссылка.Пустая() Тогда		
	Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
	Иначе
	Запрос.УстановитьПараметр("НаДату", Объект.Дата);
	КонецЕсли;
Запрос.УстановитьПараметр("СписокДок", СписокДок);
Запрос.УстановитьПараметр("МПЗ", МПЗ);
РезультатЗапроса = Запрос.Выполнить();
ВыборкаПроизводство = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
Количество = 0;
	Пока ВыборкаПроизводство.Следующий() Цикл
	Количество = Количество + ВыборкаПроизводство.Количество;	
	КонецЦикла;
Возврат(Количество);	 
КонецФункции

&НаСервере
Процедура ТабличнаяЧастьМПЗПриИзмененииНаСервере(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
ТЧ.ЕдиницаИзмерения = ТЧ.МПЗ.ОсновнаяЕдиницаИзмерения;
	Если ТипЗнч(ТЧ.МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;
	Иначе	
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;	
	КонецЕсли;
ТЧ.Статус = ПолучитьСтатус(ТЧ.МПЗ,Объект.Дата);
	Если Объект.ВидДокумента = 0 Тогда
	ТЧ.КоличествоВПроизводстве = ПолучитьКоличествоВПроизводстве(ТЧ.МПЗ,Истина);
	ТЧ.КоличествоВПроизводствеНеВРаботе = ПолучитьКоличествоВПроизводстве(ТЧ.МПЗ,Ложь);
	ТЧ.КоличествоУчет = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокПоМестуХранения(Объект.МестоХранения,ТЧ.МПЗ)/ТЧ.МПЗ.ОсновнаяЕдиницаИзмерения.Коэффициент + ТЧ.КоличествоВПроизводствеНеВРаботе;	
	Иначе	
	ТЧ.КоличествоУчет = ОбщийМодульРаботаСРегистрами.ПолучитьОстатокПоМестуХранения(Объект.МестоХранения,ТЧ.МПЗ)/ТЧ.МПЗ.ОсновнаяЕдиницаИзмерения.Коэффициент;
	ЗаполнитьКоличествоПоННС(ТЧ.МПЗ);
	КонецЕсли;
ТЧ.Количество = ТЧ.КоличествоУчет;
ТЧ.Отклонение = ТЧ.Количество - ТЧ.КоличествоУчет;
КонецПроцедуры

&НаСервере
Функция СовпадаетСПодразделенимДокумента(МестоХранения)
Возврат(?(МестоХранения.Подразделение = Объект.Подразделение,Истина,Ложь));
КонецФункции 

&НаКлиенте
Процедура МестоХраненияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не СовпадаетСПодразделенимДокумента(ВыбранноеЗначение) Тогда	
	СтандартнаяОбработка = Ложь;
	Сообщить("Выбранное место хранения принадлежит другому подразделению!");	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура МестоХраненияПриИзменении(Элемент)
Объект.ТабличнаяЧасть.Очистить();
КонецПроцедуры

&НаСервере
Процедура ПолучитьСписокЛинеек()
СписокЛинеек.Очистить();
Запрос = Новый Запрос;

Запрос.Текст = 
	"ВЫБРАТЬ
	|	Линейки.Ссылка
	|ИЗ
	|	Справочник.Линейки КАК Линейки
	|ГДЕ
	|	Линейки.МестоХраненияКанбанов = &МестоХраненияКанбанов";
Запрос.УстановитьПараметр("МестоХраненияКанбанов", Объект.МестоХранения);
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	СписокЛинеек.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
КонецПроцедуры
 
&НаКлиенте
Процедура ОтчётПоРегиструПередачиВПроизводство(Команда)
ПолучитьСписокЛинеек();
СписокМПЗ = Новый СписокЗначений;

	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	СписокМПЗ.Добавить(ТЧ.МПЗ);	
	КонецЦикла; 
ИмяОтчета = "ОтчётПоРегиструПередачиВПроизводство";
ПараметрыФормы = Новый Структура;
ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьПользовательскиеНастройкиОтчетаСКД(ИмяОтчета,Объект.Дата,Объект.Дата,Новый Структура("ДокументЛинейка,МПЗ",СписокЛинеек,СписокМПЗ),"ПоМПЗ"));
ПараметрыФормы.Вставить("КлючВарианта","ПоМПЗ"); 
ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);
КонецПроцедуры

&НаСервере
Функция ПечатьЛистаИнвентаризацииНаСервере()
ТабДок = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("МакетЛистИнвентаризации");

ОблШапка = Макет.ПолучитьОбласть("Шапка");	
ОблСтрока = Макет.ПолучитьОбласть("Строка");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.Заполнить(Объект);
ТабДок.Вывести(ОблШапка);
НомСтр = 0;
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл	
	НомСтр = НомСтр + 1;
	ОблСтрока.Параметры.НомСтр = НомСтр;
	ОблСтрока.Параметры.ВидМПЗ = ТЧ.ВидМПЗ;
	ОблСтрока.Параметры.Наименование = СокрЛП(ТЧ.МПЗ.Наименование);
	ОблСтрока.Параметры.МПЗ = ТЧ.МПЗ;
	ОблСтрока.Параметры.ЕдиницаИзмерения = СокрЛП(ТЧ.ЕдиницаИзмерения.Наименование);
	ОблСтрока.Параметры.КоличествоУчет = ТЧ.КоличествоУчет;
	ОблСтрока.Параметры.КоличествоВПроизводстве = ТЧ.КоличествоВПроизводстве;
	ОблСтрока.Параметры.КоличествоВПроизводствеНеВРаботе = ТЧ.КоличествоВПроизводствеНеВРаботе;
	ТабДок.Вывести(ОблСтрока);
	КонецЦикла;
ТабДок.Вывести(ОблКонец);
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьЛистаИнвентаризации(Команда)
ТД = ПечатьЛистаИнвентаризацииНаСервере();
ТД.Показать("Лист инвентаризации "+Объект.Номер+" от "+Объект.Дата);
ТД.ФиксацияСверху = 4;
ТД.ПолеСверху = 5;
ТД.ПолеСнизу = 5;
ТД.ПолеСлева = 5;
ТД.ПолеСправа = 0;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
Отказ = Не ЭтаФорма.ПроверитьЗаполнение();
КонецПроцедуры

&НаСервере
Функция ПечатьРасположениеЯчеекХраненияНаСервере()
ТабДок = Новый ТабличныйДокумент;

ОбъектЗн = РеквизитФормыВЗначение("Объект");
Макет = ОбъектЗн.ПолучитьМакет("МакетРасположениеЯчеек");

ОблШапка = Макет.ПолучитьОбласть("Шапка");	
ОблСтрока = Макет.ПолучитьОбласть("Строка");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.Заполнить(Объект);
ТабДок.Вывести(ОблШапка);
НомСтр = 0;
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл	
	НомСтр = НомСтр + 1;
	ОблСтрока.Параметры.НомСтр = НомСтр;
	ОблСтрока.Параметры.ВидМПЗ = ТЧ.ВидМПЗ;
	ОблСтрока.Параметры.Наименование = СокрЛП(ТЧ.МПЗ.Наименование);
	ОблСтрока.Параметры.МПЗ = ТЧ.МПЗ;
	ОблСтрока.Параметры.Статус = ПолучитьСтатус(ТЧ.МПЗ,Объект.Дата);
	ОблСтрока.Параметры.ЕдиницаИзмерения = СокрЛП(ТЧ.ЕдиницаИзмерения.Наименование);
	ЯчейкиХранения = РегистрыСведений.ЯчейкиХранения.Выбрать(Новый Структура("МПЗ",ТЧ.МПЗ));
		Пока ЯчейкиХранения.Следующий() Цикл
		ОблСтрока.Параметры.Стеллаж = ЯчейкиХранения.Стеллаж;
		ОблСтрока.Параметры.Стойка = ЯчейкиХранения.Стойка;
		ОблСтрока.Параметры.Полка = ЯчейкиХранения.Полка;
		ОблСтрока.Параметры.Ячейка = ЯчейкиХранения.Ячейка;		
		КонецЦикла; 
	ТабДок.Вывести(ОблСтрока);
	КонецЦикла;
ТабДок.Вывести(ОблКонец);
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьРасположениеЯчеекХранения(Команда)
ТД = ПечатьРасположениеЯчеекХраненияНаСервере();
ТД.Показать("Расположение ячеек хранения "+Объект.Номер+" от "+Объект.Дата);
ТД.ФиксацияСверху = 4;
КонецПроцедуры

&НаСервере
Функция ПечатьQRКодыНаСервере()
ТабДок = Новый ТабличныйДокумент;

Макет = ПолучитьОбщийМакет("QRКодКанбан3");
ОблQRКод = Макет.ПолучитьОбласть("QRКод|Секция");
Четный = Ложь;
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	QRCode = ЗначениеВСтрокуВнутр(ТЧ.МПЗ);
	ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(QRCode, 0, 100);	
		Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
		КартинкаQRКода = Новый Картинка(ДанныеQRКода);
		ОблQRКод.Рисунки.QRCode.Картинка = КартинкаQRКода;
		Иначе
		Сообщить("Не удалось сформировать QR-код!");
		КонецЕсли;
	ОблQRКод.Параметры.Наименование = СокрЛП(ТЧ.МПЗ.Наименование); 
		Если Не Четный Тогда
		ТабДок.Вывести(ОблQRКод);
		Четный = Истина;
		Иначе	
		ТабДок.Присоединить(ОблQRКод);
		Четный = Ложь;
		КонецЕсли;
	КонецЦикла; 
ТабДок.РазмерСтраницы = "A4";
ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
ТабДок.ПолеСлева = 0;
ТабДок.ПолеСверху = 0;
ТабДок.ПолеСнизу = 0;
ТабДок.ПолеСправа = 0;
ТабДок.РазмерКолонтитулаСверху = 0;
ТабДок.РазмерКолонтитулаСнизу = 0;
Возврат(ТабДок);
КонецФункции

&НаКлиенте
Процедура ПечатьQRКоды(Команда)
ТД = ПечатьQRКодыНаСервере();
	Если ТД <> Неопределено Тогда
	ТД.Показать("QR-коды");
	КонецЕсли; 
КонецПроцедуры
