
&НаКлиенте
Процедура ПриОткрытии(Отказ)
СписокРазрешенныхРолей = Новый СписокЗначений;

СписокРазрешенныхРолей.Добавить("Администратор");
СписокРазрешенныхРолей.Добавить("Мастер");
СписокРазрешенныхРолей.Добавить("ГлавныйДиспетчер");
ЭтотОбъект.ТолькоПросмотр = ОбщийМодульСозданиеДокументов.ЗапретРедактирования(Объект.Ссылка,Истина,Истина,СписокРазрешенныхРолей);
ОписаниеОшибки = "";
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
   Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
      ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
      ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , ОписаниеОшибки);
      Сообщить(ТекстСообщения);
   КонецЕсли;
//Элементы.ВыгрузитьВБазуСбыта.Доступность = Не Объект.Выгружено;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
ПоддерживаемыеТипыВО = Новый Массив();
ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
КонецПроцедуры

&НаСервере
Процедура ПодборМПЗНаСервере(ТаблицаМПЗ)
	Для каждого ТЧ_МПЗ Из ТаблицаМПЗ Цикл
	ТЧ = Объект.ТабличнаяЧасть.Добавить();
		Если ТипЗнч(ТЧ_МПЗ.МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
		ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;		
		Иначе
		ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;	
		КонецЕсли; 
	ТЧ.МПЗ = ТЧ_МПЗ.МПЗ;
	ТЧ.Количество = ТЧ_МПЗ.Количество;
	ТЧ.ЕдиницаИзмерения = ТЧ_МПЗ.ЕдиницаИзмерения;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ПодборМПЗ(Команда)
ТаблицаМПЗ = ОткрытьФормуМодально("ОбщаяФорма.ПодборМПЗ", Новый Структура("МестоХранения",Объект.МестоХранения));
	Если ТаблицаМПЗ <> Неопределено Тогда
		Если ТаблицаМПЗ.Количество() > 0 Тогда
			Если Объект.ТабличнаяЧасть.Количество() > 0 Тогда
				Если Вопрос("Очистить таблицу?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				Объект.ТабличнаяЧасть.Очистить();		
				КонецЕсли; 			
			КонецЕсли; 
		ПодборМПЗНаСервере(ТаблицаМПЗ);
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПечатьТорг13НаСервере(ТабДок)
Макет = ПолучитьОбщийМакет("ТОРГ13_132");
	 
ОблШапка = Макет.ПолучитьОбласть("Шапка");	
ОблЗаголовок = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
ОблСтрока = Макет.ПолучитьОбласть("Строка");
ОблИтогиПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
ОблВсего = Макет.ПолучитьОбласть("Всего");
ОблПодвал = Макет.ПолучитьОбласть("Подвал");

ВсегоСтрок = Объект.ТабличнаяЧасть.Количество();
ВыведеноНаСтраницу = 0; ВыведеноВсего = 0;
НомерСтраницы = 1;
// установка размеров секций
ВысотаШапки = 14;
ВысотаПодвала = 7;
СтрокНаСТранице = 32;
// инициализация
ВсегоКоличество	= 0; ВсегоСумма = 0;
ИтогоКоличество = 0; ИтогоСумма = 0;

ОблШапка.Параметры.ПредставлениеОрганизации = ПолучитьПредставлениеОрганизации();
ОблШапка.Параметры.НомерДокумента = Объект.Номер;
ОблШапка.Параметры.ДатаДокумента = Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
ОблШапка.Параметры.ОтправительПодразделение = Объект.МестоХранения;
ОблШапка.Параметры.ПолучательПодразделение = Объект.МестоХраненияВ;
ОблШапка.Параметры.ОрганизацияПоОКПО = Константы.КодОКПО.Получить();
ОблШапка.Параметры.ВидДеятельностиПоОКДП = Константы.КодОКДП.Получить();
ТабДок.Вывести(ОблШапка);
ТабДок.Вывести(ОблЗаголовок);
СуммаИтого = 0;
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл	
	НомСтр = "";
	ОблСтрока.Параметры.ТоварНаименование = ?(ЗначениеЗаполнено(ТЧ.МПЗ.ПолнНаименование) = 0 ,СокрЛП(ТЧ.МПЗ.ПолнНаименование),СокрЛП(ТЧ.МПЗ.Наименование));
		Если ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы Тогда
			Если ТЧ.МПЗ.Товар.Пустая() Тогда
			ОблСтрока.Параметры.ТоварКод = ТЧ.МПЗ.Код;
			Иначе	
			ОблСтрока.Параметры.ТоварКод = ТЧ.МПЗ.Товар.Код;			
			КонецЕсли; 
		Иначе
		ОблСтрока.Параметры.ТоварКод = "";		
		КонецЕсли; 
	ОблСтрока.Параметры.КоличествоМест = ТЧ.Количество;
	ОблСтрока.Параметры.ЕдиницаИзмеренияНаименование = СокрЛП(ТЧ.ЕдиницаИзмерения.Наименование);
	ОблСтрока.Параметры.ЕдиницаИзмеренияКодПоОКЕИ = ТЧ.ЕдиницаИзмерения.ЕдиницаИзмерения.Код;
	ОблСтрока.Параметры.КоличествоВОдномМесте = ТЧ.ЕдиницаИзмерения.Коэффициент;
	Цена = ОбщийМодульВызовСервера.ПолучитьСтоимостьМПЗ(ТЧ.МПЗ,1,Объект.Дата,0);
	ОблСтрока.Параметры.Цена = Цена;
	СуммаПеч = Цена*ТЧ.Количество;
	ОблСтрока.Параметры.Сумма = СуммаПеч;	
	ОстатокСтрок = СтрокНаСТранице - ВыведеноНаСтраницу;
	// если 1-я страница, то уменьшим количество строк на высоту шапки
		Если НомерСтраницы = 1 Тогда
		ОстатокСтрок = ОстатокСтрок - ВысотаШапки;
		КонецЕсли;		
			Если ВыведеноВсего = ВсегоСтрок -1  Тогда
			// выводим последнюю строку
			ОстатокСтрок = ОстатокСтрок - ВысотаПодвала;
			КонецЕсли;		
				Если Не(ОстатокСтрок > 0) Тогда
				// выводим итоги по странице
				ТабДок.Вывести(ОблИтогиПоСтранице);			
				// переход на новую страницу
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДок.Вывести(ОблЗаголовок);
				ВыведеноНаСтраницу = 0;	
				// обнуляем итоги по старанице
				ИтогоКоличество = 0; 
				ИтогоСумма = 0;
				// увеличиваем номер страницы
				НомерСтраницы = НомерСтраницы + 1;
				КонецЕсли;
	ТабДок.Вывести(ОблСтрока);
	ВыведеноНаСтраницу = ВыведеноНаСтраницу + 1;
	ВыведеноВсего      = ВыведеноВсего      + 1;
	// вычисляем итоги
	ВсегоСумма      = ВсегоСумма      + СуммаПеч;
	ИтогоКоличество = ИтогоКоличество + ТЧ.Количество;
	ИтогоСумма      = ИтогоСумма      + СуммаПеч;
	КонецЦикла;
ОблВсего.Параметры.ИтогоКоличествоМест = ИтогоКоличество; 
ОблВсего.Параметры.ИтогоСумма = ВсегоСумма;
ТабДок.Вывести(ОблВсего);
ОблПодвал.Параметры.ИтогоСуммаПрописью = ВсегоСумма;
ОблПодвал.Параметры.ИтогоСуммаКоп = Цел((ВсегоСумма-Цел(ВсегоСумма))*100);
ОблПодвал.Параметры.ФИООтправителя = Объект.Автор.Наименование;
ОблПодвал.Параметры.ФИОПолучателя = Объект.Сотрудник.Наименование;
ТабДок.Вывести(ОблПодвал);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьТорг13(Команда)
	Если ЭтаФорма.Модифицированность Тогда	
	Сообщить("Для печати документ необходимо перепровести.");
	Возврат;		
	КонецЕсли;
ТабДок = Новый ТабличныйДокумент;

ПечатьТорг13НаСервере(ТабДок);
ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
ТабДок.Показать("Форма ТОРГ-13");
КонецПроцедуры

&НаСервере
Процедура ПечатьПриходноРасходнаяНакладнаяНаСервере(ТабДок)
Макет = Документы.ДвижениеМПЗ.ПолучитьМакет("ПриходноРасходнаяНакладная");
ОблШапка = Макет.ПолучитьОбласть("Шапка");	
ОблСтрока = Макет.ПолучитьОбласть("Строка");
ОблКонец = Макет.ПолучитьОбласть("Конец");

ОблШапка.Параметры.Документ = Объект.Ссылка;
ОблШапка.Параметры.Подразделение = Объект.Подразделение;
ОблШапка.Параметры.МестоХранения = Объект.МестоХранения;
ОблШапка.Параметры.МестоХраненияВ = Объект.МестоХраненияВ;
ОблШапка.Параметры.ДатаВывода = Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
ТабДок.Вывести(ОблШапка);
НомСтр = 0;
СуммаИтого = 0;
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	НомСтр = НомСтр + 1;
	ОблСтрока.Параметры.НомСтр = НомСтр;
	ОблСтрока.Параметры.Наименование = СокрЛП(ТЧ.МПЗ.Наименование);
		Если ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы Тогда
			Если ТЧ.МПЗ.Товар.Пустая() Тогда
			ОблСтрока.Параметры.Артикул = ТЧ.МПЗ.Код;
			Иначе	
			ОблСтрока.Параметры.Артикул = ТЧ.МПЗ.Товар.Код;			
			КонецЕсли; 
		Иначе
		ОблСтрока.Параметры.Артикул = "";		
		КонецЕсли;
	ОблСтрока.Параметры.ЕдиницаИзмерения = СокрЛП(ТЧ.ЕдиницаИзмерения.Наименование);
	ОблСтрока.Параметры.Количество = ТЧ.Количество;
	Цена = ОбщийМодульВызовСервера.ПолучитьСтоимостьМПЗ(ТЧ.МПЗ,1,Объект.Дата,0);
	ОблСтрока.Параметры.Цена = Цена;
	ОблСтрока.Параметры.Сумма = Цена*ТЧ.Количество;
	СуммаИтого = СуммаИтого+Цена*ТЧ.Количество;	
	ТабДок.Вывести(ОблСтрока);
	КонецЦикла;
ОблКонец.Параметры.СуммаИтого = СуммаИтого;
ОблКонец.Параметры.ДолжностьОтпустил = СокрЛП(Объект.Автор.Должность.Наименование); 
ОблКонец.Параметры.Отпустил = СокрЛП(Объект.Автор.Наименование); 
ТабДок.Вывести(ОблКонец);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьПриходноРасходнаяНакладная(Команда)
	Если ЭтаФорма.Модифицированность Тогда	
	Сообщить("Для печати документ необходимо перепровести.");
	Возврат;		
	КонецЕсли;
ТабДок = Новый ТабличныйДокумент;

ПечатьПриходноРасходнаяНакладнаяНаСервере(ТабДок);
ТабДок.Показать("Приходно-расходная накладная");
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЭтикеткаSMD(Команда)
СписокМПЗ = Новый СписокЗначений;

	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
	СписокМПЗ.Добавить(ТЧ.МПЗ);
	КонецЦикла; 
ОткрытьФормуМодально("Документ.ДвижениеМПЗ.Форма.ФормаЭтикеткиСМД",Новый Структура("МестоХранения,СписокМПЗ",Объект.МестоХраненияВ,СписокМПЗ));
КонецПроцедуры

&НаКлиенте
Процедура ДокументОснованиеПриИзменении(Элемент)
ДокументОснованиеПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДокументОснованиеПриИзмененииНаСервере()
	Если Не ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
	Возврат;
	КонецЕсли; 
Объект.ТабличнаяЧасть.Очистить();
Об = РеквизитФормыВЗначение("Объект");
Об.ОбработкаЗаполнения(Объект.ДокументОснование,Истина);
ВыгрузкаТЧ = Об.ТабличнаяЧасть.Выгрузить();
Объект.ТабличнаяЧасть.Загрузить(ВыгрузкаТЧ); 
КонецПроцедуры

&НаСервере
Функция ПеремещениеРазрешено(МестоХранения)
	Если СокрЛП(МестоХранения.Наименование) = "Склад Основной" Тогда
		Если ПараметрыСеанса.Пользователь.Ответственный <> МестоХранения.МОЛ Тогда
		Сообщить("Перемещение с основного склада разрешено только сотрудникам, подчиненным ответственному за этот склад!");
		Возврат(Ложь);
		КонецЕсли;
	КонецЕсли;
Возврат(Истина); 
КонецФункции

&НаСервере
Функция СовпадаетСПодразделенимДокумента(МестоХранения)
Возврат(?(МестоХранения.Подразделение = Объект.Подразделение,Истина,Ложь));
КонецФункции 

&НаКлиенте
Процедура МестоХраненияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если СовпадаетСПодразделенимДокумента(ВыбранноеЗначение) Тогда	
	СтандартнаяОбработка = ПеремещениеРазрешено(ВыбранноеЗначение);
	Иначе
	СтандартнаяОбработка = Ложь;
	Сообщить("Выбранное место хранения принадлежит другому подразделению!");	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьМПЗПриИзменении(Элемент)
ТабличнаяЧастьМПЗПриИзмененииНаСервере(Элементы.ТабличнаяЧасть.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ТабличнаяЧастьМПЗПриИзмененииНаСервере(Стр)
ТЧ = Объект.ТабличнаяЧасть.НайтиПоИдентификатору(Стр);
ТЧ.ЕдиницаИзмерения = ТЧ.МПЗ.ОсновнаяЕдиницаИзмерения;
	Если ТипЗнч(ТЧ.МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;	
	Иначе
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЯчейкиХранения(Команда)
СписокМПЗ = Новый СписокЗначений;

	Для каждого ТЧ из Объект.ТабличнаяЧасть Цикл
	СписокМПЗ.Добавить(ТЧ.МПЗ);	
	КонецЦикла; 
ИмяОтчета = "ОтчетПоРегиструЯчейкиХранения";
ПараметрыФормы = Новый Структура;
ПараметрыФормы.Вставить("СформироватьПриОткрытии",Истина);
ПараметрыФормы.Вставить("ПользовательскиеНастройки",ОбщийМодульВызовСервера.ЗаполнитьПользовательскиеНастройкиОтчетаСКД(ИмяОтчета,Неопределено,Неопределено,Новый Структура("МестоХранения,МПЗ",Объект.МестоХраненияВ,СписокМПЗ),"ПоМПЗ"));
ПараметрыФормы.Вставить("КлючВарианта","ПоМПЗ"); 
ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы);
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьВБазуСбытаНаСервере()
БазаСбыта = ОбщийМодульСинхронизации.УстановитьCOMСоединение(Константы.БазаДанных1ССбыт.Получить());
	Если БазаСбыта = Неопределено Тогда
	Сообщить("Не открыто соединение с базой сбыта!");
	Возврат;
	КонецЕсли;
флОшибки = Ложь;
	Попытка
	НачатьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция + 1;
	бсСклад = БазаСбыта.Справочники.Склады.НайтиПоНаименованию("СД 423",Истина);
	бсНовДок = БазаСбыта.Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
	бсНовДок.Дата = Объект.Дата;
	бсНовДок.Организация = БазаСбыта.Справочники.Организации.НайтиПоКоду("02");
	бсНовДок.Партнер = БазаСбыта.Справочники.Партнеры.НайтиПоКоду("00-00000010");
	бсНовДок.Склад = бсСклад;
	бсНовДок.ХозяйственнаяОперация = БазаСбыта.Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
	бсНовДок.НалогообложениеНДС = БазаСбыта.Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	бсНовДок.БанковскийСчетОрганизации = БазаСбыта.ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(бсНовДок.Организация);
	бсНовДок.Валюта = БазаСбыта.Справочники.Валюты.НайтиПоКоду("643");
	бсНовДок.ВалютаВзаиморасчетов = БазаСбыта.Справочники.Валюты.НайтиПоКоду("643");
		Для каждого ТЧ_МПЗ Из Объект.ТабличнаяЧасть Цикл
			Если ТЧ_МПЗ.МПЗ.Товар.Пустая() Тогда
			флОшибки = Истина;
			Сообщить(СокрЛП(ТЧ_МПЗ.МПЗ.Наименование)+" - не заполнен реквизит соответствия с товаром!");
			Продолжить;				
			КонецЕсли; 
		Артикул = ОбщийМодульВызовСервера.ПолучитьАртикулПоКодуТовара(ТЧ_МПЗ.МПЗ.Товар.Код);
		бсНомен = БазаСбыта.Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",Артикул);
			Если бсНомен.Пустая() Тогда
			флОшибки = Истина;
			Сообщить(СокрЛП(ТЧ_МПЗ.МПЗ.Наименование)+" - товар с артикулом "+Артикул+" не найден в торговой базе!");
			Продолжить;
			КонецЕсли;
		ТЧ = бсНовДок.Товары.Добавить();
			//Если Не ТЧ_МПЗ.ГТД.Пустая() Тогда
			//бсНомерГТД = БазаСбыта.Справочники.НомераГТД.НайтиПоКоду(ТЧ_МПЗ.ГТД.Наименование);
			//	Если бсНомерГТД.Пустая() Тогда	
			//	бсНомерГТД = БазаСбыта.Справочники.НомераГТД.СоздатьЭлемент();
			//	бсНомерГТД.Код = ТЧ_МПЗ.ГТД.Наименование; 
			//	бсНомерГТД.СтранаПроисхождения = БазаСбыта.Справочники.СтраныМира.НайтиПоКоду(ТЧ_МПЗ.ГТД.Страна.Код);
			//	бсНомерГТД.Записать();
			//	КонецЕсли;
			//ТЧ.НомерГТД = бсНомерГТД.Ссылка;
			//КонецЕсли; 
		БазовоеКоличество = ПолучитьБазовоеКоличество(ТЧ_МПЗ.Количество,ТЧ_МПЗ.ЕдиницаИзмерения); 
		Выборка =  бсНовДок.Товары.Найти(бсНомен,"Номенклатура");
		ТЧ.Склад = бсСклад;	
		ТЧ.Номенклатура = бсНомен;
		ТЧ.КоличествоУпаковок = БазовоеКоличество;
		ТЧ.Количество = БазовоеКоличество;
		ТЧ.СтавкаНДС = бсНомен.СтавкаНДС;
		ТЧ.Цена = ОбщийМодульВызовСервера.ПолучитьПоследнююЦену(ТЧ_МПЗ.МПЗ,Объект.Дата);
		ТЧ.Сумма = ТЧ.КоличествоУпаковок*ТЧ.Цена;
			Если БазаСбыта.Перечисления.СтавкиНДС.Индекс(ТЧ.СтавкаНДС) = БазаСбыта.Перечисления.СтавкиНДС.Индекс(БазаСбыта.Перечисления.СтавкиНДС.НДС18) Тогда
			ТЧ.СуммаНДС = ТЧ.Сумма*0.18;
			ТЧ.СуммаСНДС = ТЧ.Сумма + ТЧ.СуммаНДС;
			ИначеЕсли БазаСбыта.Перечисления.СтавкиНДС.Индекс(ТЧ.СтавкаНДС) = БазаСбыта.Перечисления.СтавкиНДС.Индекс(БазаСбыта.Перечисления.СтавкиНДС.НДС20) Тогда
			ТЧ.СуммаНДС = ТЧ.Сумма*0.2;
			ТЧ.СуммаСНДС = ТЧ.Сумма + ТЧ.СуммаНДС;
			Иначе	
			ТЧ.СуммаСНДС = ТЧ.Сумма;
			КонецЕсли;
		КонецЦикла;
			Если (бсНовДок.Товары.Количество() > 0)и(Не флОшибки) Тогда
			бсНовДок.Комментарий = "&ТОВ Выгрузка ТНП из производственной базы от "+ТекущаяДата();
			бсНовДок.Записать();
			Объект.Выгружено = Истина;
			//Элементы.ВыгрузитьВБазуСбыта.Доступность = Ложь;
			ЭтаФорма.Записать();
			Сообщить("Создан документ "+бсНовДок.Номер);
			КонецЕсли;   
	ЗафиксироватьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;Если ПараметрыСеанса.АктивнаТранзакция = 0 тогда СРМ_ОбменВебСервис.ОтправкаПослеТранзакции();КонецЕсли;
	Исключение
	Сообщить(ОписаниеОшибки());
	ОтменитьТранзакцию();ПараметрыСеанса.АктивнаТранзакция = ПараметрыСеанса.АктивнаТранзакция-1;ПараметрыСеанса.ОбъектыСозданныеВТранзакции = Новый ХранилищеЗначения(Новый Массив);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВБазуСбыта(Команда)
	Если Не ЭтаФорма.Модифицированность Тогда
		Если Найти(Объект.МестоХраненияВ,"Склад ТНП") > 0 Тогда
		Состояние("Обработка...",,"Выгрузка в базу сбыта...");
		ВыгрузитьВБазуСбытаНаСервере();
		Иначе
		Сообщить("Место хранения не является складом ТНП!");	
		КонецЕсли;
	Иначе
	Сообщить("Сначала запишите изменения!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ВыгруженоПриИзменении(Элемент)
//Элементы.ВыгрузитьВБазуСбыта.Доступность = Не Объект.Выгружено; 
КонецПроцедуры

&НаСервере
Процедура ДобавитьМПЗ_3(Данные)
Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,";");
МПЗ = ОбщийМодульВызовСервера.ПолучитьЗначениеИзСтрокиВнутр(Массив[3]);
ТЧ = Объект.ТабличнаяЧасть.Добавить();
	Если ТипЗнч(МПЗ) = Тип("СправочникСсылка.Материалы") Тогда
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы;	
	Иначе	
	ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;		
	КонецЕсли; 
ТЧ.МПЗ = МПЗ;
ТЧ.Количество = Число(Массив[4]);
ТЧ.ЕдиницаИзмерения = МПЗ.ОсновнаяЕдиницаИзмерения;		
КонецПроцедуры 

&НаСервере
Процедура ДобавитьМПЗ_4(Данные)
Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,";");
ПЗ = ЗначениеИзСтрокиВнутр(Массив[1]);
ТЧ = Объект.ТабличнаяЧасть.Добавить();
ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Полуфабрикаты;	
ТЧ.МПЗ = ПЗ.Изделие;
ТЧ.Количество = ПЗ.Количество;
ТЧ.ЕдиницаИзмерения = ПЗ.Изделие.ОсновнаяЕдиницаИзмерения;		
КонецПроцедуры 

&НаСервере
Функция НайтиМПЗ(НаименованиеSMD)
	Для каждого ТЧ Из Объект.ТабличнаяЧасть Цикл
		Если ТЧ.ВидМПЗ = Перечисления.ВидыМПЗ.Материалы Тогда
			Если СокрЛП(ТЧ.МПЗ.НаименованиеSMD) = НаименованиеSMD Тогда
			Возврат(ТЧ.ПолучитьИдентификатор());
			КонецЕсли;	
		КонецЕсли; 
	КонецЦикла;
Возврат(Неопределено); 
КонецФункции 

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если ЭтаФорма.ВводДоступен() Тогда
		Если Найти(Данные,"3;") = 1 Тогда
		ДобавитьМПЗ_3(Данные);
		ИначеЕсли Найти(Данные,"4;") = 1 Тогда
		ДобавитьМПЗ_4(Данные);
		ИначеЕсли Найти(Данные,"*") > 0 Тогда
		Массив = ОбщийМодульВызовСервера.РазложитьСтрокуВМассив(Данные,"$");
		НаименованиеSMD = Сред(Массив[0],2);
		Результат = НайтиМПЗ(НаименованиеSMD);	
			Если Результат <> Неопределено Тогда	
			Элементы.ТабличнаяЧасть.ТекущаяСтрока = Результат;
			Иначе
			Предупреждение("МПЗ не найден!");
			КонецЕсли; 
		Иначе
		Сообщить("Неверный QRCode!");
		КонецЕсли;		
	КонецЕсли; 
КонецПроцедуры

